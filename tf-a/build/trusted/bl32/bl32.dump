
/home/lodge/STM32MP157/tf-a/tf-a-stm32mp/../build/trusted/bl32/bl32.elf:     file format elf32-littlearm
/home/lodge/STM32MP157/tf-a/tf-a-stm32mp/../build/trusted/bl32/bl32.elf
architecture: armv7, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x2fffc580

Program Header:
    LOAD off    0x00000000 vaddr 0x2ffe0000 paddr 0x2ffe0000 align 2**16
         filesz 0x0001d540 memsz 0x0001ed40 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx
private flags = 0x5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 ro            00010000  2ffed000  2ffed000  0000d000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000540  2fffd000  2fffd000  0001d000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 stacks        00000c00  2fffd540  2fffd540  0001d540  2**6
                  ALLOC
  3 .bss          00000c00  2fffe140  2fffe140  0001d540  2**6
                  ALLOC
  4 .debug_info   00045134  00000000  00000000  0001d540  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 0000db1d  00000000  00000000  00062674  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 00002450  00000000  00000000  00070198  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00023133  00000000  00000000  000725e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    0000a5f2  00000000  00000000  0009571b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .comment      0000005d  00000000  00000000  0009fd0d  2**0
                  CONTENTS, READONLY
 10 .ARM.attributes 0000003b  00000000  00000000  0009fd6a  2**0
                  CONTENTS, READONLY
 11 .debug_loc    0002ea9d  00000000  00000000  0009fda5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00006518  00000000  00000000  000ce848  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_frame  00005cd8  00000000  00000000  000d4d60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
2ffed000 l    d  ro	00000000 ro
2fffd000 l    d  .data	00000000 .data
2fffd540 l    d  stacks	00000000 stacks
2fffe140 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 entrypoint.o
2ffed3c0 l     F ro	00000084 sp_min_exit
00000000 l    df *ABS*	00000000 sp_min_main.c
2fffe140 l     O .bss	00000008 sp_min_cpu_ctx_ptr
2fffe148 l     O .bss	00000120 sp_min_smc_context
2fff9d58 l     O ro	0000000c psci_args.0
00000000 l    df *ABS*	00000000 runtime_svc.c
00000000 l    df *ABS*	00000000 plat_sp_min_common.c
00000000 l    df *ABS*	00000000 std_svc_setup.c
2ffed79c l     F ro	0000007c std_svc_smc_handler
2ffed818 l     F ro	00000024 std_svc_setup
2fffc534 l     O ro	00000010 __svc_desc_std_svc
00000000 l    df *ABS*	00000000 context_mgmt.c
00000000 l    df *ABS*	00000000 errata_report.c
00000000 l    df *ABS*	00000000 psci_off.c
00000000 l    df *ABS*	00000000 psci_on.c
00000000 l    df *ABS*	00000000 psci_suspend.c
00000000 l    df *ABS*	00000000 psci_common.c
2fffe3bc l     O .bss	00000002 psci_req_local_pwr_states
2fff9f60 l     O ro	0000000c psci_state_type_str.0
00000000 l    df *ABS*	00000000 psci_main.c
00000000 l    df *ABS*	00000000 psci_setup.c
2fffe3c8 l     O .bss	00000040 psci_ns_context
00000000 l    df *ABS*	00000000 psci_system_off.c
00000000 l    df *ABS*	00000000 psci_mem_protect.c
00000000 l    df *ABS*	00000000 bakery_lock_normal.c
00000000 l    df *ABS*	00000000 stm32mp1_calib.c
2ffeec8c l     F ro	00000026 trim_increase
2ffeecb2 l     F ro	00000084 trim_table_init
2ffeed38 l     F ro	00000020 csi_get_trimed_cal
2ffeed58 l     F ro	00000028 csi_set_trim
2ffeed80 l     F ro	0000001c hsi_get_trimed_cal
2ffeed9c l     F ro	00000024 hsi_set_trim
2ffeedc0 l     F ro	00000180 rcc_calibration
2fffe408 l     O .bss	00000001 rcc_wakeup
2fffe40c l     O .bss	00000004 timer_val
2fffd000 l     O .data	00000022 fbv_csi
2fffd022 l     O .data	00000022 fbv_hsi
2fffd044 l     O .data	000000a8 stm32mp1_clk_cal_csi
2fffd0ec l     O .data	000000a8 stm32mp1_clk_cal_hsi
00000000 l    df *ABS*	00000000 etzpc.c
2fffe410 l     O .bss	0000000c etzpc_dev
00000000 l    df *ABS*	00000000 stm32_rng.c
2fffe41c l     O .bss	00000008 stm32_rng
00000000 l    df *ABS*	00000000 stm32_rtc.c
2ffef41c l     F ro	00000030 stm32_rtc_read_calendar
2ffef44c l     F ro	0000002c stm32_is_a_leap_year
2ffef478 l     F ro	00000050 stm32_rtc_get_date
2ffef4c8 l     F ro	00000050 stm32_rtc_get_time
2ffef518 l     F ro	00000020 stm32_rtc_get_second_fraction.isra.0
2fffe424 l     O .bss	00000004 lock
2fffe428 l     O .bss	00000010 rtc_dev
2fffa171 l     O ro	0000000c month_len.0
00000000 l    df *ABS*	00000000 stm32_tamp.c
2fffe438 l     O .bss	0000001c stm32_tamp
00000000 l    df *ABS*	00000000 stm32_timer.c
2ffefb9c l     F ro	0000007c stm32_timer_config
2ffefc18 l     F ro	00000080 stm32_timer_start_capture
2fffe454 l     O .bss	00000020 stm32_timer
2fffa2c0 l     O ro	00000018 __func__.0
00000000 l    df *ABS*	00000000 sp_min_setup.c
2ffefdf8 l     F ro	00000020 stm32mp1_tamper_action
2fffe474 l     O .bss	00000024 bl33_image_ep_info
2fffe498 l     O .bss	00000018 console
2fffd194 l     O .data	00000024 ext_tamp
2fffd1b8 l     O .data	00000030 int_tamp
2fffa498 l     O ro	00000018 tamper_name
00000000 l    df *ABS*	00000000 stm32mp1_low_power.c
2fffe4b0 l     O .bss	00000001 enter_cstop_done
2fffe4b4 l     O .bss	00000004 gicc_pmr
2fffe4b8 l     O .bss	00000400 int_stack
2fffe8b8 l     O .bss	0000000c sleep_time
2fffa530 l     O ro	00000054 config_pwr
00000000 l    df *ABS*	00000000 stm32mp1_pm.c
2fff03c4 l     F ro	00000002 stm32_pwr_domain_off
2fff03c6 l     F ro	0000001c stm32_validate_power_state
2fff03e4 l     F ro	00000018 stm32_validate_ns_entrypoint
2fff03fc l     F ro	0000000c stm32_node_hw_state
2fff0408 l     F ro	00000008 stm32_get_sys_suspend_power_state
2fff0410 l     F ro	00000014 stm32_system_reset
2fff0424 l     F ro	00000018 stm32_pwr_domain_suspend
2fff043c l     F ro	0000003c stm32_system_off
2fff0478 l     F ro	0000003c stm32_pwr_domain_pwr_down_wfi
2fff04b4 l     F ro	00000014 stm32_pwr_domain_on_finish
2fff04c8 l     F ro	00000084 stm32_pwr_domain_on
2fff054c l     F ro	0000003c stm32_cpu_standby
2fff0588 l     F ro	00000002 stm32_pwr_domain_suspend_finish
2fffe8c4 l     O .bss	00000004 cntfrq_core0
2fffe8c8 l     O .bss	00000004 saved_entrypoint
2fffe8cc l     O .bss	00000004 stm32_sec_entrypoint
2fffa5a4 l     O ro	00000054 stm32_psci_ops
00000000 l    df *ABS*	00000000 stm32mp1_power_config.c
2fffe8d0 l     O .bss	00000004 deepest_system_suspend_mode
2fffe8d4 l     O .bss	00000003 pm_dom
2fffe8d7 l     O .bss	00000007 stm32mp1_supported_soc_modes
2fffe8e0 l     O .bss	00000004 system_off_mode
00000000 l    df *ABS*	00000000 stm32mp1_shared_resources.c
2fff06e8 l     F ro	00000038 decprot2str
2fff0720 l     F ro	00000054 check_decprot
2fff0774 l     F ro	00000030 get_gpioz_nbpin
2fff07a4 l     F ro	000000b0 register_periph
2fff0854 l     F ro	00000128 register_periph_iomem
2fff0a48 l     F ro	0000002a stm32mp_gpio_bank_is_non_secure.part.0
2fffe8e4 l     O .bss	00000001 registering_locked
2fffe8e5 l     O .bss	00000014 shres_state
2fffd1e8 l     O .data	00000001 gpioz_nbpin
2fffa868 l     O ro	00000090 shres2decprot_tbl
2fffa8f8 l     O ro	00000050 shres2str_id_tbl
00000000 l    df *ABS*	00000000 stm32mp1_topology.c
2fffa948 l     O ro	00000002 stm32mp1_power_domain_tree_desc
00000000 l    df *ABS*	00000000 gic_common.c
00000000 l    df *ABS*	00000000 gicv2_helpers.c
00000000 l    df *ABS*	00000000 gicv2_main.c
2fffe8fc l     O .bss	00000004 driver_data
2fffe900 l     O .bss	00000004 gic_lock
00000000 l    df *ABS*	00000000 plat_gicv2.c
00000000 l    df *ABS*	00000000 stm32_gic.c
2fff1510 l     F ro	00000004 fdt32_to_cpu
2fff1514 l     F ro	00000062 enable_gic_interrupt
2fffe904 l     O .bss	00000008 stm32_gic
2fffd1ec l     O .data	00000018 platform_gic_data
2fffd204 l     O .data	00000008 target_mask_array
2fffa9f8 l     O ro	0000002c stm32_interrupt_props
00000000 l    df *ABS*	00000000 plat_psci_common.c
00000000 l    df *ABS*	00000000 bsec_svc.c
00000000 l    df *ABS*	00000000 low_power_svc.c
00000000 l    df *ABS*	00000000 pwr_svc.c
00000000 l    df *ABS*	00000000 rcc_svc.c
00000000 l    df *ABS*	00000000 stm32mp1_svc_setup.c
2fff1a38 l     F ro	00000004 stm32mp1_svc_setup
2fff1a3c l     F ro	000000f0 stm32mp1_svc_smc_handler
2fffc544 l     O ro	00000010 __svc_desc_stm32mp1_sip_svc
00000000 l    df *ABS*	00000000 base.c
2fff1b2c l     F ro	0000008c discover_list_protocols
2fff1bb8 l     F ro	00000024 discover_implementation_version
2fff1bdc l     F ro	00000044 report_message_attributes
2fff1c20 l     F ro	00000028 report_version
2fff1c48 l     F ro	00000054 discover_sub_vendor
2fff1c9c l     F ro	00000054 discover_vendor
2fff1cf0 l     F ro	0000002e report_attributes
2fffaa9c l     O ro	0000001c scmi_base_handler_table
00000000 l    df *ABS*	00000000 clock.c
2fff1d44 l     F ro	0000000c confine_array_index
2fff1d50 l     F ro	00000044 report_message_attributes
2fff1d94 l     F ro	00000028 report_version
2fff1dbc l     F ro	00000030 write_rate_desc_array_in_buffer
2fff1dec l     F ro	00000034 report_attributes
2fff1e20 l     F ro	000000fc scmi_clock_describe_rates
2fff1f1c l     F ro	00000060 scmi_clock_rate_get
2fff1f7c l     F ro	0000004a scmi_clock_rate_set
2fff1fc8 l     F ro	00000090 scmi_clock_attributes
2fff2058 l     F ro	0000004e scmi_clock_config_set
2fffaad4 l     O ro	00000020 scmi_clock_handler_table
00000000 l    df *ABS*	00000000 entry.c
00000000 l    df *ABS*	00000000 reset_domain.c
2fff2170 l     F ro	00000044 report_message_attributes
2fff21b4 l     F ro	00000028 report_version
2fff21dc l     F ro	0000002e report_attributes
2fff220c l     F ro	00000098 reset_domain_attributes
2fff22a4 l     F ro	00000078 reset_request
2fffab68 l     O ro	00000014 scmi_rd_handler_table
00000000 l    df *ABS*	00000000 smt.c
2fff2340 l     F ro	000000b0 scmi_proccess_smt
2fffe90c l     O .bss	000000b8 fast_smc_payload
2fffe9c4 l     O .bss	00000004 smt_channels_lock
00000000 l    df *ABS*	00000000 stm32mp1_scmi.c
2fff2430 l     F ro	00000010 find_resource.part.0
2fff2440 l     F ro	00000034 find_clock
2fff2474 l     F ro	00000034 find_rd
2fffd20c l     O .data	00000020 scmi_channel
2fffd22c l     O .data	000000fc stm32_scmi0_clock
2fffd328 l     O .data	00000058 stm32_scmi0_reset_domain
2fffd380 l     O .data	00000024 stm32_scmi1_clock
2fffacb8 l     O ro	00000020 agent_resources
2fffacd8 l     O ro	00000003 plat_protocol_list
2fffacdb l     O ro	00000001 sub_vendor
2fffacdc l     O ro	00000003 vendor
00000000 l    df *ABS*	00000000 tf_log.c
2fffd3a4 l     O .data	00000004 max_log_level
00000000 l    df *ABS*	00000000 multi_console.c
00000000 l    df *ABS*	00000000 plat_log_common.c
2fffad44 l     O ro	00000014 plat_prefix_str
00000000 l    df *ABS*	00000000 plat_common.c
00000000 l    df *ABS*	00000000 ctzdi2.c
00000000 l    df *ABS*	00000000 udivmoddi4.c
00000000 l    df *ABS*	00000000 stm32mp_common.c
2fffe9cc l     O .bss	00000004 lock
00000000 l    df *ABS*	00000000 stm32mp1_private.c
2fff2dc8 l     F ro	0000004c get_part_number
2fffe9d0 l     O .bss	00000004 part_number.0
2fffae10 l     O ro	00000078 stm32mp1_mmap
2fffae88 l     O ro	00000084 tzc_source_ip
00000000 l    df *ABS*	00000000 xlat_tables_arch.c
00000000 l    df *ABS*	00000000 xlat_tables_context.c
2fffea00 l     O .bss	00000020 tf_base_xlat_table
2fffea20 l     O .bss	00000010 tf_mapped_regions
2fffea30 l     O .bss	000000a8 tf_mmap
2fffd3b0 l     O .data	00000048 tf_xlat_ctx
00000000 l    df *ABS*	00000000 xlat_tables_core.c
2fff3250 l     F ro	0000012e mmap_add_region_check
2fff337e l     F ro	0000001a xlat_clean_dcache_range
2fff3398 l     F ro	00000028 xlat_table_get_index
2fff33c0 l     F ro	0000013c xlat_tables_unmap_region
2fff35a0 l     F ro	000001a8 xlat_tables_map_region
00000000 l    df *ABS*	00000000 xlat_tables_utils.c
00000000 l    df *ABS*	00000000 tzc400.c
2fffead8 l     O .bss	00000008 tzc400
00000000 l    df *ABS*	00000000 delay_timer.c
2fffeae0 l     O .bss	00000004 timer_ops
00000000 l    df *ABS*	00000000 generic_delay_timer.c
2fff3f70 l     F ro	00000008 get_timer_value
2fffeae4 l     O .bss	0000000c ops
00000000 l    df *ABS*	00000000 bsec2.c
2fff3fd4 l     F ro	00000004 fdt32_to_cpu
2fff3fd8 l     F ro	00000018 bsec_lock
2fff3ff0 l     F ro	00000018 bsec_unlock
2fff4008 l     F ro	00000018 otp_bank_offset
2fff4020 l     F ro	00000034 bsec_check_error
2fff415c l     F ro	00000064 bsec_power_safmem
2fffeaf0 l     O .bss	00000004 bsec_base
2fffeaf4 l     O .bss	00000004 bsec_spinlock
2fffeaf8 l     O .bss	0000000c otp_nsec_access
00000000 l    df *ABS*	00000000 stm32mp_clkfunc.c
2fff4640 l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 stm32mp1_clk.c
2fff4834 l     F ro	0000001c clock_is_always_on
2fff4850 l     F ro	0000001e stm32mp1_pll_compute_pllxcfgr2
2fff4870 l     F ro	000000a8 stm32mp1_read_pll_freq
2fff4918 l     F ro	00000198 get_clock_rate
2fff4ab0 l     F ro	00000024 stm32mp1_pll_start
2fff4ad4 l     F ro	00000016 stm32mp1_clk_lock
2fff4aea l     F ro	00000016 stm32mp1_clk_unlock
2fff4b00 l     F ro	00000068 stm32mp1_set_clkdiv
2fff4b68 l     F ro	00000026 __clk_enable
2fff4b8e l     F ro	00000028 __clk_disable
2fff4bb8 l     F ro	00000034 stm32mp1_clk_get_gated_id
2fff4bec l     F ro	00000078 stm32mp1_clk_get_parent
2fff4c64 l     F ro	0000007c __stm32mp1_clk_enable
2fff4ce0 l     F ro	00000078 __stm32mp1_clk_disable
2fff4d58 l     F ro	0000008c stm32mp1_pll_compute_pllxcfgr1
2fff4de4 l     F ro	00000058 stm32mp1_pll_config
2fff4e3c l     F ro	00000080 stm32mp1_set_clksrc
2fff4ebc l     F ro	00000084 stm32mp1_pll_output
2fff4f40 l     F ro	0000007c stm32mp1_pll_stop
2fff4fbc l     F ro	0000013c stm32mp1_pll1_config_from_opp_khz
2fff51a4 l     F ro	000001f4 clk_get_pll1_settings
2fffeb04 l     O .bss	00000004 current_opp_khz
2fffeb08 l     O .bss	000000b8 gate_refcounts
2fffebc0 l     O .bss	00000004 mcudivr
2fffebc4 l     O .bss	00000004 mssckselr
2fffebc8 l     O .bss	0000004c pll1_settings
2fffec14 l     O .bss	00000004 pll3cr
2fffec18 l     O .bss	00000004 pll4cr
2fffec1c l     O .bss	00000004 refcount_lock
2fffec20 l     O .bss	00000004 reg_lock
2fffec24 l     O .bss	00000018 stm32mp1_osc
2fffd3f8 l     O .data	00000038 backup_clock_cfg
2fffd430 l     O .data	00000058 backup_clock_sc_cfg
2fffd488 l     O .data	00000088 backup_mux0_cfg
2fffd510 l     O .data	00000004 backup_mux4_cfg
2fffb504 l     O ro	0000001a __func__.0
2fffb51e l     O ro	00000003 axiss_parents
2fffb521 l     O ro	00000004 fmc_parents
2fffb525 l     O ro	00000004 i2c12_parents
2fffb529 l     O ro	00000004 i2c35_parents
2fffb52d l     O ro	00000004 i2c46_parents
2fffb531 l     O ro	00000004 mcuss_parents
2fffb535 l     O ro	00000004 mpu_parents
2fffb539 l     O ro	00000022 parent_id_clock_id
2fffb55b l     O ro	00000003 per_parents
2fffb55e l     O ro	00000003 pllncfgr2
2fffb561 l     O ro	00000004 qspi_parents
2fffb565 l     O ro	00000004 rng1_parents
2fffb569 l     O ro	00000004 rtc_parents
2fffb56d l     O ro	00000004 sdmmc12_parents
2fffb571 l     O ro	00000004 sdmmc3_parents
2fffb575 l     O ro	00000006 spi6_parents
2fffb57b l     O ro	00000002 stgen_parents
2fffb57d l     O ro	00000008 stm32mp1_axi_div
2fffb586 l     O ro	00000170 stm32mp1_clk_gate
2fffb6f8 l     O ro	00000080 stm32mp1_clk_pll
2fffb778 l     O ro	00000108 stm32mp1_clk_sel
2fffb8a8 l     O ro	00000006 usart1_parents
2fffb8a3 l     O ro	00000005 uart6_parents
2fffb89e l     O ro	00000005 uart234578_parents
2fffb8b0 l     O ro	00000003 usbphy_parents
2fffb8ae l     O ro	00000002 usbo_parents
2fffb880 l     O ro	00000010 stm32mp1_mcu_div
2fffb890 l     O ro	00000008 stm32mp1_mpu_apbx_div
2fffb898 l     O ro	00000006 stm32mp1_pll
00000000 l    df *ABS*	00000000 stm32mp1_ddr_helpers.c
2fff5b34 l     F ro	00000014 do_sw_handshake
2fff5b48 l     F ro	00000054 do_sw_ack
2fffec3c l     O .bss	00000004 saved_ddr_sr_mode
2fffb8cf l     O ro	0000000a CSWTCH.26
00000000 l    df *ABS*	00000000 stm32_gpio.c
2fff61e4 l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 stm32_i2c.c
2fff654c l     F ro	00000044 i2c_wait_flag
2fff6590 l     F ro	0000002c i2c_transfer_config.isra.0
2fff65bc l     F ro	0000008e i2c_ack_failed
2fff664a l     F ro	00000042 i2c_wait_txis
2fff668c l     F ro	00000042 i2c_wait_stop
2fff66d0 l     F ro	000001ec i2c_read.constprop.0
2fff68bc l     F ro	00000224 i2c_write
2fffbb00 l     O ro	00000060 i2c_specs
00000000 l    df *ABS*	00000000 stm32_iwdg.c
2fffec40 l     O .bss	00000020 stm32_iwdg
00000000 l    df *ABS*	00000000 stm32mp_pmic.c
2fff7398 l     F ro	00000004 fdt32_to_cpu
2fff739c l     F ro	00000020 dt_get_pmic_node
2fff73bc l     F ro	00000060 dt_pmic_get_regulator_voltage
2fff741c l     F ro	00000244 pmic_operate
2fffec60 l     O .bss	00000024 i2c_handle
2fffec84 l     O .bss	00000004 pmic_i2c_addr
2fffd52c l     O .data	00000004 i2c_node.0
2fffd530 l     O .data	00000004 node.1
2fffd534 l     O .data	00000004 status.2
00000000 l    df *ABS*	00000000 stpmic1.c
2fff7854 l     F ro	0000003c get_regulator_data
2fff7890 l     F ro	0000002a voltage_to_index
2fffec88 l     O .bss	00000002 pmic_i2c_addr
2fffec8c l     O .bss	00000004 pmic_i2c_handle
2fffbdcc l     O ro	00000080 buck1_voltage_table
2fffbe4c l     O ro	0000004a buck2_voltage_table
2fffbe96 l     O ro	00000070 buck3_voltage_table
2fffbf06 l     O ro	0000007a buck4_voltage_table
2fffbf80 l     O ro	00000002 fixed_5v_voltage_table
2fffbf82 l     O ro	00000032 ldo1_voltage_table
2fffbfb4 l     O ro	00000032 ldo2_voltage_table
2fffbfe6 l     O ro	00000042 ldo3_voltage_table
2fffc028 l     O ro	00000002 ldo4_voltage_table
2fffc02a l     O ro	0000003e ldo5_voltage_table
2fffc068 l     O ro	00000032 ldo6_voltage_table
2fffc09c l     O ro	000000e0 regulators_table
2fffc17c l     O ro	00000002 vref_ddr_voltage_table
00000000 l    df *ABS*	00000000 stm32mp1_reset.c
00000000 l    df *ABS*	00000000 stm32mp_dt.c
2fff7c84 l     F ro	00000004 fdt32_to_cpu
2fff7c88 l     F ro	00000024 fdt_get_node_parent_address_cells
2fff7cac l     F ro	0000007c dt_get_stdout_node_offset
2fff7d28 l     F ro	000000c4 dt_get_opp_freqvolt_from_subnode
2fffec90 l     O .bss	00000004 fdt_checked
00000000 l    df *ABS*	00000000 stm32mp_shres_helpers.c
2fffec94 l     O .bss	00000004 shregs_lock
00000000 l    df *ABS*	00000000 stm32mp1_context.c
00000000 l    df *ABS*	00000000 stm32mp1_dbgmcu.c
2fff84d8 l     F ro	00000030 stm32mp1_dbgmcu_init
00000000 l    df *ABS*	00000000 stm32mp1_security.c
00000000 l    df *ABS*	00000000 stm32mp1_syscfg.c
00000000 l    df *ABS*	00000000 cpu_data.o
00000000 l    df *ABS*	00000000 cpu_helpers.o
00000004 l       *ABS*	00000000 CPU_MIDR_SIZE
00000004 l       *ABS*	00000000 CPU_RESET_FUNC_SIZE
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_FUNC_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_LOCK_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_PRINTED_SIZE
00000000 l       *ABS*	00000000 CPU_MIDR
00000004 l       *ABS*	00000000 CPU_RESET_FUNC
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS
00000010 l       *ABS*	00000000 CPU_ERRATA_FUNC
00000014 l       *ABS*	00000000 CPU_ERRATA_LOCK
00000018 l       *ABS*	00000000 CPU_ERRATA_PRINTED
0000001c l       *ABS*	00000000 CPU_OPS_SIZE
2fff8728 l       ro	00000000 error_exit
00000000 l    df *ABS*	00000000 spinlock.o
00000000 l    df *ABS*	00000000 psci_helpers.o
2fff87f0 l     F ro	0000003c do_stack_maintenance
00000000 l    df *ABS*	00000000 platform_mp_stack.o
2fffd540 l       stacks	00000000 platform_normal_stacks
00000006 l       *ABS*	00000000 TZ_COUNT
00000000 l    df *ABS*	00000000 debug.o
2fffc3a9 l       ro	00000000 panic_msg
2fffc3ba l       ro	00000000 panic_end
2fffc3bd l       ro	00000000 assert_msg1
2fffc3cb l       ro	00000000 assert_msg2
2fff8928 l       ro	00000000 dec_print_loop
00000000 l    df *ABS*	00000000 cache_helpers.o
2fff89e8 l       ro	00000000 exit_loop_cimvac
2fff89d4 l       ro	00000000 loop_cimvac
2fff8a24 l       ro	00000000 exit_loop_cmvac
2fff8a10 l       ro	00000000 loop_cmvac
2fff8a60 l       ro	00000000 exit_loop_imvac
2fff8a4c l       ro	00000000 loop_imvac
2fff8a64 l     F ro	0000009c do_dcsw_op
2fff8ae8 l       ro	00000000 dcsw_loop_table
2fff8a70 l       ro	00000000 loop1
2fff8ac4 l       ro	00000000 level_done
2fff8aa4 l       ro	00000000 loop2
2fff8aa8 l       ro	00000000 loop3
00000000 l    df *ABS*	00000000 misc_helpers.o
2fff8b8c l       ro	00000000 do_disable_mmu
00000000 l    df *ABS*	00000000 platform_helpers.o
00000000 l    df *ABS*	00000000 aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 stm32_console.o
2fff8be8 l       ro	00000000 core_init_fail
2fff8c3c l       ro	00000000 register_fail
2fff8c88 l       ro	00000000 putc_error
2fff8c54 l       ro	00000000 txe_loop
2fff8c70 l       ro	00000000 tc_loop
2fff8cd8 l       ro	00000000 flush_error
2fff8cbc l       ro	00000000 txe_loop_3
00000000 l    df *ABS*	00000000 enable_mmu.o
00000000 l    df *ABS*	00000000 cortex_a7.o
00000004 l       *ABS*	00000000 CPU_MIDR_SIZE
00000004 l       *ABS*	00000000 CPU_RESET_FUNC_SIZE
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_FUNC_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_LOCK_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_PRINTED_SIZE
00000000 l       *ABS*	00000000 CPU_MIDR
00000004 l       *ABS*	00000000 CPU_RESET_FUNC
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS
00000010 l       *ABS*	00000000 CPU_ERRATA_FUNC
00000014 l       *ABS*	00000000 CPU_ERRATA_LOCK
00000018 l       *ABS*	00000000 CPU_ERRATA_PRINTED
0000001c l       *ABS*	00000000 CPU_OPS_SIZE
2fff8d80 l     F ro	00000018 cortex_a7_disable_smp
2fff8d98 l     F ro	00000014 cortex_a7_enable_smp
2fff8dac l     F ro	00000004 cortex_a7_reset_func
2fff8db0 l     F ro	0000002c cortex_a7_core_pwr_dwn
2fff8de0 l     F ro	00000030 cortex_a7_cluster_pwr_dwn
2fff8e14 l     F ro	00000004 cortex_a7_errata_report
2fffd538 l       .data	00000000 cortex_a7_errata_lock
2fffd53c l       .data	00000000 cortex_a7_errata_reported
00000000 l    df *ABS*	00000000 stm32mp1_helper.o
2fff8e30 l       ro	00000000 undef_inst_lbl
2fffc43f l       ro	00000000 abort_str
2fff8e60 l       ro	00000000 print_excpetion_info
2fff8e44 l       ro	00000000 other_excpetion_lbl
2fffc477 l       ro	00000000 undefined_str
2fffc495 l       ro	00000000 exception_start_str
2fffc4a8 l       ro	00000000 exception_end_str
2fffc4dc l       ro	00000000 end_error_str
2fffc44d l       ro	00000000 prefetch_abort_str
2fffc4c6 l       ro	00000000 ifsr_str
2fffc4d1 l       ro	00000000 ifar_str
2fffc464 l       ro	00000000 data_abort_str
2fffc4b0 l       ro	00000000 dfsr_str
2fffc4bb l       ro	00000000 dfar_str
2fff8f70 l     F ro	00000010 plat_stm32mp1_get_core_pos
00000000 l    df *ABS*	00000000 fdt.c
2fff90a4 l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 fdt_addresses.c
00000000 l    df *ABS*	00000000 fdt_ro.c
2fff9354 l     F ro	00000004 fdt32_to_cpu
2fff9358 l     F ro	00000032 nextprop_
2fff938a l     F ro	00000036 fdt_get_property_by_offset_
2fff94fc l     F ro	00000076 fdt_get_property_namelen_
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
2fff998e l     F ro	0000007c unsigned_num_print
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strnlen.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 cpu_data_array.c
2fffc5a0 l     F ro	00000008 __spin_lock_from_thumb
2fffc5a8 l     F ro	00000008 __psci_do_pwrdown_cache_maintenance_from_thumb
2fffc5b0 l     F ro	00000008 __print_errata_status_from_thumb
2fffc5b8 l     F ro	00000008 __spin_unlock_from_thumb
2fffc5c0 l     F ro	00000008 __clean_dcache_range_from_thumb
2fffc5c8 l     F ro	00000008 __flush_dcache_range_from_thumb
2fffc5d0 l     F ro	00000008 __enable_mmu_direct_svc_mon_from_thumb
2fffc5d8 l     F ro	00000008 __console_register_from_arm
2fff47f4 g     F ro	00000040 stm32mp_stgen_restore_counter
2fff9bbe g     F ro	00000016 putchar
2fff5bc0 g     F ro	000001e8 ddr_sw_self_refresh_exit
2ffed8e4 g     F ro	000000b4 cm_prepare_el3_exit
2fff2938 g     F ro	0000001c console_set_scope
2fff79d8 g     F ro	00000026 stpmic1_lp_copy_reg
2fff930c g     F ro	00000048 fdt_address_cells
2fff3f3c g     F ro	0000000a mdelay
2fff2be8 g     F ro	00000018 stm32mp_pwr_regs_lock
2fff9100 g     F ro	0000003c fdt_offset_ptr
2fff6fb8 g     F ro	00000012 stm32_i2c_mem_read
2fff0074 g     F ro	000000a4 sp_min_platform_setup
2fff826a g     F ro	0000001a stm32mp_mmio_clrbits_32_shregs
2fff460c g     F ro	00000034 bsec_check_nsec_access_rights
2fff5630 g     F ro	00000020 stm32mp1_clk_lp_load_opp_pll1_settings
2ffee58e g     F ro	00000018 psci_migrate_info_up_cpu
2fff26cc g     F ro	000000a8 stm32mp1_init_scmi_server
2fffd514 g     O .data	00000018 stm32mp_osc_node_label
2fff28ec g     F ro	00000040 console_register
2fff0ebc g     F ro	0000000c gicd_set_icenabler
2ffee39c g     F ro	000000c4 psci_cpu_suspend
2fff863c g     F ro	00000034 reset_handler
2ffed2e0 g     F ro	000000d0 sp_min_warm_entrypoint
2fff23f0 g     F ro	00000020 scmi_smt_fastcall_smc_entry
2fff8b24 g     F ro	00000064 zeromem
2fff518c g     F ro	00000016 stm32mp_clk_get_rate
2fff9cbe g     O ro	0000001f version_string
2ffed444 g     F ro	00000024 smc_get_ctx
2fffc570 g       ro	00000000 __pubsub_psci_suspend_pwrdown_finish_end
2fff4270 g     F ro	00000038 bsec_read_sr_lock
2ffee160 g     F ro	00000094 psci_validate_entry_point
2fff0a74 g     F ro	00000018 stm32mp_gpio_bank_is_non_secure
2fff382c g     F ro	00000018 mmap_add_ctx
2fff25e6 g     F ro	00000044 plat_scmi_clock_set_state
2ffed47c g     F ro	00000024 cm_get_context
2fff9ba4 g     F ro	0000001a printf
2fff3844 g     F ro	00000160 mmap_add_dynamic_region_ctx
2fffe9d8 g     O .bss	00000018 mmu_cfg_params
2fff3c02 g     F ro	00000002 xlat_tables_print
2ffee11c g     F ro	00000030 psci_release_pwr_domain_locks
2ffeddf4 g     F ro	00000030 psci_validate_power_state
2fff0dfc g     F ro	00000022 plat_core_pos_by_mpidr
2fff5434 g     F ro	00000038 stm32mp1_round_opp_khz
2fffd000 g       ro	00000000 __RW_START__
2fff2fa8 g     F ro	00000010 stm32mp_etzpc_binding2decprot
2ffef808 g     F ro	00000020 stm32_rtc_is_timestamp_enable
2ffed468 g     F ro	00000014 smc_get_next_ctx
2fff4440 g     F ro	00000038 bsec_read_sw_lock
2fff10a0 g     F ro	0000002c gicv2_cpuif_enable
2fff2638 g     F ro	00000018 plat_scmi_rd_count
2ffedd68 g     F ro	0000008c psci_cpu_suspend_finish
2fff7110 g     F ro	00000040 stm32_iwdg_refresh
2fff8614 g     F ro	00000010 _cpu_data
2fff9572 g     F ro	0000003e fdt_getprop_namelen
2fff7b04 g     F ro	0000001a stpmic1_lp_set_mode
2fff2c90 g     F ro	0000001c configure_mmu
2fff24a8 g     F ro	00000020 plat_scmi_get_channel
2fff94cc g     F ro	00000018 fdt_first_property_offset
2fff31a8 g     F ro	00000028 mmap_add_dynamic_region
2fff8020 g     F ro	00000028 dt_get_node_by_compatible
2fff88e4 g     F ro	0000006c asm_assert
2fff8b14 g     F ro	00000010 dcsw_op_level1
2fff4478 g     F ro	00000044 bsec_write_otp
2fff8878 g     F ro	00000034 do_panic
2fff1108 g     F ro	00000044 gicv2_distif_init
2fff88d4 g     F ro	00000010 report_data_abort
2fff9774 g     F ro	00000020 fdt_parent_offset
2fff9952 g     F ro	0000002c memmove
2fffe268 g     O .bss	00000080 rt_svc_descs_indices
2ffed5d0 g     F ro	00000074 sp_min_warm_boot
2fff0e3e g     F ro	0000000c gicd_write_isenabler
2fff058c g     F ro	00000014 plat_setup_psci_ops
2fff30c8 g     F ro	000000ac setup_mmu_cfg
2fff882c g     F ro	00000010 psci_power_down_wfi
2fff1508  w    F ro	00000004 plat_ic_set_interrupt_priority
2ffef158 g     F ro	00000030 etzpc_lock_decprot
2ffed644 g     F ro	00000016 sp_min_fiq
2fff39a4 g     F ro	00000108 mmap_remove_dynamic_region_ctx
2fff62e8 g     F ro	00000204 dt_set_pinctrl_config
2fff3d9c g     F ro	0000004c tzc400_disable_filters
2fff87c0 g     F ro	00000030 psci_do_pwrup_cache_maintenance
2ffee4e8 g     F ro	0000002a psci_affinity_info
2fff96d4 g     F ro	0000001a fdt_path_offset
2fff29ec  w    F ro	00000024 plat_log_get_prefix
2ffee514 g     F ro	0000006c psci_migrate
2fff78bc g     F ro	00000028 stpmic1_register_read
2fff8e18 g     F ro	00000060 plat_report_exception
2fff05a0 g     F ro	000000dc stm32mp1_init_lp_states
2fff8e8c g     F ro	00000028 plat_report_undef_inst
2ffef9b8 g     F ro	000000d8 stm32_tamp_it_handler
2ffef0e4 g     F ro	00000040 etzpc_configure_decprot
2fff0690 g     F ro	00000058 stm32mp1_get_lp_soc_mode
2fff9ca0 g     O ro	0000001e build_message
2fff5990 g     F ro	0000004c stm32mp1_clock_stopmode_save
2fff2410 g     F ro	00000020 scmi_smt_init_agent_channel
2ffee79c g     F ro	00000214 psci_setup
2fff46d4 g     F ro	0000000c fdt_get_rcc_node
2fff31e0 g     F ro	0000003c init_xlat_tables
2fff61e8 g     F ro	00000100 set_gpio
2fffd000 g       .data	00000000 __DATA_START__
2fff53d4 g     F ro	0000005e stm32mp1_rtc_get_read_twice
2fff2518 g     F ro	00000006 plat_scmi_clock_rates_array
2fff149c g     F ro	00000038 gicv2_set_pmr
2ffef85c g     F ro	00000058 stm32_tamp_configure_internal
2fff2d08 g     F ro	00000020 stm32_get_gpio_bank_clock
2fffecc0 g     O .bss	00000004 psci_locks
2fff4144 g     F ro	0000000c bsec_read_debug_conf
2fff8bf0 g     F ro	00000050 console_stm32_register
2fff2562 g     F ro	00000048 plat_scmi_clock_set_rate
2fff8bb0  w    F ro	00000004 plat_disable_acp
2fff5140 g     F ro	00000006 stm32mp1_clk_force_enable
2fff0b4c g     F ro	000000b4 stm32mp_nsec_can_access_reset
2fff2696 g     F ro	00000036 plat_scmi_rd_set_state
2ffee07c g     F ro	00000014 psci_find_target_suspend_lvl
2fff2fe4 g     F ro	00000028 xlat_arch_regime_get_xn_desc
2fff7718 g     F ro	00000108 initialize_pmic_i2c
2fff0eb0 g     F ro	0000000c gicd_set_isenabler
2fff5128 g     F ro	0000000c stm32mp1_clk_rcc_regs_unlock
2ffee784 g     F ro	00000016 psci_arch_setup
2fff98ac g     F ro	00000040 fdt_node_offset_by_compatible
2fff8100 g     F ro	00000050 dt_get_cpu_regulator_name
2fff2774 g     F ro	00000078 stm32mp1_pm_save_scmi_state
2ffeea0c g     F ro	00000038 psci_system_reset
2fff0f06 g     F ro	00000050 gicv2_spis_configure_defaults
2fff42a8 g     F ro	0000007c bsec_shadow_register
2ffef380 g     F ro	0000009c stm32_rng_init
2fff0ec8 g     F ro	0000000a gicd_set_ipriorityr
2fff993c g     F ro	00000016 memcpy
2ffee14c g     F ro	00000012 psci_validate_mpidr
2ffee460 g     F ro	0000006c psci_system_suspend
2ffed8b4 g     F ro	00000018 cm_init_context_by_index
2fff3e24 g     F ro	000000bc tzc400_it_handler
2ffef018 g     F ro	000000cc stm32mp1_calib_init
2fff2bc0 g     F ro	00000008 stm32mp_ddrphyc_base
2fff8b24 g     F ro	00000064 zero_normalmem
2ffedef8 g     F ro	0000002c psci_get_parent_pwr_domain_nodes
2fff8bb4 g     F ro	00000024 __aeabi_uldivmod
2fff5784 g     F ro	00000050 save_clock_pm_context
2fff7820 g     F ro	00000034 initialize_pmic
2fff18bc g     F ro	00000094 pwr_scv_handler
2fff8474 g     F ro	00000064 stm32_save_ddr_training_area
2fff7b7c g     F ro	00000014 stpmic1_bind_i2c
2ffee9d4 g     F ro	00000038 psci_system_off
2fff4784 g     F ro	00000064 fdt_get_clock_id_by_name
2fff88c4 g     F ro	00000010 report_prefetch_abort
2fff4324 g     F ro	0000011c bsec_probe
2fff4124 g     F ro	00000020 bsec_read_otp
2fff0e4a g     F ro	0000000c gicd_write_icenabler
2fff0a2c g     F ro	0000001c stm32mp1_periph_is_secure
2fff1576 g     F ro	00000016 stm32_gic_pcpu_init
2ffeeffc g     F ro	0000001c stm32mp1_calib_start_csi_cal
2fff319c g     F ro	0000000c mmap_add
2fff79fe g     F ro	0000002e stpmic1_register_update
2fff2bc8 g     F ro	00000008 stm32mp_pwr_base
2fff2bb2 g     F ro	00000006 plat_get_syscnt_freq2
2fff2c40 g     F ro	00000020 stm32_get_gpio_bank_offset
2fff904c g     F ro	00000014 plat_panic_handler
2fff8588 g     F ro	00000060 stm32mp1_syscfg_enable_io_compensation
2fffc534 g       ro	00000000 __RT_SVC_DESCS_START__
2fff8234 g     F ro	00000018 stm32mp_unlock_shregs
2fff942e g     F ro	00000080 fdt_subnode_offset_namelen
2fff5fe4 g     F ro	00000018 ddr_read_sr_mode
2fffe140 g       stacks	00000000 __STACKS_END__
2fffc570 g       ro	00000000 __pubsub_psci_suspend_pwrdown_start_end
2fff9756 g     F ro	0000001e fdt_node_depth
2fffed00 g       .bss	00000000 __PERCPU_BAKERY_LOCK_END__
2fff2f2c g     F ro	00000028 stm32_iwdg_get_instance
2fff2a34 g     F ro	0000017e __udivmoddi4
2fff89ec g     F ro	0000003c clean_dcache_range
2ffefe18 g     F ro	000000d0 sp_min_plat_fiq_handler
2fff8674 g     F ro	00000040 prepare_cpu_pwr_dwn
2ffed794  w    F ro	00000006 sp_min_plat_runtime_setup
2fff7f54 g     F ro	00000088 dt_fill_device_info
2fff5134 g     F ro	00000006 stm32mp_clk_enable
2ffee1f4 g     F ro	00000098 psci_warmboot_entrypoint
2ffef124 g     F ro	00000034 etzpc_get_decprot
2fff7b90 g     F ro	00000078 stm32mp_reset_assert_to
2fff8f14 g     F ro	00000048 plat_report_data_abort
2fff8858  w    F ro	0000001c plat_set_my_stack
2ffed4c0 g     F ro	00000020 cm_set_context_by_index
2fffc554 g       ro	00000000 __RT_SVC_DESCS_END__
2fff44f4 g     F ro	00000038 bsec_read_permanent_lock
2fff9204 g     F ro	00000024 fdt_check_node_offset_
2fff27ec g     F ro	00000078 stm32mp1_pm_restore_scmi_state
2fff231c g     F ro	00000024 scmi_msg_get_rd_handler
2fff897c g     F ro	00000034 asm_print_hex
2fff24e4 g     F ro	00000018 plat_scmi_clock_count
2ffee9b0 g     F ro	00000024 psci_prepare_next_non_secure_ctx
2fffe380 g     O .bss	00000018 psci_cpu_pd_nodes
00000c00 g       *ABS*	00000000 __BSS_SIZE__
2fff4260 g     F ro	00000010 bsec_get_id
2fff8960 g     F ro	0000001c asm_print_str
2fff7e84 g     F ro	0000005c fdt_get_interrupt
2fff9034 g     F ro	00000008 plat_crash_console_flush
2fff2bb8 g     F ro	00000008 stm32mp_ddrctrl_base
2fff9c72 g     F ro	00000014 strnlen
2ffee28c g     F ro	0000002c psci_spd_migrate_info
2fff19ec g     F ro	0000004c rcc_opp_scv_handler
2fff824c g     F ro	0000001e stm32mp_mmio_clrsetbits_32_shregs
2fff95b0 g     F ro	00000022 fdt_getprop
2fff8624 g     F ro	00000014 _cpu_data_by_index
2ffed160 g     F ro	000000cc sp_min_handle_smc
2fff5a78 g     F ro	000000bc stm32mp1_clk_probe
2fff161c g     F ro	00000138 stm32_gic_enable_spi
2ffee2b8 g     F ro	000000b0 psci_print_power_domain_map
2fffc5e0 g       ro	00000000 __RO_END_UNALIGNED__
2fff1754 g     F ro	00000024 plat_get_target_pwr_state
2fff4644 g     F ro	00000090 fdt_osc_read_freq
2fff2954 g     F ro	00000058 console_putc
2fff59dc g     F ro	00000098 stm32mp1_clock_stopmode_resume
2fff0988 g     F ro	00000006 stm32mp_register_non_secure_periph_iomem
2fff0e62 g     F ro	0000000c gicd_write_icfgr
2fff9c86 g     F ro	0000001a strrchr
2ffede44 g     F ro	00000050 psci_is_last_on_cpu
2fff0160 g     F ro	00000098 stm32_exit_cstop
2fff8f88 g     F ro	00000090 plat_crash_console_init
2fff89b0 g     F ro	0000003c flush_dcache_range
2fff24dc g     F ro	00000008 plat_scmi_protocol_list
2fff158c g     F ro	00000090 stm32_gic_init
2fff6fcc g     F ro	00000144 stm32_i2c_is_device_ready
2fff2e14 g     F ro	00000040 stm32mp_supports_cpu_opp
2fff3f48 g     F ro	00000028 timer_init
2fff97d6 g     F ro	00000046 fdt_stringlist_contains
2fff7a40 g     F ro	00000014 stpmic1_regulator_enable
2fff2cac g     F ro	0000001a stm32mp_mask_timer
2fff4250 g     F ro	00000010 bsec_get_version
2fff0fec g     F ro	000000b4 gicv2_secure_ppi_sgi_setup_props
2fffc580 g       ro	00000000 sp_min_vector_table
2fff2fc0 g     F ro	00000006 xlat_get_min_virt_addr_space_size
2fff546c g     F ro	00000070 stm32mp1_set_opp_khz
2fff1d20 g     F ro	00000024 scmi_msg_get_base_handler
2ffef5a8 g     F ro	000001a8 stm32_rtc_diff_calendar
2fff1230 g     F ro	00000068 gicv2_set_pe_target_mask
2fff790c g     F ro	00000074 stpmic1_regulator_voltage_get
2fff9a0c g     F ro	00000198 vprintf
2fff0efe g     F ro	00000008 gicv2_get_cpuif_id
2fff7f08 g     F ro	0000004c fdt_read_uint32_array
2fff25aa g     F ro	00000020 plat_scmi_clock_get_rate
2fff2fc6 g     F ro	0000001c is_dcache_enabled
2ffedbac g     F ro	0000009c psci_cpu_on_finish
2fff8b00 g     F ro	00000014 dcsw_op_all
2ffee4cc g     F ro	0000001c psci_cpu_off
2fff8f6c g     F ro	00000004 plat_reset_handler
2fff514c g     F ro	00000040 stm32mp_clk_is_enabled
2fff46e0 g     F ro	0000001e fdt_rcc_read_uint32_default
2fff94ae g     F ro	0000001e fdt_subnode_offset
2ffef1ac g     F ro	000000f4 etzpc_init
2fff472e g     F ro	0000001c fdt_rcc_enable_it
2fff86f4 g     F ro	00000038 get_cpu_ops_ptr
2ffefcbc g     F ro	00000028 stm32_timer_csi_freq
2fff82ba g     F ro	00000038 stm32mp1_pm_save_clock_cfg
2ffed4a0 g     F ro	00000020 cm_get_context_by_index
2ffed8cc g     F ro	00000018 cm_init_my_context
2fff821c g     F ro	00000018 stm32mp_lock_shregs
2fff150c g     F ro	00000004 plat_ic_set_priority_mask
2fff9904 g     F ro	0000001c memchr
2fff14fc  w    F ro	00000004 plat_ic_acknowledge_interrupt
2fff2650 g     F ro	00000046 plat_scmi_rd_autonomous
2fff9060 g     F ro	00000044 wfi_svc_int_enable
2ffeff50 g     F ro	00000124 sp_min_early_platform_setup2
2fff304c g     F ro	0000003c xlat_arch_current_el
2fff4054 g     F ro	000000d0 bsec_find_otp_name_in_dt
2fff14d4 g     F ro	00000014 gicv2_interrupt_set_cfg
2fff96ee g     F ro	00000068 fdt_supernode_atdepth_offset
2fff2e80 g     F ro	000000ac stm32mp_plat_reset
2fff7ee0 g     F ro	00000028 fdt_read_uint32_default
00000040 g       *ABS*	00000000 __PERCPU_BAKERY_LOCK_SIZE__
2fff20a8 g     F ro	00000020 scmi_msg_get_clock_handler
2fff09c8 g     F ro	00000064 stm32mp1_register_etzpc_decprot
2fff0e28 g     F ro	0000000c gicd_read_icfgr
2fff92e0 g     F ro	0000002a fdt_next_subnode
2ffed9c4 g     F ro	000000bc psci_do_cpu_off
2fff2d50 g     F ro	00000030 stm32_get_otp_value_from_idx
2fffe3c4 g     O .bss	00000004 psci_caps
2fff24c8 g     F ro	00000008 plat_scmi_vendor_name
2fff57d4 g     F ro	00000050 restore_clock_pm_context
2ffed83c g     F ro	00000078 cm_setup_context
2ffef750 g     F ro	00000070 stm32_rtc_get_timestamp
2fff9c02 g     F ro	00000038 strlcpy
2fff9c4a g     F ro	00000028 strncmp
2fff2a10  w    F ro	00000004 bl32_plat_enable_mmu
2fff20f8 g     F ro	0000002c scmi_write_response
2fffed40 g       .bss	00000000 __BL32_END__
2fff83a8 g     F ro	00000084 stm32_restore_context
2fffd540 g       .data	00000000 __DATA_END__
2ffefce4 g     F ro	00000034 stm32_timer_freq_func
2fff88b4 g     F ro	00000010 report_undef_inst
2ffeef4c g     F ro	0000000c stm32mp1_calib_set_wakeup
2fff806c g     F ro	00000094 dt_get_all_opp_freqvolt
2fff0118 g     F ro	00000002 sp_min_plat_arch_setup
2fffc554 g       ro	00000000 __CPU_OPS_START__
2fff24fc g     F ro	0000001c plat_scmi_clock_get_name
2fff3ee0 g     F ro	0000005c udelay
2fff8150 g     F ro	00000030 fdt_get_gpio_bank_pinctrl_node
2fff8000 g     F ro	0000001e dt_get_stdout_uart_info
2fff5a74 g     F ro	00000002 stm32mp1_dump_clocks_state
2fff9228 g     F ro	00000024 fdt_check_prop_offset_
2fff46fe g     F ro	00000030 fdt_rcc_read_prop
2fff8a28 g     F ro	0000003c inv_dcache_range
2fffd3a8 g     O .data	00000001 console_state
2fff8c48 g     F ro	00000048 console_stm32_core_putc
2ffed000 g     F ro	00000134 sp_min_entrypoint
2ffee650 g     F ro	00000134 psci_smc_handler
2fff8cb0 g     F ro	00000030 console_stm32_core_flush
2fff3f90 g     F ro	00000044 generic_delay_timer_init
2ffedc48 g     F ro	00000120 psci_cpu_suspend_start
2fff0990 g     F ro	00000028 stm32mp_register_secure_gpio
2fff4150 g     F ro	0000000c bsec_get_status
2ffede94 g     F ro	00000010 psci_init_req_local_pwr_states
2fff3f78 g     F ro	00000018 generic_delay_timer_init_args
2fffed40 g       .bss	00000000 __BAKERY_LOCK_END__
2fff262a g     F ro	0000000c plat_scmi_rd_get_name
2fff9920 g     F ro	0000001c memcmp
2fff2bd0 g     F ro	00000006 stm32mp_rcc_base
2ffeda80 g     F ro	0000012c psci_cpu_on_start
2fff7150 g     F ro	0000005c stm32_iwdg_it_handler
2ffee064 g     F ro	00000018 psci_find_max_off_lvl
2fff2cc6 g     F ro	00000042 stm32mp_wait_cpu_reset
2fff34fc g     F ro	000000a4 xlat_desc
2fff9644 g     F ro	00000090 fdt_path_offset_namelen
2fff94e4 g     F ro	00000018 fdt_next_property_offset
2fff8508 g     F ro	00000030 stm32mp1_dbgmcu_get_chip_dev_id
2fff0ed2 g     F ro	0000002c gicd_set_icfgr
2fffe398 g     O .bss	00000020 psci_non_cpu_pd_nodes
2fff7fdc g     F ro	00000024 dt_get_node
2ffeefe0 g     F ro	0000001c stm32mp1_calib_start_hsi_cal
2fffed40 g       .bss	00000000 __BSS_END__
2fffc570 g       ro	00000000 __CPU_OPS_END__
2fff5146 g     F ro	00000006 stm32mp1_clk_force_disable
2fff25ca g     F ro	0000001c plat_scmi_clock_get_state
2fff1504  w    F ro	00000004 plat_ic_disable_interrupt
2ffee368 g     F ro	00000004 psci_do_pwrdown_sequence
2fff3d34 g     F ro	00000068 tzc400_enable_filters
2ffef7c0 g     F ro	00000048 stm32_rtc_set_tamper_timestamp
2fff87a8 g     F ro	00000018 psci_do_pwrdown_cache_maintenance
2fff9794 g     F ro	00000042 fdt_node_offset_by_phandle
2fff2a14 g     F ro	00000020 __ctzdi2
2fff474c g     F ro	00000038 fdt_get_clock_id
2fff3c84 g     F ro	000000b0 tzc400_configure_region
2ffee36c g     F ro	0000002e psci_cpu_on
2fff0230 g     F ro	00000194 stm32_enter_low_power
2fff842c g     F ro	0000001c stm32_get_stgen_from_context
2fff7dec g     F ro	0000001c dt_open_and_check
2fff0e6e g     F ro	00000020 gicd_set_igroupr
2fff8ba4 g     F ro	00000008 disable_mmu_icache_secure
2ffee090 g     F ro	00000052 psci_validate_suspend_req
2ffef550 g     F ro	00000018 stm32_rtc_regs_unlock
2ffee5f0 g     F ro	00000060 psci_features
2fff997e g     F ro	00000010 memset
2ffefa90 g     F ro	0000010c stm32_tamp_init
2fffecc0 g       .bss	00000000 __BAKERY_LOCK_START__
2ffedea4 g     F ro	00000054 psci_get_target_local_pwr_states
2fff11b0 g     F ro	00000038 gicv2_get_pending_interrupt_id
2fff2c60 g     F ro	0000002e stm32mp_get_cpu_supply_name
2ffef538 g     F ro	00000018 stm32_rtc_regs_lock
2fff85e8 g     F ro	0000002c stm32mp1_syscfg_disable_io_compensation
2fff8c90 g     F ro	0000001c console_stm32_putc
2fff61d8 g     F ro	0000000c ddr_restore_sr_mode
2fffe3b8 g     O .bss	00000004 psci_plat_pm_ops
2fff251e g     F ro	00000044 plat_scmi_clock_rates_by_step
2fff2fb8 g     F ro	00000008 xlat_arch_get_max_supported_pa
2fff20c8 g     F ro	00000030 scmi_status_response
2fff321c g     F ro	00000034 enable_mmu_svc_mon
2fffc570 g       ro	00000000 __pubsub_psci_suspend_pwrdown_start_start
2fff5ffc g     F ro	000001cc ddr_set_sr_mode
2fff1500  w    F ro	00000004 plat_ic_end_of_interrupt
2ffef8b4 g     F ro	00000104 stm32_tamp_configure_external
2fff95d4 g     F ro	00000044 fdt_get_phandle
2fff011c g     F ro	00000044 stm32_apply_pmic_suspend_config
2ffed4e0 g     F ro	00000020 get_arm_std_svc_args
2fff9bea g     F ro	00000018 strcmp
2fff71ac g     F ro	000001ec stm32_iwdg_init
2ffeeb34 g     F ro	00000100 bakery_lock_get
2fff41c0 g     F ro	00000090 bsec_permanent_lock_otp
2fff3c04 g     F ro	00000024 tzc400_set_action
2fff7a54 g     F ro	0000005c stpmic1_regulator_voltage_set
2ffeeab4 g     F ro	0000004c psci_mem_protect
2fff7a2c g     F ro	0000000a stpmic1_powerctrl_on
2ffef568 g     F ro	00000040 stm32_rtc_get_calendar
2ffeec34 g     F ro	00000058 bakery_lock_release
2ffefee8 g     F ro	00000068 sp_min_plat_get_bl33_ep_info
2fff8bd8 g     F ro	00000018 console_stm32_core_init
2fff8b88 g     F ro	0000001c disable_mmu_secure
2fff0df4 g     F ro	00000008 plat_get_power_domain_tree_desc
2fff1318 g     F ro	00000040 gicv2_set_interrupt_priority
2fff6ae0 g     F ro	00000060 stm32_i2c_get_setup_from_fdt
2fff0f58 g     F ro	00000094 gicv2_secure_spis_configure_props
2fff0e56 g     F ro	0000000c gicd_write_ipriorityr
2fff0c00 g     F ro	000001f4 stm32mp_lock_periph_registering
2fff7980 g     F ro	00000058 stpmic1_register_write
2fff78e4 g     F ro	00000028 stpmic1_is_regulator_enabled
2fff8ce0 g     F ro	0000001c console_stm32_flush
2ffee5a8 g     F ro	00000048 psci_node_hw_state
2fff61c8 g     F ro	00000010 ddr_save_sr_mode
2fff90a8 g     F ro	00000058 fdt_check_header
2fff1430 g     F ro	0000006c gicv2_set_spi_routing
2fff86b8 g     F ro	00000038 init_cpu_ops
2fff8448 g     F ro	0000002c stm32_are_pll1_settings_valid_in_context
2fff29ac g     F ro	00000040 console_flush
2fff303c g     F ro	00000010 xlat_arch_tlbi_va_sync
2fff513a g     F ro	00000006 stm32mp_clk_disable
2fffd000 g       ro	00000000 __RO_END__
2fff93d0 g     F ro	0000005e fdt_get_name
2fff54dc g     F ro	00000128 stm32mp1_clk_compute_all_pll1_settings
2fff0e1e g     F ro	0000000a gicd_read_igroupr
2ffed22c g     F ro	000000b4 sp_min_handle_fiq
2fff292c g     F ro	0000000c console_switch_state
2fff8738 g     F ro	00000034 print_errata_status
2fff8790 g     F ro	00000018 spin_unlock
2fff92ba g     F ro	00000026 fdt_first_subnode
2fff14e8  w    F ro	00000014 plat_ic_get_pending_interrupt_id
2fffe140 g       .bss	00000000 __BSS_START__
2fff58bc g     F ro	000000d4 stm32mp1_clock_resume
2ffefc98 g     F ro	00000024 stm32_timer_hsi_freq
2ffeef58 g     F ro	00000088 stm32mp1_calib_it_handler
2ffed000 g       ro	00000000 __RO_START__
2fff7ad4 g     F ro	0000001a stpmic1_regulator_mask_reset_set
2fff3748 g     F ro	000000e4 mmap_add_region_ctx
2fff9040 g     F ro	00000008 plat_crash_console_putc
2fff452c g     F ro	000000e0 bsec_program_otp
2fffe300 g     O .bss	00000080 percpu_data
2fff12dc g     F ro	0000003c gicv2_disable_interrupt
2fff1950 g     F ro	00000076 rcc_scv_handler
2fff24d8 g     F ro	00000004 plat_scmi_protocol_count
2fff924c g     F ro	0000006e fdt_next_node
2fff18a4 g     F ro	00000018 pm_domain_scv_handler
2fff7a36 g     F ro	0000000a stpmic1_switch_off
2fff8180 g     F ro	0000009c fdt_get_gpioz_nbpins_from_dt
2fff832c g     F ro	0000007c stm32_save_context
2fff5604 g     F ro	0000002c stm32mp1_clk_lp_save_opp_pll1_settings
2fff7e08 g     F ro	00000018 fdt_get_address
2fff876c g     F ro	00000024 spin_lock
2fff28c0 g     F ro	0000002c console_is_registered
2fff01f8 g     F ro	00000038 stm32_pwr_down_wfi
2fff5106 g     F ro	00000014 stm32mp1_rcc_is_mckprot
2fff2c00 g     F ro	00000018 stm32mp_pwr_regs_unlock
2fff5b9c g     F ro	00000022 ddr_enable_clock
2ffede24 g     F ro	00000020 psci_query_sys_suspend_pwrstate
2fff8048 g     F ro	00000024 dt_get_ddr_size
2fff3088 g     F ro	00000040 is_mmu_enabled_ctx
2fff0982 g     F ro	00000006 stm32mp_register_secure_periph_iomem
2fff3c28 g     F ro	0000005c tzc400_init
2ffeef40 g     F ro	0000000c stm32mp1_calib_get_wakeup
2fff2864 g     F ro	0000005c tf_log
2fff13c4 g     F ro	0000006c gicv2_raise_sgi
2fffc570 g       ro	00000000 __pubsub_psci_cpu_on_finish_start
2fff7aee g     F ro	00000016 stpmic1_lp_reg_on_off
2fff097c g     F ro	00000006 stm32mp_register_secure_periph
2fff5da8 g     F ro	0000023c ddr_standby_sr_entry
2fff2e54 g     F ro	0000002c stm32mp_is_single_core
2fffed40 g       .bss	00000000 __RW_END__
2fff2c18 g     F ro	00000028 stm32_get_gpio_bank_base
2fff7e20 g     F ro	00000064 fdt_get_status
2fff09b8 g     F ro	00000010 stm32mp_register_non_secure_gpio
2fff511c g     F ro	0000000c stm32mp1_clk_rcc_regs_lock
2fff82f2 g     F ro	00000038 stm32mp1_pm_restore_clock_cfg
2fff8284 g     F ro	00000018 stm32mp_mmio_setbits_32_shregs
2fff93c0 g     F ro	00000010 fdt_string
2fff8ebc g     F ro	00000048 plat_report_prefetch_abort
2fffd540 g       stacks	00000000 __STACKS_START__
2fff8538 g     F ro	00000050 stm32mp1_security_setup
2ffed65c g     F ro	00000060 handle_runtime_svc
2ffedfa8 g     F ro	000000bc psci_do_state_coordination
2ffeea44 g     F ro	00000070 psci_system_reset2
2fff1778 g     F ro	0000012c bsec_main
2fff913c g     F ro	000000c6 fdt_next_tag
2fff3aac g     F ro	00000154 init_xlat_tables_ctx
2fff6b40 g     F ro	0000045c stm32_i2c_init
2fffc570 g       ro	00000000 __pubsub_psci_suspend_pwrdown_finish_start
2fff5398 g     F ro	0000003c stm32mp_clk_timer_get_rate
2ffefd18 g     F ro	000000e0 stm32_timer_init
2fff6f9c g     F ro	0000001c stm32_i2c_mem_write
2fff19c6 g     F ro	00000026 rcc_cal_scv_handler
2fff8f80 g     F ro	00000008 plat_my_core_pos
2fff9618 g     F ro	0000002c fdt_get_alias_namelen
2fff114c g     F ro	00000064 gicv2_driver_init
2ffef188 g     F ro	00000024 etzpc_configure_tzma
2fff47e8 g     F ro	0000000c stm32mp_stgen_get_counter
2fff2bd6 g     F ro	00000010 stm32mp_lock_available
2ffed6bc g     F ro	000000d8 runtime_svc_init
2fff64ec g     F ro	00000060 set_gpio_secure_cfg
2fff1298 g     F ro	00000044 gicv2_enable_interrupt
2fff2124 g     F ro	0000004c scmi_process_message
2fff9c3a g     F ro	00000010 strlen
2fff10cc g     F ro	0000003c gicv2_pcpu_distif_init
2fff7c08 g     F ro	0000007c stm32mp_reset_deassert_to
2ffed500 g     F ro	000000d0 sp_min_main
2ffee580 g     F ro	0000000e psci_migrate_info_type
2ffef2a0 g     F ro	000000e0 stm32_rng_read
2fff2d28 g     F ro	00000028 stm32_get_otp_index
2fff300c g     F ro	00000030 xlat_arch_tlbi_va
2fff2f54 g     F ro	00000054 stm32_iwdg_get_otp_config
2fff11e8 g     F ro	00000024 gicv2_acknowledge_interrupt
2fff7660 g     F ro	00000028 dt_pmic_status
2fff120c g     F ro	00000024 gicv2_end_of_interrupt
2fff24d0 g     F ro	00000008 plat_scmi_sub_vendor_name
2fff98ec g     F ro	00000018 __assert
2ffeeb00 g     F ro	00000034 psci_mem_chk_range
2fff0e8e g     F ro	00000022 gicd_clr_igroupr
2fff9bd4 g     F ro	00000016 strchr
2fff3c00 g     F ro	00000002 xlat_mmap_print
2fff7b20 g     F ro	0000005c stpmic1_lp_set_voltage
2fff7ab0 g     F ro	00000024 stpmic1_regulator_pull_down_set
2fff8d00 g     F ro	00000074 enable_mmu_direct_svc_mon
2fff3de8 g     F ro	0000003c tzc400_is_pending_interrupt
2fff981c g     F ro	00000066 fdt_stringlist_search
2ffee0e4 g     F ro	00000038 psci_acquire_pwr_domain_locks
2fff9884 g     F ro	00000028 fdt_node_check_compatible
2fff5824 g     F ro	00000098 stm32mp1_clock_suspend
2fffc570 g       ro	00000000 __pubsub_psci_cpu_on_finish_end
2fff829c g     F ro	0000001e stm32_clean_context
2fff31d0 g     F ro	00000010 mmap_remove_dynamic_region
2fff769c g     F ro	0000007c dt_pmic_find_supply
2fff50f8 g     F ro	0000000e stm32mp1_rcc_is_secure
2fff2d80 g     F ro	00000048 stm32_get_otp_value
2fff5650 g     F ro	00000134 stm32mp1_register_clock_parents_secure
2fffe9c8 g     O .bss	00000004 console_list
2ffedf24 g     F ro	00000084 psci_set_pwr_domains_to_run
2fff1358 g     F ro	0000006c gicv2_set_interrupt_type
2fff067c g     F ro	00000014 stm32mp1_set_pm_domain_state
2fff7692 g     F ro	0000000a pmic_set_lp_config
2fff0e34 g     F ro	0000000a gicd_write_igroupr
2ffef828 g     F ro	00000034 stm32_rtc_init
2fff44bc g     F ro	00000038 bsec_read_sp_lock
2fff0a8c g     F ro	000000c0 stm32mp_nsec_can_access_clock
2fffecc0 g       .bss	00000000 __PERCPU_BAKERY_LOCK_START__
2fff883c  w    F ro	00000018 plat_get_my_stack
2fff3174 g     F ro	00000028 mmap_add_region
2ffed998 g     F ro	0000002a errata_needs_reporting
2fffe3c0 g     O .bss	00000004 psci_spd_pm
2fff7688 g     F ro	0000000a pmic_configure_boot_on_regulators



Disassembly of section ro:

2ffed000 <sp_min_entrypoint>:
2ffed000:	e1a09000 	mov	r9, r0
2ffed004:	e1a0a001 	mov	sl, r1
2ffed008:	e1a0b002 	mov	fp, r2
2ffed00c:	e1a0c003 	mov	ip, r3
2ffed010:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffed014:	e3100001 	tst	r0, #1
2ffed018:	0a000002 	beq	2ffed028 <sp_min_entrypoint+0x28>
2ffed01c:	e59f0110 	ldr	r0, [pc, #272]	; 2ffed134 <sp_min_entrypoint+0x134>
2ffed020:	e3a010d4 	mov	r1, #212	; 0xd4
2ffed024:	ea002e2e 	b	2fff88e4 <asm_assert>
2ffed028:	f1020016 	cps	#22
2ffed02c:	f57ff06f 	isb	sy
2ffed030:	e59f0100 	ldr	r0, [pc, #256]	; 2ffed138 <sp_min_entrypoint+0x138>
2ffed034:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffed038:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffed03c:	f57ff06f 	isb	sy
2ffed040:	eb002d7d 	bl	2fff863c <reset_handler>
2ffed044:	e59f10f0 	ldr	r1, [pc, #240]	; 2ffed13c <sp_min_entrypoint+0x13c>
2ffed048:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffed04c:	e1800001 	orr	r0, r0, r1
2ffed050:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffed054:	f57ff06f 	isb	sy
2ffed058:	e3a00c02 	mov	r0, #512	; 0x200
2ffed05c:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed060:	f1080100 	cpsie	a
2ffed064:	f57ff06f 	isb	sy
2ffed068:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffed06c:	e2000807 	and	r0, r0, #458752	; 0x70000
2ffed070:	e3800b03 	orr	r0, r0, #3072	; 0xc00
2ffed074:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffed078:	f57ff06f 	isb	sy
2ffed07c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
2ffed080:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffed084:	f57ff06f 	isb	sy
2ffed088:	e59f00b0 	ldr	r0, [pc, #176]	; 2ffed140 <sp_min_entrypoint+0x140>
2ffed08c:	eee80a10 	vmsr	fpexc, r0
2ffed090:	f57ff06f 	isb	sy
2ffed094:	e3a00020 	mov	r0, #32
2ffed098:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffed09c:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffed0a0:	e200040f 	and	r0, r0, #251658240	; 0xf000000
2ffed0a4:	e3500401 	cmp	r0, #16777216	; 0x1000000
2ffed0a8:	1a000002 	bne	2ffed0b8 <sp_min_entrypoint+0xb8>
2ffed0ac:	e10f0000 	mrs	r0, CPSR
2ffed0b0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
2ffed0b4:	e12ff000 	msr	CPSR_fsxc, r0
2ffed0b8:	e59f0084 	ldr	r0, [pc, #132]	; 2ffed144 <sp_min_entrypoint+0x144>
2ffed0bc:	e59f1084 	ldr	r1, [pc, #132]	; 2ffed148 <sp_min_entrypoint+0x148>
2ffed0c0:	e0411000 	sub	r1, r1, r0
2ffed0c4:	eb002e57 	bl	2fff8a28 <inv_dcache_range>
2ffed0c8:	e1a0700c 	mov	r7, ip
2ffed0cc:	e59f0078 	ldr	r0, [pc, #120]	; 2ffed14c <sp_min_entrypoint+0x14c>
2ffed0d0:	e59f1078 	ldr	r1, [pc, #120]	; 2ffed150 <sp_min_entrypoint+0x150>
2ffed0d4:	eb002e92 	bl	2fff8b24 <zero_normalmem>
2ffed0d8:	e1a0c007 	mov	ip, r7
2ffed0dc:	eb002ddd 	bl	2fff8858 <plat_set_my_stack>
2ffed0e0:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffed0e4:	e3844004 	orr	r4, r4, #4
2ffed0e8:	e3c44010 	bic	r4, r4, #16
2ffed0ec:	ee014f11 	mcr	15, 0, r4, cr1, cr1, {0}
2ffed0f0:	e1a00009 	mov	r0, r9
2ffed0f4:	e1a0100a 	mov	r1, sl
2ffed0f8:	e1a0200b 	mov	r2, fp
2ffed0fc:	e1a0300c 	mov	r3, ip
2ffed100:	fa000b92 	blx	2ffeff50 <sp_min_early_platform_setup2>
2ffed104:	fa000c03 	blx	2fff0118 <sp_min_plat_arch_setup>
2ffed108:	fa0000fc 	blx	2ffed500 <sp_min_main>
2ffed10c:	e59f0040 	ldr	r0, [pc, #64]	; 2ffed154 <sp_min_entrypoint+0x154>
2ffed110:	e59f1040 	ldr	r1, [pc, #64]	; 2ffed158 <sp_min_entrypoint+0x158>
2ffed114:	e0411000 	sub	r1, r1, r0
2ffed118:	eb002e33 	bl	2fff89ec <clean_dcache_range>
2ffed11c:	e59f0028 	ldr	r0, [pc, #40]	; 2ffed14c <sp_min_entrypoint+0x14c>
2ffed120:	e59f1034 	ldr	r1, [pc, #52]	; 2ffed15c <sp_min_entrypoint+0x15c>
2ffed124:	e0411000 	sub	r1, r1, r0
2ffed128:	eb002e2f 	bl	2fff89ec <clean_dcache_range>
2ffed12c:	fa0000cd 	blx	2ffed468 <smc_get_next_ctx>
2ffed130:	ea0000a2 	b	2ffed3c0 <sp_min_exit>
2ffed134:	2fffc361 	.word	0x2fffc361
2ffed138:	2fffc580 	.word	0x2fffc580
2ffed13c:	00001002 	.word	0x00001002
2ffed140:	40000700 	.word	0x40000700
2ffed144:	2fffd000 	.word	0x2fffd000
2ffed148:	2fffed40 	.word	0x2fffed40
2ffed14c:	2fffe140 	.word	0x2fffe140
2ffed150:	00000c00 	.word	0x00000c00
2ffed154:	2fffd000 	.word	0x2fffd000
2ffed158:	2fffd540 	.word	0x2fffd540
2ffed15c:	2fffed40 	.word	0x2fffed40

2ffed160 <sp_min_handle_smc>:
2ffed160:	e58de080 	str	lr, [sp, #128]	; 0x80
2ffed164:	e88d1fff 	stm	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed168:	e1a0000d 	mov	r0, sp
2ffed16c:	e2800034 	add	r0, r0, #52	; 0x34
2ffed170:	e1054200 	mrs	r4, SP_usr
2ffed174:	e1065200 	mrs	r5, LR_usr
2ffed178:	e1406300 	mrs	r6, SPSR_irq
2ffed17c:	e1017300 	mrs	r7, SP_irq
2ffed180:	e1008300 	mrs	r8, LR_irq
2ffed184:	e14e9200 	mrs	r9, SPSR_fiq
2ffed188:	e10da200 	mrs	sl, SP_fiq
2ffed18c:	e10eb200 	mrs	fp, LR_fiq
2ffed190:	e142c300 	mrs	ip, SPSR_svc
2ffed194:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed198:	e1034300 	mrs	r4, SP_svc
2ffed19c:	e1025300 	mrs	r5, LR_svc
2ffed1a0:	e1446300 	mrs	r6, SPSR_abt
2ffed1a4:	e1057300 	mrs	r7, SP_abt
2ffed1a8:	e1048300 	mrs	r8, LR_abt
2ffed1ac:	e1469300 	mrs	r9, SPSR_und
2ffed1b0:	e107a300 	mrs	sl, SP_und
2ffed1b4:	e106b300 	mrs	fp, LR_und
2ffed1b8:	e14fc000 	mrs	ip, SPSR
2ffed1bc:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed1c0:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffed1c4:	ee195f1c 	mrc	15, 0, r5, cr9, cr12, {0}
2ffed1c8:	e3140001 	tst	r4, #1
2ffed1cc:	0a000000 	beq	2ffed1d4 <sp_min_handle_smc+0x74>
2ffed1d0:	e58d5088 	str	r5, [sp, #136]	; 0x88
2ffed1d4:	e3855020 	orr	r5, r5, #32
2ffed1d8:	ee095f1c 	mcr	15, 0, r5, cr9, cr12, {0}
2ffed1dc:	f57ff06f 	isb	sy
2ffed1e0:	e58d4084 	str	r4, [sp, #132]	; 0x84
2ffed1e4:	f57ff01f 	clrex
2ffed1e8:	e1a0200d 	mov	r2, sp
2ffed1ec:	e592d07c 	ldr	sp, [r2, #124]	; 0x7c
2ffed1f0:	e5920084 	ldr	r0, [r2, #132]	; 0x84
2ffed1f4:	e2003001 	and	r3, r0, #1
2ffed1f8:	e3c00001 	bic	r0, r0, #1
2ffed1fc:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed200:	f57ff06f 	isb	sy
2ffed204:	e5920000 	ldr	r0, [r2]
2ffed208:	e3100101 	tst	r0, #1073741824	; 0x40000000
2ffed20c:	0a000003 	beq	2ffed220 <sp_min_handle_smc+0xc0>
2ffed210:	e3e00000 	mvn	r0, #0
2ffed214:	e5820000 	str	r0, [r2]
2ffed218:	e1a00002 	mov	r0, r2
2ffed21c:	ea000067 	b	2ffed3c0 <sp_min_exit>
2ffed220:	e3a01000 	mov	r1, #0
2ffed224:	fa00010c 	blx	2ffed65c <handle_runtime_svc>
2ffed228:	ea000064 	b	2ffed3c0 <sp_min_exit>

2ffed22c <sp_min_handle_fiq>:
2ffed22c:	e24ee004 	sub	lr, lr, #4
2ffed230:	e58de080 	str	lr, [sp, #128]	; 0x80
2ffed234:	e88d1fff 	stm	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed238:	e1a0000d 	mov	r0, sp
2ffed23c:	e2800034 	add	r0, r0, #52	; 0x34
2ffed240:	e1054200 	mrs	r4, SP_usr
2ffed244:	e1065200 	mrs	r5, LR_usr
2ffed248:	e1406300 	mrs	r6, SPSR_irq
2ffed24c:	e1017300 	mrs	r7, SP_irq
2ffed250:	e1008300 	mrs	r8, LR_irq
2ffed254:	e14e9200 	mrs	r9, SPSR_fiq
2ffed258:	e10da200 	mrs	sl, SP_fiq
2ffed25c:	e10eb200 	mrs	fp, LR_fiq
2ffed260:	e142c300 	mrs	ip, SPSR_svc
2ffed264:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed268:	e1034300 	mrs	r4, SP_svc
2ffed26c:	e1025300 	mrs	r5, LR_svc
2ffed270:	e1446300 	mrs	r6, SPSR_abt
2ffed274:	e1057300 	mrs	r7, SP_abt
2ffed278:	e1048300 	mrs	r8, LR_abt
2ffed27c:	e1469300 	mrs	r9, SPSR_und
2ffed280:	e107a300 	mrs	sl, SP_und
2ffed284:	e106b300 	mrs	fp, LR_und
2ffed288:	e14fc000 	mrs	ip, SPSR
2ffed28c:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed290:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffed294:	ee195f1c 	mrc	15, 0, r5, cr9, cr12, {0}
2ffed298:	e3140001 	tst	r4, #1
2ffed29c:	0a000000 	beq	2ffed2a4 <sp_min_handle_fiq+0x78>
2ffed2a0:	e58d5088 	str	r5, [sp, #136]	; 0x88
2ffed2a4:	e3855020 	orr	r5, r5, #32
2ffed2a8:	ee095f1c 	mcr	15, 0, r5, cr9, cr12, {0}
2ffed2ac:	f57ff06f 	isb	sy
2ffed2b0:	e58d4084 	str	r4, [sp, #132]	; 0x84
2ffed2b4:	f57ff01f 	clrex
2ffed2b8:	e1a0200d 	mov	r2, sp
2ffed2bc:	e592d07c 	ldr	sp, [r2, #124]	; 0x7c
2ffed2c0:	e5920084 	ldr	r0, [r2, #132]	; 0x84
2ffed2c4:	e3c00001 	bic	r0, r0, #1
2ffed2c8:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed2cc:	f57ff06f 	isb	sy
2ffed2d0:	e92d000c 	push	{r2, r3}
2ffed2d4:	fa0000da 	blx	2ffed644 <sp_min_fiq>
2ffed2d8:	e8bd0009 	pop	{r0, r3}
2ffed2dc:	ea000037 	b	2ffed3c0 <sp_min_exit>

2ffed2e0 <sp_min_warm_entrypoint>:
2ffed2e0:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffed2e4:	e3100001 	tst	r0, #1
2ffed2e8:	0a000002 	beq	2ffed2f8 <sp_min_warm_entrypoint+0x18>
2ffed2ec:	e59f00bc 	ldr	r0, [pc, #188]	; 2ffed3b0 <sp_min_warm_entrypoint+0xd0>
2ffed2f0:	e3a010d4 	mov	r1, #212	; 0xd4
2ffed2f4:	ea002d7a 	b	2fff88e4 <asm_assert>
2ffed2f8:	f1020016 	cps	#22
2ffed2fc:	f57ff06f 	isb	sy
2ffed300:	e59f00ac 	ldr	r0, [pc, #172]	; 2ffed3b4 <sp_min_warm_entrypoint+0xd4>
2ffed304:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffed308:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffed30c:	f57ff06f 	isb	sy
2ffed310:	eb002cc9 	bl	2fff863c <reset_handler>
2ffed314:	e59f109c 	ldr	r1, [pc, #156]	; 2ffed3b8 <sp_min_warm_entrypoint+0xd8>
2ffed318:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffed31c:	e1800001 	orr	r0, r0, r1
2ffed320:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffed324:	f57ff06f 	isb	sy
2ffed328:	e3a00c02 	mov	r0, #512	; 0x200
2ffed32c:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed330:	f1080100 	cpsie	a
2ffed334:	f57ff06f 	isb	sy
2ffed338:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffed33c:	e2000807 	and	r0, r0, #458752	; 0x70000
2ffed340:	e3800b03 	orr	r0, r0, #3072	; 0xc00
2ffed344:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffed348:	f57ff06f 	isb	sy
2ffed34c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
2ffed350:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffed354:	f57ff06f 	isb	sy
2ffed358:	e59f005c 	ldr	r0, [pc, #92]	; 2ffed3bc <sp_min_warm_entrypoint+0xdc>
2ffed35c:	eee80a10 	vmsr	fpexc, r0
2ffed360:	f57ff06f 	isb	sy
2ffed364:	e3a00020 	mov	r0, #32
2ffed368:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffed36c:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffed370:	e200040f 	and	r0, r0, #251658240	; 0xf000000
2ffed374:	e3500401 	cmp	r0, #16777216	; 0x1000000
2ffed378:	1a000002 	bne	2ffed388 <sp_min_warm_entrypoint+0xa8>
2ffed37c:	e10f0000 	mrs	r0, CPSR
2ffed380:	e3800602 	orr	r0, r0, #2097152	; 0x200000
2ffed384:	e12ff000 	msr	CPSR_fsxc, r0
2ffed388:	eb002d32 	bl	2fff8858 <plat_set_my_stack>
2ffed38c:	e3a00001 	mov	r0, #1
2ffed390:	fa00159e 	blx	2fff2a10 <bl32_plat_enable_mmu>
2ffed394:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffed398:	e3800004 	orr	r0, r0, #4
2ffed39c:	e3c00010 	bic	r0, r0, #16
2ffed3a0:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed3a4:	fa000089 	blx	2ffed5d0 <sp_min_warm_boot>
2ffed3a8:	fa00002e 	blx	2ffed468 <smc_get_next_ctx>
2ffed3ac:	ea000003 	b	2ffed3c0 <sp_min_exit>
2ffed3b0:	2fffc361 	.word	0x2fffc361
2ffed3b4:	2fffc580 	.word	0x2fffc580
2ffed3b8:	00001002 	.word	0x00001002
2ffed3bc:	40000700 	.word	0x40000700

2ffed3c0 <sp_min_exit>:
2ffed3c0:	e580d07c 	str	sp, [r0, #124]	; 0x7c
2ffed3c4:	e1a0d000 	mov	sp, r0
2ffed3c8:	e5901084 	ldr	r1, [r0, #132]	; 0x84
2ffed3cc:	ee011f11 	mcr	15, 0, r1, cr1, cr1, {0}
2ffed3d0:	f57ff06f 	isb	sy
2ffed3d4:	e3110001 	tst	r1, #1
2ffed3d8:	0a000001 	beq	2ffed3e4 <sp_min_exit+0x24>
2ffed3dc:	e5901088 	ldr	r1, [r0, #136]	; 0x88
2ffed3e0:	ee091f1c 	mcr	15, 0, r1, cr9, cr12, {0}
2ffed3e4:	e2801034 	add	r1, r0, #52	; 0x34
2ffed3e8:	e8b11ff0 	ldm	r1!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed3ec:	e125f204 	msr	SP_usr, r4
2ffed3f0:	e126f205 	msr	LR_usr, r5
2ffed3f4:	e160f306 	msr	SPSR_irq, r6
2ffed3f8:	e121f307 	msr	SP_irq, r7
2ffed3fc:	e120f308 	msr	LR_irq, r8
2ffed400:	e16ef209 	msr	SPSR_fiq, r9
2ffed404:	e12df20a 	msr	SP_fiq, sl
2ffed408:	e12ef20b 	msr	LR_fiq, fp
2ffed40c:	e162f30c 	msr	SPSR_svc, ip
2ffed410:	e8b11ff0 	ldm	r1!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed414:	e123f304 	msr	SP_svc, r4
2ffed418:	e122f305 	msr	LR_svc, r5
2ffed41c:	e164f306 	msr	SPSR_abt, r6
2ffed420:	e125f307 	msr	SP_abt, r7
2ffed424:	e124f308 	msr	LR_abt, r8
2ffed428:	e166f309 	msr	SPSR_und, r9
2ffed42c:	e127f30a 	msr	SP_und, sl
2ffed430:	e126f30b 	msr	LR_und, fp
2ffed434:	e16ff00c 	msr	SPSR_fsxc, ip
2ffed438:	e590e080 	ldr	lr, [r0, #128]	; 0x80
2ffed43c:	e8901fff 	ldm	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed440:	e160006e 	eret

2ffed444 <smc_get_ctx>:
2ffed444:	2801      	cmp	r0, #1
2ffed446:	b508      	push	{r3, lr}
2ffed448:	d003      	beq.n	2ffed452 <smc_get_ctx+0xe>
2ffed44a:	4805      	ldr	r0, [pc, #20]	; (2ffed460 <smc_get_ctx+0x1c>)
2ffed44c:	212a      	movs	r1, #42	; 0x2a
2ffed44e:	f00c fa4d 	bl	2fff98ec <__assert>
2ffed452:	f00b ed96 	blx	2fff8f80 <plat_my_core_pos>
2ffed456:	4b03      	ldr	r3, [pc, #12]	; (2ffed464 <smc_get_ctx+0x20>)
2ffed458:	2290      	movs	r2, #144	; 0x90
2ffed45a:	fb02 3000 	mla	r0, r2, r0, r3
2ffed45e:	bd08      	pop	{r3, pc}
2ffed460:	2fff9cdd 	.word	0x2fff9cdd
2ffed464:	2fffe148 	.word	0x2fffe148

2ffed468 <smc_get_next_ctx>:
2ffed468:	b508      	push	{r3, lr}
2ffed46a:	f00b ed8a 	blx	2fff8f80 <plat_my_core_pos>
2ffed46e:	4b02      	ldr	r3, [pc, #8]	; (2ffed478 <smc_get_next_ctx+0x10>)
2ffed470:	2290      	movs	r2, #144	; 0x90
2ffed472:	fb02 3000 	mla	r0, r2, r0, r3
2ffed476:	bd08      	pop	{r3, pc}
2ffed478:	2fffe148 	.word	0x2fffe148

2ffed47c <cm_get_context>:
2ffed47c:	2801      	cmp	r0, #1
2ffed47e:	b508      	push	{r3, lr}
2ffed480:	d003      	beq.n	2ffed48a <cm_get_context+0xe>
2ffed482:	4805      	ldr	r0, [pc, #20]	; (2ffed498 <cm_get_context+0x1c>)
2ffed484:	2140      	movs	r1, #64	; 0x40
2ffed486:	f00c fa31 	bl	2fff98ec <__assert>
2ffed48a:	f00b ed7a 	blx	2fff8f80 <plat_my_core_pos>
2ffed48e:	4b03      	ldr	r3, [pc, #12]	; (2ffed49c <cm_get_context+0x20>)
2ffed490:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffed494:	bd08      	pop	{r3, pc}
2ffed496:	bf00      	nop
2ffed498:	2fff9cdd 	.word	0x2fff9cdd
2ffed49c:	2fffe140 	.word	0x2fffe140

2ffed4a0 <cm_get_context_by_index>:
2ffed4a0:	2901      	cmp	r1, #1
2ffed4a2:	b508      	push	{r3, lr}
2ffed4a4:	d003      	beq.n	2ffed4ae <cm_get_context_by_index+0xe>
2ffed4a6:	4804      	ldr	r0, [pc, #16]	; (2ffed4b8 <cm_get_context_by_index+0x18>)
2ffed4a8:	2157      	movs	r1, #87	; 0x57
2ffed4aa:	f00c fa1f 	bl	2fff98ec <__assert>
2ffed4ae:	4b03      	ldr	r3, [pc, #12]	; (2ffed4bc <cm_get_context_by_index+0x1c>)
2ffed4b0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffed4b4:	bd08      	pop	{r3, pc}
2ffed4b6:	bf00      	nop
2ffed4b8:	2fff9cdd 	.word	0x2fff9cdd
2ffed4bc:	2fffe140 	.word	0x2fffe140

2ffed4c0 <cm_set_context_by_index>:
2ffed4c0:	2a01      	cmp	r2, #1
2ffed4c2:	b508      	push	{r3, lr}
2ffed4c4:	d003      	beq.n	2ffed4ce <cm_set_context_by_index+0xe>
2ffed4c6:	4804      	ldr	r0, [pc, #16]	; (2ffed4d8 <cm_set_context_by_index+0x18>)
2ffed4c8:	2162      	movs	r1, #98	; 0x62
2ffed4ca:	f00c fa0f 	bl	2fff98ec <__assert>
2ffed4ce:	4b03      	ldr	r3, [pc, #12]	; (2ffed4dc <cm_set_context_by_index+0x1c>)
2ffed4d0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
2ffed4d4:	bd08      	pop	{r3, pc}
2ffed4d6:	bf00      	nop
2ffed4d8:	2fff9cdd 	.word	0x2fff9cdd
2ffed4dc:	2fffe140 	.word	0x2fffe140

2ffed4e0 <get_arm_std_svc_args>:
2ffed4e0:	b508      	push	{r3, lr}
2ffed4e2:	f64f 73e0 	movw	r3, #65504	; 0xffe0
2ffed4e6:	4298      	cmp	r0, r3
2ffed4e8:	d003      	beq.n	2ffed4f2 <get_arm_std_svc_args+0x12>
2ffed4ea:	4803      	ldr	r0, [pc, #12]	; (2ffed4f8 <get_arm_std_svc_args+0x18>)
2ffed4ec:	219f      	movs	r1, #159	; 0x9f
2ffed4ee:	f00c f9fd 	bl	2fff98ec <__assert>
2ffed4f2:	4802      	ldr	r0, [pc, #8]	; (2ffed4fc <get_arm_std_svc_args+0x1c>)
2ffed4f4:	bd08      	pop	{r3, pc}
2ffed4f6:	bf00      	nop
2ffed4f8:	2fff9cdd 	.word	0x2fff9cdd
2ffed4fc:	2fff9d58 	.word	0x2fff9d58

2ffed500 <sp_min_main>:
2ffed500:	b538      	push	{r3, r4, r5, lr}
2ffed502:	492c      	ldr	r1, [pc, #176]	; (2ffed5b4 <sp_min_main+0xb4>)
2ffed504:	482c      	ldr	r0, [pc, #176]	; (2ffed5b8 <sp_min_main+0xb8>)
2ffed506:	f005 f9ad 	bl	2fff2864 <tf_log>
2ffed50a:	492c      	ldr	r1, [pc, #176]	; (2ffed5bc <sp_min_main+0xbc>)
2ffed50c:	482a      	ldr	r0, [pc, #168]	; (2ffed5b8 <sp_min_main+0xb8>)
2ffed50e:	f005 f9a9 	bl	2fff2864 <tf_log>
2ffed512:	f002 fdaf 	bl	2fff0074 <sp_min_platform_setup>
2ffed516:	482a      	ldr	r0, [pc, #168]	; (2ffed5c0 <sp_min_main+0xc0>)
2ffed518:	f005 f9a4 	bl	2fff2864 <tf_log>
2ffed51c:	f000 f8ce 	bl	2ffed6bc <runtime_svc_init>
2ffed520:	2001      	movs	r0, #1
2ffed522:	f7ff ffab 	bl	2ffed47c <cm_get_context>
2ffed526:	4605      	mov	r5, r0
2ffed528:	f002 fcde 	bl	2ffefee8 <sp_min_plat_get_bl33_ep_info>
2ffed52c:	4604      	mov	r4, r0
2ffed52e:	b918      	cbnz	r0, 2ffed538 <sp_min_main+0x38>
2ffed530:	217e      	movs	r1, #126	; 0x7e
2ffed532:	4824      	ldr	r0, [pc, #144]	; (2ffed5c4 <sp_min_main+0xc4>)
2ffed534:	f00c f9da 	bl	2fff98ec <__assert>
2ffed538:	6843      	ldr	r3, [r0, #4]
2ffed53a:	07db      	lsls	r3, r3, #31
2ffed53c:	d401      	bmi.n	2ffed542 <sp_min_main+0x42>
2ffed53e:	217f      	movs	r1, #127	; 0x7f
2ffed540:	e7f7      	b.n	2ffed532 <sp_min_main+0x32>
2ffed542:	4821      	ldr	r0, [pc, #132]	; (2ffed5c8 <sp_min_main+0xc8>)
2ffed544:	f005 f98e 	bl	2fff2864 <tf_log>
2ffed548:	4620      	mov	r0, r4
2ffed54a:	f001 fa31 	bl	2ffee9b0 <psci_prepare_next_non_secure_ctx>
2ffed54e:	2001      	movs	r0, #1
2ffed550:	f7ff ff94 	bl	2ffed47c <cm_get_context>
2ffed554:	4604      	mov	r4, r0
2ffed556:	f00b ed14 	blx	2fff8f80 <plat_my_core_pos>
2ffed55a:	491c      	ldr	r1, [pc, #112]	; (2ffed5cc <sp_min_main+0xcc>)
2ffed55c:	2290      	movs	r2, #144	; 0x90
2ffed55e:	4342      	muls	r2, r0
2ffed560:	6820      	ldr	r0, [r4, #0]
2ffed562:	188b      	adds	r3, r1, r2
2ffed564:	5088      	str	r0, [r1, r2]
2ffed566:	6862      	ldr	r2, [r4, #4]
2ffed568:	605a      	str	r2, [r3, #4]
2ffed56a:	68a2      	ldr	r2, [r4, #8]
2ffed56c:	609a      	str	r2, [r3, #8]
2ffed56e:	6922      	ldr	r2, [r4, #16]
2ffed570:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
2ffed574:	69a2      	ldr	r2, [r4, #24]
2ffed576:	679a      	str	r2, [r3, #120]	; 0x78
2ffed578:	6962      	ldr	r2, [r4, #20]
2ffed57a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
2ffed57e:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed582:	f043 0301 	orr.w	r3, r3, #1
2ffed586:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed58a:	f3bf 8f6f 	isb	sy
2ffed58e:	69eb      	ldr	r3, [r5, #28]
2ffed590:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2ffed594:	f3bf 8f6f 	isb	sy
2ffed598:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed59c:	f023 0301 	bic.w	r3, r3, #1
2ffed5a0:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed5a4:	f3bf 8f6f 	isb	sy
2ffed5a8:	f000 f8f4 	bl	2ffed794 <sp_min_plat_runtime_setup>
2ffed5ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffed5b0:	f005 b9fc 	b.w	2fff29ac <console_flush>
2ffed5b4:	2fff9cbe 	.word	0x2fff9cbe
2ffed5b8:	2fff9cf7 	.word	0x2fff9cf7
2ffed5bc:	2fff9ca0 	.word	0x2fff9ca0
2ffed5c0:	2fff9d04 	.word	0x2fff9d04
2ffed5c4:	2fff9cdd 	.word	0x2fff9cdd
2ffed5c8:	2fff9d2c 	.word	0x2fff9d2c
2ffed5cc:	2fffe148 	.word	0x2fffe148

2ffed5d0 <sp_min_warm_boot>:
2ffed5d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffed5d2:	2001      	movs	r0, #1
2ffed5d4:	4f1a      	ldr	r7, [pc, #104]	; (2ffed640 <sp_min_warm_boot+0x70>)
2ffed5d6:	f7ff ff51 	bl	2ffed47c <cm_get_context>
2ffed5da:	4606      	mov	r6, r0
2ffed5dc:	f000 fe0a 	bl	2ffee1f4 <psci_warmboot_entrypoint>
2ffed5e0:	f00b ecce 	blx	2fff8f80 <plat_my_core_pos>
2ffed5e4:	2190      	movs	r1, #144	; 0x90
2ffed5e6:	fb01 f500 	mul.w	r5, r1, r0
2ffed5ea:	197c      	adds	r4, r7, r5
2ffed5ec:	4620      	mov	r0, r4
2ffed5ee:	f00b ea9a 	blx	2fff8b24 <zero_normalmem>
2ffed5f2:	2001      	movs	r0, #1
2ffed5f4:	f7ff ff42 	bl	2ffed47c <cm_get_context>
2ffed5f8:	6803      	ldr	r3, [r0, #0]
2ffed5fa:	517b      	str	r3, [r7, r5]
2ffed5fc:	6843      	ldr	r3, [r0, #4]
2ffed5fe:	6063      	str	r3, [r4, #4]
2ffed600:	6883      	ldr	r3, [r0, #8]
2ffed602:	60a3      	str	r3, [r4, #8]
2ffed604:	6903      	ldr	r3, [r0, #16]
2ffed606:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
2ffed60a:	6983      	ldr	r3, [r0, #24]
2ffed60c:	67a3      	str	r3, [r4, #120]	; 0x78
2ffed60e:	6943      	ldr	r3, [r0, #20]
2ffed610:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
2ffed614:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed618:	f043 0301 	orr.w	r3, r3, #1
2ffed61c:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed620:	f3bf 8f6f 	isb	sy
2ffed624:	69f3      	ldr	r3, [r6, #28]
2ffed626:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2ffed62a:	f3bf 8f6f 	isb	sy
2ffed62e:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed632:	f023 0301 	bic.w	r3, r3, #1
2ffed636:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed63a:	f3bf 8f6f 	isb	sy
2ffed63e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffed640:	2fffe148 	.word	0x2fffe148

2ffed644 <sp_min_fiq>:
2ffed644:	b510      	push	{r4, lr}
2ffed646:	f003 ff59 	bl	2fff14fc <plat_ic_acknowledge_interrupt>
2ffed64a:	4604      	mov	r4, r0
2ffed64c:	f002 fbe4 	bl	2ffefe18 <sp_min_plat_fiq_handler>
2ffed650:	4620      	mov	r0, r4
2ffed652:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed656:	f003 bf53 	b.w	2fff1500 <plat_ic_end_of_interrupt>
	...

2ffed65c <handle_runtime_svc>:
2ffed65c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffed65e:	4614      	mov	r4, r2
2ffed660:	b91a      	cbnz	r2, 2ffed66a <handle_runtime_svc+0xe>
2ffed662:	4812      	ldr	r0, [pc, #72]	; (2ffed6ac <handle_runtime_svc+0x50>)
2ffed664:	212a      	movs	r1, #42	; 0x2a
2ffed666:	f00c f941 	bl	2fff98ec <__assert>
2ffed66a:	0fc5      	lsrs	r5, r0, #31
2ffed66c:	f3c0 6205 	ubfx	r2, r0, #24, #6
2ffed670:	ea42 1585 	orr.w	r5, r2, r5, lsl #6
2ffed674:	4a0e      	ldr	r2, [pc, #56]	; (2ffed6b0 <handle_runtime_svc+0x54>)
2ffed676:	5d56      	ldrb	r6, [r2, r5]
2ffed678:	4a0e      	ldr	r2, [pc, #56]	; (2ffed6b4 <handle_runtime_svc+0x58>)
2ffed67a:	4d0f      	ldr	r5, [pc, #60]	; (2ffed6b8 <handle_runtime_svc+0x5c>)
2ffed67c:	1aad      	subs	r5, r5, r2
2ffed67e:	ebb6 1f15 	cmp.w	r6, r5, lsr #4
2ffed682:	d305      	bcc.n	2ffed690 <handle_runtime_svc+0x34>
2ffed684:	4620      	mov	r0, r4
2ffed686:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffed68a:	6023      	str	r3, [r4, #0]
2ffed68c:	b004      	add	sp, #16
2ffed68e:	bd70      	pop	{r4, r5, r6, pc}
2ffed690:	9303      	str	r3, [sp, #12]
2ffed692:	9402      	str	r4, [sp, #8]
2ffed694:	9101      	str	r1, [sp, #4]
2ffed696:	eb02 1206 	add.w	r2, r2, r6, lsl #4
2ffed69a:	6923      	ldr	r3, [r4, #16]
2ffed69c:	9300      	str	r3, [sp, #0]
2ffed69e:	68d5      	ldr	r5, [r2, #12]
2ffed6a0:	6861      	ldr	r1, [r4, #4]
2ffed6a2:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
2ffed6a6:	47a8      	blx	r5
2ffed6a8:	e7f0      	b.n	2ffed68c <handle_runtime_svc+0x30>
2ffed6aa:	bf00      	nop
2ffed6ac:	2fff9d64 	.word	0x2fff9d64
2ffed6b0:	2fffe268 	.word	0x2fffe268
2ffed6b4:	2fffc534 	.word	0x2fffc534
2ffed6b8:	2fffc554 	.word	0x2fffc554

2ffed6bc <runtime_svc_init>:
2ffed6bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed6c0:	4c2e      	ldr	r4, [pc, #184]	; (2ffed77c <runtime_svc_init+0xc0>)
2ffed6c2:	f8df 80bc 	ldr.w	r8, [pc, #188]	; 2ffed780 <runtime_svc_init+0xc4>
2ffed6c6:	4544      	cmp	r4, r8
2ffed6c8:	d304      	bcc.n	2ffed6d4 <runtime_svc_init+0x18>
2ffed6ca:	eba4 0408 	sub.w	r4, r4, r8
2ffed6ce:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
2ffed6d2:	d303      	bcc.n	2ffed6dc <runtime_svc_init+0x20>
2ffed6d4:	2161      	movs	r1, #97	; 0x61
2ffed6d6:	482b      	ldr	r0, [pc, #172]	; (2ffed784 <runtime_svc_init+0xc8>)
2ffed6d8:	f00c f908 	bl	2fff98ec <__assert>
2ffed6dc:	2c0f      	cmp	r4, #15
2ffed6de:	d90e      	bls.n	2ffed6fe <runtime_svc_init+0x42>
2ffed6e0:	4829      	ldr	r0, [pc, #164]	; (2ffed788 <runtime_svc_init+0xcc>)
2ffed6e2:	2280      	movs	r2, #128	; 0x80
2ffed6e4:	4e28      	ldr	r6, [pc, #160]	; (2ffed788 <runtime_svc_init+0xcc>)
2ffed6e6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffed6ea:	0924      	lsrs	r4, r4, #4
2ffed6ec:	f04f 0900 	mov.w	r9, #0
2ffed6f0:	4f26      	ldr	r7, [pc, #152]	; (2ffed78c <runtime_svc_init+0xd0>)
2ffed6f2:	f00c f944 	bl	2fff997e <memset>
2ffed6f6:	fa5f fa89 	uxtb.w	sl, r9
2ffed6fa:	4554      	cmp	r4, sl
2ffed6fc:	d801      	bhi.n	2ffed702 <runtime_svc_init+0x46>
2ffed6fe:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffed702:	ea4f 1b0a 	mov.w	fp, sl, lsl #4
2ffed706:	eb08 150a 	add.w	r5, r8, sl, lsl #4
2ffed70a:	f818 200b 	ldrb.w	r2, [r8, fp]
2ffed70e:	786b      	ldrb	r3, [r5, #1]
2ffed710:	429a      	cmp	r2, r3
2ffed712:	d808      	bhi.n	2ffed726 <runtime_svc_init+0x6a>
2ffed714:	2b3f      	cmp	r3, #63	; 0x3f
2ffed716:	d806      	bhi.n	2ffed726 <runtime_svc_init+0x6a>
2ffed718:	78ab      	ldrb	r3, [r5, #2]
2ffed71a:	2b01      	cmp	r3, #1
2ffed71c:	d803      	bhi.n	2ffed726 <runtime_svc_init+0x6a>
2ffed71e:	68ab      	ldr	r3, [r5, #8]
2ffed720:	b94b      	cbnz	r3, 2ffed736 <runtime_svc_init+0x7a>
2ffed722:	68eb      	ldr	r3, [r5, #12]
2ffed724:	b983      	cbnz	r3, 2ffed748 <runtime_svc_init+0x8c>
2ffed726:	481a      	ldr	r0, [pc, #104]	; (2ffed790 <runtime_svc_init+0xd4>)
2ffed728:	4629      	mov	r1, r5
2ffed72a:	f005 f89b 	bl	2fff2864 <tf_log>
2ffed72e:	f005 f93d 	bl	2fff29ac <console_flush>
2ffed732:	f00b e8a2 	blx	2fff8878 <do_panic>
2ffed736:	4798      	blx	r3
2ffed738:	b130      	cbz	r0, 2ffed748 <runtime_svc_init+0x8c>
2ffed73a:	6869      	ldr	r1, [r5, #4]
2ffed73c:	4638      	mov	r0, r7
2ffed73e:	f005 f891 	bl	2fff2864 <tf_log>
2ffed742:	f109 0901 	add.w	r9, r9, #1
2ffed746:	e7d6      	b.n	2ffed6f6 <runtime_svc_init+0x3a>
2ffed748:	78ab      	ldrb	r3, [r5, #2]
2ffed74a:	f818 100b 	ldrb.w	r1, [r8, fp]
2ffed74e:	786a      	ldrb	r2, [r5, #1]
2ffed750:	019b      	lsls	r3, r3, #6
2ffed752:	f001 013f 	and.w	r1, r1, #63	; 0x3f
2ffed756:	f003 0340 	and.w	r3, r3, #64	; 0x40
2ffed75a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
2ffed75e:	ea41 0003 	orr.w	r0, r1, r3
2ffed762:	431a      	orrs	r2, r3
2ffed764:	4290      	cmp	r0, r2
2ffed766:	d901      	bls.n	2ffed76c <runtime_svc_init+0xb0>
2ffed768:	2195      	movs	r1, #149	; 0x95
2ffed76a:	e7b4      	b.n	2ffed6d6 <runtime_svc_init+0x1a>
2ffed76c:	f800 a006 	strb.w	sl, [r0, r6]
2ffed770:	3001      	adds	r0, #1
2ffed772:	b2c3      	uxtb	r3, r0
2ffed774:	429a      	cmp	r2, r3
2ffed776:	d2f9      	bcs.n	2ffed76c <runtime_svc_init+0xb0>
2ffed778:	e7e3      	b.n	2ffed742 <runtime_svc_init+0x86>
2ffed77a:	bf00      	nop
2ffed77c:	2fffc554 	.word	0x2fffc554
2ffed780:	2fffc534 	.word	0x2fffc534
2ffed784:	2fff9d64 	.word	0x2fff9d64
2ffed788:	2fffe268 	.word	0x2fffe268
2ffed78c:	2fff9da1 	.word	0x2fff9da1
2ffed790:	2fff9d79 	.word	0x2fff9d79

2ffed794 <sp_min_plat_runtime_setup>:
2ffed794:	2002      	movs	r0, #2
2ffed796:	f005 b8c9 	b.w	2fff292c <console_switch_state>
	...

2ffed79c <std_svc_smc_handler>:
2ffed79c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffed79e:	f64f 76e0 	movw	r6, #65504	; 0xffe0
2ffed7a2:	4230      	tst	r0, r6
2ffed7a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
2ffed7a6:	d10c      	bne.n	2ffed7c2 <std_svc_smc_handler+0x26>
2ffed7a8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
2ffed7aa:	9402      	str	r4, [sp, #8]
2ffed7ac:	9503      	str	r5, [sp, #12]
2ffed7ae:	9d09      	ldr	r5, [sp, #36]	; 0x24
2ffed7b0:	9501      	str	r5, [sp, #4]
2ffed7b2:	9d08      	ldr	r5, [sp, #32]
2ffed7b4:	9500      	str	r5, [sp, #0]
2ffed7b6:	f000 ff4b 	bl	2ffee650 <psci_smc_handler>
2ffed7ba:	6020      	str	r0, [r4, #0]
2ffed7bc:	4620      	mov	r0, r4
2ffed7be:	b004      	add	sp, #16
2ffed7c0:	bd70      	pop	{r4, r5, r6, pc}
2ffed7c2:	4b0f      	ldr	r3, [pc, #60]	; (2ffed800 <std_svc_smc_handler+0x64>)
2ffed7c4:	4298      	cmp	r0, r3
2ffed7c6:	d008      	beq.n	2ffed7da <std_svc_smc_handler+0x3e>
2ffed7c8:	3302      	adds	r3, #2
2ffed7ca:	4298      	cmp	r0, r3
2ffed7cc:	d00d      	beq.n	2ffed7ea <std_svc_smc_handler+0x4e>
2ffed7ce:	3b03      	subs	r3, #3
2ffed7d0:	4298      	cmp	r0, r3
2ffed7d2:	d10e      	bne.n	2ffed7f2 <std_svc_smc_handler+0x56>
2ffed7d4:	2312      	movs	r3, #18
2ffed7d6:	6023      	str	r3, [r4, #0]
2ffed7d8:	e7f0      	b.n	2ffed7bc <std_svc_smc_handler+0x20>
2ffed7da:	4b0a      	ldr	r3, [pc, #40]	; (2ffed804 <std_svc_smc_handler+0x68>)
2ffed7dc:	4a0a      	ldr	r2, [pc, #40]	; (2ffed808 <std_svc_smc_handler+0x6c>)
2ffed7de:	e9c4 3202 	strd	r3, r2, [r4, #8]
2ffed7e2:	4b0a      	ldr	r3, [pc, #40]	; (2ffed80c <std_svc_smc_handler+0x70>)
2ffed7e4:	6063      	str	r3, [r4, #4]
2ffed7e6:	4b0a      	ldr	r3, [pc, #40]	; (2ffed810 <std_svc_smc_handler+0x74>)
2ffed7e8:	e7f5      	b.n	2ffed7d6 <std_svc_smc_handler+0x3a>
2ffed7ea:	2301      	movs	r3, #1
2ffed7ec:	6063      	str	r3, [r4, #4]
2ffed7ee:	2300      	movs	r3, #0
2ffed7f0:	e7f1      	b.n	2ffed7d6 <std_svc_smc_handler+0x3a>
2ffed7f2:	4601      	mov	r1, r0
2ffed7f4:	4807      	ldr	r0, [pc, #28]	; (2ffed814 <std_svc_smc_handler+0x78>)
2ffed7f6:	f005 f835 	bl	2fff2864 <tf_log>
2ffed7fa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffed7fe:	e7ea      	b.n	2ffed7d6 <std_svc_smc_handler+0x3a>
2ffed800:	8400ff01 	.word	0x8400ff01
2ffed804:	fbc02dae 	.word	0xfbc02dae
2ffed808:	e2f64156 	.word	0xe2f64156
2ffed80c:	47e8f863 	.word	0x47e8f863
2ffed810:	108d905b 	.word	0x108d905b
2ffed814:	2fff9dc9 	.word	0x2fff9dc9

2ffed818 <std_svc_setup>:
2ffed818:	b508      	push	{r3, lr}
2ffed81a:	f64f 70e0 	movw	r0, #65504	; 0xffe0
2ffed81e:	f7ff fe5f 	bl	2ffed4e0 <get_arm_std_svc_args>
2ffed822:	b918      	cbnz	r0, 2ffed82c <std_svc_setup+0x14>
2ffed824:	4804      	ldr	r0, [pc, #16]	; (2ffed838 <std_svc_setup+0x20>)
2ffed826:	2126      	movs	r1, #38	; 0x26
2ffed828:	f00c f860 	bl	2fff98ec <__assert>
2ffed82c:	f000 ffb6 	bl	2ffee79c <psci_setup>
2ffed830:	3800      	subs	r0, #0
2ffed832:	bf18      	it	ne
2ffed834:	2001      	movne	r0, #1
2ffed836:	bd08      	pop	{r3, pc}
2ffed838:	2fff9df6 	.word	0x2fff9df6

2ffed83c <cm_setup_context>:
2ffed83c:	b570      	push	{r4, r5, r6, lr}
2ffed83e:	460d      	mov	r5, r1
2ffed840:	4604      	mov	r4, r0
2ffed842:	b918      	cbnz	r0, 2ffed84c <cm_setup_context+0x10>
2ffed844:	213e      	movs	r1, #62	; 0x3e
2ffed846:	481a      	ldr	r0, [pc, #104]	; (2ffed8b0 <cm_setup_context+0x74>)
2ffed848:	f00c f850 	bl	2fff98ec <__assert>
2ffed84c:	684b      	ldr	r3, [r1, #4]
2ffed84e:	2120      	movs	r1, #32
2ffed850:	f003 0601 	and.w	r6, r3, #1
2ffed854:	f00b e966 	blx	2fff8b24 <zero_normalmem>
2ffed858:	ee11 2f11 	mrc	15, 0, r2, cr1, cr1, {0}
2ffed85c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
2ffed860:	f022 0201 	bic.w	r2, r2, #1
2ffed864:	68e9      	ldr	r1, [r5, #12]
2ffed866:	b18e      	cbz	r6, 2ffed88c <cm_setup_context+0x50>
2ffed868:	686b      	ldr	r3, [r5, #4]
2ffed86a:	f042 0201 	orr.w	r2, r2, #1
2ffed86e:	0858      	lsrs	r0, r3, #1
2ffed870:	ea80 2051 	eor.w	r0, r0, r1, lsr #9
2ffed874:	07c0      	lsls	r0, r0, #31
2ffed876:	d501      	bpl.n	2ffed87c <cm_setup_context+0x40>
2ffed878:	2163      	movs	r1, #99	; 0x63
2ffed87a:	e7e4      	b.n	2ffed846 <cm_setup_context+0xa>
2ffed87c:	061b      	lsls	r3, r3, #24
2ffed87e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
2ffed882:	f443 0345 	orr.w	r3, r3, #12910592	; 0xc50000
2ffed886:	f043 0338 	orr.w	r3, r3, #56	; 0x38
2ffed88a:	61e3      	str	r3, [r4, #28]
2ffed88c:	f001 031f 	and.w	r3, r1, #31
2ffed890:	4620      	mov	r0, r4
2ffed892:	2b1a      	cmp	r3, #26
2ffed894:	68ab      	ldr	r3, [r5, #8]
2ffed896:	bf08      	it	eq
2ffed898:	f442 7280 	orreq.w	r2, r2, #256	; 0x100
2ffed89c:	6162      	str	r2, [r4, #20]
2ffed89e:	2210      	movs	r2, #16
2ffed8a0:	61a1      	str	r1, [r4, #24]
2ffed8a2:	f105 0114 	add.w	r1, r5, #20
2ffed8a6:	6123      	str	r3, [r4, #16]
2ffed8a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffed8ac:	f00c b846 	b.w	2fff993c <memcpy>
2ffed8b0:	2fff9e1f 	.word	0x2fff9e1f

2ffed8b4 <cm_init_context_by_index>:
2ffed8b4:	b510      	push	{r4, lr}
2ffed8b6:	460c      	mov	r4, r1
2ffed8b8:	6849      	ldr	r1, [r1, #4]
2ffed8ba:	f001 0101 	and.w	r1, r1, #1
2ffed8be:	f7ff fdef 	bl	2ffed4a0 <cm_get_context_by_index>
2ffed8c2:	4621      	mov	r1, r4
2ffed8c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed8c8:	f7ff bfb8 	b.w	2ffed83c <cm_setup_context>

2ffed8cc <cm_init_my_context>:
2ffed8cc:	b510      	push	{r4, lr}
2ffed8ce:	4604      	mov	r4, r0
2ffed8d0:	6840      	ldr	r0, [r0, #4]
2ffed8d2:	f000 0001 	and.w	r0, r0, #1
2ffed8d6:	f7ff fdd1 	bl	2ffed47c <cm_get_context>
2ffed8da:	4621      	mov	r1, r4
2ffed8dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed8e0:	f7ff bfac 	b.w	2ffed83c <cm_setup_context>

2ffed8e4 <cm_prepare_el3_exit>:
2ffed8e4:	b510      	push	{r4, lr}
2ffed8e6:	4604      	mov	r4, r0
2ffed8e8:	f7ff fdc8 	bl	2ffed47c <cm_get_context>
2ffed8ec:	b918      	cbnz	r0, 2ffed8f6 <cm_prepare_el3_exit+0x12>
2ffed8ee:	4828      	ldr	r0, [pc, #160]	; (2ffed990 <cm_prepare_el3_exit+0xac>)
2ffed8f0:	21b7      	movs	r1, #183	; 0xb7
2ffed8f2:	f00b fffb 	bl	2fff98ec <__assert>
2ffed8f6:	2c01      	cmp	r4, #1
2ffed8f8:	d11a      	bne.n	2ffed930 <cm_prepare_el3_exit+0x4c>
2ffed8fa:	6943      	ldr	r3, [r0, #20]
2ffed8fc:	f413 7380 	ands.w	r3, r3, #256	; 0x100
2ffed900:	d017      	beq.n	2ffed932 <cm_prepare_el3_exit+0x4e>
2ffed902:	69c2      	ldr	r2, [r0, #28]
2ffed904:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed908:	f043 0301 	orr.w	r3, r3, #1
2ffed90c:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed910:	f3bf 8f6f 	isb	sy
2ffed914:	4b1f      	ldr	r3, [pc, #124]	; (2ffed994 <cm_prepare_el3_exit+0xb0>)
2ffed916:	4313      	orrs	r3, r2
2ffed918:	ee81 3f10 	mcr	15, 4, r3, cr1, cr0, {0}
2ffed91c:	f3bf 8f6f 	isb	sy
2ffed920:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed924:	f023 0301 	bic.w	r3, r3, #1
2ffed928:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed92c:	f3bf 8f6f 	isb	sy
2ffed930:	bd10      	pop	{r4, pc}
2ffed932:	ee10 2f31 	mrc	15, 0, r2, cr0, cr1, {1}
2ffed936:	f412 4f70 	tst.w	r2, #61440	; 0xf000
2ffed93a:	d0f9      	beq.n	2ffed930 <cm_prepare_el3_exit+0x4c>
2ffed93c:	ee11 2f11 	mrc	15, 0, r2, cr1, cr1, {0}
2ffed940:	f042 0201 	orr.w	r2, r2, #1
2ffed944:	ee01 2f11 	mcr	15, 0, r2, cr1, cr1, {0}
2ffed948:	f3bf 8f6f 	isb	sy
2ffed94c:	ee81 3f11 	mcr	15, 4, r3, cr1, cr1, {0}
2ffed950:	f243 32ff 	movw	r2, #13311	; 0x33ff
2ffed954:	ee81 2f51 	mcr	15, 4, r2, cr1, cr1, {2}
2ffed958:	2203      	movs	r2, #3
2ffed95a:	ee8e 2f11 	mcr	15, 4, r2, cr14, cr1, {0}
2ffed95e:	2000      	movs	r0, #0
2ffed960:	2100      	movs	r1, #0
2ffed962:	ec41 0f4e 	mcrr	15, 4, r0, r1, cr14
2ffed966:	ee10 2f10 	mrc	15, 0, r2, cr0, cr0, {0}
2ffed96a:	ee80 2f10 	mcr	15, 4, r2, cr0, cr0, {0}
2ffed96e:	ee10 2fb0 	mrc	15, 0, r2, cr0, cr0, {5}
2ffed972:	ee80 2fb0 	mcr	15, 4, r2, cr0, cr0, {5}
2ffed976:	ec41 0f62 	mcrr	15, 6, r0, r1, cr2
2ffed97a:	ee19 2f1c 	mrc	15, 0, r2, cr9, cr12, {0}
2ffed97e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
2ffed982:	ee81 2f31 	mcr	15, 4, r2, cr1, cr1, {1}
2ffed986:	ee81 3f71 	mcr	15, 4, r3, cr1, cr1, {3}
2ffed98a:	ee8e 3f32 	mcr	15, 4, r3, cr14, cr2, {1}
2ffed98e:	e7c5      	b.n	2ffed91c <cm_prepare_el3_exit+0x38>
2ffed990:	2fff9e1f 	.word	0x2fff9e1f
2ffed994:	30c50818 	.word	0x30c50818

2ffed998 <errata_needs_reporting>:
2ffed998:	680b      	ldr	r3, [r1, #0]
2ffed99a:	b570      	push	{r4, r5, r6, lr}
2ffed99c:	4606      	mov	r6, r0
2ffed99e:	460c      	mov	r4, r1
2ffed9a0:	b96b      	cbnz	r3, 2ffed9be <errata_needs_reporting+0x26>
2ffed9a2:	f00a eee4 	blx	2fff876c <spin_lock>
2ffed9a6:	6823      	ldr	r3, [r4, #0]
2ffed9a8:	4630      	mov	r0, r6
2ffed9aa:	2b00      	cmp	r3, #0
2ffed9ac:	bf03      	ittte	eq
2ffed9ae:	2301      	moveq	r3, #1
2ffed9b0:	2501      	moveq	r5, #1
2ffed9b2:	6023      	streq	r3, [r4, #0]
2ffed9b4:	2500      	movne	r5, #0
2ffed9b6:	f00a eeec 	blx	2fff8790 <spin_unlock>
2ffed9ba:	4628      	mov	r0, r5
2ffed9bc:	bd70      	pop	{r4, r5, r6, pc}
2ffed9be:	2000      	movs	r0, #0
2ffed9c0:	e7fc      	b.n	2ffed9bc <errata_needs_reporting+0x24>
	...

2ffed9c4 <psci_do_cpu_off>:
2ffed9c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffed9c6:	4605      	mov	r5, r0
2ffed9c8:	4e2a      	ldr	r6, [pc, #168]	; (2ffeda74 <psci_do_cpu_off+0xb0>)
2ffed9ca:	f00b eada 	blx	2fff8f80 <plat_my_core_pos>
2ffed9ce:	2400      	movs	r4, #0
2ffed9d0:	6833      	ldr	r3, [r6, #0]
2ffed9d2:	9401      	str	r4, [sp, #4]
2ffed9d4:	689b      	ldr	r3, [r3, #8]
2ffed9d6:	2b00      	cmp	r3, #0
2ffed9d8:	d039      	beq.n	2ffeda4e <psci_do_cpu_off+0x8a>
2ffed9da:	2302      	movs	r3, #2
2ffed9dc:	aa01      	add	r2, sp, #4
2ffed9de:	f88d 3000 	strb.w	r3, [sp]
2ffed9e2:	4629      	mov	r1, r5
2ffed9e4:	f88d 3001 	strb.w	r3, [sp, #1]
2ffed9e8:	f000 fa86 	bl	2ffedef8 <psci_get_parent_pwr_domain_nodes>
2ffed9ec:	a901      	add	r1, sp, #4
2ffed9ee:	4628      	mov	r0, r5
2ffed9f0:	f000 fb78 	bl	2ffee0e4 <psci_acquire_pwr_domain_locks>
2ffed9f4:	4b20      	ldr	r3, [pc, #128]	; (2ffeda78 <psci_do_cpu_off+0xb4>)
2ffed9f6:	681b      	ldr	r3, [r3, #0]
2ffed9f8:	bb6b      	cbnz	r3, 2ffeda56 <psci_do_cpu_off+0x92>
2ffed9fa:	4669      	mov	r1, sp
2ffed9fc:	4628      	mov	r0, r5
2ffed9fe:	2400      	movs	r4, #0
2ffeda00:	f000 fad2 	bl	2ffedfa8 <psci_do_state_coordination>
2ffeda04:	4668      	mov	r0, sp
2ffeda06:	f000 fb2d 	bl	2ffee064 <psci_find_max_off_lvl>
2ffeda0a:	f000 fcad 	bl	2ffee368 <psci_do_pwrdown_sequence>
2ffeda0e:	6833      	ldr	r3, [r6, #0]
2ffeda10:	4668      	mov	r0, sp
2ffeda12:	689b      	ldr	r3, [r3, #8]
2ffeda14:	4798      	blx	r3
2ffeda16:	a901      	add	r1, sp, #4
2ffeda18:	4628      	mov	r0, r5
2ffeda1a:	f000 fb7f 	bl	2ffee11c <psci_release_pwr_domain_locks>
2ffeda1e:	bb2c      	cbnz	r4, 2ffeda6c <psci_do_cpu_off+0xa8>
2ffeda20:	f00a edf8 	blx	2fff8614 <_cpu_data>
2ffeda24:	2104      	movs	r1, #4
2ffeda26:	4408      	add	r0, r1
2ffeda28:	f00a efc2 	blx	2fff89b0 <flush_dcache_range>
2ffeda2c:	f00a edf2 	blx	2fff8614 <_cpu_data>
2ffeda30:	2301      	movs	r3, #1
2ffeda32:	6043      	str	r3, [r0, #4]
2ffeda34:	f3bf 8f4b 	dsb	ish
2ffeda38:	f00a edec 	blx	2fff8614 <_cpu_data>
2ffeda3c:	2104      	movs	r1, #4
2ffeda3e:	4408      	add	r0, r1
2ffeda40:	f00a eff2 	blx	2fff8a28 <inv_dcache_range>
2ffeda44:	6833      	ldr	r3, [r6, #0]
2ffeda46:	6a1b      	ldr	r3, [r3, #32]
2ffeda48:	b173      	cbz	r3, 2ffeda68 <psci_do_cpu_off+0xa4>
2ffeda4a:	4668      	mov	r0, sp
2ffeda4c:	4798      	blx	r3
2ffeda4e:	480b      	ldr	r0, [pc, #44]	; (2ffeda7c <psci_do_cpu_off+0xb8>)
2ffeda50:	2136      	movs	r1, #54	; 0x36
2ffeda52:	f00b ff4b 	bl	2fff98ec <__assert>
2ffeda56:	685b      	ldr	r3, [r3, #4]
2ffeda58:	2b00      	cmp	r3, #0
2ffeda5a:	d0ce      	beq.n	2ffed9fa <psci_do_cpu_off+0x36>
2ffeda5c:	4620      	mov	r0, r4
2ffeda5e:	4798      	blx	r3
2ffeda60:	4604      	mov	r4, r0
2ffeda62:	2800      	cmp	r0, #0
2ffeda64:	d0c9      	beq.n	2ffed9fa <psci_do_cpu_off+0x36>
2ffeda66:	e7d6      	b.n	2ffeda16 <psci_do_cpu_off+0x52>
2ffeda68:	f00a eee0 	blx	2fff882c <psci_power_down_wfi>
2ffeda6c:	4620      	mov	r0, r4
2ffeda6e:	b002      	add	sp, #8
2ffeda70:	bd70      	pop	{r4, r5, r6, pc}
2ffeda72:	bf00      	nop
2ffeda74:	2fffe3b8 	.word	0x2fffe3b8
2ffeda78:	2fffe3c0 	.word	0x2fffe3c0
2ffeda7c:	2fff9e46 	.word	0x2fff9e46

2ffeda80 <psci_cpu_on_start>:
2ffeda80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffeda84:	4605      	mov	r5, r0
2ffeda86:	460f      	mov	r7, r1
2ffeda88:	f003 f9b8 	bl	2fff0dfc <plat_core_pos_by_mpidr>
2ffeda8c:	1e04      	subs	r4, r0, #0
2ffeda8e:	da03      	bge.n	2ffeda98 <psci_cpu_on_start+0x18>
2ffeda90:	2143      	movs	r1, #67	; 0x43
2ffeda92:	4842      	ldr	r0, [pc, #264]	; (2ffedb9c <psci_cpu_on_start+0x11c>)
2ffeda94:	f00b ff2a 	bl	2fff98ec <__assert>
2ffeda98:	b90f      	cbnz	r7, 2ffeda9e <psci_cpu_on_start+0x1e>
2ffeda9a:	2144      	movs	r1, #68	; 0x44
2ffeda9c:	e7f9      	b.n	2ffeda92 <psci_cpu_on_start+0x12>
2ffeda9e:	f8df 8100 	ldr.w	r8, [pc, #256]	; 2ffedba0 <psci_cpu_on_start+0x120>
2ffedaa2:	f8d8 3000 	ldr.w	r3, [r8]
2ffedaa6:	685a      	ldr	r2, [r3, #4]
2ffedaa8:	b10a      	cbz	r2, 2ffedaae <psci_cpu_on_start+0x2e>
2ffedaaa:	695b      	ldr	r3, [r3, #20]
2ffedaac:	b90b      	cbnz	r3, 2ffedab2 <psci_cpu_on_start+0x32>
2ffedaae:	214a      	movs	r1, #74	; 0x4a
2ffedab0:	e7ef      	b.n	2ffeda92 <psci_cpu_on_start+0x12>
2ffedab2:	4e3c      	ldr	r6, [pc, #240]	; (2ffedba4 <psci_cpu_on_start+0x124>)
2ffedab4:	230c      	movs	r3, #12
2ffedab6:	fb03 6604 	mla	r6, r3, r4, r6
2ffedaba:	4630      	mov	r0, r6
2ffedabc:	f00a ee56 	blx	2fff876c <spin_lock>
2ffedac0:	4620      	mov	r0, r4
2ffedac2:	f00a edb0 	blx	2fff8624 <_cpu_data_by_index>
2ffedac6:	2104      	movs	r1, #4
2ffedac8:	4408      	add	r0, r1
2ffedaca:	f00a ef72 	blx	2fff89b0 <flush_dcache_range>
2ffedace:	4620      	mov	r0, r4
2ffedad0:	f00a eda8 	blx	2fff8624 <_cpu_data_by_index>
2ffedad4:	6843      	ldr	r3, [r0, #4]
2ffedad6:	2b00      	cmp	r3, #0
2ffedad8:	d05a      	beq.n	2ffedb90 <psci_cpu_on_start+0x110>
2ffedada:	2b02      	cmp	r3, #2
2ffedadc:	d05b      	beq.n	2ffedb96 <psci_cpu_on_start+0x116>
2ffedade:	2b01      	cmp	r3, #1
2ffedae0:	d001      	beq.n	2ffedae6 <psci_cpu_on_start+0x66>
2ffedae2:	212d      	movs	r1, #45	; 0x2d
2ffedae4:	e7d5      	b.n	2ffeda92 <psci_cpu_on_start+0x12>
2ffedae6:	4b30      	ldr	r3, [pc, #192]	; (2ffedba8 <psci_cpu_on_start+0x128>)
2ffedae8:	681b      	ldr	r3, [r3, #0]
2ffedaea:	b11b      	cbz	r3, 2ffedaf4 <psci_cpu_on_start+0x74>
2ffedaec:	681b      	ldr	r3, [r3, #0]
2ffedaee:	b10b      	cbz	r3, 2ffedaf4 <psci_cpu_on_start+0x74>
2ffedaf0:	4628      	mov	r0, r5
2ffedaf2:	4798      	blx	r3
2ffedaf4:	4620      	mov	r0, r4
2ffedaf6:	f04f 0902 	mov.w	r9, #2
2ffedafa:	f00a ed94 	blx	2fff8624 <_cpu_data_by_index>
2ffedafe:	f8c0 9004 	str.w	r9, [r0, #4]
2ffedb02:	4620      	mov	r0, r4
2ffedb04:	f00a ed8e 	blx	2fff8624 <_cpu_data_by_index>
2ffedb08:	2104      	movs	r1, #4
2ffedb0a:	4408      	add	r0, r1
2ffedb0c:	f00a ef50 	blx	2fff89b0 <flush_dcache_range>
2ffedb10:	4620      	mov	r0, r4
2ffedb12:	f00a ed88 	blx	2fff8624 <_cpu_data_by_index>
2ffedb16:	6843      	ldr	r3, [r0, #4]
2ffedb18:	454b      	cmp	r3, r9
2ffedb1a:	d017      	beq.n	2ffedb4c <psci_cpu_on_start+0xcc>
2ffedb1c:	2b01      	cmp	r3, #1
2ffedb1e:	d001      	beq.n	2ffedb24 <psci_cpu_on_start+0xa4>
2ffedb20:	217f      	movs	r1, #127	; 0x7f
2ffedb22:	e7b6      	b.n	2ffeda92 <psci_cpu_on_start+0x12>
2ffedb24:	4620      	mov	r0, r4
2ffedb26:	f00a ed7e 	blx	2fff8624 <_cpu_data_by_index>
2ffedb2a:	f8c0 9004 	str.w	r9, [r0, #4]
2ffedb2e:	4620      	mov	r0, r4
2ffedb30:	f00a ed78 	blx	2fff8624 <_cpu_data_by_index>
2ffedb34:	2104      	movs	r1, #4
2ffedb36:	4408      	add	r0, r1
2ffedb38:	f00a ef3a 	blx	2fff89b0 <flush_dcache_range>
2ffedb3c:	4620      	mov	r0, r4
2ffedb3e:	f00a ed72 	blx	2fff8624 <_cpu_data_by_index>
2ffedb42:	6843      	ldr	r3, [r0, #4]
2ffedb44:	2b02      	cmp	r3, #2
2ffedb46:	d001      	beq.n	2ffedb4c <psci_cpu_on_start+0xcc>
2ffedb48:	2184      	movs	r1, #132	; 0x84
2ffedb4a:	e7a2      	b.n	2ffeda92 <psci_cpu_on_start+0x12>
2ffedb4c:	f8d8 3000 	ldr.w	r3, [r8]
2ffedb50:	4628      	mov	r0, r5
2ffedb52:	685b      	ldr	r3, [r3, #4]
2ffedb54:	4798      	blx	r3
2ffedb56:	4605      	mov	r5, r0
2ffedb58:	b118      	cbz	r0, 2ffedb62 <psci_cpu_on_start+0xe2>
2ffedb5a:	1d83      	adds	r3, r0, #6
2ffedb5c:	d00b      	beq.n	2ffedb76 <psci_cpu_on_start+0xf6>
2ffedb5e:	2191      	movs	r1, #145	; 0x91
2ffedb60:	e797      	b.n	2ffeda92 <psci_cpu_on_start+0x12>
2ffedb62:	4639      	mov	r1, r7
2ffedb64:	4620      	mov	r0, r4
2ffedb66:	f7ff fea5 	bl	2ffed8b4 <cm_init_context_by_index>
2ffedb6a:	4630      	mov	r0, r6
2ffedb6c:	f00a ee10 	blx	2fff8790 <spin_unlock>
2ffedb70:	4628      	mov	r0, r5
2ffedb72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffedb76:	4620      	mov	r0, r4
2ffedb78:	f00a ed54 	blx	2fff8624 <_cpu_data_by_index>
2ffedb7c:	2301      	movs	r3, #1
2ffedb7e:	6043      	str	r3, [r0, #4]
2ffedb80:	4620      	mov	r0, r4
2ffedb82:	f00a ed50 	blx	2fff8624 <_cpu_data_by_index>
2ffedb86:	2104      	movs	r1, #4
2ffedb88:	4408      	add	r0, r1
2ffedb8a:	f00a ef12 	blx	2fff89b0 <flush_dcache_range>
2ffedb8e:	e7ec      	b.n	2ffedb6a <psci_cpu_on_start+0xea>
2ffedb90:	f06f 0503 	mvn.w	r5, #3
2ffedb94:	e7e9      	b.n	2ffedb6a <psci_cpu_on_start+0xea>
2ffedb96:	f06f 0504 	mvn.w	r5, #4
2ffedb9a:	e7e6      	b.n	2ffedb6a <psci_cpu_on_start+0xea>
2ffedb9c:	2fff9e5a 	.word	0x2fff9e5a
2ffedba0:	2fffe3b8 	.word	0x2fffe3b8
2ffedba4:	2fffe388 	.word	0x2fffe388
2ffedba8:	2fffe3c0 	.word	0x2fffe3c0

2ffedbac <psci_cpu_on_finish>:
2ffedbac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffedbae:	4605      	mov	r5, r0
2ffedbb0:	4e1f      	ldr	r6, [pc, #124]	; (2ffedc30 <psci_cpu_on_finish+0x84>)
2ffedbb2:	4608      	mov	r0, r1
2ffedbb4:	460c      	mov	r4, r1
2ffedbb6:	6833      	ldr	r3, [r6, #0]
2ffedbb8:	695b      	ldr	r3, [r3, #20]
2ffedbba:	4798      	blx	r3
2ffedbbc:	f00a ee00 	blx	2fff87c0 <psci_do_pwrup_cache_maintenance>
2ffedbc0:	6833      	ldr	r3, [r6, #0]
2ffedbc2:	699b      	ldr	r3, [r3, #24]
2ffedbc4:	b10b      	cbz	r3, 2ffedbca <psci_cpu_on_finish+0x1e>
2ffedbc6:	4620      	mov	r0, r4
2ffedbc8:	4798      	blx	r3
2ffedbca:	4e1a      	ldr	r6, [pc, #104]	; (2ffedc34 <psci_cpu_on_finish+0x88>)
2ffedbcc:	240c      	movs	r4, #12
2ffedbce:	436c      	muls	r4, r5
2ffedbd0:	f000 fdd8 	bl	2ffee784 <psci_arch_setup>
2ffedbd4:	3408      	adds	r4, #8
2ffedbd6:	4434      	add	r4, r6
2ffedbd8:	4620      	mov	r0, r4
2ffedbda:	f00a edc8 	blx	2fff876c <spin_lock>
2ffedbde:	4620      	mov	r0, r4
2ffedbe0:	f00a edd6 	blx	2fff8790 <spin_unlock>
2ffedbe4:	f00a ed16 	blx	2fff8614 <_cpu_data>
2ffedbe8:	6843      	ldr	r3, [r0, #4]
2ffedbea:	2b02      	cmp	r3, #2
2ffedbec:	d003      	beq.n	2ffedbf6 <psci_cpu_on_finish+0x4a>
2ffedbee:	4812      	ldr	r0, [pc, #72]	; (2ffedc38 <psci_cpu_on_finish+0x8c>)
2ffedbf0:	21d1      	movs	r1, #209	; 0xd1
2ffedbf2:	f00b fe7b 	bl	2fff98ec <__assert>
2ffedbf6:	4b11      	ldr	r3, [pc, #68]	; (2ffedc3c <psci_cpu_on_finish+0x90>)
2ffedbf8:	681b      	ldr	r3, [r3, #0]
2ffedbfa:	b11b      	cbz	r3, 2ffedc04 <psci_cpu_on_finish+0x58>
2ffedbfc:	68db      	ldr	r3, [r3, #12]
2ffedbfe:	b10b      	cbz	r3, 2ffedc04 <psci_cpu_on_finish+0x58>
2ffedc00:	2000      	movs	r0, #0
2ffedc02:	4798      	blx	r3
2ffedc04:	4c0e      	ldr	r4, [pc, #56]	; (2ffedc40 <psci_cpu_on_finish+0x94>)
2ffedc06:	4f0f      	ldr	r7, [pc, #60]	; (2ffedc44 <psci_cpu_on_finish+0x98>)
2ffedc08:	42bc      	cmp	r4, r7
2ffedc0a:	d30b      	bcc.n	2ffedc24 <psci_cpu_on_finish+0x78>
2ffedc0c:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2ffedc10:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
2ffedc14:	200c      	movs	r0, #12
2ffedc16:	4345      	muls	r5, r0
2ffedc18:	2001      	movs	r0, #1
2ffedc1a:	5173      	str	r3, [r6, r5]
2ffedc1c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2ffedc20:	f7ff be60 	b.w	2ffed8e4 <cm_prepare_el3_exit>
2ffedc24:	f854 3b04 	ldr.w	r3, [r4], #4
2ffedc28:	2000      	movs	r0, #0
2ffedc2a:	4798      	blx	r3
2ffedc2c:	e7ec      	b.n	2ffedc08 <psci_cpu_on_finish+0x5c>
2ffedc2e:	bf00      	nop
2ffedc30:	2fffe3b8 	.word	0x2fffe3b8
2ffedc34:	2fffe380 	.word	0x2fffe380
2ffedc38:	2fff9e5a 	.word	0x2fff9e5a
2ffedc3c:	2fffe3c0 	.word	0x2fffe3c0
2ffedc40:	2fffc570 	.word	0x2fffc570
2ffedc44:	2fffc570 	.word	0x2fffc570

2ffedc48 <psci_cpu_suspend_start>:
2ffedc48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffedc4c:	b085      	sub	sp, #20
2ffedc4e:	4e41      	ldr	r6, [pc, #260]	; (2ffedd54 <psci_cpu_suspend_start+0x10c>)
2ffedc50:	4615      	mov	r5, r2
2ffedc52:	461f      	mov	r7, r3
2ffedc54:	4682      	mov	sl, r0
2ffedc56:	460c      	mov	r4, r1
2ffedc58:	f00b e992 	blx	2fff8f80 <plat_my_core_pos>
2ffedc5c:	2300      	movs	r3, #0
2ffedc5e:	4681      	mov	r9, r0
2ffedc60:	9302      	str	r3, [sp, #8]
2ffedc62:	6833      	ldr	r3, [r6, #0]
2ffedc64:	691a      	ldr	r2, [r3, #16]
2ffedc66:	b10a      	cbz	r2, 2ffedc6c <psci_cpu_suspend_start+0x24>
2ffedc68:	69db      	ldr	r3, [r3, #28]
2ffedc6a:	b91b      	cbnz	r3, 2ffedc74 <psci_cpu_suspend_start+0x2c>
2ffedc6c:	483a      	ldr	r0, [pc, #232]	; (2ffedd58 <psci_cpu_suspend_start+0x110>)
2ffedc6e:	21a7      	movs	r1, #167	; 0xa7
2ffedc70:	f00b fe3c 	bl	2fff98ec <__assert>
2ffedc74:	aa02      	add	r2, sp, #8
2ffedc76:	4621      	mov	r1, r4
2ffedc78:	f000 f93e 	bl	2ffedef8 <psci_get_parent_pwr_domain_nodes>
2ffedc7c:	a902      	add	r1, sp, #8
2ffedc7e:	4620      	mov	r0, r4
2ffedc80:	f000 fa30 	bl	2ffee0e4 <psci_acquire_pwr_domain_locks>
2ffedc84:	ee1c 3f11 	mrc	15, 0, r3, cr12, cr1, {0}
2ffedc88:	2b00      	cmp	r3, #0
2ffedc8a:	d140      	bne.n	2ffedd0e <psci_cpu_suspend_start+0xc6>
2ffedc8c:	4629      	mov	r1, r5
2ffedc8e:	4620      	mov	r0, r4
2ffedc90:	f000 f98a 	bl	2ffedfa8 <psci_do_state_coordination>
2ffedc94:	b31f      	cbz	r7, 2ffedcde <psci_cpu_suspend_start+0x96>
2ffedc96:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 2ffedd5c <psci_cpu_suspend_start+0x114>
2ffedc9a:	4628      	mov	r0, r5
2ffedc9c:	f000 f9e2 	bl	2ffee064 <psci_find_max_off_lvl>
2ffedca0:	4680      	mov	r8, r0
2ffedca2:	4b2f      	ldr	r3, [pc, #188]	; (2ffedd60 <psci_cpu_suspend_start+0x118>)
2ffedca4:	459b      	cmp	fp, r3
2ffedca6:	d32d      	bcc.n	2ffedd04 <psci_cpu_suspend_start+0xbc>
2ffedca8:	f00a ecb4 	blx	2fff8614 <_cpu_data>
2ffedcac:	6084      	str	r4, [r0, #8]
2ffedcae:	f00a ecb2 	blx	2fff8614 <_cpu_data>
2ffedcb2:	3008      	adds	r0, #8
2ffedcb4:	2104      	movs	r1, #4
2ffedcb6:	f00a ee7c 	blx	2fff89b0 <flush_dcache_range>
2ffedcba:	4b2a      	ldr	r3, [pc, #168]	; (2ffedd64 <psci_cpu_suspend_start+0x11c>)
2ffedcbc:	681b      	ldr	r3, [r3, #0]
2ffedcbe:	b11b      	cbz	r3, 2ffedcc8 <psci_cpu_suspend_start+0x80>
2ffedcc0:	689b      	ldr	r3, [r3, #8]
2ffedcc2:	b10b      	cbz	r3, 2ffedcc8 <psci_cpu_suspend_start+0x80>
2ffedcc4:	4640      	mov	r0, r8
2ffedcc6:	4798      	blx	r3
2ffedcc8:	6833      	ldr	r3, [r6, #0]
2ffedcca:	68db      	ldr	r3, [r3, #12]
2ffedccc:	b10b      	cbz	r3, 2ffedcd2 <psci_cpu_suspend_start+0x8a>
2ffedcce:	4628      	mov	r0, r5
2ffedcd0:	4798      	blx	r3
2ffedcd2:	4650      	mov	r0, sl
2ffedcd4:	f7ff fdfa 	bl	2ffed8cc <cm_init_my_context>
2ffedcd8:	4640      	mov	r0, r8
2ffedcda:	f000 fb45 	bl	2ffee368 <psci_do_pwrdown_sequence>
2ffedcde:	6833      	ldr	r3, [r6, #0]
2ffedce0:	4628      	mov	r0, r5
2ffedce2:	f04f 0800 	mov.w	r8, #0
2ffedce6:	691b      	ldr	r3, [r3, #16]
2ffedce8:	4798      	blx	r3
2ffedcea:	a902      	add	r1, sp, #8
2ffedcec:	4620      	mov	r0, r4
2ffedcee:	f000 fa15 	bl	2ffee11c <psci_release_pwr_domain_locks>
2ffedcf2:	f1b8 0f00 	cmp.w	r8, #0
2ffedcf6:	d129      	bne.n	2ffedd4c <psci_cpu_suspend_start+0x104>
2ffedcf8:	b177      	cbz	r7, 2ffedd18 <psci_cpu_suspend_start+0xd0>
2ffedcfa:	6833      	ldr	r3, [r6, #0]
2ffedcfc:	6a1b      	ldr	r3, [r3, #32]
2ffedcfe:	b14b      	cbz	r3, 2ffedd14 <psci_cpu_suspend_start+0xcc>
2ffedd00:	4628      	mov	r0, r5
2ffedd02:	4798      	blx	r3
2ffedd04:	f85b 2b04 	ldr.w	r2, [fp], #4
2ffedd08:	2000      	movs	r0, #0
2ffedd0a:	4790      	blx	r2
2ffedd0c:	e7c9      	b.n	2ffedca2 <psci_cpu_suspend_start+0x5a>
2ffedd0e:	f04f 0801 	mov.w	r8, #1
2ffedd12:	e7ea      	b.n	2ffedcea <psci_cpu_suspend_start+0xa2>
2ffedd14:	f00a ed8a 	blx	2fff882c <psci_power_down_wfi>
2ffedd18:	bf30      	wfi
2ffedd1a:	9703      	str	r7, [sp, #12]
2ffedd1c:	aa03      	add	r2, sp, #12
2ffedd1e:	4621      	mov	r1, r4
2ffedd20:	4648      	mov	r0, r9
2ffedd22:	f000 f8e9 	bl	2ffedef8 <psci_get_parent_pwr_domain_nodes>
2ffedd26:	a903      	add	r1, sp, #12
2ffedd28:	4620      	mov	r0, r4
2ffedd2a:	f000 f9db 	bl	2ffee0e4 <psci_acquire_pwr_domain_locks>
2ffedd2e:	a901      	add	r1, sp, #4
2ffedd30:	4620      	mov	r0, r4
2ffedd32:	f000 f8b7 	bl	2ffedea4 <psci_get_target_local_pwr_states>
2ffedd36:	6833      	ldr	r3, [r6, #0]
2ffedd38:	a801      	add	r0, sp, #4
2ffedd3a:	69db      	ldr	r3, [r3, #28]
2ffedd3c:	4798      	blx	r3
2ffedd3e:	4620      	mov	r0, r4
2ffedd40:	f000 f8f0 	bl	2ffedf24 <psci_set_pwr_domains_to_run>
2ffedd44:	a903      	add	r1, sp, #12
2ffedd46:	4620      	mov	r0, r4
2ffedd48:	f000 f9e8 	bl	2ffee11c <psci_release_pwr_domain_locks>
2ffedd4c:	b005      	add	sp, #20
2ffedd4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffedd52:	bf00      	nop
2ffedd54:	2fffe3b8 	.word	0x2fffe3b8
2ffedd58:	2fff9e6d 	.word	0x2fff9e6d
2ffedd5c:	2fffc570 	.word	0x2fffc570
2ffedd60:	2fffc570 	.word	0x2fffc570
2ffedd64:	2fffe3c0 	.word	0x2fffe3c0

2ffedd68 <psci_cpu_suspend_finish>:
2ffedd68:	b538      	push	{r3, r4, r5, lr}
2ffedd6a:	460c      	mov	r4, r1
2ffedd6c:	f00a ec52 	blx	2fff8614 <_cpu_data>
2ffedd70:	6843      	ldr	r3, [r0, #4]
2ffedd72:	b913      	cbnz	r3, 2ffedd7a <psci_cpu_suspend_finish+0x12>
2ffedd74:	7823      	ldrb	r3, [r4, #0]
2ffedd76:	2b02      	cmp	r3, #2
2ffedd78:	d004      	beq.n	2ffedd84 <psci_cpu_suspend_finish+0x1c>
2ffedd7a:	f240 111d 	movw	r1, #285	; 0x11d
2ffedd7e:	4818      	ldr	r0, [pc, #96]	; (2ffedde0 <psci_cpu_suspend_finish+0x78>)
2ffedd80:	f00b fdb4 	bl	2fff98ec <__assert>
2ffedd84:	4b17      	ldr	r3, [pc, #92]	; (2ffedde4 <psci_cpu_suspend_finish+0x7c>)
2ffedd86:	4620      	mov	r0, r4
2ffedd88:	681b      	ldr	r3, [r3, #0]
2ffedd8a:	69db      	ldr	r3, [r3, #28]
2ffedd8c:	4798      	blx	r3
2ffedd8e:	f00a ed18 	blx	2fff87c0 <psci_do_pwrup_cache_maintenance>
2ffedd92:	f004 ff0e 	bl	2fff2bb2 <plat_get_syscnt_freq2>
2ffedd96:	ee0e 0f10 	mcr	15, 0, r0, cr14, cr0, {0}
2ffedd9a:	4d13      	ldr	r5, [pc, #76]	; (2ffedde8 <psci_cpu_suspend_finish+0x80>)
2ffedd9c:	682b      	ldr	r3, [r5, #0]
2ffedd9e:	b163      	cbz	r3, 2ffeddba <psci_cpu_suspend_finish+0x52>
2ffedda0:	691b      	ldr	r3, [r3, #16]
2ffedda2:	b153      	cbz	r3, 2ffeddba <psci_cpu_suspend_finish+0x52>
2ffedda4:	4620      	mov	r0, r4
2ffedda6:	f000 f95d 	bl	2ffee064 <psci_find_max_off_lvl>
2ffeddaa:	2802      	cmp	r0, #2
2ffeddac:	d102      	bne.n	2ffeddb4 <psci_cpu_suspend_finish+0x4c>
2ffeddae:	f44f 71a0 	mov.w	r1, #320	; 0x140
2ffeddb2:	e7e4      	b.n	2ffedd7e <psci_cpu_suspend_finish+0x16>
2ffeddb4:	682b      	ldr	r3, [r5, #0]
2ffeddb6:	691b      	ldr	r3, [r3, #16]
2ffeddb8:	4798      	blx	r3
2ffeddba:	4c0c      	ldr	r4, [pc, #48]	; (2ffeddec <psci_cpu_suspend_finish+0x84>)
2ffeddbc:	f00a ec2a 	blx	2fff8614 <_cpu_data>
2ffeddc0:	4d0b      	ldr	r5, [pc, #44]	; (2ffeddf0 <psci_cpu_suspend_finish+0x88>)
2ffeddc2:	2302      	movs	r3, #2
2ffeddc4:	6083      	str	r3, [r0, #8]
2ffeddc6:	42ac      	cmp	r4, r5
2ffeddc8:	d304      	bcc.n	2ffeddd4 <psci_cpu_suspend_finish+0x6c>
2ffeddca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffeddce:	2001      	movs	r0, #1
2ffeddd0:	f7ff bd88 	b.w	2ffed8e4 <cm_prepare_el3_exit>
2ffeddd4:	f854 3b04 	ldr.w	r3, [r4], #4
2ffeddd8:	2000      	movs	r0, #0
2ffeddda:	4798      	blx	r3
2ffedddc:	e7f3      	b.n	2ffeddc6 <psci_cpu_suspend_finish+0x5e>
2ffeddde:	bf00      	nop
2ffedde0:	2fff9e6d 	.word	0x2fff9e6d
2ffedde4:	2fffe3b8 	.word	0x2fffe3b8
2ffedde8:	2fffe3c0 	.word	0x2fffe3c0
2ffeddec:	2fffc570 	.word	0x2fffc570
2ffeddf0:	2fffc570 	.word	0x2fffc570

2ffeddf4 <psci_validate_power_state>:
2ffeddf4:	4b08      	ldr	r3, [pc, #32]	; (2ffede18 <psci_validate_power_state+0x24>)
2ffeddf6:	b510      	push	{r4, lr}
2ffeddf8:	4003      	ands	r3, r0
2ffeddfa:	b953      	cbnz	r3, 2ffede12 <psci_validate_power_state+0x1e>
2ffeddfc:	4b07      	ldr	r3, [pc, #28]	; (2ffede1c <psci_validate_power_state+0x28>)
2ffeddfe:	681b      	ldr	r3, [r3, #0]
2ffede00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
2ffede02:	b91b      	cbnz	r3, 2ffede0c <psci_validate_power_state+0x18>
2ffede04:	4806      	ldr	r0, [pc, #24]	; (2ffede20 <psci_validate_power_state+0x2c>)
2ffede06:	2182      	movs	r1, #130	; 0x82
2ffede08:	f00b fd70 	bl	2fff98ec <__assert>
2ffede0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffede10:	4718      	bx	r3
2ffede12:	f06f 0001 	mvn.w	r0, #1
2ffede16:	bd10      	pop	{r4, pc}
2ffede18:	fcfe0000 	.word	0xfcfe0000
2ffede1c:	2fffe3b8 	.word	0x2fffe3b8
2ffede20:	2fff9e85 	.word	0x2fff9e85

2ffede24 <psci_query_sys_suspend_pwrstate>:
2ffede24:	4b05      	ldr	r3, [pc, #20]	; (2ffede3c <psci_query_sys_suspend_pwrstate+0x18>)
2ffede26:	b510      	push	{r4, lr}
2ffede28:	681b      	ldr	r3, [r3, #0]
2ffede2a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffede2c:	b91b      	cbnz	r3, 2ffede36 <psci_query_sys_suspend_pwrstate+0x12>
2ffede2e:	4804      	ldr	r0, [pc, #16]	; (2ffede40 <psci_query_sys_suspend_pwrstate+0x1c>)
2ffede30:	2192      	movs	r1, #146	; 0x92
2ffede32:	f00b fd5b 	bl	2fff98ec <__assert>
2ffede36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffede3a:	4718      	bx	r3
2ffede3c:	2fffe3b8 	.word	0x2fffe3b8
2ffede40:	2fff9e85 	.word	0x2fff9e85

2ffede44 <psci_is_last_on_cpu>:
2ffede44:	b510      	push	{r4, lr}
2ffede46:	f00b e89c 	blx	2fff8f80 <plat_my_core_pos>
2ffede4a:	4604      	mov	r4, r0
2ffede4c:	b138      	cbz	r0, 2ffede5e <psci_is_last_on_cpu+0x1a>
2ffede4e:	2000      	movs	r0, #0
2ffede50:	f00a ebe8 	blx	2fff8624 <_cpu_data_by_index>
2ffede54:	6843      	ldr	r3, [r0, #4]
2ffede56:	2b01      	cmp	r3, #1
2ffede58:	d009      	beq.n	2ffede6e <psci_is_last_on_cpu+0x2a>
2ffede5a:	2000      	movs	r0, #0
2ffede5c:	e00f      	b.n	2ffede7e <psci_is_last_on_cpu+0x3a>
2ffede5e:	f00a ebda 	blx	2fff8614 <_cpu_data>
2ffede62:	6843      	ldr	r3, [r0, #4]
2ffede64:	b163      	cbz	r3, 2ffede80 <psci_is_last_on_cpu+0x3c>
2ffede66:	480a      	ldr	r0, [pc, #40]	; (2ffede90 <psci_is_last_on_cpu+0x4c>)
2ffede68:	21a7      	movs	r1, #167	; 0xa7
2ffede6a:	f00b fd3f 	bl	2fff98ec <__assert>
2ffede6e:	2c01      	cmp	r4, #1
2ffede70:	d106      	bne.n	2ffede80 <psci_is_last_on_cpu+0x3c>
2ffede72:	f00a ebd0 	blx	2fff8614 <_cpu_data>
2ffede76:	6843      	ldr	r3, [r0, #4]
2ffede78:	2b00      	cmp	r3, #0
2ffede7a:	d1f4      	bne.n	2ffede66 <psci_is_last_on_cpu+0x22>
2ffede7c:	2001      	movs	r0, #1
2ffede7e:	bd10      	pop	{r4, pc}
2ffede80:	2001      	movs	r0, #1
2ffede82:	f00a ebd0 	blx	2fff8624 <_cpu_data_by_index>
2ffede86:	6843      	ldr	r3, [r0, #4]
2ffede88:	2b01      	cmp	r3, #1
2ffede8a:	d0f7      	beq.n	2ffede7c <psci_is_last_on_cpu+0x38>
2ffede8c:	e7e5      	b.n	2ffede5a <psci_is_last_on_cpu+0x16>
2ffede8e:	bf00      	nop
2ffede90:	2fff9e85 	.word	0x2fff9e85

2ffede94 <psci_init_req_local_pwr_states>:
2ffede94:	4b02      	ldr	r3, [pc, #8]	; (2ffedea0 <psci_init_req_local_pwr_states+0xc>)
2ffede96:	2202      	movs	r2, #2
2ffede98:	701a      	strb	r2, [r3, #0]
2ffede9a:	705a      	strb	r2, [r3, #1]
2ffede9c:	4770      	bx	lr
2ffede9e:	bf00      	nop
2ffedea0:	2fffe3bc 	.word	0x2fffe3bc

2ffedea4 <psci_get_target_local_pwr_states>:
2ffedea4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffedea8:	460e      	mov	r6, r1
2ffedeaa:	f8df 8044 	ldr.w	r8, [pc, #68]	; 2ffedef0 <psci_get_target_local_pwr_states+0x4c>
2ffedeae:	4607      	mov	r7, r0
2ffedeb0:	2401      	movs	r4, #1
2ffedeb2:	f00a ebb0 	blx	2fff8614 <_cpu_data>
2ffedeb6:	7b03      	ldrb	r3, [r0, #12]
2ffedeb8:	7033      	strb	r3, [r6, #0]
2ffedeba:	f00b e862 	blx	2fff8f80 <plat_my_core_pos>
2ffedebe:	4b0d      	ldr	r3, [pc, #52]	; (2ffedef4 <psci_get_target_local_pwr_states+0x50>)
2ffedec0:	220c      	movs	r2, #12
2ffedec2:	fb02 3300 	mla	r3, r2, r0, r3
2ffedec6:	685d      	ldr	r5, [r3, #4]
2ffedec8:	42bc      	cmp	r4, r7
2ffedeca:	d905      	bls.n	2ffeded8 <psci_get_target_local_pwr_states+0x34>
2ffedecc:	2c01      	cmp	r4, #1
2ffedece:	bf9c      	itt	ls
2ffeded0:	2300      	movls	r3, #0
2ffeded2:	5533      	strbls	r3, [r6, r4]
2ffeded4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeded8:	eb08 1505 	add.w	r5, r8, r5, lsl #4
2ffededc:	2110      	movs	r1, #16
2ffedede:	4628      	mov	r0, r5
2ffedee0:	f00a ed66 	blx	2fff89b0 <flush_dcache_range>
2ffedee4:	7b2b      	ldrb	r3, [r5, #12]
2ffedee6:	5533      	strb	r3, [r6, r4]
2ffedee8:	3401      	adds	r4, #1
2ffedeea:	68ad      	ldr	r5, [r5, #8]
2ffedeec:	e7ec      	b.n	2ffedec8 <psci_get_target_local_pwr_states+0x24>
2ffedeee:	bf00      	nop
2ffedef0:	2fffe398 	.word	0x2fffe398
2ffedef4:	2fffe380 	.word	0x2fffe380

2ffedef8 <psci_get_parent_pwr_domain_nodes>:
2ffedef8:	4b08      	ldr	r3, [pc, #32]	; (2ffedf1c <psci_get_parent_pwr_domain_nodes+0x24>)
2ffedefa:	b510      	push	{r4, lr}
2ffedefc:	240c      	movs	r4, #12
2ffedefe:	fb04 3300 	mla	r3, r4, r0, r3
2ffedf02:	4c07      	ldr	r4, [pc, #28]	; (2ffedf20 <psci_get_parent_pwr_domain_nodes+0x28>)
2ffedf04:	2001      	movs	r0, #1
2ffedf06:	685b      	ldr	r3, [r3, #4]
2ffedf08:	4288      	cmp	r0, r1
2ffedf0a:	d900      	bls.n	2ffedf0e <psci_get_parent_pwr_domain_nodes+0x16>
2ffedf0c:	bd10      	pop	{r4, pc}
2ffedf0e:	f842 3b04 	str.w	r3, [r2], #4
2ffedf12:	3001      	adds	r0, #1
2ffedf14:	eb04 1303 	add.w	r3, r4, r3, lsl #4
2ffedf18:	689b      	ldr	r3, [r3, #8]
2ffedf1a:	e7f5      	b.n	2ffedf08 <psci_get_parent_pwr_domain_nodes+0x10>
2ffedf1c:	2fffe380 	.word	0x2fffe380
2ffedf20:	2fffe398 	.word	0x2fffe398

2ffedf24 <psci_set_pwr_domains_to_run>:
2ffedf24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffedf28:	4606      	mov	r6, r0
2ffedf2a:	f8df 806c 	ldr.w	r8, [pc, #108]	; 2ffedf98 <psci_set_pwr_domains_to_run+0x74>
2ffedf2e:	f00b e828 	blx	2fff8f80 <plat_my_core_pos>
2ffedf32:	4b1a      	ldr	r3, [pc, #104]	; (2ffedf9c <psci_set_pwr_domains_to_run+0x78>)
2ffedf34:	220c      	movs	r2, #12
2ffedf36:	f8df a068 	ldr.w	sl, [pc, #104]	; 2ffedfa0 <psci_set_pwr_domains_to_run+0x7c>
2ffedf3a:	4605      	mov	r5, r0
2ffedf3c:	fb02 3300 	mla	r3, r2, r0, r3
2ffedf40:	2401      	movs	r4, #1
2ffedf42:	6858      	ldr	r0, [r3, #4]
2ffedf44:	42b4      	cmp	r4, r6
2ffedf46:	d90e      	bls.n	2ffedf66 <psci_set_pwr_domains_to_run+0x42>
2ffedf48:	2400      	movs	r4, #0
2ffedf4a:	f00a eb64 	blx	2fff8614 <_cpu_data>
2ffedf4e:	6044      	str	r4, [r0, #4]
2ffedf50:	f00a eb60 	blx	2fff8614 <_cpu_data>
2ffedf54:	7304      	strb	r4, [r0, #12]
2ffedf56:	f00a eb5e 	blx	2fff8614 <_cpu_data>
2ffedf5a:	3004      	adds	r0, #4
2ffedf5c:	210c      	movs	r1, #12
2ffedf5e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffedf62:	f00e bb31 	b.w	2fffc5c8 <__flush_dcache_range_from_thumb>
2ffedf66:	0107      	lsls	r7, r0, #4
2ffedf68:	f04f 0900 	mov.w	r9, #0
2ffedf6c:	eb08 1000 	add.w	r0, r8, r0, lsl #4
2ffedf70:	2110      	movs	r1, #16
2ffedf72:	f880 900c 	strb.w	r9, [r0, #12]
2ffedf76:	f00a ed1c 	blx	2fff89b0 <flush_dcache_range>
2ffedf7a:	b91c      	cbnz	r4, 2ffedf84 <psci_set_pwr_domains_to_run+0x60>
2ffedf7c:	4809      	ldr	r0, [pc, #36]	; (2ffedfa4 <psci_set_pwr_domains_to_run+0x80>)
2ffedf7e:	21d1      	movs	r1, #209	; 0xd1
2ffedf80:	f00b fcb4 	bl	2fff98ec <__assert>
2ffedf84:	2c01      	cmp	r4, #1
2ffedf86:	d103      	bne.n	2ffedf90 <psci_set_pwr_domains_to_run+0x6c>
2ffedf88:	2d01      	cmp	r5, #1
2ffedf8a:	bf98      	it	ls
2ffedf8c:	f80a 9005 	strbls.w	r9, [sl, r5]
2ffedf90:	4447      	add	r7, r8
2ffedf92:	3401      	adds	r4, #1
2ffedf94:	68b8      	ldr	r0, [r7, #8]
2ffedf96:	e7d5      	b.n	2ffedf44 <psci_set_pwr_domains_to_run+0x20>
2ffedf98:	2fffe398 	.word	0x2fffe398
2ffedf9c:	2fffe380 	.word	0x2fffe380
2ffedfa0:	2fffe3bc 	.word	0x2fffe3bc
2ffedfa4:	2fff9e85 	.word	0x2fff9e85

2ffedfa8 <psci_do_state_coordination>:
2ffedfa8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffedfac:	4606      	mov	r6, r0
2ffedfae:	460d      	mov	r5, r1
2ffedfb0:	f00a efe6 	blx	2fff8f80 <plat_my_core_pos>
2ffedfb4:	2e01      	cmp	r6, #1
2ffedfb6:	4607      	mov	r7, r0
2ffedfb8:	d904      	bls.n	2ffedfc4 <psci_do_state_coordination+0x1c>
2ffedfba:	4826      	ldr	r0, [pc, #152]	; (2ffee054 <psci_do_state_coordination+0xac>)
2ffedfbc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
2ffedfc0:	f00b fc94 	bl	2fff98ec <__assert>
2ffedfc4:	f8df 8090 	ldr.w	r8, [pc, #144]	; 2ffee058 <psci_do_state_coordination+0xb0>
2ffedfc8:	230c      	movs	r3, #12
2ffedfca:	f8df 9090 	ldr.w	r9, [pc, #144]	; 2ffee05c <psci_do_state_coordination+0xb4>
2ffedfce:	fb03 8300 	mla	r3, r3, r0, r8
2ffedfd2:	f8df a08c 	ldr.w	sl, [pc, #140]	; 2ffee060 <psci_do_state_coordination+0xb8>
2ffedfd6:	685c      	ldr	r4, [r3, #4]
2ffedfd8:	2301      	movs	r3, #1
2ffedfda:	42b3      	cmp	r3, r6
2ffedfdc:	d815      	bhi.n	2ffee00a <psci_do_state_coordination+0x62>
2ffedfde:	2f01      	cmp	r7, #1
2ffedfe0:	f04f 0001 	mov.w	r0, #1
2ffedfe4:	ea4f 1404 	mov.w	r4, r4, lsl #4
2ffedfe8:	bf98      	it	ls
2ffedfea:	786b      	ldrbls	r3, [r5, #1]
2ffedfec:	f85a 1004 	ldr.w	r1, [sl, r4]
2ffedff0:	4454      	add	r4, sl
2ffedff2:	bf98      	it	ls
2ffedff4:	f809 3007 	strbls.w	r3, [r9, r7]
2ffedff8:	2901      	cmp	r1, #1
2ffedffa:	bf94      	ite	ls
2ffedffc:	4449      	addls	r1, r9
2ffedffe:	2100      	movhi	r1, #0
2ffee000:	6862      	ldr	r2, [r4, #4]
2ffee002:	f003 fba7 	bl	2fff1754 <plat_get_target_pwr_state>
2ffee006:	7068      	strb	r0, [r5, #1]
2ffee008:	b9b0      	cbnz	r0, 2ffee038 <psci_do_state_coordination+0x90>
2ffee00a:	782c      	ldrb	r4, [r5, #0]
2ffee00c:	f00a eb02 	blx	2fff8614 <_cpu_data>
2ffee010:	4f13      	ldr	r7, [pc, #76]	; (2ffee060 <psci_do_state_coordination+0xb8>)
2ffee012:	7304      	strb	r4, [r0, #12]
2ffee014:	f00a eafe 	blx	2fff8614 <_cpu_data>
2ffee018:	300c      	adds	r0, #12
2ffee01a:	2101      	movs	r1, #1
2ffee01c:	f00a ecc8 	blx	2fff89b0 <flush_dcache_range>
2ffee020:	f00a efae 	blx	2fff8f80 <plat_my_core_pos>
2ffee024:	230c      	movs	r3, #12
2ffee026:	fb03 8800 	mla	r8, r3, r0, r8
2ffee02a:	2301      	movs	r3, #1
2ffee02c:	f8d8 4004 	ldr.w	r4, [r8, #4]
2ffee030:	429e      	cmp	r6, r3
2ffee032:	d204      	bcs.n	2ffee03e <psci_do_state_coordination+0x96>
2ffee034:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffee038:	68a4      	ldr	r4, [r4, #8]
2ffee03a:	2302      	movs	r3, #2
2ffee03c:	e7cd      	b.n	2ffedfda <psci_do_state_coordination+0x32>
2ffee03e:	786b      	ldrb	r3, [r5, #1]
2ffee040:	2110      	movs	r1, #16
2ffee042:	eb07 1404 	add.w	r4, r7, r4, lsl #4
2ffee046:	4620      	mov	r0, r4
2ffee048:	7323      	strb	r3, [r4, #12]
2ffee04a:	f00a ecb2 	blx	2fff89b0 <flush_dcache_range>
2ffee04e:	68a4      	ldr	r4, [r4, #8]
2ffee050:	2302      	movs	r3, #2
2ffee052:	e7ed      	b.n	2ffee030 <psci_do_state_coordination+0x88>
2ffee054:	2fff9e85 	.word	0x2fff9e85
2ffee058:	2fffe380 	.word	0x2fffe380
2ffee05c:	2fffe3bc 	.word	0x2fffe3bc
2ffee060:	2fffe398 	.word	0x2fffe398

2ffee064 <psci_find_max_off_lvl>:
2ffee064:	7843      	ldrb	r3, [r0, #1]
2ffee066:	2b02      	cmp	r3, #2
2ffee068:	d004      	beq.n	2ffee074 <psci_find_max_off_lvl+0x10>
2ffee06a:	7803      	ldrb	r3, [r0, #0]
2ffee06c:	2b02      	cmp	r3, #2
2ffee06e:	d103      	bne.n	2ffee078 <psci_find_max_off_lvl+0x14>
2ffee070:	2000      	movs	r0, #0
2ffee072:	4770      	bx	lr
2ffee074:	2001      	movs	r0, #1
2ffee076:	4770      	bx	lr
2ffee078:	2002      	movs	r0, #2
2ffee07a:	4770      	bx	lr

2ffee07c <psci_find_target_suspend_lvl>:
2ffee07c:	4603      	mov	r3, r0
2ffee07e:	7840      	ldrb	r0, [r0, #1]
2ffee080:	b910      	cbnz	r0, 2ffee088 <psci_find_target_suspend_lvl+0xc>
2ffee082:	781b      	ldrb	r3, [r3, #0]
2ffee084:	b113      	cbz	r3, 2ffee08c <psci_find_target_suspend_lvl+0x10>
2ffee086:	4770      	bx	lr
2ffee088:	2001      	movs	r0, #1
2ffee08a:	4770      	bx	lr
2ffee08c:	2002      	movs	r0, #2
2ffee08e:	4770      	bx	lr

2ffee090 <psci_validate_suspend_req>:
2ffee090:	b570      	push	{r4, r5, r6, lr}
2ffee092:	4604      	mov	r4, r0
2ffee094:	f7ff fff2 	bl	2ffee07c <psci_find_target_suspend_lvl>
2ffee098:	2802      	cmp	r0, #2
2ffee09a:	4602      	mov	r2, r0
2ffee09c:	d018      	beq.n	2ffee0d0 <psci_validate_suspend_req+0x40>
2ffee09e:	2600      	movs	r6, #0
2ffee0a0:	2800      	cmp	r0, #0
2ffee0a2:	da0e      	bge.n	2ffee0c2 <psci_validate_suspend_req+0x32>
2ffee0a4:	4620      	mov	r0, r4
2ffee0a6:	f7ff ffdd 	bl	2ffee064 <psci_find_max_off_lvl>
2ffee0aa:	4282      	cmp	r2, r0
2ffee0ac:	bf08      	it	eq
2ffee0ae:	2202      	moveq	r2, #2
2ffee0b0:	b9a9      	cbnz	r1, 2ffee0de <psci_validate_suspend_req+0x4e>
2ffee0b2:	2802      	cmp	r0, #2
2ffee0b4:	d10c      	bne.n	2ffee0d0 <psci_validate_suspend_req+0x40>
2ffee0b6:	2a02      	cmp	r2, #2
2ffee0b8:	bf14      	ite	ne
2ffee0ba:	2000      	movne	r0, #0
2ffee0bc:	f06f 0001 	mvneq.w	r0, #1
2ffee0c0:	bd70      	pop	{r4, r5, r6, pc}
2ffee0c2:	5c23      	ldrb	r3, [r4, r0]
2ffee0c4:	b10b      	cbz	r3, 2ffee0ca <psci_validate_suspend_req+0x3a>
2ffee0c6:	2b01      	cmp	r3, #1
2ffee0c8:	d105      	bne.n	2ffee0d6 <psci_validate_suspend_req+0x46>
2ffee0ca:	429e      	cmp	r6, r3
2ffee0cc:	461d      	mov	r5, r3
2ffee0ce:	d903      	bls.n	2ffee0d8 <psci_validate_suspend_req+0x48>
2ffee0d0:	f06f 0001 	mvn.w	r0, #1
2ffee0d4:	e7f4      	b.n	2ffee0c0 <psci_validate_suspend_req+0x30>
2ffee0d6:	2502      	movs	r5, #2
2ffee0d8:	3801      	subs	r0, #1
2ffee0da:	462e      	mov	r6, r5
2ffee0dc:	e7e0      	b.n	2ffee0a0 <psci_validate_suspend_req+0x10>
2ffee0de:	2000      	movs	r0, #0
2ffee0e0:	e7ee      	b.n	2ffee0c0 <psci_validate_suspend_req+0x30>
	...

2ffee0e4 <psci_acquire_pwr_domain_locks>:
2ffee0e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffee0e8:	4605      	mov	r5, r0
2ffee0ea:	4f0a      	ldr	r7, [pc, #40]	; (2ffee114 <psci_acquire_pwr_domain_locks+0x30>)
2ffee0ec:	1f0c      	subs	r4, r1, #4
2ffee0ee:	f8df 8028 	ldr.w	r8, [pc, #40]	; 2ffee118 <psci_acquire_pwr_domain_locks+0x34>
2ffee0f2:	2601      	movs	r6, #1
2ffee0f4:	42ae      	cmp	r6, r5
2ffee0f6:	d901      	bls.n	2ffee0fc <psci_acquire_pwr_domain_locks+0x18>
2ffee0f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffee0fc:	f854 3f04 	ldr.w	r3, [r4, #4]!
2ffee100:	3601      	adds	r6, #1
2ffee102:	eb08 1303 	add.w	r3, r8, r3, lsl #4
2ffee106:	7b98      	ldrb	r0, [r3, #14]
2ffee108:	eb07 0040 	add.w	r0, r7, r0, lsl #1
2ffee10c:	f000 fd12 	bl	2ffeeb34 <bakery_lock_get>
2ffee110:	e7f0      	b.n	2ffee0f4 <psci_acquire_pwr_domain_locks+0x10>
2ffee112:	bf00      	nop
2ffee114:	2fffecc0 	.word	0x2fffecc0
2ffee118:	2fffe398 	.word	0x2fffe398

2ffee11c <psci_release_pwr_domain_locks>:
2ffee11c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffee11e:	460d      	mov	r5, r1
2ffee120:	4e08      	ldr	r6, [pc, #32]	; (2ffee144 <psci_release_pwr_domain_locks+0x28>)
2ffee122:	1e44      	subs	r4, r0, #1
2ffee124:	4f08      	ldr	r7, [pc, #32]	; (2ffee148 <psci_release_pwr_domain_locks+0x2c>)
2ffee126:	1c63      	adds	r3, r4, #1
2ffee128:	d100      	bne.n	2ffee12c <psci_release_pwr_domain_locks+0x10>
2ffee12a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffee12c:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
2ffee130:	3c01      	subs	r4, #1
2ffee132:	eb07 1303 	add.w	r3, r7, r3, lsl #4
2ffee136:	7b98      	ldrb	r0, [r3, #14]
2ffee138:	eb06 0040 	add.w	r0, r6, r0, lsl #1
2ffee13c:	f000 fd7a 	bl	2ffeec34 <bakery_lock_release>
2ffee140:	e7f1      	b.n	2ffee126 <psci_release_pwr_domain_locks+0xa>
2ffee142:	bf00      	nop
2ffee144:	2fffecc0 	.word	0x2fffecc0
2ffee148:	2fffe398 	.word	0x2fffe398

2ffee14c <psci_validate_mpidr>:
2ffee14c:	b508      	push	{r3, lr}
2ffee14e:	f002 fe55 	bl	2fff0dfc <plat_core_pos_by_mpidr>
2ffee152:	2800      	cmp	r0, #0
2ffee154:	bfb4      	ite	lt
2ffee156:	f06f 0001 	mvnlt.w	r0, #1
2ffee15a:	2000      	movge	r0, #0
2ffee15c:	bd08      	pop	{r3, pc}
	...

2ffee160 <psci_validate_entry_point>:
2ffee160:	4b22      	ldr	r3, [pc, #136]	; (2ffee1ec <psci_validate_entry_point+0x8c>)
2ffee162:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffee166:	4605      	mov	r5, r0
2ffee168:	681b      	ldr	r3, [r3, #0]
2ffee16a:	460c      	mov	r4, r1
2ffee16c:	4617      	mov	r7, r2
2ffee16e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
2ffee170:	bb93      	cbnz	r3, 2ffee1d8 <psci_validate_entry_point+0x78>
2ffee172:	ee11 1f11 	mrc	15, 0, r1, cr1, cr1, {0}
2ffee176:	f041 0301 	orr.w	r3, r1, #1
2ffee17a:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffee17e:	f3bf 8f6f 	isb	sy
2ffee182:	ee11 3f10 	mrc	15, 0, r3, cr1, cr0, {0}
2ffee186:	f411 7880 	ands.w	r8, r1, #256	; 0x100
2ffee18a:	d12c      	bne.n	2ffee1e6 <psci_validate_entry_point+0x86>
2ffee18c:	ee01 1f11 	mcr	15, 0, r1, cr1, cr1, {0}
2ffee190:	f3bf 8f6f 	isb	sy
2ffee194:	4a16      	ldr	r2, [pc, #88]	; (2ffee1f0 <psci_validate_entry_point+0x90>)
2ffee196:	f013 7600 	ands.w	r6, r3, #33554432	; 0x2000000
2ffee19a:	bf14      	ite	ne
2ffee19c:	2303      	movne	r3, #3
2ffee19e:	2301      	moveq	r3, #1
2ffee1a0:	e885 001c 	stmia.w	r5, {r2, r3, r4}
2ffee1a4:	f105 0014 	add.w	r0, r5, #20
2ffee1a8:	f04f 0110 	mov.w	r1, #16
2ffee1ac:	bf18      	it	ne
2ffee1ae:	2601      	movne	r6, #1
2ffee1b0:	f00a ecb8 	blx	2fff8b24 <zero_normalmem>
2ffee1b4:	0163      	lsls	r3, r4, #5
2ffee1b6:	f1b8 0f00 	cmp.w	r8, #0
2ffee1ba:	616f      	str	r7, [r5, #20]
2ffee1bc:	f003 0320 	and.w	r3, r3, #32
2ffee1c0:	bf14      	ite	ne
2ffee1c2:	240a      	movne	r4, #10
2ffee1c4:	2403      	moveq	r4, #3
2ffee1c6:	4323      	orrs	r3, r4
2ffee1c8:	2000      	movs	r0, #0
2ffee1ca:	ea43 2346 	orr.w	r3, r3, r6, lsl #9
2ffee1ce:	f443 73e8 	orr.w	r3, r3, #464	; 0x1d0
2ffee1d2:	60eb      	str	r3, [r5, #12]
2ffee1d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffee1d8:	4608      	mov	r0, r1
2ffee1da:	4798      	blx	r3
2ffee1dc:	2800      	cmp	r0, #0
2ffee1de:	d0c8      	beq.n	2ffee172 <psci_validate_entry_point+0x12>
2ffee1e0:	f06f 0008 	mvn.w	r0, #8
2ffee1e4:	e7f6      	b.n	2ffee1d4 <psci_validate_entry_point+0x74>
2ffee1e6:	ee91 3f10 	mrc	15, 4, r3, cr1, cr0, {0}
2ffee1ea:	e7cf      	b.n	2ffee18c <psci_validate_entry_point+0x2c>
2ffee1ec:	2fffe3b8 	.word	0x2fffe3b8
2ffee1f0:	00240101 	.word	0x00240101

2ffee1f4 <psci_warmboot_entrypoint>:
2ffee1f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffee1f6:	f00a eec4 	blx	2fff8f80 <plat_my_core_pos>
2ffee1fa:	4921      	ldr	r1, [pc, #132]	; (2ffee280 <psci_warmboot_entrypoint+0x8c>)
2ffee1fc:	2300      	movs	r3, #0
2ffee1fe:	9301      	str	r3, [sp, #4]
2ffee200:	2202      	movs	r2, #2
2ffee202:	4605      	mov	r5, r0
2ffee204:	4668      	mov	r0, sp
2ffee206:	f00b fb99 	bl	2fff993c <memcpy>
2ffee20a:	f00a ea04 	blx	2fff8614 <_cpu_data>
2ffee20e:	6843      	ldr	r3, [r0, #4]
2ffee210:	2b01      	cmp	r3, #1
2ffee212:	d106      	bne.n	2ffee222 <psci_warmboot_entrypoint+0x2e>
2ffee214:	481b      	ldr	r0, [pc, #108]	; (2ffee284 <psci_warmboot_entrypoint+0x90>)
2ffee216:	f004 fb25 	bl	2fff2864 <tf_log>
2ffee21a:	f004 fbc7 	bl	2fff29ac <console_flush>
2ffee21e:	f00a eb2c 	blx	2fff8878 <do_panic>
2ffee222:	f00a e9f8 	blx	2fff8614 <_cpu_data>
2ffee226:	6884      	ldr	r4, [r0, #8]
2ffee228:	2c02      	cmp	r4, #2
2ffee22a:	d005      	beq.n	2ffee238 <psci_warmboot_entrypoint+0x44>
2ffee22c:	2c01      	cmp	r4, #1
2ffee22e:	d904      	bls.n	2ffee23a <psci_warmboot_entrypoint+0x46>
2ffee230:	4815      	ldr	r0, [pc, #84]	; (2ffee288 <psci_warmboot_entrypoint+0x94>)
2ffee232:	21c4      	movs	r1, #196	; 0xc4
2ffee234:	f00b fb5a 	bl	2fff98ec <__assert>
2ffee238:	2401      	movs	r4, #1
2ffee23a:	aa01      	add	r2, sp, #4
2ffee23c:	4621      	mov	r1, r4
2ffee23e:	4628      	mov	r0, r5
2ffee240:	f7ff fe5a 	bl	2ffedef8 <psci_get_parent_pwr_domain_nodes>
2ffee244:	a901      	add	r1, sp, #4
2ffee246:	4620      	mov	r0, r4
2ffee248:	f7ff ff4c 	bl	2ffee0e4 <psci_acquire_pwr_domain_locks>
2ffee24c:	4669      	mov	r1, sp
2ffee24e:	4620      	mov	r0, r4
2ffee250:	f7ff fe28 	bl	2ffedea4 <psci_get_target_local_pwr_states>
2ffee254:	f00a e9de 	blx	2fff8614 <_cpu_data>
2ffee258:	6843      	ldr	r3, [r0, #4]
2ffee25a:	4669      	mov	r1, sp
2ffee25c:	4628      	mov	r0, r5
2ffee25e:	2b02      	cmp	r3, #2
2ffee260:	d10a      	bne.n	2ffee278 <psci_warmboot_entrypoint+0x84>
2ffee262:	f7ff fca3 	bl	2ffedbac <psci_cpu_on_finish>
2ffee266:	4620      	mov	r0, r4
2ffee268:	f7ff fe5c 	bl	2ffedf24 <psci_set_pwr_domains_to_run>
2ffee26c:	a901      	add	r1, sp, #4
2ffee26e:	4620      	mov	r0, r4
2ffee270:	f7ff ff54 	bl	2ffee11c <psci_release_pwr_domain_locks>
2ffee274:	b003      	add	sp, #12
2ffee276:	bd30      	pop	{r4, r5, pc}
2ffee278:	f7ff fd76 	bl	2ffedd68 <psci_cpu_suspend_finish>
2ffee27c:	e7f3      	b.n	2ffee266 <psci_warmboot_entrypoint+0x72>
2ffee27e:	bf00      	nop
2ffee280:	2fff9f5b 	.word	0x2fff9f5b
2ffee284:	2fff9e9c 	.word	0x2fff9e9c
2ffee288:	2fff9e85 	.word	0x2fff9e85

2ffee28c <psci_spd_migrate_info>:
2ffee28c:	b508      	push	{r3, lr}
2ffee28e:	4b08      	ldr	r3, [pc, #32]	; (2ffee2b0 <psci_spd_migrate_info+0x24>)
2ffee290:	681b      	ldr	r3, [r3, #0]
2ffee292:	b153      	cbz	r3, 2ffee2aa <psci_spd_migrate_info+0x1e>
2ffee294:	699b      	ldr	r3, [r3, #24]
2ffee296:	b143      	cbz	r3, 2ffee2aa <psci_spd_migrate_info+0x1e>
2ffee298:	4798      	blx	r3
2ffee29a:	1c43      	adds	r3, r0, #1
2ffee29c:	2b03      	cmp	r3, #3
2ffee29e:	d906      	bls.n	2ffee2ae <psci_spd_migrate_info+0x22>
2ffee2a0:	4804      	ldr	r0, [pc, #16]	; (2ffee2b4 <psci_spd_migrate_info+0x28>)
2ffee2a2:	f240 316d 	movw	r1, #877	; 0x36d
2ffee2a6:	f00b fb21 	bl	2fff98ec <__assert>
2ffee2aa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee2ae:	bd08      	pop	{r3, pc}
2ffee2b0:	2fffe3c0 	.word	0x2fffe3c0
2ffee2b4:	2fff9e85 	.word	0x2fff9e85

2ffee2b8 <psci_print_power_domain_map>:
2ffee2b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
2ffee2bc:	4c24      	ldr	r4, [pc, #144]	; (2ffee350 <psci_print_power_domain_map+0x98>)
2ffee2be:	4825      	ldr	r0, [pc, #148]	; (2ffee354 <psci_print_power_domain_map+0x9c>)
2ffee2c0:	f004 fad0 	bl	2fff2864 <tf_log>
2ffee2c4:	7b23      	ldrb	r3, [r4, #12]
2ffee2c6:	2b00      	cmp	r3, #0
2ffee2c8:	d03b      	beq.n	2ffee342 <psci_print_power_domain_map+0x8a>
2ffee2ca:	2b01      	cmp	r3, #1
2ffee2cc:	bf0c      	ite	eq
2ffee2ce:	2201      	moveq	r2, #1
2ffee2d0:	2202      	movne	r2, #2
2ffee2d2:	4e21      	ldr	r6, [pc, #132]	; (2ffee358 <psci_print_power_domain_map+0xa0>)
2ffee2d4:	9300      	str	r3, [sp, #0]
2ffee2d6:	4821      	ldr	r0, [pc, #132]	; (2ffee35c <psci_print_power_domain_map+0xa4>)
2ffee2d8:	f856 3022 	ldr.w	r3, [r6, r2, lsl #2]
2ffee2dc:	7b61      	ldrb	r1, [r4, #13]
2ffee2de:	68a2      	ldr	r2, [r4, #8]
2ffee2e0:	f004 fac0 	bl	2fff2864 <tf_log>
2ffee2e4:	7f23      	ldrb	r3, [r4, #28]
2ffee2e6:	b373      	cbz	r3, 2ffee346 <psci_print_power_domain_map+0x8e>
2ffee2e8:	2b01      	cmp	r3, #1
2ffee2ea:	bf14      	ite	ne
2ffee2ec:	2202      	movne	r2, #2
2ffee2ee:	2201      	moveq	r2, #1
2ffee2f0:	9300      	str	r3, [sp, #0]
2ffee2f2:	481a      	ldr	r0, [pc, #104]	; (2ffee35c <psci_print_power_domain_map+0xa4>)
2ffee2f4:	f856 3022 	ldr.w	r3, [r6, r2, lsl #2]
2ffee2f8:	7f61      	ldrb	r1, [r4, #29]
2ffee2fa:	69a2      	ldr	r2, [r4, #24]
2ffee2fc:	2400      	movs	r4, #0
2ffee2fe:	4d18      	ldr	r5, [pc, #96]	; (2ffee360 <psci_print_power_domain_map+0xa8>)
2ffee300:	f004 fab0 	bl	2fff2864 <tf_log>
2ffee304:	4f17      	ldr	r7, [pc, #92]	; (2ffee364 <psci_print_power_domain_map+0xac>)
2ffee306:	4620      	mov	r0, r4
2ffee308:	f00a e98c 	blx	2fff8624 <_cpu_data_by_index>
2ffee30c:	7b03      	ldrb	r3, [r0, #12]
2ffee30e:	b11b      	cbz	r3, 2ffee318 <psci_print_power_domain_map+0x60>
2ffee310:	2b01      	cmp	r3, #1
2ffee312:	bf14      	ite	ne
2ffee314:	2302      	movne	r3, #2
2ffee316:	2301      	moveq	r3, #1
2ffee318:	f856 a023 	ldr.w	sl, [r6, r3, lsl #2]
2ffee31c:	4620      	mov	r0, r4
2ffee31e:	e9d5 8900 	ldrd	r8, r9, [r5]
2ffee322:	350c      	adds	r5, #12
2ffee324:	f00a e97e 	blx	2fff8624 <_cpu_data_by_index>
2ffee328:	7b03      	ldrb	r3, [r0, #12]
2ffee32a:	4642      	mov	r2, r8
2ffee32c:	4638      	mov	r0, r7
2ffee32e:	9302      	str	r3, [sp, #8]
2ffee330:	2300      	movs	r3, #0
2ffee332:	e9cd 9a00 	strd	r9, sl, [sp]
2ffee336:	f004 fa95 	bl	2fff2864 <tf_log>
2ffee33a:	b134      	cbz	r4, 2ffee34a <psci_print_power_domain_map+0x92>
2ffee33c:	b004      	add	sp, #16
2ffee33e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffee342:	461a      	mov	r2, r3
2ffee344:	e7c5      	b.n	2ffee2d2 <psci_print_power_domain_map+0x1a>
2ffee346:	461a      	mov	r2, r3
2ffee348:	e7d2      	b.n	2ffee2f0 <psci_print_power_domain_map+0x38>
2ffee34a:	2401      	movs	r4, #1
2ffee34c:	e7db      	b.n	2ffee306 <psci_print_power_domain_map+0x4e>
2ffee34e:	bf00      	nop
2ffee350:	2fffe398 	.word	0x2fffe398
2ffee354:	2fff9ebc 	.word	0x2fff9ebc
2ffee358:	2fff9f60 	.word	0x2fff9f60
2ffee35c:	2fff9ed5 	.word	0x2fff9ed5
2ffee360:	2fffe380 	.word	0x2fffe380
2ffee364:	2fff9f11 	.word	0x2fff9f11

2ffee368 <psci_do_pwrdown_sequence>:
2ffee368:	f00e b91e 	b.w	2fffc5a8 <__psci_do_pwrdown_cache_maintenance_from_thumb>

2ffee36c <psci_cpu_on>:
2ffee36c:	b570      	push	{r4, r5, r6, lr}
2ffee36e:	b08a      	sub	sp, #40	; 0x28
2ffee370:	4604      	mov	r4, r0
2ffee372:	460d      	mov	r5, r1
2ffee374:	4616      	mov	r6, r2
2ffee376:	f7ff fee9 	bl	2ffee14c <psci_validate_mpidr>
2ffee37a:	b958      	cbnz	r0, 2ffee394 <psci_cpu_on+0x28>
2ffee37c:	4632      	mov	r2, r6
2ffee37e:	4629      	mov	r1, r5
2ffee380:	a801      	add	r0, sp, #4
2ffee382:	f7ff feed 	bl	2ffee160 <psci_validate_entry_point>
2ffee386:	b918      	cbnz	r0, 2ffee390 <psci_cpu_on+0x24>
2ffee388:	a901      	add	r1, sp, #4
2ffee38a:	4620      	mov	r0, r4
2ffee38c:	f7ff fb78 	bl	2ffeda80 <psci_cpu_on_start>
2ffee390:	b00a      	add	sp, #40	; 0x28
2ffee392:	bd70      	pop	{r4, r5, r6, pc}
2ffee394:	f06f 0001 	mvn.w	r0, #1
2ffee398:	e7fa      	b.n	2ffee390 <psci_cpu_on+0x24>
	...

2ffee39c <psci_cpu_suspend>:
2ffee39c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffee3a0:	b08a      	sub	sp, #40	; 0x28
2ffee3a2:	4604      	mov	r4, r0
2ffee3a4:	460f      	mov	r7, r1
2ffee3a6:	492a      	ldr	r1, [pc, #168]	; (2ffee450 <psci_cpu_suspend+0xb4>)
2ffee3a8:	4690      	mov	r8, r2
2ffee3aa:	4668      	mov	r0, sp
2ffee3ac:	2202      	movs	r2, #2
2ffee3ae:	f00b fac5 	bl	2fff993c <memcpy>
2ffee3b2:	4669      	mov	r1, sp
2ffee3b4:	4620      	mov	r0, r4
2ffee3b6:	f7ff fd1d 	bl	2ffeddf4 <psci_validate_power_state>
2ffee3ba:	b158      	cbz	r0, 2ffee3d4 <psci_cpu_suspend+0x38>
2ffee3bc:	3002      	adds	r0, #2
2ffee3be:	d105      	bne.n	2ffee3cc <psci_cpu_suspend+0x30>
2ffee3c0:	f06f 0501 	mvn.w	r5, #1
2ffee3c4:	4628      	mov	r0, r5
2ffee3c6:	b00a      	add	sp, #40	; 0x28
2ffee3c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffee3cc:	2143      	movs	r1, #67	; 0x43
2ffee3ce:	4821      	ldr	r0, [pc, #132]	; (2ffee454 <psci_cpu_suspend+0xb8>)
2ffee3d0:	f00b fa8c 	bl	2fff98ec <__assert>
2ffee3d4:	f3c4 4400 	ubfx	r4, r4, #16, #1
2ffee3d8:	4668      	mov	r0, sp
2ffee3da:	4621      	mov	r1, r4
2ffee3dc:	f7ff fe58 	bl	2ffee090 <psci_validate_suspend_req>
2ffee3e0:	4605      	mov	r5, r0
2ffee3e2:	b108      	cbz	r0, 2ffee3e8 <psci_cpu_suspend+0x4c>
2ffee3e4:	214d      	movs	r1, #77	; 0x4d
2ffee3e6:	e7f2      	b.n	2ffee3ce <psci_cpu_suspend+0x32>
2ffee3e8:	4668      	mov	r0, sp
2ffee3ea:	f7ff fe47 	bl	2ffee07c <psci_find_target_suspend_lvl>
2ffee3ee:	2802      	cmp	r0, #2
2ffee3f0:	4606      	mov	r6, r0
2ffee3f2:	d106      	bne.n	2ffee402 <psci_cpu_suspend+0x66>
2ffee3f4:	4818      	ldr	r0, [pc, #96]	; (2ffee458 <psci_cpu_suspend+0xbc>)
2ffee3f6:	f004 fa35 	bl	2fff2864 <tf_log>
2ffee3fa:	f004 fad7 	bl	2fff29ac <console_flush>
2ffee3fe:	f00a ea3c 	blx	2fff8878 <do_panic>
2ffee402:	ea54 0300 	orrs.w	r3, r4, r0
2ffee406:	d111      	bne.n	2ffee42c <psci_cpu_suspend+0x90>
2ffee408:	4e14      	ldr	r6, [pc, #80]	; (2ffee45c <psci_cpu_suspend+0xc0>)
2ffee40a:	6833      	ldr	r3, [r6, #0]
2ffee40c:	681b      	ldr	r3, [r3, #0]
2ffee40e:	2b00      	cmp	r3, #0
2ffee410:	d0d6      	beq.n	2ffee3c0 <psci_cpu_suspend+0x24>
2ffee412:	f89d 4000 	ldrb.w	r4, [sp]
2ffee416:	f00a e8fe 	blx	2fff8614 <_cpu_data>
2ffee41a:	6833      	ldr	r3, [r6, #0]
2ffee41c:	7304      	strb	r4, [r0, #12]
2ffee41e:	4620      	mov	r0, r4
2ffee420:	681b      	ldr	r3, [r3, #0]
2ffee422:	4798      	blx	r3
2ffee424:	f00a e8f6 	blx	2fff8614 <_cpu_data>
2ffee428:	7305      	strb	r5, [r0, #12]
2ffee42a:	e7cb      	b.n	2ffee3c4 <psci_cpu_suspend+0x28>
2ffee42c:	b934      	cbnz	r4, 2ffee43c <psci_cpu_suspend+0xa0>
2ffee42e:	4623      	mov	r3, r4
2ffee430:	466a      	mov	r2, sp
2ffee432:	4631      	mov	r1, r6
2ffee434:	a801      	add	r0, sp, #4
2ffee436:	f7ff fc07 	bl	2ffedc48 <psci_cpu_suspend_start>
2ffee43a:	e7c3      	b.n	2ffee3c4 <psci_cpu_suspend+0x28>
2ffee43c:	4642      	mov	r2, r8
2ffee43e:	4639      	mov	r1, r7
2ffee440:	a801      	add	r0, sp, #4
2ffee442:	f7ff fe8d 	bl	2ffee160 <psci_validate_entry_point>
2ffee446:	2800      	cmp	r0, #0
2ffee448:	d0f1      	beq.n	2ffee42e <psci_cpu_suspend+0x92>
2ffee44a:	4605      	mov	r5, r0
2ffee44c:	e7ba      	b.n	2ffee3c4 <psci_cpu_suspend+0x28>
2ffee44e:	bf00      	nop
2ffee450:	2fff9fd4 	.word	0x2fff9fd4
2ffee454:	2fff9f6c 	.word	0x2fff9f6c
2ffee458:	2fff9f81 	.word	0x2fff9f81
2ffee45c:	2fffe3b8 	.word	0x2fffe3b8

2ffee460 <psci_system_suspend>:
2ffee460:	b530      	push	{r4, r5, lr}
2ffee462:	b08b      	sub	sp, #44	; 0x2c
2ffee464:	4604      	mov	r4, r0
2ffee466:	460d      	mov	r5, r1
2ffee468:	f7ff fcec 	bl	2ffede44 <psci_is_last_on_cpu>
2ffee46c:	b920      	cbnz	r0, 2ffee478 <psci_system_suspend+0x18>
2ffee46e:	f06f 0402 	mvn.w	r4, #2
2ffee472:	4620      	mov	r0, r4
2ffee474:	b00b      	add	sp, #44	; 0x2c
2ffee476:	bd30      	pop	{r4, r5, pc}
2ffee478:	4621      	mov	r1, r4
2ffee47a:	462a      	mov	r2, r5
2ffee47c:	a801      	add	r0, sp, #4
2ffee47e:	f7ff fe6f 	bl	2ffee160 <psci_validate_entry_point>
2ffee482:	4604      	mov	r4, r0
2ffee484:	2800      	cmp	r0, #0
2ffee486:	d1f4      	bne.n	2ffee472 <psci_system_suspend+0x12>
2ffee488:	4668      	mov	r0, sp
2ffee48a:	f7ff fccb 	bl	2ffede24 <psci_query_sys_suspend_pwrstate>
2ffee48e:	4668      	mov	r0, sp
2ffee490:	f7ff fdf4 	bl	2ffee07c <psci_find_target_suspend_lvl>
2ffee494:	2800      	cmp	r0, #0
2ffee496:	d0ea      	beq.n	2ffee46e <psci_system_suspend+0xe>
2ffee498:	2101      	movs	r1, #1
2ffee49a:	4668      	mov	r0, sp
2ffee49c:	f7ff fdf8 	bl	2ffee090 <psci_validate_suspend_req>
2ffee4a0:	4604      	mov	r4, r0
2ffee4a2:	b118      	cbz	r0, 2ffee4ac <psci_system_suspend+0x4c>
2ffee4a4:	21b4      	movs	r1, #180	; 0xb4
2ffee4a6:	4808      	ldr	r0, [pc, #32]	; (2ffee4c8 <psci_system_suspend+0x68>)
2ffee4a8:	f00b fa20 	bl	2fff98ec <__assert>
2ffee4ac:	f89d 3001 	ldrb.w	r3, [sp, #1]
2ffee4b0:	2b02      	cmp	r3, #2
2ffee4b2:	d001      	beq.n	2ffee4b8 <psci_system_suspend+0x58>
2ffee4b4:	21b6      	movs	r1, #182	; 0xb6
2ffee4b6:	e7f6      	b.n	2ffee4a6 <psci_system_suspend+0x46>
2ffee4b8:	2301      	movs	r3, #1
2ffee4ba:	466a      	mov	r2, sp
2ffee4bc:	4619      	mov	r1, r3
2ffee4be:	a801      	add	r0, sp, #4
2ffee4c0:	f7ff fbc2 	bl	2ffedc48 <psci_cpu_suspend_start>
2ffee4c4:	e7d5      	b.n	2ffee472 <psci_system_suspend+0x12>
2ffee4c6:	bf00      	nop
2ffee4c8:	2fff9f6c 	.word	0x2fff9f6c

2ffee4cc <psci_cpu_off>:
2ffee4cc:	b508      	push	{r3, lr}
2ffee4ce:	2001      	movs	r0, #1
2ffee4d0:	f7ff fa78 	bl	2ffed9c4 <psci_do_cpu_off>
2ffee4d4:	1cc3      	adds	r3, r0, #3
2ffee4d6:	d003      	beq.n	2ffee4e0 <psci_cpu_off+0x14>
2ffee4d8:	4802      	ldr	r0, [pc, #8]	; (2ffee4e4 <psci_cpu_off+0x18>)
2ffee4da:	21d6      	movs	r1, #214	; 0xd6
2ffee4dc:	f00b fa06 	bl	2fff98ec <__assert>
2ffee4e0:	bd08      	pop	{r3, pc}
2ffee4e2:	bf00      	nop
2ffee4e4:	2fff9f6c 	.word	0x2fff9f6c

2ffee4e8 <psci_affinity_info>:
2ffee4e8:	b510      	push	{r4, lr}
2ffee4ea:	b111      	cbz	r1, 2ffee4f2 <psci_affinity_info+0xa>
2ffee4ec:	f06f 0001 	mvn.w	r0, #1
2ffee4f0:	bd10      	pop	{r4, pc}
2ffee4f2:	f002 fc83 	bl	2fff0dfc <plat_core_pos_by_mpidr>
2ffee4f6:	1c43      	adds	r3, r0, #1
2ffee4f8:	4604      	mov	r4, r0
2ffee4fa:	d0f7      	beq.n	2ffee4ec <psci_affinity_info+0x4>
2ffee4fc:	f00a e892 	blx	2fff8624 <_cpu_data_by_index>
2ffee500:	2104      	movs	r1, #4
2ffee502:	4408      	add	r0, r1
2ffee504:	f00a ea54 	blx	2fff89b0 <flush_dcache_range>
2ffee508:	4620      	mov	r0, r4
2ffee50a:	f00a e88c 	blx	2fff8624 <_cpu_data_by_index>
2ffee50e:	6840      	ldr	r0, [r0, #4]
2ffee510:	e7ee      	b.n	2ffee4f0 <psci_affinity_info+0x8>
	...

2ffee514 <psci_migrate>:
2ffee514:	b513      	push	{r0, r1, r4, lr}
2ffee516:	4604      	mov	r4, r0
2ffee518:	a801      	add	r0, sp, #4
2ffee51a:	f7ff feb7 	bl	2ffee28c <psci_spd_migrate_info>
2ffee51e:	b138      	cbz	r0, 2ffee530 <psci_migrate+0x1c>
2ffee520:	2801      	cmp	r0, #1
2ffee522:	bf0c      	ite	eq
2ffee524:	f06f 0002 	mvneq.w	r0, #2
2ffee528:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2ffee52c:	b002      	add	sp, #8
2ffee52e:	bd10      	pop	{r4, pc}
2ffee530:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2ffee534:	9a01      	ldr	r2, [sp, #4]
2ffee536:	429a      	cmp	r2, r3
2ffee538:	d118      	bne.n	2ffee56c <psci_migrate+0x58>
2ffee53a:	4620      	mov	r0, r4
2ffee53c:	f7ff fe06 	bl	2ffee14c <psci_validate_mpidr>
2ffee540:	b9b8      	cbnz	r0, 2ffee572 <psci_migrate+0x5e>
2ffee542:	4b0d      	ldr	r3, [pc, #52]	; (2ffee578 <psci_migrate+0x64>)
2ffee544:	681b      	ldr	r3, [r3, #0]
2ffee546:	b10b      	cbz	r3, 2ffee54c <psci_migrate+0x38>
2ffee548:	695b      	ldr	r3, [r3, #20]
2ffee54a:	b923      	cbnz	r3, 2ffee556 <psci_migrate+0x42>
2ffee54c:	f44f 718a 	mov.w	r1, #276	; 0x114
2ffee550:	480a      	ldr	r0, [pc, #40]	; (2ffee57c <psci_migrate+0x68>)
2ffee552:	f00b f9cb 	bl	2fff98ec <__assert>
2ffee556:	ee10 0fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2ffee55a:	4621      	mov	r1, r4
2ffee55c:	4798      	blx	r3
2ffee55e:	2800      	cmp	r0, #0
2ffee560:	d0e4      	beq.n	2ffee52c <psci_migrate+0x18>
2ffee562:	1d83      	adds	r3, r0, #6
2ffee564:	d0e2      	beq.n	2ffee52c <psci_migrate+0x18>
2ffee566:	f240 1117 	movw	r1, #279	; 0x117
2ffee56a:	e7f1      	b.n	2ffee550 <psci_migrate+0x3c>
2ffee56c:	f06f 0006 	mvn.w	r0, #6
2ffee570:	e7dc      	b.n	2ffee52c <psci_migrate+0x18>
2ffee572:	f06f 0001 	mvn.w	r0, #1
2ffee576:	e7d9      	b.n	2ffee52c <psci_migrate+0x18>
2ffee578:	2fffe3c0 	.word	0x2fffe3c0
2ffee57c:	2fff9f6c 	.word	0x2fff9f6c

2ffee580 <psci_migrate_info_type>:
2ffee580:	b507      	push	{r0, r1, r2, lr}
2ffee582:	a801      	add	r0, sp, #4
2ffee584:	f7ff fe82 	bl	2ffee28c <psci_spd_migrate_info>
2ffee588:	b003      	add	sp, #12
2ffee58a:	f85d fb04 	ldr.w	pc, [sp], #4

2ffee58e <psci_migrate_info_up_cpu>:
2ffee58e:	b507      	push	{r0, r1, r2, lr}
2ffee590:	a801      	add	r0, sp, #4
2ffee592:	f7ff fe7b 	bl	2ffee28c <psci_spd_migrate_info>
2ffee596:	2801      	cmp	r0, #1
2ffee598:	bf8c      	ite	hi
2ffee59a:	f06f 0001 	mvnhi.w	r0, #1
2ffee59e:	9801      	ldrls	r0, [sp, #4]
2ffee5a0:	b003      	add	sp, #12
2ffee5a2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

2ffee5a8 <psci_node_hw_state>:
2ffee5a8:	b538      	push	{r3, r4, r5, lr}
2ffee5aa:	4605      	mov	r5, r0
2ffee5ac:	460c      	mov	r4, r1
2ffee5ae:	f7ff fdcd 	bl	2ffee14c <psci_validate_mpidr>
2ffee5b2:	b9a8      	cbnz	r0, 2ffee5e0 <psci_node_hw_state+0x38>
2ffee5b4:	2c01      	cmp	r4, #1
2ffee5b6:	d813      	bhi.n	2ffee5e0 <psci_node_hw_state+0x38>
2ffee5b8:	4b0b      	ldr	r3, [pc, #44]	; (2ffee5e8 <psci_node_hw_state+0x40>)
2ffee5ba:	681b      	ldr	r3, [r3, #0]
2ffee5bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
2ffee5be:	b923      	cbnz	r3, 2ffee5ca <psci_node_hw_state+0x22>
2ffee5c0:	f240 1145 	movw	r1, #325	; 0x145
2ffee5c4:	4809      	ldr	r0, [pc, #36]	; (2ffee5ec <psci_node_hw_state+0x44>)
2ffee5c6:	f00b f991 	bl	2fff98ec <__assert>
2ffee5ca:	4621      	mov	r1, r4
2ffee5cc:	4628      	mov	r0, r5
2ffee5ce:	4798      	blx	r3
2ffee5d0:	1c43      	adds	r3, r0, #1
2ffee5d2:	2b03      	cmp	r3, #3
2ffee5d4:	d906      	bls.n	2ffee5e4 <psci_node_hw_state+0x3c>
2ffee5d6:	3002      	adds	r0, #2
2ffee5d8:	d002      	beq.n	2ffee5e0 <psci_node_hw_state+0x38>
2ffee5da:	f240 1147 	movw	r1, #327	; 0x147
2ffee5de:	e7f1      	b.n	2ffee5c4 <psci_node_hw_state+0x1c>
2ffee5e0:	f06f 0001 	mvn.w	r0, #1
2ffee5e4:	bd38      	pop	{r3, r4, r5, pc}
2ffee5e6:	bf00      	nop
2ffee5e8:	2fffe3b8 	.word	0x2fffe3b8
2ffee5ec:	2fff9f6c 	.word	0x2fff9f6c

2ffee5f0 <psci_features>:
2ffee5f0:	4b16      	ldr	r3, [pc, #88]	; (2ffee64c <psci_features+0x5c>)
2ffee5f2:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
2ffee5f6:	b510      	push	{r4, lr}
2ffee5f8:	681b      	ldr	r3, [r3, #0]
2ffee5fa:	d021      	beq.n	2ffee640 <psci_features+0x50>
2ffee5fc:	0042      	lsls	r2, r0, #1
2ffee5fe:	bf42      	ittt	mi
2ffee600:	f023 437f 	bicmi.w	r3, r3, #4278190080	; 0xff000000
2ffee604:	f423 0368 	bicmi.w	r3, r3, #15204352	; 0xe80000
2ffee608:	f423 431f 	bicmi.w	r3, r3, #40704	; 0x9f00
2ffee60c:	f3c0 6205 	ubfx	r2, r0, #24, #6
2ffee610:	bf48      	it	mi
2ffee612:	f023 0345 	bicmi.w	r3, r3, #69	; 0x45
2ffee616:	2a04      	cmp	r2, #4
2ffee618:	d114      	bne.n	2ffee644 <psci_features+0x54>
2ffee61a:	0fc2      	lsrs	r2, r0, #31
2ffee61c:	f3c0 4107 	ubfx	r1, r0, #16, #8
2ffee620:	d010      	beq.n	2ffee644 <psci_features+0x54>
2ffee622:	f64f 74e0 	movw	r4, #65504	; 0xffe0
2ffee626:	4004      	ands	r4, r0
2ffee628:	4321      	orrs	r1, r4
2ffee62a:	d10b      	bne.n	2ffee644 <psci_features+0x54>
2ffee62c:	f000 001f 	and.w	r0, r0, #31
2ffee630:	fa02 f000 	lsl.w	r0, r2, r0
2ffee634:	4218      	tst	r0, r3
2ffee636:	bf0c      	ite	eq
2ffee638:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2ffee63c:	2000      	movne	r0, #0
2ffee63e:	bd10      	pop	{r4, pc}
2ffee640:	2000      	movs	r0, #0
2ffee642:	e7fc      	b.n	2ffee63e <psci_features+0x4e>
2ffee644:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee648:	e7f9      	b.n	2ffee63e <psci_features+0x4e>
2ffee64a:	bf00      	nop
2ffee64c:	2fffe3c4 	.word	0x2fffe3c4

2ffee650 <psci_smc_handler>:
2ffee650:	b538      	push	{r3, r4, r5, lr}
2ffee652:	4604      	mov	r4, r0
2ffee654:	4608      	mov	r0, r1
2ffee656:	4611      	mov	r1, r2
2ffee658:	461a      	mov	r2, r3
2ffee65a:	9b07      	ldr	r3, [sp, #28]
2ffee65c:	07dd      	lsls	r5, r3, #31
2ffee65e:	d556      	bpl.n	2ffee70e <psci_smc_handler+0xbe>
2ffee660:	f004 051f 	and.w	r5, r4, #31
2ffee664:	2301      	movs	r3, #1
2ffee666:	40ab      	lsls	r3, r5
2ffee668:	4d44      	ldr	r5, [pc, #272]	; (2ffee77c <psci_smc_handler+0x12c>)
2ffee66a:	682d      	ldr	r5, [r5, #0]
2ffee66c:	422b      	tst	r3, r5
2ffee66e:	d04e      	beq.n	2ffee70e <psci_smc_handler+0xbe>
2ffee670:	0063      	lsls	r3, r4, #1
2ffee672:	d44f      	bmi.n	2ffee714 <psci_smc_handler+0xc4>
2ffee674:	f104 43f8 	add.w	r3, r4, #2080374784	; 0x7c000000
2ffee678:	2b14      	cmp	r3, #20
2ffee67a:	d844      	bhi.n	2ffee706 <psci_smc_handler+0xb6>
2ffee67c:	e8df f003 	tbb	[pc, r3]
2ffee680:	130b0f7a 	.word	0x130b0f7a
2ffee684:	231f1b17 	.word	0x231f1b17
2ffee688:	4333312f 	.word	0x4333312f
2ffee68c:	432b2743 	.word	0x432b2743
2ffee690:	373f4343 	.word	0x373f4343
2ffee694:	3b          	.byte	0x3b
2ffee695:	00          	.byte	0x00
2ffee696:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee69a:	f7ff bf17 	b.w	2ffee4cc <psci_cpu_off>
2ffee69e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6a2:	f7ff be7b 	b.w	2ffee39c <psci_cpu_suspend>
2ffee6a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6aa:	f7ff be5f 	b.w	2ffee36c <psci_cpu_on>
2ffee6ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6b2:	f7ff bf19 	b.w	2ffee4e8 <psci_affinity_info>
2ffee6b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6ba:	f7ff bf2b 	b.w	2ffee514 <psci_migrate>
2ffee6be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6c2:	f7ff bf5d 	b.w	2ffee580 <psci_migrate_info_type>
2ffee6c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6ca:	f7ff bf60 	b.w	2ffee58e <psci_migrate_info_up_cpu>
2ffee6ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6d2:	f7ff bf69 	b.w	2ffee5a8 <psci_node_hw_state>
2ffee6d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6da:	f7ff bec1 	b.w	2ffee460 <psci_system_suspend>
2ffee6de:	f000 f979 	bl	2ffee9d4 <psci_system_off>
2ffee6e2:	f000 f993 	bl	2ffeea0c <psci_system_reset>
2ffee6e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6ea:	f7ff bf81 	b.w	2ffee5f0 <psci_features>
2ffee6ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6f2:	f000 b9df 	b.w	2ffeeab4 <psci_mem_protect>
2ffee6f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6fa:	f000 ba01 	b.w	2ffeeb00 <psci_mem_chk_range>
2ffee6fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee702:	f000 b99f 	b.w	2ffeea44 <psci_system_reset2>
2ffee706:	481e      	ldr	r0, [pc, #120]	; (2ffee780 <psci_smc_handler+0x130>)
2ffee708:	4621      	mov	r1, r4
2ffee70a:	f004 f8ab 	bl	2fff2864 <tf_log>
2ffee70e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee712:	bd38      	pop	{r3, r4, r5, pc}
2ffee714:	f104 5570 	add.w	r5, r4, #1006632960	; 0x3c000000
2ffee718:	3d01      	subs	r5, #1
2ffee71a:	2d13      	cmp	r5, #19
2ffee71c:	d8f3      	bhi.n	2ffee706 <psci_smc_handler+0xb6>
2ffee71e:	a301      	add	r3, pc, #4	; (adr r3, 2ffee724 <psci_smc_handler+0xd4>)
2ffee720:	f853 f025 	ldr.w	pc, [r3, r5, lsl #2]
2ffee724:	2ffee69f 	.word	0x2ffee69f
2ffee728:	2ffee707 	.word	0x2ffee707
2ffee72c:	2ffee6a7 	.word	0x2ffee6a7
2ffee730:	2ffee6af 	.word	0x2ffee6af
2ffee734:	2ffee6b7 	.word	0x2ffee6b7
2ffee738:	2ffee707 	.word	0x2ffee707
2ffee73c:	2ffee6c7 	.word	0x2ffee6c7
2ffee740:	2ffee707 	.word	0x2ffee707
2ffee744:	2ffee707 	.word	0x2ffee707
2ffee748:	2ffee707 	.word	0x2ffee707
2ffee74c:	2ffee707 	.word	0x2ffee707
2ffee750:	2ffee707 	.word	0x2ffee707
2ffee754:	2ffee6cf 	.word	0x2ffee6cf
2ffee758:	2ffee6d7 	.word	0x2ffee6d7
2ffee75c:	2ffee707 	.word	0x2ffee707
2ffee760:	2ffee707 	.word	0x2ffee707
2ffee764:	2ffee707 	.word	0x2ffee707
2ffee768:	2ffee6ff 	.word	0x2ffee6ff
2ffee76c:	2ffee707 	.word	0x2ffee707
2ffee770:	2ffee6f7 	.word	0x2ffee6f7
2ffee774:	f04f 1001 	mov.w	r0, #65537	; 0x10001
2ffee778:	e7cb      	b.n	2ffee712 <psci_smc_handler+0xc2>
2ffee77a:	bf00      	nop
2ffee77c:	2fffe3c4 	.word	0x2fffe3c4
2ffee780:	2fff9fb4 	.word	0x2fff9fb4

2ffee784 <psci_arch_setup>:
2ffee784:	b508      	push	{r3, lr}
2ffee786:	f004 fa14 	bl	2fff2bb2 <plat_get_syscnt_freq2>
2ffee78a:	ee0e 0f10 	mcr	15, 0, r0, cr14, cr0, {0}
2ffee78e:	f009 ef94 	blx	2fff86b8 <init_cpu_ops>
2ffee792:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee796:	f00d bf0b 	b.w	2fffc5b0 <__print_errata_status_from_thumb>
	...

2ffee79c <psci_setup>:
2ffee79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffee7a0:	4607      	mov	r7, r0
2ffee7a2:	b087      	sub	sp, #28
2ffee7a4:	b138      	cbz	r0, 2ffee7b6 <psci_setup+0x1a>
2ffee7a6:	6802      	ldr	r2, [r0, #0]
2ffee7a8:	4b7a      	ldr	r3, [pc, #488]	; (2ffee994 <psci_setup+0x1f8>)
2ffee7aa:	429a      	cmp	r2, r3
2ffee7ac:	d103      	bne.n	2ffee7b6 <psci_setup+0x1a>
2ffee7ae:	6844      	ldr	r4, [r0, #4]
2ffee7b0:	b90c      	cbnz	r4, 2ffee7b6 <psci_setup+0x1a>
2ffee7b2:	6883      	ldr	r3, [r0, #8]
2ffee7b4:	b91b      	cbnz	r3, 2ffee7be <psci_setup+0x22>
2ffee7b6:	21c1      	movs	r1, #193	; 0xc1
2ffee7b8:	4877      	ldr	r0, [pc, #476]	; (2ffee998 <psci_setup+0x1fc>)
2ffee7ba:	f00b f897 	bl	2fff98ec <__assert>
2ffee7be:	f04f 0801 	mov.w	r8, #1
2ffee7c2:	f04f 0b02 	mov.w	fp, #2
2ffee7c6:	4626      	mov	r6, r4
2ffee7c8:	46c1      	mov	r9, r8
2ffee7ca:	f7ff ffdb 	bl	2ffee784 <psci_arch_setup>
2ffee7ce:	f002 fb11 	bl	2fff0df4 <plat_get_power_domain_tree_desc>
2ffee7d2:	9001      	str	r0, [sp, #4]
2ffee7d4:	eb06 0308 	add.w	r3, r6, r8
2ffee7d8:	f04f 0800 	mov.w	r8, #0
2ffee7dc:	9302      	str	r3, [sp, #8]
2ffee7de:	46c2      	mov	sl, r8
2ffee7e0:	e00d      	b.n	2ffee7fe <psci_setup+0x62>
2ffee7e2:	2e02      	cmp	r6, #2
2ffee7e4:	dd01      	ble.n	2ffee7ea <psci_setup+0x4e>
2ffee7e6:	218b      	movs	r1, #139	; 0x8b
2ffee7e8:	e7e6      	b.n	2ffee7b8 <psci_setup+0x1c>
2ffee7ea:	9b01      	ldr	r3, [sp, #4]
2ffee7ec:	4654      	mov	r4, sl
2ffee7ee:	5d9b      	ldrb	r3, [r3, r6]
2ffee7f0:	eb03 020a 	add.w	r2, r3, sl
2ffee7f4:	4294      	cmp	r4, r2
2ffee7f6:	d344      	bcc.n	2ffee882 <psci_setup+0xe6>
2ffee7f8:	4498      	add	r8, r3
2ffee7fa:	3601      	adds	r6, #1
2ffee7fc:	46a2      	mov	sl, r4
2ffee7fe:	9b02      	ldr	r3, [sp, #8]
2ffee800:	42b3      	cmp	r3, r6
2ffee802:	d1ee      	bne.n	2ffee7e2 <psci_setup+0x46>
2ffee804:	f1bb 0f01 	cmp.w	fp, #1
2ffee808:	f04f 0900 	mov.w	r9, #0
2ffee80c:	d16d      	bne.n	2ffee8ea <psci_setup+0x14e>
2ffee80e:	2c02      	cmp	r4, #2
2ffee810:	d16e      	bne.n	2ffee8f0 <psci_setup+0x154>
2ffee812:	4c62      	ldr	r4, [pc, #392]	; (2ffee99c <psci_setup+0x200>)
2ffee814:	aa05      	add	r2, sp, #20
2ffee816:	4659      	mov	r1, fp
2ffee818:	4648      	mov	r0, r9
2ffee81a:	f7ff fb6d 	bl	2ffedef8 <psci_get_parent_pwr_domain_nodes>
2ffee81e:	9d05      	ldr	r5, [sp, #20]
2ffee820:	012b      	lsls	r3, r5, #4
2ffee822:	b10d      	cbz	r5, 2ffee828 <psci_setup+0x8c>
2ffee824:	f844 9003 	str.w	r9, [r4, r3]
2ffee828:	4423      	add	r3, r4
2ffee82a:	2101      	movs	r1, #1
2ffee82c:	4608      	mov	r0, r1
2ffee82e:	685a      	ldr	r2, [r3, #4]
2ffee830:	3201      	adds	r2, #1
2ffee832:	605a      	str	r2, [r3, #4]
2ffee834:	aa05      	add	r2, sp, #20
2ffee836:	f7ff fb5f 	bl	2ffedef8 <psci_get_parent_pwr_domain_nodes>
2ffee83a:	9b05      	ldr	r3, [sp, #20]
2ffee83c:	42ab      	cmp	r3, r5
2ffee83e:	ea4f 1303 	mov.w	r3, r3, lsl #4
2ffee842:	bf1c      	itt	ne
2ffee844:	2201      	movne	r2, #1
2ffee846:	50e2      	strne	r2, [r4, r3]
2ffee848:	441c      	add	r4, r3
2ffee84a:	6863      	ldr	r3, [r4, #4]
2ffee84c:	3301      	adds	r3, #1
2ffee84e:	6063      	str	r3, [r4, #4]
2ffee850:	ee10 4fb0 	mrc	15, 0, r4, cr0, cr0, {5}
2ffee854:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
2ffee858:	f00a eb92 	blx	2fff8f80 <plat_my_core_pos>
2ffee85c:	230c      	movs	r3, #12
2ffee85e:	4358      	muls	r0, r3
2ffee860:	4b4f      	ldr	r3, [pc, #316]	; (2ffee9a0 <psci_setup+0x204>)
2ffee862:	501c      	str	r4, [r3, r0]
2ffee864:	4c4f      	ldr	r4, [pc, #316]	; (2ffee9a4 <psci_setup+0x208>)
2ffee866:	f7ff fb15 	bl	2ffede94 <psci_init_req_local_pwr_states>
2ffee86a:	2001      	movs	r0, #1
2ffee86c:	f7ff fb5a 	bl	2ffedf24 <psci_set_pwr_domains_to_run>
2ffee870:	68b8      	ldr	r0, [r7, #8]
2ffee872:	4621      	mov	r1, r4
2ffee874:	f001 fe8a 	bl	2fff058c <plat_setup_psci_ops>
2ffee878:	6823      	ldr	r3, [r4, #0]
2ffee87a:	2b00      	cmp	r3, #0
2ffee87c:	d13a      	bne.n	2ffee8f4 <psci_setup+0x158>
2ffee87e:	21dd      	movs	r1, #221	; 0xdd
2ffee880:	e79a      	b.n	2ffee7b8 <psci_setup+0x1c>
2ffee882:	1e70      	subs	r0, r6, #1
2ffee884:	b2e5      	uxtb	r5, r4
2ffee886:	f1b9 0f00 	cmp.w	r9, #0
2ffee88a:	d00a      	beq.n	2ffee8a2 <psci_setup+0x106>
2ffee88c:	4a43      	ldr	r2, [pc, #268]	; (2ffee99c <psci_setup+0x200>)
2ffee88e:	eb02 1505 	add.w	r5, r2, r5, lsl #4
2ffee892:	2201      	movs	r2, #1
2ffee894:	736a      	strb	r2, [r5, #13]
2ffee896:	2202      	movs	r2, #2
2ffee898:	73ac      	strb	r4, [r5, #14]
2ffee89a:	60a8      	str	r0, [r5, #8]
2ffee89c:	732a      	strb	r2, [r5, #12]
2ffee89e:	3401      	adds	r4, #1
2ffee8a0:	e7a6      	b.n	2ffee7f0 <psci_setup+0x54>
2ffee8a2:	9303      	str	r3, [sp, #12]
2ffee8a4:	210c      	movs	r1, #12
2ffee8a6:	fb01 f205 	mul.w	r2, r1, r5
2ffee8aa:	4b3d      	ldr	r3, [pc, #244]	; (2ffee9a0 <psci_setup+0x204>)
2ffee8ac:	eb03 0c02 	add.w	ip, r3, r2
2ffee8b0:	f8cc 0004 	str.w	r0, [ip, #4]
2ffee8b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee8b8:	5098      	str	r0, [r3, r2]
2ffee8ba:	4628      	mov	r0, r5
2ffee8bc:	f009 eeb2 	blx	2fff8624 <_cpu_data_by_index>
2ffee8c0:	f04f 0c02 	mov.w	ip, #2
2ffee8c4:	2201      	movs	r2, #1
2ffee8c6:	6042      	str	r2, [r0, #4]
2ffee8c8:	210c      	movs	r1, #12
2ffee8ca:	f8c0 c008 	str.w	ip, [r0, #8]
2ffee8ce:	3004      	adds	r0, #4
2ffee8d0:	f880 c008 	strb.w	ip, [r0, #8]
2ffee8d4:	f00a e86c 	blx	2fff89b0 <flush_dcache_range>
2ffee8d8:	4b33      	ldr	r3, [pc, #204]	; (2ffee9a8 <psci_setup+0x20c>)
2ffee8da:	2201      	movs	r2, #1
2ffee8dc:	4628      	mov	r0, r5
2ffee8de:	eb03 1145 	add.w	r1, r3, r5, lsl #5
2ffee8e2:	f7fe fded 	bl	2ffed4c0 <cm_set_context_by_index>
2ffee8e6:	9b03      	ldr	r3, [sp, #12]
2ffee8e8:	e7d9      	b.n	2ffee89e <psci_setup+0x102>
2ffee8ea:	f04f 0b01 	mov.w	fp, #1
2ffee8ee:	e771      	b.n	2ffee7d4 <psci_setup+0x38>
2ffee8f0:	21a3      	movs	r1, #163	; 0xa3
2ffee8f2:	e761      	b.n	2ffee7b8 <psci_setup+0x1c>
2ffee8f4:	2104      	movs	r1, #4
2ffee8f6:	4620      	mov	r0, r4
2ffee8f8:	f00a e85a 	blx	2fff89b0 <flush_dcache_range>
2ffee8fc:	4b2b      	ldr	r3, [pc, #172]	; (2ffee9ac <psci_setup+0x210>)
2ffee8fe:	f240 4211 	movw	r2, #1041	; 0x411
2ffee902:	601a      	str	r2, [r3, #0]
2ffee904:	6822      	ldr	r2, [r4, #0]
2ffee906:	6891      	ldr	r1, [r2, #8]
2ffee908:	b111      	cbz	r1, 2ffee910 <psci_setup+0x174>
2ffee90a:	f240 4115 	movw	r1, #1045	; 0x415
2ffee90e:	6019      	str	r1, [r3, #0]
2ffee910:	6851      	ldr	r1, [r2, #4]
2ffee912:	b129      	cbz	r1, 2ffee920 <psci_setup+0x184>
2ffee914:	6951      	ldr	r1, [r2, #20]
2ffee916:	b119      	cbz	r1, 2ffee920 <psci_setup+0x184>
2ffee918:	6819      	ldr	r1, [r3, #0]
2ffee91a:	f041 0108 	orr.w	r1, r1, #8
2ffee91e:	6019      	str	r1, [r3, #0]
2ffee920:	6911      	ldr	r1, [r2, #16]
2ffee922:	b161      	cbz	r1, 2ffee93e <psci_setup+0x1a2>
2ffee924:	69d1      	ldr	r1, [r2, #28]
2ffee926:	b151      	cbz	r1, 2ffee93e <psci_setup+0x1a2>
2ffee928:	6819      	ldr	r1, [r3, #0]
2ffee92a:	f041 0002 	orr.w	r0, r1, #2
2ffee92e:	6018      	str	r0, [r3, #0]
2ffee930:	6b50      	ldr	r0, [r2, #52]	; 0x34
2ffee932:	b120      	cbz	r0, 2ffee93e <psci_setup+0x1a2>
2ffee934:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
2ffee938:	f041 0102 	orr.w	r1, r1, #2
2ffee93c:	6019      	str	r1, [r3, #0]
2ffee93e:	6a51      	ldr	r1, [r2, #36]	; 0x24
2ffee940:	b119      	cbz	r1, 2ffee94a <psci_setup+0x1ae>
2ffee942:	6819      	ldr	r1, [r3, #0]
2ffee944:	f441 7180 	orr.w	r1, r1, #256	; 0x100
2ffee948:	6019      	str	r1, [r3, #0]
2ffee94a:	6a91      	ldr	r1, [r2, #40]	; 0x28
2ffee94c:	b119      	cbz	r1, 2ffee956 <psci_setup+0x1ba>
2ffee94e:	6819      	ldr	r1, [r3, #0]
2ffee950:	f441 7100 	orr.w	r1, r1, #512	; 0x200
2ffee954:	6019      	str	r1, [r3, #0]
2ffee956:	6c11      	ldr	r1, [r2, #64]	; 0x40
2ffee958:	b119      	cbz	r1, 2ffee962 <psci_setup+0x1c6>
2ffee95a:	6819      	ldr	r1, [r3, #0]
2ffee95c:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
2ffee960:	6019      	str	r1, [r3, #0]
2ffee962:	6c91      	ldr	r1, [r2, #72]	; 0x48
2ffee964:	b129      	cbz	r1, 2ffee972 <psci_setup+0x1d6>
2ffee966:	6cd1      	ldr	r1, [r2, #76]	; 0x4c
2ffee968:	b119      	cbz	r1, 2ffee972 <psci_setup+0x1d6>
2ffee96a:	6819      	ldr	r1, [r3, #0]
2ffee96c:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
2ffee970:	6019      	str	r1, [r3, #0]
2ffee972:	6c51      	ldr	r1, [r2, #68]	; 0x44
2ffee974:	b119      	cbz	r1, 2ffee97e <psci_setup+0x1e2>
2ffee976:	6819      	ldr	r1, [r3, #0]
2ffee978:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
2ffee97c:	6019      	str	r1, [r3, #0]
2ffee97e:	6d12      	ldr	r2, [r2, #80]	; 0x50
2ffee980:	b11a      	cbz	r2, 2ffee98a <psci_setup+0x1ee>
2ffee982:	681a      	ldr	r2, [r3, #0]
2ffee984:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
2ffee988:	601a      	str	r2, [r3, #0]
2ffee98a:	2000      	movs	r0, #0
2ffee98c:	b007      	add	sp, #28
2ffee98e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffee992:	bf00      	nop
2ffee994:	000c0106 	.word	0x000c0106
2ffee998:	2fff9fd6 	.word	0x2fff9fd6
2ffee99c:	2fffe398 	.word	0x2fffe398
2ffee9a0:	2fffe380 	.word	0x2fffe380
2ffee9a4:	2fffe3b8 	.word	0x2fffe3b8
2ffee9a8:	2fffe3c8 	.word	0x2fffe3c8
2ffee9ac:	2fffe3c4 	.word	0x2fffe3c4

2ffee9b0 <psci_prepare_next_non_secure_ctx>:
2ffee9b0:	b508      	push	{r3, lr}
2ffee9b2:	6843      	ldr	r3, [r0, #4]
2ffee9b4:	07db      	lsls	r3, r3, #31
2ffee9b6:	d404      	bmi.n	2ffee9c2 <psci_prepare_next_non_secure_ctx+0x12>
2ffee9b8:	4805      	ldr	r0, [pc, #20]	; (2ffee9d0 <psci_prepare_next_non_secure_ctx+0x20>)
2ffee9ba:	f44f 7195 	mov.w	r1, #298	; 0x12a
2ffee9be:	f00a ff95 	bl	2fff98ec <__assert>
2ffee9c2:	f7fe ff83 	bl	2ffed8cc <cm_init_my_context>
2ffee9c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee9ca:	2001      	movs	r0, #1
2ffee9cc:	f7fe bf8a 	b.w	2ffed8e4 <cm_prepare_el3_exit>
2ffee9d0:	2fff9fd6 	.word	0x2fff9fd6

2ffee9d4 <psci_system_off>:
2ffee9d4:	4c0a      	ldr	r4, [pc, #40]	; (2ffeea00 <psci_system_off+0x2c>)
2ffee9d6:	b508      	push	{r3, lr}
2ffee9d8:	f7ff fc6e 	bl	2ffee2b8 <psci_print_power_domain_map>
2ffee9dc:	6823      	ldr	r3, [r4, #0]
2ffee9de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
2ffee9e0:	b91b      	cbnz	r3, 2ffee9ea <psci_system_off+0x16>
2ffee9e2:	4808      	ldr	r0, [pc, #32]	; (2ffeea04 <psci_system_off+0x30>)
2ffee9e4:	2115      	movs	r1, #21
2ffee9e6:	f00a ff81 	bl	2fff98ec <__assert>
2ffee9ea:	4b07      	ldr	r3, [pc, #28]	; (2ffeea08 <psci_system_off+0x34>)
2ffee9ec:	681b      	ldr	r3, [r3, #0]
2ffee9ee:	b113      	cbz	r3, 2ffee9f6 <psci_system_off+0x22>
2ffee9f0:	69db      	ldr	r3, [r3, #28]
2ffee9f2:	b103      	cbz	r3, 2ffee9f6 <psci_system_off+0x22>
2ffee9f4:	4798      	blx	r3
2ffee9f6:	f003 ffd9 	bl	2fff29ac <console_flush>
2ffee9fa:	6823      	ldr	r3, [r4, #0]
2ffee9fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
2ffee9fe:	4798      	blx	r3
2ffeea00:	2fffe3b8 	.word	0x2fffe3b8
2ffeea04:	2fff9fec 	.word	0x2fff9fec
2ffeea08:	2fffe3c0 	.word	0x2fffe3c0

2ffeea0c <psci_system_reset>:
2ffeea0c:	4c0a      	ldr	r4, [pc, #40]	; (2ffeea38 <psci_system_reset+0x2c>)
2ffeea0e:	b508      	push	{r3, lr}
2ffeea10:	f7ff fc52 	bl	2ffee2b8 <psci_print_power_domain_map>
2ffeea14:	6823      	ldr	r3, [r4, #0]
2ffeea16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
2ffeea18:	b91b      	cbnz	r3, 2ffeea22 <psci_system_reset+0x16>
2ffeea1a:	4808      	ldr	r0, [pc, #32]	; (2ffeea3c <psci_system_reset+0x30>)
2ffeea1c:	2128      	movs	r1, #40	; 0x28
2ffeea1e:	f00a ff65 	bl	2fff98ec <__assert>
2ffeea22:	4b07      	ldr	r3, [pc, #28]	; (2ffeea40 <psci_system_reset+0x34>)
2ffeea24:	681b      	ldr	r3, [r3, #0]
2ffeea26:	b113      	cbz	r3, 2ffeea2e <psci_system_reset+0x22>
2ffeea28:	6a1b      	ldr	r3, [r3, #32]
2ffeea2a:	b103      	cbz	r3, 2ffeea2e <psci_system_reset+0x22>
2ffeea2c:	4798      	blx	r3
2ffeea2e:	f003 ffbd 	bl	2fff29ac <console_flush>
2ffeea32:	6823      	ldr	r3, [r4, #0]
2ffeea34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
2ffeea36:	4798      	blx	r3
2ffeea38:	2fffe3b8 	.word	0x2fffe3b8
2ffeea3c:	2fff9fec 	.word	0x2fff9fec
2ffeea40:	2fffe3c0 	.word	0x2fffe3c0

2ffeea44 <psci_system_reset2>:
2ffeea44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeea48:	4604      	mov	r4, r0
2ffeea4a:	4e17      	ldr	r6, [pc, #92]	; (2ffeeaa8 <psci_system_reset2+0x64>)
2ffeea4c:	460d      	mov	r5, r1
2ffeea4e:	f7ff fc33 	bl	2ffee2b8 <psci_print_power_domain_map>
2ffeea52:	6833      	ldr	r3, [r6, #0]
2ffeea54:	6d1a      	ldr	r2, [r3, #80]	; 0x50
2ffeea56:	b91a      	cbnz	r2, 2ffeea60 <psci_system_reset2+0x1c>
2ffeea58:	4814      	ldr	r0, [pc, #80]	; (2ffeeaac <psci_system_reset2+0x68>)
2ffeea5a:	213d      	movs	r1, #61	; 0x3d
2ffeea5c:	f00a ff46 	bl	2fff98ec <__assert>
2ffeea60:	0fe7      	lsrs	r7, r4, #31
2ffeea62:	d00c      	beq.n	2ffeea7e <psci_system_reset2+0x3a>
2ffeea64:	4b12      	ldr	r3, [pc, #72]	; (2ffeeab0 <psci_system_reset2+0x6c>)
2ffeea66:	681b      	ldr	r3, [r3, #0]
2ffeea68:	b9a3      	cbnz	r3, 2ffeea94 <psci_system_reset2+0x50>
2ffeea6a:	f003 ff9f 	bl	2fff29ac <console_flush>
2ffeea6e:	6833      	ldr	r3, [r6, #0]
2ffeea70:	462a      	mov	r2, r5
2ffeea72:	4621      	mov	r1, r4
2ffeea74:	4638      	mov	r0, r7
2ffeea76:	6d1b      	ldr	r3, [r3, #80]	; 0x50
2ffeea78:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffeea7c:	4718      	bx	r3
2ffeea7e:	b974      	cbnz	r4, 2ffeea9e <psci_system_reset2+0x5a>
2ffeea80:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
2ffeea82:	2b00      	cmp	r3, #0
2ffeea84:	d0ee      	beq.n	2ffeea64 <psci_system_reset2+0x20>
2ffeea86:	4620      	mov	r0, r4
2ffeea88:	4798      	blx	r3
2ffeea8a:	2800      	cmp	r0, #0
2ffeea8c:	daea      	bge.n	2ffeea64 <psci_system_reset2+0x20>
2ffeea8e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffeea92:	e006      	b.n	2ffeeaa2 <psci_system_reset2+0x5e>
2ffeea94:	6a1b      	ldr	r3, [r3, #32]
2ffeea96:	2b00      	cmp	r3, #0
2ffeea98:	d0e7      	beq.n	2ffeea6a <psci_system_reset2+0x26>
2ffeea9a:	4798      	blx	r3
2ffeea9c:	e7e5      	b.n	2ffeea6a <psci_system_reset2+0x26>
2ffeea9e:	f06f 0001 	mvn.w	r0, #1
2ffeeaa2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeeaa6:	bf00      	nop
2ffeeaa8:	2fffe3b8 	.word	0x2fffe3b8
2ffeeaac:	2fff9fec 	.word	0x2fff9fec
2ffeeab0:	2fffe3c0 	.word	0x2fffe3c0

2ffeeab4 <psci_mem_protect>:
2ffeeab4:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffeeab6:	4604      	mov	r4, r0
2ffeeab8:	4d0f      	ldr	r5, [pc, #60]	; (2ffeeaf8 <psci_mem_protect+0x44>)
2ffeeaba:	682a      	ldr	r2, [r5, #0]
2ffeeabc:	6c93      	ldr	r3, [r2, #72]	; 0x48
2ffeeabe:	b91b      	cbnz	r3, 2ffeeac8 <psci_mem_protect+0x14>
2ffeeac0:	2112      	movs	r1, #18
2ffeeac2:	480e      	ldr	r0, [pc, #56]	; (2ffeeafc <psci_mem_protect+0x48>)
2ffeeac4:	f00a ff12 	bl	2fff98ec <__assert>
2ffeeac8:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
2ffeeaca:	b90a      	cbnz	r2, 2ffeead0 <psci_mem_protect+0x1c>
2ffeeacc:	2113      	movs	r1, #19
2ffeeace:	e7f8      	b.n	2ffeeac2 <psci_mem_protect+0xe>
2ffeead0:	a801      	add	r0, sp, #4
2ffeead2:	4798      	blx	r3
2ffeead4:	2800      	cmp	r0, #0
2ffeead6:	da03      	bge.n	2ffeeae0 <psci_mem_protect+0x2c>
2ffeead8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffeeadc:	b003      	add	sp, #12
2ffeeade:	bd30      	pop	{r4, r5, pc}
2ffeeae0:	682b      	ldr	r3, [r5, #0]
2ffeeae2:	4620      	mov	r0, r4
2ffeeae4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
2ffeeae6:	4798      	blx	r3
2ffeeae8:	2800      	cmp	r0, #0
2ffeeaea:	dbf5      	blt.n	2ffeead8 <psci_mem_protect+0x24>
2ffeeaec:	9801      	ldr	r0, [sp, #4]
2ffeeaee:	3800      	subs	r0, #0
2ffeeaf0:	bf18      	it	ne
2ffeeaf2:	2001      	movne	r0, #1
2ffeeaf4:	e7f2      	b.n	2ffeeadc <psci_mem_protect+0x28>
2ffeeaf6:	bf00      	nop
2ffeeaf8:	2fffe3b8 	.word	0x2fffe3b8
2ffeeafc:	2fffa007 	.word	0x2fffa007

2ffeeb00 <psci_mem_chk_range>:
2ffeeb00:	b510      	push	{r4, lr}
2ffeeb02:	4c0a      	ldr	r4, [pc, #40]	; (2ffeeb2c <psci_mem_chk_range+0x2c>)
2ffeeb04:	6824      	ldr	r4, [r4, #0]
2ffeeb06:	6c64      	ldr	r4, [r4, #68]	; 0x44
2ffeeb08:	b91c      	cbnz	r4, 2ffeeb12 <psci_mem_chk_range+0x12>
2ffeeb0a:	4809      	ldr	r0, [pc, #36]	; (2ffeeb30 <psci_mem_chk_range+0x30>)
2ffeeb0c:	2121      	movs	r1, #33	; 0x21
2ffeeb0e:	f00a feed 	bl	2fff98ec <__assert>
2ffeeb12:	b911      	cbnz	r1, 2ffeeb1a <psci_mem_chk_range+0x1a>
2ffeeb14:	f06f 0002 	mvn.w	r0, #2
2ffeeb18:	bd10      	pop	{r4, pc}
2ffeeb1a:	424b      	negs	r3, r1
2ffeeb1c:	4283      	cmp	r3, r0
2ffeeb1e:	d3f9      	bcc.n	2ffeeb14 <psci_mem_chk_range+0x14>
2ffeeb20:	47a0      	blx	r4
2ffeeb22:	2800      	cmp	r0, #0
2ffeeb24:	dbf6      	blt.n	2ffeeb14 <psci_mem_chk_range+0x14>
2ffeeb26:	2000      	movs	r0, #0
2ffeeb28:	e7f6      	b.n	2ffeeb18 <psci_mem_chk_range+0x18>
2ffeeb2a:	bf00      	nop
2ffeeb2c:	2fffe3b8 	.word	0x2fffe3b8
2ffeeb30:	2fffa007 	.word	0x2fffa007

2ffeeb34 <bakery_lock_get>:
2ffeeb34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffeeb36:	4604      	mov	r4, r0
2ffeeb38:	f00a ea22 	blx	2fff8f80 <plat_my_core_pos>
2ffeeb3c:	ee11 2f10 	mrc	15, 0, r2, cr1, cr0, {0}
2ffeeb40:	4e39      	ldr	r6, [pc, #228]	; (2ffeec28 <bakery_lock_get+0xf4>)
2ffeeb42:	f002 0204 	and.w	r2, r2, #4
2ffeeb46:	4b39      	ldr	r3, [pc, #228]	; (2ffeec2c <bakery_lock_get+0xf8>)
2ffeeb48:	4625      	mov	r5, r4
2ffeeb4a:	1af6      	subs	r6, r6, r3
2ffeeb4c:	fb06 fc00 	mul.w	ip, r6, r0
2ffeeb50:	eb1c 0704 	adds.w	r7, ip, r4
2ffeeb54:	d103      	bne.n	2ffeeb5e <bakery_lock_get+0x2a>
2ffeeb56:	216e      	movs	r1, #110	; 0x6e
2ffeeb58:	4835      	ldr	r0, [pc, #212]	; (2ffeec30 <bakery_lock_get+0xfc>)
2ffeeb5a:	f00a fec7 	bl	2fff98ec <__assert>
2ffeeb5e:	b10a      	cbz	r2, 2ffeeb64 <bakery_lock_get+0x30>
2ffeeb60:	ee07 7f3e 	mcr	15, 0, r7, cr7, cr14, {1}
2ffeeb64:	f83c 1004 	ldrh.w	r1, [ip, r4]
2ffeeb68:	f3c1 014e 	ubfx	r1, r1, #1, #15
2ffeeb6c:	b109      	cbz	r1, 2ffeeb72 <bakery_lock_get+0x3e>
2ffeeb6e:	2171      	movs	r1, #113	; 0x71
2ffeeb70:	e7f2      	b.n	2ffeeb58 <bakery_lock_get+0x24>
2ffeeb72:	2301      	movs	r3, #1
2ffeeb74:	f82c 3004 	strh.w	r3, [ip, r4]
2ffeeb78:	b1f2      	cbz	r2, 2ffeebb8 <bakery_lock_get+0x84>
2ffeeb7a:	ee07 7f3a 	mcr	15, 0, r7, cr7, cr10, {1}
2ffeeb7e:	f3bf 8f4b 	dsb	ish
2ffeeb82:	b1f8      	cbz	r0, 2ffeebc4 <bakery_lock_get+0x90>
2ffeeb84:	b314      	cbz	r4, 2ffeebcc <bakery_lock_get+0x98>
2ffeeb86:	b9d2      	cbnz	r2, 2ffeebbe <bakery_lock_get+0x8a>
2ffeeb88:	8823      	ldrh	r3, [r4, #0]
2ffeeb8a:	2801      	cmp	r0, #1
2ffeeb8c:	f3c3 034e 	ubfx	r3, r3, #1, #15
2ffeeb90:	d119      	bne.n	2ffeebc6 <bakery_lock_get+0x92>
2ffeeb92:	3301      	adds	r3, #1
2ffeeb94:	ea4f 0e43 	mov.w	lr, r3, lsl #1
2ffeeb98:	fa1f fe8e 	uxth.w	lr, lr
2ffeeb9c:	f82c e004 	strh.w	lr, [ip, r4]
2ffeeba0:	b30a      	cbz	r2, 2ffeebe6 <bakery_lock_get+0xb2>
2ffeeba2:	ee07 7f3a 	mcr	15, 0, r7, cr7, cr10, {1}
2ffeeba6:	f3bf 8f4b 	dsb	ish
2ffeebaa:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
2ffeebae:	4288      	cmp	r0, r1
2ffeebb0:	d034      	beq.n	2ffeec1c <bakery_lock_get+0xe8>
2ffeebb2:	b9ed      	cbnz	r5, 2ffeebf0 <bakery_lock_get+0xbc>
2ffeebb4:	21c1      	movs	r1, #193	; 0xc1
2ffeebb6:	e7cf      	b.n	2ffeeb58 <bakery_lock_get+0x24>
2ffeebb8:	ee07 7f36 	mcr	15, 0, r7, cr7, cr6, {1}
2ffeebbc:	e7df      	b.n	2ffeeb7e <bakery_lock_get+0x4a>
2ffeebbe:	ee07 4f3e 	mcr	15, 0, r4, cr7, cr14, {1}
2ffeebc2:	e7e1      	b.n	2ffeeb88 <bakery_lock_get+0x54>
2ffeebc4:	4603      	mov	r3, r0
2ffeebc6:	eb14 0e06 	adds.w	lr, r4, r6
2ffeebca:	d101      	bne.n	2ffeebd0 <bakery_lock_get+0x9c>
2ffeebcc:	2189      	movs	r1, #137	; 0x89
2ffeebce:	e7c3      	b.n	2ffeeb58 <bakery_lock_get+0x24>
2ffeebd0:	b10a      	cbz	r2, 2ffeebd6 <bakery_lock_get+0xa2>
2ffeebd2:	ee07 ef3e 	mcr	15, 0, lr, cr7, cr14, {1}
2ffeebd6:	f8be e000 	ldrh.w	lr, [lr]
2ffeebda:	f3ce 0e4e 	ubfx	lr, lr, #1, #15
2ffeebde:	4573      	cmp	r3, lr
2ffeebe0:	bf38      	it	cc
2ffeebe2:	4673      	movcc	r3, lr
2ffeebe4:	e7d5      	b.n	2ffeeb92 <bakery_lock_get+0x5e>
2ffeebe6:	ee07 7f36 	mcr	15, 0, r7, cr7, cr6, {1}
2ffeebea:	e7dc      	b.n	2ffeeba6 <bakery_lock_get+0x72>
2ffeebec:	2101      	movs	r1, #1
2ffeebee:	e7de      	b.n	2ffeebae <bakery_lock_get+0x7a>
2ffeebf0:	b10a      	cbz	r2, 2ffeebf6 <bakery_lock_get+0xc2>
2ffeebf2:	ee07 5f3e 	mcr	15, 0, r5, cr7, cr14, {1}
2ffeebf6:	882f      	ldrh	r7, [r5, #0]
2ffeebf8:	b2bc      	uxth	r4, r7
2ffeebfa:	07ff      	lsls	r7, r7, #31
2ffeebfc:	d4f8      	bmi.n	2ffeebf0 <bakery_lock_get+0xbc>
2ffeebfe:	0864      	lsrs	r4, r4, #1
2ffeec00:	d00c      	beq.n	2ffeec1c <bakery_lock_get+0xe8>
2ffeec02:	ea41 2704 	orr.w	r7, r1, r4, lsl #8
2ffeec06:	42bb      	cmp	r3, r7
2ffeec08:	d908      	bls.n	2ffeec1c <bakery_lock_get+0xe8>
2ffeec0a:	bf20      	wfe
2ffeec0c:	b10a      	cbz	r2, 2ffeec12 <bakery_lock_get+0xde>
2ffeec0e:	ee07 5f3e 	mcr	15, 0, r5, cr7, cr14, {1}
2ffeec12:	882f      	ldrh	r7, [r5, #0]
2ffeec14:	f3c7 074e 	ubfx	r7, r7, #1, #15
2ffeec18:	42bc      	cmp	r4, r7
2ffeec1a:	d0f6      	beq.n	2ffeec0a <bakery_lock_get+0xd6>
2ffeec1c:	4435      	add	r5, r6
2ffeec1e:	2901      	cmp	r1, #1
2ffeec20:	d1e4      	bne.n	2ffeebec <bakery_lock_get+0xb8>
2ffeec22:	f3bf 8f5f 	dmb	sy
2ffeec26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffeec28:	2fffed00 	.word	0x2fffed00
2ffeec2c:	2fffecc0 	.word	0x2fffecc0
2ffeec30:	2fffa023 	.word	0x2fffa023

2ffeec34 <bakery_lock_release>:
2ffeec34:	b538      	push	{r3, r4, r5, lr}
2ffeec36:	4604      	mov	r4, r0
2ffeec38:	ee11 5f10 	mrc	15, 0, r5, cr1, cr0, {0}
2ffeec3c:	f005 0504 	and.w	r5, r5, #4
2ffeec40:	f00a e99e 	blx	2fff8f80 <plat_my_core_pos>
2ffeec44:	4a0e      	ldr	r2, [pc, #56]	; (2ffeec80 <bakery_lock_release+0x4c>)
2ffeec46:	4b0f      	ldr	r3, [pc, #60]	; (2ffeec84 <bakery_lock_release+0x50>)
2ffeec48:	1a9b      	subs	r3, r3, r2
2ffeec4a:	4343      	muls	r3, r0
2ffeec4c:	18e2      	adds	r2, r4, r3
2ffeec4e:	b10d      	cbz	r5, 2ffeec54 <bakery_lock_release+0x20>
2ffeec50:	ee07 2f3e 	mcr	15, 0, r2, cr7, cr14, {1}
2ffeec54:	5ae1      	ldrh	r1, [r4, r3]
2ffeec56:	f3c1 014e 	ubfx	r1, r1, #1, #15
2ffeec5a:	b919      	cbnz	r1, 2ffeec64 <bakery_lock_release+0x30>
2ffeec5c:	480a      	ldr	r0, [pc, #40]	; (2ffeec88 <bakery_lock_release+0x54>)
2ffeec5e:	21ef      	movs	r1, #239	; 0xef
2ffeec60:	f00a fe44 	bl	2fff98ec <__assert>
2ffeec64:	f3bf 8f5e 	dmb	st
2ffeec68:	2100      	movs	r1, #0
2ffeec6a:	52e1      	strh	r1, [r4, r3]
2ffeec6c:	b12d      	cbz	r5, 2ffeec7a <bakery_lock_release+0x46>
2ffeec6e:	ee07 2f3a 	mcr	15, 0, r2, cr7, cr10, {1}
2ffeec72:	f3bf 8f4b 	dsb	ish
2ffeec76:	bf40      	sev
2ffeec78:	bd38      	pop	{r3, r4, r5, pc}
2ffeec7a:	ee07 2f36 	mcr	15, 0, r2, cr7, cr6, {1}
2ffeec7e:	e7f8      	b.n	2ffeec72 <bakery_lock_release+0x3e>
2ffeec80:	2fffecc0 	.word	0x2fffecc0
2ffeec84:	2fffed00 	.word	0x2fffed00
2ffeec88:	2fffa023 	.word	0x2fffa023

2ffeec8c <trim_increase>:
2ffeec8c:	6903      	ldr	r3, [r0, #16]
2ffeec8e:	1e5a      	subs	r2, r3, #1
2ffeec90:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
2ffeec94:	2a00      	cmp	r2, #0
2ffeec96:	da01      	bge.n	2ffeec9c <trim_increase+0x10>
2ffeec98:	4608      	mov	r0, r1
2ffeec9a:	4770      	bx	lr
2ffeec9c:	6a58      	ldr	r0, [r3, #36]	; 0x24
2ffeec9e:	4288      	cmp	r0, r1
2ffeeca0:	d8fb      	bhi.n	2ffeec9a <trim_increase+0xe>
2ffeeca2:	6a18      	ldr	r0, [r3, #32]
2ffeeca4:	3b08      	subs	r3, #8
2ffeeca6:	4288      	cmp	r0, r1
2ffeeca8:	d901      	bls.n	2ffeecae <trim_increase+0x22>
2ffeecaa:	1c48      	adds	r0, r1, #1
2ffeecac:	4770      	bx	lr
2ffeecae:	3a01      	subs	r2, #1
2ffeecb0:	e7f0      	b.n	2ffeec94 <trim_increase+0x8>

2ffeecb2 <trim_table_init>:
2ffeecb2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeecb6:	4604      	mov	r4, r0
2ffeecb8:	6843      	ldr	r3, [r0, #4]
2ffeecba:	2600      	movs	r6, #0
2ffeecbc:	6882      	ldr	r2, [r0, #8]
2ffeecbe:	f8d0 a000 	ldr.w	sl, [r0]
2ffeecc2:	eb03 0902 	add.w	r9, r3, r2
2ffeecc6:	68c2      	ldr	r2, [r0, #12]
2ffeecc8:	eb03 0802 	add.w	r8, r3, r2
2ffeeccc:	f83a 5b02 	ldrh.w	r5, [sl], #2
2ffeecd0:	b13d      	cbz	r5, 2ffeece2 <trim_table_init+0x30>
2ffeecd2:	f8ba 7000 	ldrh.w	r7, [sl]
2ffeecd6:	45b9      	cmp	r9, r7
2ffeecd8:	d901      	bls.n	2ffeecde <trim_table_init+0x2c>
2ffeecda:	45a8      	cmp	r8, r5
2ffeecdc:	d304      	bcc.n	2ffeece8 <trim_table_init+0x36>
2ffeecde:	2e00      	cmp	r6, #0
2ffeece0:	d0f4      	beq.n	2ffeeccc <trim_table_init+0x1a>
2ffeece2:	6126      	str	r6, [r4, #16]
2ffeece4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeece8:	3701      	adds	r7, #1
2ffeecea:	4547      	cmp	r7, r8
2ffeecec:	bf38      	it	cc
2ffeecee:	4647      	movcc	r7, r8
2ffeecf0:	b926      	cbnz	r6, 2ffeecfc <trim_table_init+0x4a>
2ffeecf2:	f8c4 9028 	str.w	r9, [r4, #40]	; 0x28
2ffeecf6:	2601      	movs	r6, #1
2ffeecf8:	62e7      	str	r7, [r4, #44]	; 0x2c
2ffeecfa:	e7e7      	b.n	2ffeeccc <trim_table_init+0x1a>
2ffeecfc:	6a23      	ldr	r3, [r4, #32]
2ffeecfe:	1c68      	adds	r0, r5, #1
2ffeed00:	4798      	blx	r3
2ffeed02:	69e3      	ldr	r3, [r4, #28]
2ffeed04:	4798      	blx	r3
2ffeed06:	4683      	mov	fp, r0
2ffeed08:	6863      	ldr	r3, [r4, #4]
2ffeed0a:	4629      	mov	r1, r5
2ffeed0c:	68e2      	ldr	r2, [r4, #12]
2ffeed0e:	3d01      	subs	r5, #1
2ffeed10:	4413      	add	r3, r2
2ffeed12:	4299      	cmp	r1, r3
2ffeed14:	d201      	bcs.n	2ffeed1a <trim_table_init+0x68>
2ffeed16:	460d      	mov	r5, r1
2ffeed18:	e006      	b.n	2ffeed28 <trim_table_init+0x76>
2ffeed1a:	6a23      	ldr	r3, [r4, #32]
2ffeed1c:	4628      	mov	r0, r5
2ffeed1e:	4798      	blx	r3
2ffeed20:	69e3      	ldr	r3, [r4, #28]
2ffeed22:	4798      	blx	r3
2ffeed24:	4583      	cmp	fp, r0
2ffeed26:	d3ef      	bcc.n	2ffeed08 <trim_table_init+0x56>
2ffeed28:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
2ffeed2c:	3d01      	subs	r5, #1
2ffeed2e:	3601      	adds	r6, #1
2ffeed30:	629d      	str	r5, [r3, #40]	; 0x28
2ffeed32:	62df      	str	r7, [r3, #44]	; 0x2c
2ffeed34:	e7ca      	b.n	2ffeeccc <trim_table_init+0x1a>
	...

2ffeed38 <csi_get_trimed_cal>:
2ffeed38:	b508      	push	{r3, lr}
2ffeed3a:	f003 ff49 	bl	2fff2bd0 <stm32mp_rcc_base>
2ffeed3e:	4b05      	ldr	r3, [pc, #20]	; (2ffeed54 <csi_get_trimed_cal+0x1c>)
2ffeed40:	69c0      	ldr	r0, [r0, #28]
2ffeed42:	689a      	ldr	r2, [r3, #8]
2ffeed44:	f3c0 2004 	ubfx	r0, r0, #8, #5
2ffeed48:	685b      	ldr	r3, [r3, #4]
2ffeed4a:	1a80      	subs	r0, r0, r2
2ffeed4c:	4418      	add	r0, r3
2ffeed4e:	3801      	subs	r0, #1
2ffeed50:	bd08      	pop	{r3, pc}
2ffeed52:	bf00      	nop
2ffeed54:	2fffd044 	.word	0x2fffd044

2ffeed58 <csi_set_trim>:
2ffeed58:	4b08      	ldr	r3, [pc, #32]	; (2ffeed7c <csi_set_trim+0x24>)
2ffeed5a:	b510      	push	{r4, lr}
2ffeed5c:	685c      	ldr	r4, [r3, #4]
2ffeed5e:	1b04      	subs	r4, r0, r4
2ffeed60:	6898      	ldr	r0, [r3, #8]
2ffeed62:	4404      	add	r4, r0
2ffeed64:	f003 ff34 	bl	2fff2bd0 <stm32mp_rcc_base>
2ffeed68:	69c3      	ldr	r3, [r0, #28]
2ffeed6a:	3401      	adds	r4, #1
2ffeed6c:	0224      	lsls	r4, r4, #8
2ffeed6e:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
2ffeed72:	f404 54f8 	and.w	r4, r4, #7936	; 0x1f00
2ffeed76:	431c      	orrs	r4, r3
2ffeed78:	61c4      	str	r4, [r0, #28]
2ffeed7a:	bd10      	pop	{r4, pc}
2ffeed7c:	2fffd044 	.word	0x2fffd044

2ffeed80 <hsi_get_trimed_cal>:
2ffeed80:	b508      	push	{r3, lr}
2ffeed82:	f003 ff25 	bl	2fff2bd0 <stm32mp_rcc_base>
2ffeed86:	4a04      	ldr	r2, [pc, #16]	; (2ffeed98 <hsi_get_trimed_cal+0x18>)
2ffeed88:	6983      	ldr	r3, [r0, #24]
2ffeed8a:	6850      	ldr	r0, [r2, #4]
2ffeed8c:	f343 2306 	sbfx	r3, r3, #8, #7
2ffeed90:	4418      	add	r0, r3
2ffeed92:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
2ffeed96:	bd08      	pop	{r3, pc}
2ffeed98:	2fffd0ec 	.word	0x2fffd0ec

2ffeed9c <hsi_set_trim>:
2ffeed9c:	4b07      	ldr	r3, [pc, #28]	; (2ffeedbc <hsi_set_trim+0x20>)
2ffeed9e:	b510      	push	{r4, lr}
2ffeeda0:	685c      	ldr	r4, [r3, #4]
2ffeeda2:	1b04      	subs	r4, r0, r4
2ffeeda4:	f003 ff14 	bl	2fff2bd0 <stm32mp_rcc_base>
2ffeeda8:	6983      	ldr	r3, [r0, #24]
2ffeedaa:	0224      	lsls	r4, r4, #8
2ffeedac:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
2ffeedb0:	f404 44fe 	and.w	r4, r4, #32512	; 0x7f00
2ffeedb4:	431c      	orrs	r4, r3
2ffeedb6:	6184      	str	r4, [r0, #24]
2ffeedb8:	bd10      	pop	{r4, pc}
2ffeedba:	bf00      	nop
2ffeedbc:	2fffd0ec 	.word	0x2fffd0ec

2ffeedc0 <rcc_calibration>:
2ffeedc0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeedc4:	4604      	mov	r4, r0
2ffeedc6:	69c3      	ldr	r3, [r0, #28]
2ffeedc8:	4798      	blx	r3
2ffeedca:	6967      	ldr	r7, [r4, #20]
2ffeedcc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2ffeedd0:	69a3      	ldr	r3, [r4, #24]
2ffeedd2:	4606      	mov	r6, r0
2ffeedd4:	437b      	muls	r3, r7
2ffeedd6:	fbb3 f3f2 	udiv	r3, r3, r2
2ffeedda:	eba7 0a03 	sub.w	sl, r7, r3
2ffeedde:	4550      	cmp	r0, sl
2ffeede0:	441f      	add	r7, r3
2ffeede2:	d301      	bcc.n	2ffeede8 <rcc_calibration+0x28>
2ffeede4:	42b8      	cmp	r0, r7
2ffeede6:	d929      	bls.n	2ffeee3c <rcc_calibration+0x7c>
2ffeede8:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffeedea:	4798      	blx	r3
2ffeedec:	4605      	mov	r5, r0
2ffeedee:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2ffeedf2:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffeedf6:	f242 7010 	movw	r0, #10000	; 0x2710
2ffeedfa:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
2ffeedfe:	e9cd 2300 	strd	r2, r3, [sp]
2ffeee02:	f8dd 8000 	ldr.w	r8, [sp]
2ffeee06:	2300      	movs	r3, #0
2ffeee08:	4a48      	ldr	r2, [pc, #288]	; (2ffeef2c <rcc_calibration+0x16c>)
2ffeee0a:	fba1 0100 	umull	r0, r1, r1, r0
2ffeee0e:	f009 eed2 	blx	2fff8bb4 <__aeabi_uldivmod>
2ffeee12:	9b01      	ldr	r3, [sp, #4]
2ffeee14:	eb10 0808 	adds.w	r8, r0, r8
2ffeee18:	eb41 0b03 	adc.w	fp, r1, r3
2ffeee1c:	6963      	ldr	r3, [r4, #20]
2ffeee1e:	42b3      	cmp	r3, r6
2ffeee20:	d90f      	bls.n	2ffeee42 <rcc_calibration+0x82>
2ffeee22:	4629      	mov	r1, r5
2ffeee24:	4620      	mov	r0, r4
2ffeee26:	f7ff ff31 	bl	2ffeec8c <trim_increase>
2ffeee2a:	6a22      	ldr	r2, [r4, #32]
2ffeee2c:	9000      	str	r0, [sp, #0]
2ffeee2e:	4790      	blx	r2
2ffeee30:	69e2      	ldr	r2, [r4, #28]
2ffeee32:	4790      	blx	r2
2ffeee34:	9b00      	ldr	r3, [sp, #0]
2ffeee36:	4606      	mov	r6, r0
2ffeee38:	b9a8      	cbnz	r0, 2ffeee66 <rcc_calibration+0xa6>
2ffeee3a:	6160      	str	r0, [r4, #20]
2ffeee3c:	b003      	add	sp, #12
2ffeee3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeee42:	6926      	ldr	r6, [r4, #16]
2ffeee44:	4623      	mov	r3, r4
2ffeee46:	2200      	movs	r2, #0
2ffeee48:	42b2      	cmp	r2, r6
2ffeee4a:	d101      	bne.n	2ffeee50 <rcc_calibration+0x90>
2ffeee4c:	4628      	mov	r0, r5
2ffeee4e:	e7ec      	b.n	2ffeee2a <rcc_calibration+0x6a>
2ffeee50:	6a98      	ldr	r0, [r3, #40]	; 0x28
2ffeee52:	4285      	cmp	r5, r0
2ffeee54:	d8e9      	bhi.n	2ffeee2a <rcc_calibration+0x6a>
2ffeee56:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
2ffeee58:	3308      	adds	r3, #8
2ffeee5a:	428d      	cmp	r5, r1
2ffeee5c:	d901      	bls.n	2ffeee62 <rcc_calibration+0xa2>
2ffeee5e:	1e68      	subs	r0, r5, #1
2ffeee60:	e7e3      	b.n	2ffeee2a <rcc_calibration+0x6a>
2ffeee62:	3201      	adds	r2, #1
2ffeee64:	e7f0      	b.n	2ffeee48 <rcc_calibration+0x88>
2ffeee66:	6961      	ldr	r1, [r4, #20]
2ffeee68:	4281      	cmp	r1, r0
2ffeee6a:	bf34      	ite	cc
2ffeee6c:	1a41      	subcc	r1, r0, r1
2ffeee6e:	1a09      	subcs	r1, r1, r0
2ffeee70:	4589      	cmp	r9, r1
2ffeee72:	bf84      	itt	hi
2ffeee74:	4689      	movhi	r9, r1
2ffeee76:	461d      	movhi	r5, r3
2ffeee78:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffeee7c:	4590      	cmp	r8, r2
2ffeee7e:	eb7b 0303 	sbcs.w	r3, fp, r3
2ffeee82:	d301      	bcc.n	2ffeee88 <rcc_calibration+0xc8>
2ffeee84:	4589      	cmp	r9, r1
2ffeee86:	d0c9      	beq.n	2ffeee1c <rcc_calibration+0x5c>
2ffeee88:	6a23      	ldr	r3, [r4, #32]
2ffeee8a:	4628      	mov	r0, r5
2ffeee8c:	4798      	blx	r3
2ffeee8e:	69e3      	ldr	r3, [r4, #28]
2ffeee90:	4798      	blx	r3
2ffeee92:	4582      	cmp	sl, r0
2ffeee94:	4602      	mov	r2, r0
2ffeee96:	d801      	bhi.n	2ffeee9c <rcc_calibration+0xdc>
2ffeee98:	4287      	cmp	r7, r0
2ffeee9a:	d2cf      	bcs.n	2ffeee3c <rcc_calibration+0x7c>
2ffeee9c:	6a21      	ldr	r1, [r4, #32]
2ffeee9e:	462b      	mov	r3, r5
2ffeeea0:	4823      	ldr	r0, [pc, #140]	; (2ffeef30 <rcc_calibration+0x170>)
2ffeeea2:	f8df 8090 	ldr.w	r8, [pc, #144]	; 2ffeef34 <rcc_calibration+0x174>
2ffeeea6:	4e24      	ldr	r6, [pc, #144]	; (2ffeef38 <rcc_calibration+0x178>)
2ffeeea8:	4541      	cmp	r1, r8
2ffeeeaa:	bf0c      	ite	eq
2ffeeeac:	4631      	moveq	r1, r6
2ffeeeae:	4601      	movne	r1, r0
2ffeeeb0:	4822      	ldr	r0, [pc, #136]	; (2ffeef3c <rcc_calibration+0x17c>)
2ffeeeb2:	f003 fcd7 	bl	2fff2864 <tf_log>
2ffeeeb6:	6921      	ldr	r1, [r4, #16]
2ffeeeb8:	4622      	mov	r2, r4
2ffeeeba:	2300      	movs	r3, #0
2ffeeebc:	428b      	cmp	r3, r1
2ffeeebe:	d101      	bne.n	2ffeeec4 <rcc_calibration+0x104>
2ffeeec0:	462e      	mov	r6, r5
2ffeeec2:	e007      	b.n	2ffeeed4 <rcc_calibration+0x114>
2ffeeec4:	6a96      	ldr	r6, [r2, #40]	; 0x28
2ffeeec6:	42b5      	cmp	r5, r6
2ffeeec8:	d804      	bhi.n	2ffeeed4 <rcc_calibration+0x114>
2ffeeeca:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
2ffeeecc:	3208      	adds	r2, #8
2ffeeece:	4285      	cmp	r5, r0
2ffeeed0:	d929      	bls.n	2ffeef26 <rcc_calibration+0x166>
2ffeeed2:	1e6e      	subs	r6, r5, #1
2ffeeed4:	6a23      	ldr	r3, [r4, #32]
2ffeeed6:	4630      	mov	r0, r6
2ffeeed8:	f8df 9054 	ldr.w	r9, [pc, #84]	; 2ffeef30 <rcc_calibration+0x170>
2ffeeedc:	4798      	blx	r3
2ffeeede:	4f16      	ldr	r7, [pc, #88]	; (2ffeef38 <rcc_calibration+0x178>)
2ffeeee0:	6a23      	ldr	r3, [r4, #32]
2ffeeee2:	4543      	cmp	r3, r8
2ffeeee4:	bf0c      	ite	eq
2ffeeee6:	46ba      	moveq	sl, r7
2ffeeee8:	46ca      	movne	sl, r9
2ffeeeea:	69e3      	ldr	r3, [r4, #28]
2ffeeeec:	4798      	blx	r3
2ffeeeee:	4602      	mov	r2, r0
2ffeeef0:	4633      	mov	r3, r6
2ffeeef2:	4812      	ldr	r0, [pc, #72]	; (2ffeef3c <rcc_calibration+0x17c>)
2ffeeef4:	4651      	mov	r1, sl
2ffeeef6:	f003 fcb5 	bl	2fff2864 <tf_log>
2ffeeefa:	4629      	mov	r1, r5
2ffeeefc:	4620      	mov	r0, r4
2ffeeefe:	f7ff fec5 	bl	2ffeec8c <trim_increase>
2ffeef02:	6a23      	ldr	r3, [r4, #32]
2ffeef04:	4606      	mov	r6, r0
2ffeef06:	4798      	blx	r3
2ffeef08:	6a23      	ldr	r3, [r4, #32]
2ffeef0a:	4543      	cmp	r3, r8
2ffeef0c:	bf18      	it	ne
2ffeef0e:	464f      	movne	r7, r9
2ffeef10:	69e3      	ldr	r3, [r4, #28]
2ffeef12:	4798      	blx	r3
2ffeef14:	4602      	mov	r2, r0
2ffeef16:	4633      	mov	r3, r6
2ffeef18:	4808      	ldr	r0, [pc, #32]	; (2ffeef3c <rcc_calibration+0x17c>)
2ffeef1a:	4639      	mov	r1, r7
2ffeef1c:	b003      	add	sp, #12
2ffeef1e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeef22:	f003 bc9f 	b.w	2fff2864 <tf_log>
2ffeef26:	3301      	adds	r3, #1
2ffeef28:	e7c8      	b.n	2ffeeebc <rcc_calibration+0xfc>
2ffeef2a:	bf00      	nop
2ffeef2c:	000f4240 	.word	0x000f4240
2ffeef30:	2fffa04d 	.word	0x2fffa04d
2ffeef34:	2ffeed9d 	.word	0x2ffeed9d
2ffeef38:	2fffa049 	.word	0x2fffa049
2ffeef3c:	2fffa051 	.word	0x2fffa051

2ffeef40 <stm32mp1_calib_get_wakeup>:
2ffeef40:	4b01      	ldr	r3, [pc, #4]	; (2ffeef48 <stm32mp1_calib_get_wakeup+0x8>)
2ffeef42:	7818      	ldrb	r0, [r3, #0]
2ffeef44:	4770      	bx	lr
2ffeef46:	bf00      	nop
2ffeef48:	2fffe408 	.word	0x2fffe408

2ffeef4c <stm32mp1_calib_set_wakeup>:
2ffeef4c:	4b01      	ldr	r3, [pc, #4]	; (2ffeef54 <stm32mp1_calib_set_wakeup+0x8>)
2ffeef4e:	7018      	strb	r0, [r3, #0]
2ffeef50:	4770      	bx	lr
2ffeef52:	bf00      	nop
2ffeef54:	2fffe408 	.word	0x2fffe408

2ffeef58 <stm32mp1_calib_it_handler>:
2ffeef58:	b538      	push	{r3, r4, r5, lr}
2ffeef5a:	4605      	mov	r5, r0
2ffeef5c:	f003 fe38 	bl	2fff2bd0 <stm32mp_rcc_base>
2ffeef60:	2db0      	cmp	r5, #176	; 0xb0
2ffeef62:	4604      	mov	r4, r0
2ffeef64:	d00e      	beq.n	2ffeef84 <stm32mp1_calib_it_handler+0x2c>
2ffeef66:	2db1      	cmp	r5, #177	; 0xb1
2ffeef68:	d11e      	bne.n	2ffeefa8 <stm32mp1_calib_it_handler+0x50>
2ffeef6a:	2080      	movs	r0, #128	; 0x80
2ffeef6c:	f002 face 	bl	2fff150c <plat_ic_set_priority_mask>
2ffeef70:	f8d4 3418 	ldr.w	r3, [r4, #1048]	; 0x418
2ffeef74:	2201      	movs	r2, #1
2ffeef76:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2ffeef7a:	f8c4 3418 	str.w	r3, [r4, #1048]	; 0x418
2ffeef7e:	4b13      	ldr	r3, [pc, #76]	; (2ffeefcc <stm32mp1_calib_it_handler+0x74>)
2ffeef80:	701a      	strb	r2, [r3, #0]
2ffeef82:	bd38      	pop	{r3, r4, r5, pc}
2ffeef84:	4b11      	ldr	r3, [pc, #68]	; (2ffeefcc <stm32mp1_calib_it_handler+0x74>)
2ffeef86:	2200      	movs	r2, #0
2ffeef88:	701a      	strb	r2, [r3, #0]
2ffeef8a:	4b11      	ldr	r3, [pc, #68]	; (2ffeefd0 <stm32mp1_calib_it_handler+0x78>)
2ffeef8c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
2ffeef8e:	0791      	lsls	r1, r2, #30
2ffeef90:	bf42      	ittt	mi
2ffeef92:	6cda      	ldrmi	r2, [r3, #76]	; 0x4c
2ffeef94:	f042 0202 	orrmi.w	r2, r2, #2
2ffeef98:	64da      	strmi	r2, [r3, #76]	; 0x4c
2ffeef9a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
2ffeef9c:	0792      	lsls	r2, r2, #30
2ffeef9e:	bf42      	ittt	mi
2ffeefa0:	6d1a      	ldrmi	r2, [r3, #80]	; 0x50
2ffeefa2:	f042 0202 	orrmi.w	r2, r2, #2
2ffeefa6:	651a      	strmi	r2, [r3, #80]	; 0x50
2ffeefa8:	480a      	ldr	r0, [pc, #40]	; (2ffeefd4 <stm32mp1_calib_it_handler+0x7c>)
2ffeefaa:	6943      	ldr	r3, [r0, #20]
2ffeefac:	b10b      	cbz	r3, 2ffeefb2 <stm32mp1_calib_it_handler+0x5a>
2ffeefae:	f7ff ff07 	bl	2ffeedc0 <rcc_calibration>
2ffeefb2:	4809      	ldr	r0, [pc, #36]	; (2ffeefd8 <stm32mp1_calib_it_handler+0x80>)
2ffeefb4:	6943      	ldr	r3, [r0, #20]
2ffeefb6:	b10b      	cbz	r3, 2ffeefbc <stm32mp1_calib_it_handler+0x64>
2ffeefb8:	f7ff ff02 	bl	2ffeedc0 <rcc_calibration>
2ffeefbc:	4b07      	ldr	r3, [pc, #28]	; (2ffeefdc <stm32mp1_calib_it_handler+0x84>)
2ffeefbe:	681b      	ldr	r3, [r3, #0]
2ffeefc0:	2b00      	cmp	r3, #0
2ffeefc2:	d0de      	beq.n	2ffeef82 <stm32mp1_calib_it_handler+0x2a>
2ffeefc4:	ee0e 3f12 	mcr	15, 0, r3, cr14, cr2, {0}
2ffeefc8:	e7db      	b.n	2ffeef82 <stm32mp1_calib_it_handler+0x2a>
2ffeefca:	bf00      	nop
2ffeefcc:	2fffe408 	.word	0x2fffe408
2ffeefd0:	5000d000 	.word	0x5000d000
2ffeefd4:	2fffd0ec 	.word	0x2fffd0ec
2ffeefd8:	2fffd044 	.word	0x2fffd044
2ffeefdc:	2fffe40c 	.word	0x2fffe40c

2ffeefe0 <stm32mp1_calib_start_hsi_cal>:
2ffeefe0:	4805      	ldr	r0, [pc, #20]	; (2ffeeff8 <stm32mp1_calib_start_hsi_cal+0x18>)
2ffeefe2:	b508      	push	{r3, lr}
2ffeefe4:	6943      	ldr	r3, [r0, #20]
2ffeefe6:	b11b      	cbz	r3, 2ffeeff0 <stm32mp1_calib_start_hsi_cal+0x10>
2ffeefe8:	f7ff feea 	bl	2ffeedc0 <rcc_calibration>
2ffeefec:	2000      	movs	r0, #0
2ffeefee:	bd08      	pop	{r3, pc}
2ffeeff0:	f06f 0001 	mvn.w	r0, #1
2ffeeff4:	e7fb      	b.n	2ffeefee <stm32mp1_calib_start_hsi_cal+0xe>
2ffeeff6:	bf00      	nop
2ffeeff8:	2fffd0ec 	.word	0x2fffd0ec

2ffeeffc <stm32mp1_calib_start_csi_cal>:
2ffeeffc:	4805      	ldr	r0, [pc, #20]	; (2ffef014 <stm32mp1_calib_start_csi_cal+0x18>)
2ffeeffe:	b508      	push	{r3, lr}
2ffef000:	6943      	ldr	r3, [r0, #20]
2ffef002:	b11b      	cbz	r3, 2ffef00c <stm32mp1_calib_start_csi_cal+0x10>
2ffef004:	f7ff fedc 	bl	2ffeedc0 <rcc_calibration>
2ffef008:	2000      	movs	r0, #0
2ffef00a:	bd08      	pop	{r3, pc}
2ffef00c:	f06f 0001 	mvn.w	r0, #1
2ffef010:	e7fb      	b.n	2ffef00a <stm32mp1_calib_start_csi_cal+0xe>
2ffef012:	bf00      	nop
2ffef014:	2fffd044 	.word	0x2fffd044

2ffef018 <stm32mp1_calib_init>:
2ffef018:	b513      	push	{r0, r1, r4, lr}
2ffef01a:	a901      	add	r1, sp, #4
2ffef01c:	482a      	ldr	r0, [pc, #168]	; (2ffef0c8 <stm32mp1_calib_init+0xb0>)
2ffef01e:	f005 fb6e 	bl	2fff46fe <fdt_rcc_read_prop>
2ffef022:	b1d0      	cbz	r0, 2ffef05a <stm32mp1_calib_init+0x42>
2ffef024:	4c29      	ldr	r4, [pc, #164]	; (2ffef0cc <stm32mp1_calib_init+0xb4>)
2ffef026:	2100      	movs	r1, #0
2ffef028:	f104 001c 	add.w	r0, r4, #28
2ffef02c:	f000 fe5a 	bl	2ffefce4 <stm32_timer_freq_func>
2ffef030:	69e3      	ldr	r3, [r4, #28]
2ffef032:	b193      	cbz	r3, 2ffef05a <stm32mp1_calib_init+0x42>
2ffef034:	2004      	movs	r0, #4
2ffef036:	f006 f8a9 	bl	2fff518c <stm32mp_clk_get_rate>
2ffef03a:	6160      	str	r0, [r4, #20]
2ffef03c:	f003 fdc8 	bl	2fff2bd0 <stm32mp_rcc_base>
2ffef040:	6983      	ldr	r3, [r0, #24]
2ffef042:	4620      	mov	r0, r4
2ffef044:	f3c3 4308 	ubfx	r3, r3, #16, #9
2ffef048:	6063      	str	r3, [r4, #4]
2ffef04a:	f7ff fe32 	bl	2ffeecb2 <trim_table_init>
2ffef04e:	6860      	ldr	r0, [r4, #4]
2ffef050:	6a23      	ldr	r3, [r4, #32]
2ffef052:	4798      	blx	r3
2ffef054:	4620      	mov	r0, r4
2ffef056:	f7ff feb3 	bl	2ffeedc0 <rcc_calibration>
2ffef05a:	481d      	ldr	r0, [pc, #116]	; (2ffef0d0 <stm32mp1_calib_init+0xb8>)
2ffef05c:	a901      	add	r1, sp, #4
2ffef05e:	f005 fb4e 	bl	2fff46fe <fdt_rcc_read_prop>
2ffef062:	b1d0      	cbz	r0, 2ffef09a <stm32mp1_calib_init+0x82>
2ffef064:	4c1b      	ldr	r4, [pc, #108]	; (2ffef0d4 <stm32mp1_calib_init+0xbc>)
2ffef066:	2101      	movs	r1, #1
2ffef068:	f104 001c 	add.w	r0, r4, #28
2ffef06c:	f000 fe3a 	bl	2ffefce4 <stm32_timer_freq_func>
2ffef070:	69e3      	ldr	r3, [r4, #28]
2ffef072:	b193      	cbz	r3, 2ffef09a <stm32mp1_calib_init+0x82>
2ffef074:	2001      	movs	r0, #1
2ffef076:	f006 f889 	bl	2fff518c <stm32mp_clk_get_rate>
2ffef07a:	6160      	str	r0, [r4, #20]
2ffef07c:	f003 fda8 	bl	2fff2bd0 <stm32mp_rcc_base>
2ffef080:	69c3      	ldr	r3, [r0, #28]
2ffef082:	4620      	mov	r0, r4
2ffef084:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffef088:	6063      	str	r3, [r4, #4]
2ffef08a:	f7ff fe12 	bl	2ffeecb2 <trim_table_init>
2ffef08e:	6860      	ldr	r0, [r4, #4]
2ffef090:	6a23      	ldr	r3, [r4, #32]
2ffef092:	4798      	blx	r3
2ffef094:	4620      	mov	r0, r4
2ffef096:	f7ff fe93 	bl	2ffeedc0 <rcc_calibration>
2ffef09a:	480f      	ldr	r0, [pc, #60]	; (2ffef0d8 <stm32mp1_calib_init+0xc0>)
2ffef09c:	2100      	movs	r1, #0
2ffef09e:	f005 fb1f 	bl	2fff46e0 <fdt_rcc_read_uint32_default>
2ffef0a2:	4604      	mov	r4, r0
2ffef0a4:	f003 fd85 	bl	2fff2bb2 <plat_get_syscnt_freq2>
2ffef0a8:	4360      	muls	r0, r4
2ffef0aa:	4b0c      	ldr	r3, [pc, #48]	; (2ffef0dc <stm32mp1_calib_init+0xc4>)
2ffef0ac:	6018      	str	r0, [r3, #0]
2ffef0ae:	b120      	cbz	r0, 2ffef0ba <stm32mp1_calib_init+0xa2>
2ffef0b0:	ee0e 0f12 	mcr	15, 0, r0, cr14, cr2, {0}
2ffef0b4:	2301      	movs	r3, #1
2ffef0b6:	ee0e 3f32 	mcr	15, 0, r3, cr14, cr2, {1}
2ffef0ba:	4809      	ldr	r0, [pc, #36]	; (2ffef0e0 <stm32mp1_calib_init+0xc8>)
2ffef0bc:	b002      	add	sp, #8
2ffef0be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef0c2:	f005 bb34 	b.w	2fff472e <fdt_rcc_enable_it>
2ffef0c6:	bf00      	nop
2ffef0c8:	2fffa076 	.word	0x2fffa076
2ffef0cc:	2fffd0ec 	.word	0x2fffd0ec
2ffef0d0:	2fffa081 	.word	0x2fffa081
2ffef0d4:	2fffd044 	.word	0x2fffd044
2ffef0d8:	2fffa08c 	.word	0x2fffa08c
2ffef0dc:	2fffe40c 	.word	0x2fffe40c
2ffef0e0:	2fffa097 	.word	0x2fffa097

2ffef0e4 <etzpc_configure_decprot>:
2ffef0e4:	4a0d      	ldr	r2, [pc, #52]	; (2ffef11c <etzpc_configure_decprot+0x38>)
2ffef0e6:	b538      	push	{r3, r4, r5, lr}
2ffef0e8:	0043      	lsls	r3, r0, #1
2ffef0ea:	0905      	lsrs	r5, r0, #4
2ffef0ec:	f003 041e 	and.w	r4, r3, #30
2ffef0f0:	f001 0303 	and.w	r3, r1, #3
2ffef0f4:	7991      	ldrb	r1, [r2, #6]
2ffef0f6:	4288      	cmp	r0, r1
2ffef0f8:	d303      	bcc.n	2ffef102 <etzpc_configure_decprot+0x1e>
2ffef0fa:	4809      	ldr	r0, [pc, #36]	; (2ffef120 <etzpc_configure_decprot+0x3c>)
2ffef0fc:	2198      	movs	r1, #152	; 0x98
2ffef0fe:	f00a fbf5 	bl	2fff98ec <__assert>
2ffef102:	6812      	ldr	r2, [r2, #0]
2ffef104:	2003      	movs	r0, #3
2ffef106:	40a3      	lsls	r3, r4
2ffef108:	40a0      	lsls	r0, r4
2ffef10a:	3210      	adds	r2, #16
2ffef10c:	f852 1025 	ldr.w	r1, [r2, r5, lsl #2]
2ffef110:	ea21 0100 	bic.w	r1, r1, r0
2ffef114:	4319      	orrs	r1, r3
2ffef116:	f842 1025 	str.w	r1, [r2, r5, lsl #2]
2ffef11a:	bd38      	pop	{r3, r4, r5, pc}
2ffef11c:	2fffe410 	.word	0x2fffe410
2ffef120:	2fffa09f 	.word	0x2fffa09f

2ffef124 <etzpc_get_decprot>:
2ffef124:	490a      	ldr	r1, [pc, #40]	; (2ffef150 <etzpc_get_decprot+0x2c>)
2ffef126:	b510      	push	{r4, lr}
2ffef128:	680a      	ldr	r2, [r1, #0]
2ffef12a:	7989      	ldrb	r1, [r1, #6]
2ffef12c:	0043      	lsls	r3, r0, #1
2ffef12e:	3210      	adds	r2, #16
2ffef130:	4288      	cmp	r0, r1
2ffef132:	f003 031e 	and.w	r3, r3, #30
2ffef136:	ea4f 1410 	mov.w	r4, r0, lsr #4
2ffef13a:	d303      	bcc.n	2ffef144 <etzpc_get_decprot+0x20>
2ffef13c:	4805      	ldr	r0, [pc, #20]	; (2ffef154 <etzpc_get_decprot+0x30>)
2ffef13e:	21ab      	movs	r1, #171	; 0xab
2ffef140:	f00a fbd4 	bl	2fff98ec <__assert>
2ffef144:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
2ffef148:	40d8      	lsrs	r0, r3
2ffef14a:	f000 0003 	and.w	r0, r0, #3
2ffef14e:	bd10      	pop	{r4, pc}
2ffef150:	2fffe410 	.word	0x2fffe410
2ffef154:	2fffa09f 	.word	0x2fffa09f

2ffef158 <etzpc_lock_decprot>:
2ffef158:	4909      	ldr	r1, [pc, #36]	; (2ffef180 <etzpc_lock_decprot+0x28>)
2ffef15a:	f000 031f 	and.w	r3, r0, #31
2ffef15e:	2201      	movs	r2, #1
2ffef160:	b510      	push	{r4, lr}
2ffef162:	409a      	lsls	r2, r3
2ffef164:	680b      	ldr	r3, [r1, #0]
2ffef166:	7989      	ldrb	r1, [r1, #6]
2ffef168:	0944      	lsrs	r4, r0, #5
2ffef16a:	3330      	adds	r3, #48	; 0x30
2ffef16c:	4288      	cmp	r0, r1
2ffef16e:	d303      	bcc.n	2ffef178 <etzpc_lock_decprot+0x20>
2ffef170:	4804      	ldr	r0, [pc, #16]	; (2ffef184 <etzpc_lock_decprot+0x2c>)
2ffef172:	21bd      	movs	r1, #189	; 0xbd
2ffef174:	f00a fbba 	bl	2fff98ec <__assert>
2ffef178:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
2ffef17c:	bd10      	pop	{r4, pc}
2ffef17e:	bf00      	nop
2ffef180:	2fffe410 	.word	0x2fffe410
2ffef184:	2fffa09f 	.word	0x2fffa09f

2ffef188 <etzpc_configure_tzma>:
2ffef188:	b508      	push	{r3, lr}
2ffef18a:	4b06      	ldr	r3, [pc, #24]	; (2ffef1a4 <etzpc_configure_tzma+0x1c>)
2ffef18c:	795a      	ldrb	r2, [r3, #5]
2ffef18e:	4290      	cmp	r0, r2
2ffef190:	d303      	bcc.n	2ffef19a <etzpc_configure_tzma+0x12>
2ffef192:	4805      	ldr	r0, [pc, #20]	; (2ffef1a8 <etzpc_configure_tzma+0x20>)
2ffef194:	21c9      	movs	r1, #201	; 0xc9
2ffef196:	f00a fba9 	bl	2fff98ec <__assert>
2ffef19a:	681b      	ldr	r3, [r3, #0]
2ffef19c:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
2ffef1a0:	bd08      	pop	{r3, pc}
2ffef1a2:	bf00      	nop
2ffef1a4:	2fffe410 	.word	0x2fffe410
2ffef1a8:	2fffa09f 	.word	0x2fffa09f

2ffef1ac <etzpc_init>:
2ffef1ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffef1b0:	b087      	sub	sp, #28
2ffef1b2:	4a36      	ldr	r2, [pc, #216]	; (2ffef28c <etzpc_init+0xe0>)
2ffef1b4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffef1b8:	a802      	add	r0, sp, #8
2ffef1ba:	f008 ff0f 	bl	2fff7fdc <dt_get_node>
2ffef1be:	1e05      	subs	r5, r0, #0
2ffef1c0:	db5d      	blt.n	2ffef27e <etzpc_init+0xd2>
2ffef1c2:	9b05      	ldr	r3, [sp, #20]
2ffef1c4:	2b02      	cmp	r3, #2
2ffef1c6:	d15d      	bne.n	2ffef284 <etzpc_init+0xd8>
2ffef1c8:	9a02      	ldr	r2, [sp, #8]
2ffef1ca:	2400      	movs	r4, #0
2ffef1cc:	4f30      	ldr	r7, [pc, #192]	; (2ffef290 <etzpc_init+0xe4>)
2ffef1ce:	4668      	mov	r0, sp
2ffef1d0:	f8d2 33f0 	ldr.w	r3, [r2, #1008]	; 0x3f0
2ffef1d4:	603a      	str	r2, [r7, #0]
2ffef1d6:	0a19      	lsrs	r1, r3, #8
2ffef1d8:	717b      	strb	r3, [r7, #5]
2ffef1da:	71b9      	strb	r1, [r7, #6]
2ffef1dc:	0c19      	lsrs	r1, r3, #16
2ffef1de:	0e1b      	lsrs	r3, r3, #24
2ffef1e0:	713b      	strb	r3, [r7, #4]
2ffef1e2:	f892 33f4 	ldrb.w	r3, [r2, #1012]	; 0x3f4
2ffef1e6:	71f9      	strb	r1, [r7, #7]
2ffef1e8:	723b      	strb	r3, [r7, #8]
2ffef1ea:	9401      	str	r4, [sp, #4]
2ffef1ec:	f008 fe0c 	bl	2fff7e08 <fdt_get_address>
2ffef1f0:	2800      	cmp	r0, #0
2ffef1f2:	d041      	beq.n	2ffef278 <etzpc_init+0xcc>
2ffef1f4:	4a27      	ldr	r2, [pc, #156]	; (2ffef294 <etzpc_init+0xe8>)
2ffef1f6:	4629      	mov	r1, r5
2ffef1f8:	9800      	ldr	r0, [sp, #0]
2ffef1fa:	ab01      	add	r3, sp, #4
2ffef1fc:	f00a f9d8 	bl	2fff95b0 <fdt_getprop>
2ffef200:	4605      	mov	r5, r0
2ffef202:	bbb8      	cbnz	r0, 2ffef274 <etzpc_init+0xc8>
2ffef204:	4824      	ldr	r0, [pc, #144]	; (2ffef298 <etzpc_init+0xec>)
2ffef206:	f003 fb2d 	bl	2fff2864 <tf_log>
2ffef20a:	2000      	movs	r0, #0
2ffef20c:	e02f      	b.n	2ffef26e <etzpc_init+0xc2>
2ffef20e:	f3c6 2001 	ubfx	r0, r6, #8, #2
2ffef212:	f003 fec9 	bl	2fff2fa8 <stm32mp_etzpc_binding2decprot>
2ffef216:	4601      	mov	r1, r0
2ffef218:	4681      	mov	r9, r0
2ffef21a:	4620      	mov	r0, r4
2ffef21c:	f001 fbd4 	bl	2fff09c8 <stm32mp1_register_etzpc_decprot>
2ffef220:	4649      	mov	r1, r9
2ffef222:	4620      	mov	r0, r4
2ffef224:	f7ff ff5e 	bl	2ffef0e4 <etzpc_configure_decprot>
2ffef228:	07f3      	lsls	r3, r6, #31
2ffef22a:	d502      	bpl.n	2ffef232 <etzpc_init+0x86>
2ffef22c:	4620      	mov	r0, r4
2ffef22e:	f7ff ff93 	bl	2ffef158 <etzpc_lock_decprot>
2ffef232:	f108 0801 	add.w	r8, r8, #1
2ffef236:	9b01      	ldr	r3, [sp, #4]
2ffef238:	ebb8 0f93 	cmp.w	r8, r3, lsr #2
2ffef23c:	d2e5      	bcs.n	2ffef20a <etzpc_init+0x5e>
2ffef23e:	f855 3028 	ldr.w	r3, [r5, r8, lsl #2]
2ffef242:	0e1c      	lsrs	r4, r3, #24
2ffef244:	f3c3 2207 	ubfx	r2, r3, #8, #8
2ffef248:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
2ffef24c:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffef250:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
2ffef254:	ea44 2603 	orr.w	r6, r4, r3, lsl #8
2ffef258:	79bb      	ldrb	r3, [r7, #6]
2ffef25a:	f3c4 4407 	ubfx	r4, r4, #16, #8
2ffef25e:	429c      	cmp	r4, r3
2ffef260:	d3d5      	bcc.n	2ffef20e <etzpc_init+0x62>
2ffef262:	480e      	ldr	r0, [pc, #56]	; (2ffef29c <etzpc_init+0xf0>)
2ffef264:	4621      	mov	r1, r4
2ffef266:	f003 fafd 	bl	2fff2864 <tf_log>
2ffef26a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffef26e:	b007      	add	sp, #28
2ffef270:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffef274:	46a0      	mov	r8, r4
2ffef276:	e7de      	b.n	2ffef236 <etzpc_init+0x8a>
2ffef278:	f06f 0001 	mvn.w	r0, #1
2ffef27c:	e7f7      	b.n	2ffef26e <etzpc_init+0xc2>
2ffef27e:	f06f 0004 	mvn.w	r0, #4
2ffef282:	e7f4      	b.n	2ffef26e <etzpc_init+0xc2>
2ffef284:	f06f 000c 	mvn.w	r0, #12
2ffef288:	e7f1      	b.n	2ffef26e <etzpc_init+0xc2>
2ffef28a:	bf00      	nop
2ffef28c:	2fffa0b8 	.word	0x2fffa0b8
2ffef290:	2fffe410 	.word	0x2fffe410
2ffef294:	2fffa0c7 	.word	0x2fffa0c7
2ffef298:	2fffa0d2 	.word	0x2fffa0d2
2ffef29c:	2fffa0fe 	.word	0x2fffa0fe

2ffef2a0 <stm32_rng_read>:
2ffef2a0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffef2a4:	4606      	mov	r6, r0
2ffef2a6:	4d34      	ldr	r5, [pc, #208]	; (2ffef378 <stm32_rng_read+0xd8>)
2ffef2a8:	460c      	mov	r4, r1
2ffef2aa:	682b      	ldr	r3, [r5, #0]
2ffef2ac:	2b00      	cmp	r3, #0
2ffef2ae:	d05f      	beq.n	2ffef370 <stm32_rng_read+0xd0>
2ffef2b0:	6868      	ldr	r0, [r5, #4]
2ffef2b2:	f005 ff3f 	bl	2fff5134 <stm32mp_clk_enable>
2ffef2b6:	682b      	ldr	r3, [r5, #0]
2ffef2b8:	681a      	ldr	r2, [r3, #0]
2ffef2ba:	0751      	lsls	r1, r2, #29
2ffef2bc:	d401      	bmi.n	2ffef2c2 <stm32_rng_read+0x22>
2ffef2be:	2224      	movs	r2, #36	; 0x24
2ffef2c0:	601a      	str	r2, [r3, #0]
2ffef2c2:	4637      	mov	r7, r6
2ffef2c4:	2c00      	cmp	r4, #0
2ffef2c6:	d043      	beq.n	2ffef350 <stm32_rng_read+0xb0>
2ffef2c8:	f242 7810 	movw	r8, #10000	; 0x2710
2ffef2cc:	682b      	ldr	r3, [r5, #0]
2ffef2ce:	685a      	ldr	r2, [r3, #4]
2ffef2d0:	f012 0f44 	tst.w	r2, #68	; 0x44
2ffef2d4:	d01b      	beq.n	2ffef30e <stm32_rng_read+0x6e>
2ffef2d6:	685a      	ldr	r2, [r3, #4]
2ffef2d8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
2ffef2dc:	605a      	str	r2, [r3, #4]
2ffef2de:	f3bf 8f5f 	dmb	sy
2ffef2e2:	682b      	ldr	r3, [r5, #0]
2ffef2e4:	f103 0208 	add.w	r2, r3, #8
2ffef2e8:	230c      	movs	r3, #12
2ffef2ea:	6811      	ldr	r1, [r2, #0]
2ffef2ec:	3b01      	subs	r3, #1
2ffef2ee:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
2ffef2f2:	d1fa      	bne.n	2ffef2ea <stm32_rng_read+0x4a>
2ffef2f4:	f3bf 8f5f 	dmb	sy
2ffef2f8:	682b      	ldr	r3, [r5, #0]
2ffef2fa:	685b      	ldr	r3, [r3, #4]
2ffef2fc:	065a      	lsls	r2, r3, #25
2ffef2fe:	d506      	bpl.n	2ffef30e <stm32_rng_read+0x6e>
2ffef300:	481e      	ldr	r0, [pc, #120]	; (2ffef37c <stm32_rng_read+0xdc>)
2ffef302:	f003 faaf 	bl	2fff2864 <tf_log>
2ffef306:	f003 fb51 	bl	2fff29ac <console_flush>
2ffef30a:	f009 eab6 	blx	2fff8878 <do_panic>
2ffef30e:	200a      	movs	r0, #10
2ffef310:	f004 fde6 	bl	2fff3ee0 <udelay>
2ffef314:	f1b8 0801 	subs.w	r8, r8, #1
2ffef318:	d027      	beq.n	2ffef36a <stm32_rng_read+0xca>
2ffef31a:	682b      	ldr	r3, [r5, #0]
2ffef31c:	685b      	ldr	r3, [r3, #4]
2ffef31e:	07db      	lsls	r3, r3, #31
2ffef320:	d5d4      	bpl.n	2ffef2cc <stm32_rng_read+0x2c>
2ffef322:	f04f 0804 	mov.w	r8, #4
2ffef326:	682b      	ldr	r3, [r5, #0]
2ffef328:	2c04      	cmp	r4, #4
2ffef32a:	46a1      	mov	r9, r4
2ffef32c:	bf28      	it	cs
2ffef32e:	f04f 0904 	movcs.w	r9, #4
2ffef332:	689b      	ldr	r3, [r3, #8]
2ffef334:	4638      	mov	r0, r7
2ffef336:	eba4 0409 	sub.w	r4, r4, r9
2ffef33a:	464a      	mov	r2, r9
2ffef33c:	9301      	str	r3, [sp, #4]
2ffef33e:	a901      	add	r1, sp, #4
2ffef340:	444f      	add	r7, r9
2ffef342:	f00a fafb 	bl	2fff993c <memcpy>
2ffef346:	f1b8 0801 	subs.w	r8, r8, #1
2ffef34a:	d0bb      	beq.n	2ffef2c4 <stm32_rng_read+0x24>
2ffef34c:	2c00      	cmp	r4, #0
2ffef34e:	d1ea      	bne.n	2ffef326 <stm32_rng_read+0x86>
2ffef350:	6868      	ldr	r0, [r5, #4]
2ffef352:	f005 fef2 	bl	2fff513a <stm32mp_clk_disable>
2ffef356:	b124      	cbz	r4, 2ffef362 <stm32_rng_read+0xc2>
2ffef358:	1bba      	subs	r2, r7, r6
2ffef35a:	2100      	movs	r1, #0
2ffef35c:	4630      	mov	r0, r6
2ffef35e:	f00a fb0e 	bl	2fff997e <memset>
2ffef362:	4620      	mov	r0, r4
2ffef364:	b003      	add	sp, #12
2ffef366:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffef36a:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2ffef36e:	e7ef      	b.n	2ffef350 <stm32_rng_read+0xb0>
2ffef370:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffef374:	e7f5      	b.n	2ffef362 <stm32_rng_read+0xc2>
2ffef376:	bf00      	nop
2ffef378:	2fffe41c 	.word	0x2fffe41c
2ffef37c:	2fffa112 	.word	0x2fffa112

2ffef380 <stm32_rng_init>:
2ffef380:	b510      	push	{r4, lr}
2ffef382:	b086      	sub	sp, #24
2ffef384:	a801      	add	r0, sp, #4
2ffef386:	f008 fd3f 	bl	2fff7e08 <fdt_get_address>
2ffef38a:	b918      	cbnz	r0, 2ffef394 <stm32_rng_init+0x14>
2ffef38c:	f003 fb0e 	bl	2fff29ac <console_flush>
2ffef390:	f009 ea72 	blx	2fff8878 <do_panic>
2ffef394:	4a1d      	ldr	r2, [pc, #116]	; (2ffef40c <stm32_rng_init+0x8c>)
2ffef396:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffef39a:	a802      	add	r0, sp, #8
2ffef39c:	f008 fe1e 	bl	2fff7fdc <dt_get_node>
2ffef3a0:	2800      	cmp	r0, #0
2ffef3a2:	db2c      	blt.n	2ffef3fe <stm32_rng_init+0x7e>
2ffef3a4:	9b05      	ldr	r3, [sp, #20]
2ffef3a6:	079a      	lsls	r2, r3, #30
2ffef3a8:	d529      	bpl.n	2ffef3fe <stm32_rng_init+0x7e>
2ffef3aa:	9802      	ldr	r0, [sp, #8]
2ffef3ac:	4a18      	ldr	r2, [pc, #96]	; (2ffef410 <stm32_rng_init+0x90>)
2ffef3ae:	4290      	cmp	r0, r2
2ffef3b0:	d003      	beq.n	2ffef3ba <stm32_rng_init+0x3a>
2ffef3b2:	4818      	ldr	r0, [pc, #96]	; (2ffef414 <stm32_rng_init+0x94>)
2ffef3b4:	219c      	movs	r1, #156	; 0x9c
2ffef3b6:	f00a fa99 	bl	2fff98ec <__assert>
2ffef3ba:	4c17      	ldr	r4, [pc, #92]	; (2ffef418 <stm32_rng_init+0x98>)
2ffef3bc:	07db      	lsls	r3, r3, #31
2ffef3be:	6020      	str	r0, [r4, #0]
2ffef3c0:	d520      	bpl.n	2ffef404 <stm32_rng_init+0x84>
2ffef3c2:	f001 fae1 	bl	2fff0988 <stm32mp_register_non_secure_periph_iomem>
2ffef3c6:	9803      	ldr	r0, [sp, #12]
2ffef3c8:	2800      	cmp	r0, #0
2ffef3ca:	dbdf      	blt.n	2ffef38c <stm32_rng_init+0xc>
2ffef3cc:	6060      	str	r0, [r4, #4]
2ffef3ce:	f005 feb1 	bl	2fff5134 <stm32mp_clk_enable>
2ffef3d2:	6860      	ldr	r0, [r4, #4]
2ffef3d4:	f005 feb1 	bl	2fff513a <stm32mp_clk_disable>
2ffef3d8:	9804      	ldr	r0, [sp, #16]
2ffef3da:	2800      	cmp	r0, #0
2ffef3dc:	db0f      	blt.n	2ffef3fe <stm32_rng_init+0x7e>
2ffef3de:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffef3e2:	f008 fbd5 	bl	2fff7b90 <stm32mp_reset_assert_to>
2ffef3e6:	2800      	cmp	r0, #0
2ffef3e8:	d1d0      	bne.n	2ffef38c <stm32_rng_init+0xc>
2ffef3ea:	2014      	movs	r0, #20
2ffef3ec:	f004 fd78 	bl	2fff3ee0 <udelay>
2ffef3f0:	9804      	ldr	r0, [sp, #16]
2ffef3f2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffef3f6:	f008 fc07 	bl	2fff7c08 <stm32mp_reset_deassert_to>
2ffef3fa:	2800      	cmp	r0, #0
2ffef3fc:	d1c6      	bne.n	2ffef38c <stm32_rng_init+0xc>
2ffef3fe:	2000      	movs	r0, #0
2ffef400:	b006      	add	sp, #24
2ffef402:	bd10      	pop	{r4, pc}
2ffef404:	f001 fabd 	bl	2fff0982 <stm32mp_register_secure_periph_iomem>
2ffef408:	e7dd      	b.n	2ffef3c6 <stm32_rng_init+0x46>
2ffef40a:	bf00      	nop
2ffef40c:	2fffa11e 	.word	0x2fffa11e
2ffef410:	54003000 	.word	0x54003000
2ffef414:	2fffa12b 	.word	0x2fffa12b
2ffef418:	2fffe41c 	.word	0x2fffe41c

2ffef41c <stm32_rtc_read_calendar>:
2ffef41c:	4b0a      	ldr	r3, [pc, #40]	; (2ffef448 <stm32_rtc_read_calendar+0x2c>)
2ffef41e:	681a      	ldr	r2, [r3, #0]
2ffef420:	6991      	ldr	r1, [r2, #24]
2ffef422:	0689      	lsls	r1, r1, #26
2ffef424:	d408      	bmi.n	2ffef438 <stm32_rtc_read_calendar+0x1c>
2ffef426:	68d1      	ldr	r1, [r2, #12]
2ffef428:	f021 0120 	bic.w	r1, r1, #32
2ffef42c:	60d1      	str	r1, [r2, #12]
2ffef42e:	681a      	ldr	r2, [r3, #0]
2ffef430:	320c      	adds	r2, #12
2ffef432:	6811      	ldr	r1, [r2, #0]
2ffef434:	0689      	lsls	r1, r1, #26
2ffef436:	d5fc      	bpl.n	2ffef432 <stm32_rtc_read_calendar+0x16>
2ffef438:	681b      	ldr	r3, [r3, #0]
2ffef43a:	689a      	ldr	r2, [r3, #8]
2ffef43c:	6002      	str	r2, [r0, #0]
2ffef43e:	681a      	ldr	r2, [r3, #0]
2ffef440:	6042      	str	r2, [r0, #4]
2ffef442:	685b      	ldr	r3, [r3, #4]
2ffef444:	6083      	str	r3, [r0, #8]
2ffef446:	4770      	bx	lr
2ffef448:	2fffe428 	.word	0x2fffe428

2ffef44c <stm32_is_a_leap_year>:
2ffef44c:	0783      	lsls	r3, r0, #30
2ffef44e:	d10f      	bne.n	2ffef470 <stm32_is_a_leap_year+0x24>
2ffef450:	2264      	movs	r2, #100	; 0x64
2ffef452:	fbb0 f3f2 	udiv	r3, r0, r2
2ffef456:	fb02 0313 	mls	r3, r2, r3, r0
2ffef45a:	b95b      	cbnz	r3, 2ffef474 <stm32_is_a_leap_year+0x28>
2ffef45c:	f44f 73c8 	mov.w	r3, #400	; 0x190
2ffef460:	fbb0 f2f3 	udiv	r2, r0, r3
2ffef464:	fb03 0012 	mls	r0, r3, r2, r0
2ffef468:	fab0 f080 	clz	r0, r0
2ffef46c:	0940      	lsrs	r0, r0, #5
2ffef46e:	4770      	bx	lr
2ffef470:	2000      	movs	r0, #0
2ffef472:	4770      	bx	lr
2ffef474:	2001      	movs	r0, #1
2ffef476:	4770      	bx	lr

2ffef478 <stm32_rtc_get_date>:
2ffef478:	b510      	push	{r4, lr}
2ffef47a:	b918      	cbnz	r0, 2ffef484 <stm32_rtc_get_date+0xc>
2ffef47c:	21ac      	movs	r1, #172	; 0xac
2ffef47e:	4811      	ldr	r0, [pc, #68]	; (2ffef4c4 <stm32_rtc_get_date+0x4c>)
2ffef480:	f00a fa34 	bl	2fff98ec <__assert>
2ffef484:	b909      	cbnz	r1, 2ffef48a <stm32_rtc_get_date+0x12>
2ffef486:	21ad      	movs	r1, #173	; 0xad
2ffef488:	e7f9      	b.n	2ffef47e <stm32_rtc_get_date+0x6>
2ffef48a:	6883      	ldr	r3, [r0, #8]
2ffef48c:	f3c3 3242 	ubfx	r2, r3, #13, #3
2ffef490:	f003 000f 	and.w	r0, r3, #15
2ffef494:	f3c3 1401 	ubfx	r4, r3, #4, #2
2ffef498:	60ca      	str	r2, [r1, #12]
2ffef49a:	220a      	movs	r2, #10
2ffef49c:	fb02 0004 	mla	r0, r2, r4, r0
2ffef4a0:	f3c3 3400 	ubfx	r4, r3, #12, #1
2ffef4a4:	6108      	str	r0, [r1, #16]
2ffef4a6:	f3c3 2003 	ubfx	r0, r3, #8, #4
2ffef4aa:	fb02 0004 	mla	r0, r2, r4, r0
2ffef4ae:	6148      	str	r0, [r1, #20]
2ffef4b0:	f3c3 5003 	ubfx	r0, r3, #20, #4
2ffef4b4:	f3c3 4303 	ubfx	r3, r3, #16, #4
2ffef4b8:	f503 63fa 	add.w	r3, r3, #2000	; 0x7d0
2ffef4bc:	fb02 3300 	mla	r3, r2, r0, r3
2ffef4c0:	618b      	str	r3, [r1, #24]
2ffef4c2:	bd10      	pop	{r4, pc}
2ffef4c4:	2fffa146 	.word	0x2fffa146

2ffef4c8 <stm32_rtc_get_time>:
2ffef4c8:	b510      	push	{r4, lr}
2ffef4ca:	b918      	cbnz	r0, 2ffef4d4 <stm32_rtc_get_time+0xc>
2ffef4cc:	2196      	movs	r1, #150	; 0x96
2ffef4ce:	4811      	ldr	r0, [pc, #68]	; (2ffef514 <stm32_rtc_get_time+0x4c>)
2ffef4d0:	f00a fa0c 	bl	2fff98ec <__assert>
2ffef4d4:	b909      	cbnz	r1, 2ffef4da <stm32_rtc_get_time+0x12>
2ffef4d6:	2197      	movs	r1, #151	; 0x97
2ffef4d8:	e7f9      	b.n	2ffef4ce <stm32_rtc_get_time+0x6>
2ffef4da:	6843      	ldr	r3, [r0, #4]
2ffef4dc:	240a      	movs	r4, #10
2ffef4de:	f3c3 5001 	ubfx	r0, r3, #20, #2
2ffef4e2:	f3c3 4203 	ubfx	r2, r3, #16, #4
2ffef4e6:	fb04 2200 	mla	r2, r4, r0, r2
2ffef4ea:	0258      	lsls	r0, r3, #9
2ffef4ec:	f04f 000a 	mov.w	r0, #10
2ffef4f0:	f3c3 3402 	ubfx	r4, r3, #12, #3
2ffef4f4:	bf48      	it	mi
2ffef4f6:	320c      	addmi	r2, #12
2ffef4f8:	600a      	str	r2, [r1, #0]
2ffef4fa:	f3c3 2203 	ubfx	r2, r3, #8, #4
2ffef4fe:	fb00 2204 	mla	r2, r0, r4, r2
2ffef502:	604a      	str	r2, [r1, #4]
2ffef504:	f3c3 1202 	ubfx	r2, r3, #4, #3
2ffef508:	f003 030f 	and.w	r3, r3, #15
2ffef50c:	fb00 3302 	mla	r3, r0, r2, r3
2ffef510:	608b      	str	r3, [r1, #8]
2ffef512:	bd10      	pop	{r4, pc}
2ffef514:	2fffa146 	.word	0x2fffa146

2ffef518 <stm32_rtc_get_second_fraction.isra.0>:
2ffef518:	4b06      	ldr	r3, [pc, #24]	; (2ffef534 <stm32_rtc_get_second_fraction.isra.0+0x1c>)
2ffef51a:	681b      	ldr	r3, [r3, #0]
2ffef51c:	691a      	ldr	r2, [r3, #16]
2ffef51e:	b283      	uxth	r3, r0
2ffef520:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
2ffef524:	f3c2 020e 	ubfx	r2, r2, #0, #15
2ffef528:	1ad3      	subs	r3, r2, r3
2ffef52a:	4343      	muls	r3, r0
2ffef52c:	1c50      	adds	r0, r2, #1
2ffef52e:	fbb3 f0f0 	udiv	r0, r3, r0
2ffef532:	4770      	bx	lr
2ffef534:	2fffe428 	.word	0x2fffe428

2ffef538 <stm32_rtc_regs_lock>:
2ffef538:	b508      	push	{r3, lr}
2ffef53a:	f003 fb4c 	bl	2fff2bd6 <stm32mp_lock_available>
2ffef53e:	b120      	cbz	r0, 2ffef54a <stm32_rtc_regs_lock+0x12>
2ffef540:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef544:	4801      	ldr	r0, [pc, #4]	; (2ffef54c <stm32_rtc_regs_lock+0x14>)
2ffef546:	f00d b82b 	b.w	2fffc5a0 <__spin_lock_from_thumb>
2ffef54a:	bd08      	pop	{r3, pc}
2ffef54c:	2fffe424 	.word	0x2fffe424

2ffef550 <stm32_rtc_regs_unlock>:
2ffef550:	b508      	push	{r3, lr}
2ffef552:	f003 fb40 	bl	2fff2bd6 <stm32mp_lock_available>
2ffef556:	b120      	cbz	r0, 2ffef562 <stm32_rtc_regs_unlock+0x12>
2ffef558:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef55c:	4801      	ldr	r0, [pc, #4]	; (2ffef564 <stm32_rtc_regs_unlock+0x14>)
2ffef55e:	f00d b82b 	b.w	2fffc5b8 <__spin_unlock_from_thumb>
2ffef562:	bd08      	pop	{r3, pc}
2ffef564:	2fffe424 	.word	0x2fffe424

2ffef568 <stm32_rtc_get_calendar>:
2ffef568:	b570      	push	{r4, r5, r6, lr}
2ffef56a:	4604      	mov	r4, r0
2ffef56c:	4e0d      	ldr	r6, [pc, #52]	; (2ffef5a4 <stm32_rtc_get_calendar+0x3c>)
2ffef56e:	f005 ff31 	bl	2fff53d4 <stm32mp1_rtc_get_read_twice>
2ffef572:	4605      	mov	r5, r0
2ffef574:	f7ff ffe0 	bl	2ffef538 <stm32_rtc_regs_lock>
2ffef578:	6870      	ldr	r0, [r6, #4]
2ffef57a:	f005 fddb 	bl	2fff5134 <stm32mp_clk_enable>
2ffef57e:	4620      	mov	r0, r4
2ffef580:	f7ff ff4c 	bl	2ffef41c <stm32_rtc_read_calendar>
2ffef584:	b13d      	cbz	r5, 2ffef596 <stm32_rtc_get_calendar+0x2e>
2ffef586:	6865      	ldr	r5, [r4, #4]
2ffef588:	f7ff ff48 	bl	2ffef41c <stm32_rtc_read_calendar>
2ffef58c:	6863      	ldr	r3, [r4, #4]
2ffef58e:	42ab      	cmp	r3, r5
2ffef590:	d001      	beq.n	2ffef596 <stm32_rtc_get_calendar+0x2e>
2ffef592:	f7ff ff43 	bl	2ffef41c <stm32_rtc_read_calendar>
2ffef596:	6870      	ldr	r0, [r6, #4]
2ffef598:	f005 fdcf 	bl	2fff513a <stm32mp_clk_disable>
2ffef59c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffef5a0:	f7ff bfd6 	b.w	2ffef550 <stm32_rtc_regs_unlock>
2ffef5a4:	2fffe428 	.word	0x2fffe428

2ffef5a8 <stm32_rtc_diff_calendar>:
2ffef5a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffef5ac:	4604      	mov	r4, r0
2ffef5ae:	f8df a194 	ldr.w	sl, [pc, #404]	; 2ffef744 <stm32_rtc_diff_calendar+0x19c>
2ffef5b2:	b093      	sub	sp, #76	; 0x4c
2ffef5b4:	460d      	mov	r5, r1
2ffef5b6:	2700      	movs	r7, #0
2ffef5b8:	f8da 0004 	ldr.w	r0, [sl, #4]
2ffef5bc:	463e      	mov	r6, r7
2ffef5be:	f005 fdb9 	bl	2fff5134 <stm32mp_clk_enable>
2ffef5c2:	4620      	mov	r0, r4
2ffef5c4:	a904      	add	r1, sp, #16
2ffef5c6:	f7ff ff57 	bl	2ffef478 <stm32_rtc_get_date>
2ffef5ca:	4628      	mov	r0, r5
2ffef5cc:	a90b      	add	r1, sp, #44	; 0x2c
2ffef5ce:	f7ff ff53 	bl	2ffef478 <stm32_rtc_get_date>
2ffef5d2:	4620      	mov	r0, r4
2ffef5d4:	a904      	add	r1, sp, #16
2ffef5d6:	f7ff ff77 	bl	2ffef4c8 <stm32_rtc_get_time>
2ffef5da:	4628      	mov	r0, r5
2ffef5dc:	a90b      	add	r1, sp, #44	; 0x2c
2ffef5de:	f7ff ff73 	bl	2ffef4c8 <stm32_rtc_get_time>
2ffef5e2:	6820      	ldr	r0, [r4, #0]
2ffef5e4:	f7ff ff98 	bl	2ffef518 <stm32_rtc_get_second_fraction.isra.0>
2ffef5e8:	4604      	mov	r4, r0
2ffef5ea:	6828      	ldr	r0, [r5, #0]
2ffef5ec:	253c      	movs	r5, #60	; 0x3c
2ffef5ee:	f7ff ff93 	bl	2ffef518 <stm32_rtc_get_second_fraction.isra.0>
2ffef5f2:	9a04      	ldr	r2, [sp, #16]
2ffef5f4:	9b05      	ldr	r3, [sp, #20]
2ffef5f6:	fbe2 3605 	umlal	r3, r6, r2, r5
2ffef5fa:	9a06      	ldr	r2, [sp, #24]
2ffef5fc:	fba3 3105 	umull	r3, r1, r3, r5
2ffef600:	189a      	adds	r2, r3, r2
2ffef602:	fb05 1106 	mla	r1, r5, r6, r1
2ffef606:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2ffef608:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
2ffef60a:	f141 0100 	adc.w	r1, r1, #0
2ffef60e:	fbe6 3705 	umlal	r3, r7, r6, r5
2ffef612:	fba3 3605 	umull	r3, r6, r3, r5
2ffef616:	fb05 6507 	mla	r5, r5, r7, r6
2ffef61a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
2ffef61c:	199b      	adds	r3, r3, r6
2ffef61e:	f145 0500 	adc.w	r5, r5, #0
2ffef622:	1ad3      	subs	r3, r2, r3
2ffef624:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2ffef628:	eb61 0505 	sbc.w	r5, r1, r5
2ffef62c:	fba3 3102 	umull	r3, r1, r3, r2
2ffef630:	1a20      	subs	r0, r4, r0
2ffef632:	fb02 1105 	mla	r1, r2, r5, r1
2ffef636:	eb62 0202 	sbc.w	r2, r2, r2
2ffef63a:	181b      	adds	r3, r3, r0
2ffef63c:	9301      	str	r3, [sp, #4]
2ffef63e:	eb41 0302 	adc.w	r3, r1, r2
2ffef642:	9a08      	ldr	r2, [sp, #32]
2ffef644:	990f      	ldr	r1, [sp, #60]	; 0x3c
2ffef646:	9d10      	ldr	r5, [sp, #64]	; 0x40
2ffef648:	428a      	cmp	r2, r1
2ffef64a:	eba2 0401 	sub.w	r4, r2, r1
2ffef64e:	bf38      	it	cc
2ffef650:	483d      	ldrcc	r0, [pc, #244]	; (2ffef748 <stm32_rtc_diff_calendar+0x1a0>)
2ffef652:	9e09      	ldr	r6, [sp, #36]	; 0x24
2ffef654:	bf38      	it	cc
2ffef656:	1940      	addcc	r0, r0, r5
2ffef658:	9302      	str	r3, [sp, #8]
2ffef65a:	bf3c      	itt	cc
2ffef65c:	f810 0c01 	ldrbcc.w	r0, [r0, #-1]
2ffef660:	1824      	addcc	r4, r4, r0
2ffef662:	1c68      	adds	r0, r5, #1
2ffef664:	4286      	cmp	r6, r0
2ffef666:	d90b      	bls.n	2ffef680 <stm32_rtc_diff_calendar+0xd8>
2ffef668:	4f37      	ldr	r7, [pc, #220]	; (2ffef748 <stm32_rtc_diff_calendar+0x1a0>)
2ffef66a:	eb07 0c05 	add.w	ip, r7, r5
2ffef66e:	4607      	mov	r7, r0
2ffef670:	2f0b      	cmp	r7, #11
2ffef672:	d805      	bhi.n	2ffef680 <stm32_rtc_diff_calendar+0xd8>
2ffef674:	f81c eb01 	ldrb.w	lr, [ip], #1
2ffef678:	3701      	adds	r7, #1
2ffef67a:	42be      	cmp	r6, r7
2ffef67c:	4474      	add	r4, lr
2ffef67e:	d8f7      	bhi.n	2ffef670 <stm32_rtc_diff_calendar+0xc8>
2ffef680:	1e6f      	subs	r7, r5, #1
2ffef682:	42be      	cmp	r6, r7
2ffef684:	d216      	bcs.n	2ffef6b4 <stm32_rtc_diff_calendar+0x10c>
2ffef686:	4b30      	ldr	r3, [pc, #192]	; (2ffef748 <stm32_rtc_diff_calendar+0x1a0>)
2ffef688:	f04f 0c01 	mov.w	ip, #1
2ffef68c:	461f      	mov	r7, r3
2ffef68e:	4566      	cmp	r6, ip
2ffef690:	d902      	bls.n	2ffef698 <stm32_rtc_diff_calendar+0xf0>
2ffef692:	f1bc 0f0c 	cmp.w	ip, #12
2ffef696:	d101      	bne.n	2ffef69c <stm32_rtc_diff_calendar+0xf4>
2ffef698:	442f      	add	r7, r5
2ffef69a:	e009      	b.n	2ffef6b0 <stm32_rtc_diff_calendar+0x108>
2ffef69c:	f813 8b01 	ldrb.w	r8, [r3], #1
2ffef6a0:	f10c 0c01 	add.w	ip, ip, #1
2ffef6a4:	4444      	add	r4, r8
2ffef6a6:	e7f2      	b.n	2ffef68e <stm32_rtc_diff_calendar+0xe6>
2ffef6a8:	f817 cb01 	ldrb.w	ip, [r7], #1
2ffef6ac:	3001      	adds	r0, #1
2ffef6ae:	4464      	add	r4, ip
2ffef6b0:	280b      	cmp	r0, #11
2ffef6b2:	d9f9      	bls.n	2ffef6a8 <stm32_rtc_diff_calendar+0x100>
2ffef6b4:	f8dd b044 	ldr.w	fp, [sp, #68]	; 0x44
2ffef6b8:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
2ffef6bc:	f10b 0701 	add.w	r7, fp, #1
2ffef6c0:	45b8      	cmp	r8, r7
2ffef6c2:	d908      	bls.n	2ffef6d6 <stm32_rtc_diff_calendar+0x12e>
2ffef6c4:	eba8 000b 	sub.w	r0, r8, fp
2ffef6c8:	f240 1c6d 	movw	ip, #365	; 0x16d
2ffef6cc:	fb0c 4400 	mla	r4, ip, r0, r4
2ffef6d0:	f46f 73b6 	mvn.w	r3, #364	; 0x16c
2ffef6d4:	441c      	add	r4, r3
2ffef6d6:	9203      	str	r2, [sp, #12]
2ffef6d8:	b174      	cbz	r4, 2ffef6f8 <stm32_rtc_diff_calendar+0x150>
2ffef6da:	4640      	mov	r0, r8
2ffef6dc:	f7ff feb6 	bl	2ffef44c <stm32_is_a_leap_year>
2ffef6e0:	45d8      	cmp	r8, fp
2ffef6e2:	4681      	mov	r9, r0
2ffef6e4:	9a03      	ldr	r2, [sp, #12]
2ffef6e6:	d115      	bne.n	2ffef714 <stm32_rtc_diff_calendar+0x16c>
2ffef6e8:	b130      	cbz	r0, 2ffef6f8 <stm32_rtc_diff_calendar+0x150>
2ffef6ea:	2d02      	cmp	r5, #2
2ffef6ec:	d804      	bhi.n	2ffef6f8 <stm32_rtc_diff_calendar+0x150>
2ffef6ee:	2e02      	cmp	r6, #2
2ffef6f0:	d902      	bls.n	2ffef6f8 <stm32_rtc_diff_calendar+0x150>
2ffef6f2:	2a1c      	cmp	r2, #28
2ffef6f4:	d800      	bhi.n	2ffef6f8 <stm32_rtc_diff_calendar+0x150>
2ffef6f6:	3401      	adds	r4, #1
2ffef6f8:	4b14      	ldr	r3, [pc, #80]	; (2ffef74c <stm32_rtc_diff_calendar+0x1a4>)
2ffef6fa:	9d01      	ldr	r5, [sp, #4]
2ffef6fc:	9e02      	ldr	r6, [sp, #8]
2ffef6fe:	f8da 0004 	ldr.w	r0, [sl, #4]
2ffef702:	fbe4 5603 	umlal	r5, r6, r4, r3
2ffef706:	f005 fd18 	bl	2fff513a <stm32mp_clk_disable>
2ffef70a:	4628      	mov	r0, r5
2ffef70c:	4631      	mov	r1, r6
2ffef70e:	b013      	add	sp, #76	; 0x4c
2ffef710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffef714:	4658      	mov	r0, fp
2ffef716:	f7ff fe99 	bl	2ffef44c <stm32_is_a_leap_year>
2ffef71a:	b120      	cbz	r0, 2ffef726 <stm32_rtc_diff_calendar+0x17e>
2ffef71c:	2d02      	cmp	r5, #2
2ffef71e:	d802      	bhi.n	2ffef726 <stm32_rtc_diff_calendar+0x17e>
2ffef720:	291c      	cmp	r1, #28
2ffef722:	bf98      	it	ls
2ffef724:	3401      	addls	r4, #1
2ffef726:	f1b9 0f00 	cmp.w	r9, #0
2ffef72a:	d002      	beq.n	2ffef732 <stm32_rtc_diff_calendar+0x18a>
2ffef72c:	2e02      	cmp	r6, #2
2ffef72e:	d900      	bls.n	2ffef732 <stm32_rtc_diff_calendar+0x18a>
2ffef730:	3401      	adds	r4, #1
2ffef732:	45b8      	cmp	r8, r7
2ffef734:	d9e0      	bls.n	2ffef6f8 <stm32_rtc_diff_calendar+0x150>
2ffef736:	4638      	mov	r0, r7
2ffef738:	f7ff fe88 	bl	2ffef44c <stm32_is_a_leap_year>
2ffef73c:	b100      	cbz	r0, 2ffef740 <stm32_rtc_diff_calendar+0x198>
2ffef73e:	3401      	adds	r4, #1
2ffef740:	3701      	adds	r7, #1
2ffef742:	e7f6      	b.n	2ffef732 <stm32_rtc_diff_calendar+0x18a>
2ffef744:	2fffe428 	.word	0x2fffe428
2ffef748:	2fffa171 	.word	0x2fffa171
2ffef74c:	05265c00 	.word	0x05265c00

2ffef750 <stm32_rtc_get_timestamp>:
2ffef750:	b530      	push	{r4, r5, lr}
2ffef752:	b085      	sub	sp, #20
2ffef754:	4c18      	ldr	r4, [pc, #96]	; (2ffef7b8 <stm32_rtc_get_timestamp+0x68>)
2ffef756:	4605      	mov	r5, r0
2ffef758:	f7ff feee 	bl	2ffef538 <stm32_rtc_regs_lock>
2ffef75c:	6860      	ldr	r0, [r4, #4]
2ffef75e:	f005 fce9 	bl	2fff5134 <stm32mp_clk_enable>
2ffef762:	6823      	ldr	r3, [r4, #0]
2ffef764:	6d1a      	ldr	r2, [r3, #80]	; 0x50
2ffef766:	0711      	lsls	r1, r2, #28
2ffef768:	d51d      	bpl.n	2ffef7a6 <stm32_rtc_get_timestamp+0x56>
2ffef76a:	b91d      	cbnz	r5, 2ffef774 <stm32_rtc_get_timestamp+0x24>
2ffef76c:	4813      	ldr	r0, [pc, #76]	; (2ffef7bc <stm32_rtc_get_timestamp+0x6c>)
2ffef76e:	21c1      	movs	r1, #193	; 0xc1
2ffef770:	f00a f8bc 	bl	2fff98ec <__assert>
2ffef774:	6b1a      	ldr	r2, [r3, #48]	; 0x30
2ffef776:	4629      	mov	r1, r5
2ffef778:	a801      	add	r0, sp, #4
2ffef77a:	9202      	str	r2, [sp, #8]
2ffef77c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffef77e:	9303      	str	r3, [sp, #12]
2ffef780:	f7ff fea2 	bl	2ffef4c8 <stm32_rtc_get_time>
2ffef784:	4629      	mov	r1, r5
2ffef786:	a801      	add	r0, sp, #4
2ffef788:	f7ff fe76 	bl	2ffef478 <stm32_rtc_get_date>
2ffef78c:	6822      	ldr	r2, [r4, #0]
2ffef78e:	6dd3      	ldr	r3, [r2, #92]	; 0x5c
2ffef790:	f043 0308 	orr.w	r3, r3, #8
2ffef794:	65d3      	str	r3, [r2, #92]	; 0x5c
2ffef796:	6823      	ldr	r3, [r4, #0]
2ffef798:	6d1a      	ldr	r2, [r3, #80]	; 0x50
2ffef79a:	06d2      	lsls	r2, r2, #27
2ffef79c:	bf42      	ittt	mi
2ffef79e:	6dda      	ldrmi	r2, [r3, #92]	; 0x5c
2ffef7a0:	f042 0210 	orrmi.w	r2, r2, #16
2ffef7a4:	65da      	strmi	r2, [r3, #92]	; 0x5c
2ffef7a6:	6860      	ldr	r0, [r4, #4]
2ffef7a8:	f005 fcc7 	bl	2fff513a <stm32mp_clk_disable>
2ffef7ac:	b005      	add	sp, #20
2ffef7ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2ffef7b2:	f7ff becd 	b.w	2ffef550 <stm32_rtc_regs_unlock>
2ffef7b6:	bf00      	nop
2ffef7b8:	2fffe428 	.word	0x2fffe428
2ffef7bc:	2fffa146 	.word	0x2fffa146

2ffef7c0 <stm32_rtc_set_tamper_timestamp>:
2ffef7c0:	b510      	push	{r4, lr}
2ffef7c2:	f7ff feb9 	bl	2ffef538 <stm32_rtc_regs_lock>
2ffef7c6:	4c0f      	ldr	r4, [pc, #60]	; (2ffef804 <stm32_rtc_set_tamper_timestamp+0x44>)
2ffef7c8:	6860      	ldr	r0, [r4, #4]
2ffef7ca:	f005 fcb3 	bl	2fff5134 <stm32mp_clk_enable>
2ffef7ce:	6823      	ldr	r3, [r4, #0]
2ffef7d0:	22ca      	movs	r2, #202	; 0xca
2ffef7d2:	625a      	str	r2, [r3, #36]	; 0x24
2ffef7d4:	2253      	movs	r2, #83	; 0x53
2ffef7d6:	6823      	ldr	r3, [r4, #0]
2ffef7d8:	625a      	str	r2, [r3, #36]	; 0x24
2ffef7da:	6822      	ldr	r2, [r4, #0]
2ffef7dc:	6993      	ldr	r3, [r2, #24]
2ffef7de:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
2ffef7e2:	6193      	str	r3, [r2, #24]
2ffef7e4:	6822      	ldr	r2, [r4, #0]
2ffef7e6:	6a13      	ldr	r3, [r2, #32]
2ffef7e8:	f023 0308 	bic.w	r3, r3, #8
2ffef7ec:	6213      	str	r3, [r2, #32]
2ffef7ee:	22ff      	movs	r2, #255	; 0xff
2ffef7f0:	6823      	ldr	r3, [r4, #0]
2ffef7f2:	625a      	str	r2, [r3, #36]	; 0x24
2ffef7f4:	6860      	ldr	r0, [r4, #4]
2ffef7f6:	f005 fca0 	bl	2fff513a <stm32mp_clk_disable>
2ffef7fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef7fe:	f7ff bea7 	b.w	2ffef550 <stm32_rtc_regs_unlock>
2ffef802:	bf00      	nop
2ffef804:	2fffe428 	.word	0x2fffe428

2ffef808 <stm32_rtc_is_timestamp_enable>:
2ffef808:	b538      	push	{r3, r4, r5, lr}
2ffef80a:	4c06      	ldr	r4, [pc, #24]	; (2ffef824 <stm32_rtc_is_timestamp_enable+0x1c>)
2ffef80c:	6860      	ldr	r0, [r4, #4]
2ffef80e:	f005 fc91 	bl	2fff5134 <stm32mp_clk_enable>
2ffef812:	6823      	ldr	r3, [r4, #0]
2ffef814:	6860      	ldr	r0, [r4, #4]
2ffef816:	699d      	ldr	r5, [r3, #24]
2ffef818:	f005 fc8f 	bl	2fff513a <stm32mp_clk_disable>
2ffef81c:	f3c5 6040 	ubfx	r0, r5, #25, #1
2ffef820:	bd38      	pop	{r3, r4, r5, pc}
2ffef822:	bf00      	nop
2ffef824:	2fffe428 	.word	0x2fffe428

2ffef828 <stm32_rtc_init>:
2ffef828:	b510      	push	{r4, lr}
2ffef82a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffef82e:	4c09      	ldr	r4, [pc, #36]	; (2ffef854 <stm32_rtc_init+0x2c>)
2ffef830:	4a09      	ldr	r2, [pc, #36]	; (2ffef858 <stm32_rtc_init+0x30>)
2ffef832:	4620      	mov	r0, r4
2ffef834:	f008 fbd2 	bl	2fff7fdc <dt_get_node>
2ffef838:	2800      	cmp	r0, #0
2ffef83a:	db06      	blt.n	2ffef84a <stm32_rtc_init+0x22>
2ffef83c:	68e3      	ldr	r3, [r4, #12]
2ffef83e:	6820      	ldr	r0, [r4, #0]
2ffef840:	2b02      	cmp	r3, #2
2ffef842:	d103      	bne.n	2ffef84c <stm32_rtc_init+0x24>
2ffef844:	f001 f89d 	bl	2fff0982 <stm32mp_register_secure_periph_iomem>
2ffef848:	2000      	movs	r0, #0
2ffef84a:	bd10      	pop	{r4, pc}
2ffef84c:	f001 f89c 	bl	2fff0988 <stm32mp_register_non_secure_periph_iomem>
2ffef850:	e7fa      	b.n	2ffef848 <stm32_rtc_init+0x20>
2ffef852:	bf00      	nop
2ffef854:	2fffe428 	.word	0x2fffe428
2ffef858:	2fffa161 	.word	0x2fffa161

2ffef85c <stm32_tamp_configure_internal>:
2ffef85c:	290f      	cmp	r1, #15
2ffef85e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffef860:	d80e      	bhi.n	2ffef880 <stm32_tamp_configure_internal+0x24>
2ffef862:	4a12      	ldr	r2, [pc, #72]	; (2ffef8ac <stm32_tamp_configure_internal+0x50>)
2ffef864:	2400      	movs	r4, #0
2ffef866:	f04f 0e01 	mov.w	lr, #1
2ffef86a:	6815      	ldr	r5, [r2, #0]
2ffef86c:	f8d2 c008 	ldr.w	ip, [r2, #8]
2ffef870:	f105 072c 	add.w	r7, r5, #44	; 0x2c
2ffef874:	b2a3      	uxth	r3, r4
2ffef876:	4299      	cmp	r1, r3
2ffef878:	d806      	bhi.n	2ffef888 <stm32_tamp_configure_internal+0x2c>
2ffef87a:	6150      	str	r0, [r2, #20]
2ffef87c:	8211      	strh	r1, [r2, #16]
2ffef87e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffef880:	480b      	ldr	r0, [pc, #44]	; (2ffef8b0 <stm32_tamp_configure_internal+0x54>)
2ffef882:	21aa      	movs	r1, #170	; 0xaa
2ffef884:	f00a f832 	bl	2fff98ec <__assert>
2ffef888:	f850 3034 	ldr.w	r3, [r0, r4, lsl #3]
2ffef88c:	1c5e      	adds	r6, r3, #1
2ffef88e:	d00b      	beq.n	2ffef8a8 <stm32_tamp_configure_internal+0x4c>
2ffef890:	3310      	adds	r3, #16
2ffef892:	fa0e f303 	lsl.w	r3, lr, r3
2ffef896:	ea1c 0f03 	tst.w	ip, r3
2ffef89a:	d005      	beq.n	2ffef8a8 <stm32_tamp_configure_internal+0x4c>
2ffef89c:	682e      	ldr	r6, [r5, #0]
2ffef89e:	431e      	orrs	r6, r3
2ffef8a0:	602e      	str	r6, [r5, #0]
2ffef8a2:	683e      	ldr	r6, [r7, #0]
2ffef8a4:	4333      	orrs	r3, r6
2ffef8a6:	603b      	str	r3, [r7, #0]
2ffef8a8:	3401      	adds	r4, #1
2ffef8aa:	e7e3      	b.n	2ffef874 <stm32_tamp_configure_internal+0x18>
2ffef8ac:	2fffe438 	.word	0x2fffe438
2ffef8b0:	2fffa17d 	.word	0x2fffa17d

2ffef8b4 <stm32_tamp_configure_external>:
2ffef8b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffef8b8:	2907      	cmp	r1, #7
2ffef8ba:	b085      	sub	sp, #20
2ffef8bc:	4680      	mov	r8, r0
2ffef8be:	460f      	mov	r7, r1
2ffef8c0:	e9cd 2300 	strd	r2, r3, [sp]
2ffef8c4:	d82f      	bhi.n	2ffef926 <stm32_tamp_configure_external+0x72>
2ffef8c6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 2ffef9ac <stm32_tamp_configure_external+0xf8>
2ffef8ca:	4606      	mov	r6, r0
2ffef8cc:	2000      	movs	r0, #0
2ffef8ce:	f04f 0a01 	mov.w	sl, #1
2ffef8d2:	f8d9 4000 	ldr.w	r4, [r9]
2ffef8d6:	4602      	mov	r2, r0
2ffef8d8:	f104 0c2c 	add.w	ip, r4, #44	; 0x2c
2ffef8dc:	f104 0e04 	add.w	lr, r4, #4
2ffef8e0:	b2c3      	uxtb	r3, r0
2ffef8e2:	429f      	cmp	r7, r3
2ffef8e4:	d823      	bhi.n	2ffef92e <stm32_tamp_configure_external+0x7a>
2ffef8e6:	9b00      	ldr	r3, [sp, #0]
2ffef8e8:	60e3      	str	r3, [r4, #12]
2ffef8ea:	2a00      	cmp	r2, #0
2ffef8ec:	d056      	beq.n	2ffef99c <stm32_tamp_configure_external+0xe8>
2ffef8ee:	9b01      	ldr	r3, [sp, #4]
2ffef8f0:	2504      	movs	r5, #4
2ffef8f2:	431a      	orrs	r2, r3
2ffef8f4:	6122      	str	r2, [r4, #16]
2ffef8f6:	2104      	movs	r1, #4
2ffef8f8:	a803      	add	r0, sp, #12
2ffef8fa:	f7ff fcd1 	bl	2ffef2a0 <stm32_rng_read>
2ffef8fe:	b958      	cbnz	r0, 2ffef918 <stm32_tamp_configure_external+0x64>
2ffef900:	9b03      	ldr	r3, [sp, #12]
2ffef902:	3d01      	subs	r5, #1
2ffef904:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
2ffef908:	6163      	str	r3, [r4, #20]
2ffef90a:	d1f4      	bne.n	2ffef8f6 <stm32_tamp_configure_external+0x42>
2ffef90c:	2364      	movs	r3, #100	; 0x64
2ffef90e:	69a2      	ldr	r2, [r4, #24]
2ffef910:	0452      	lsls	r2, r2, #17
2ffef912:	d541      	bpl.n	2ffef998 <stm32_tamp_configure_external+0xe4>
2ffef914:	2b00      	cmp	r3, #0
2ffef916:	d13d      	bne.n	2ffef994 <stm32_tamp_configure_external+0xe0>
2ffef918:	4825      	ldr	r0, [pc, #148]	; (2ffef9b0 <stm32_tamp_configure_external+0xfc>)
2ffef91a:	f002 ffa3 	bl	2fff2864 <tf_log>
2ffef91e:	f003 f845 	bl	2fff29ac <console_flush>
2ffef922:	f008 efaa 	blx	2fff8878 <do_panic>
2ffef926:	4823      	ldr	r0, [pc, #140]	; (2ffef9b4 <stm32_tamp_configure_external+0x100>)
2ffef928:	21c9      	movs	r1, #201	; 0xc9
2ffef92a:	f009 ffdf 	bl	2fff98ec <__assert>
2ffef92e:	6835      	ldr	r5, [r6, #0]
2ffef930:	1c69      	adds	r1, r5, #1
2ffef932:	d01f      	beq.n	2ffef974 <stm32_tamp_configure_external+0xc0>
2ffef934:	6823      	ldr	r3, [r4, #0]
2ffef936:	fa0a f105 	lsl.w	r1, sl, r5
2ffef93a:	430b      	orrs	r3, r1
2ffef93c:	6023      	str	r3, [r4, #0]
2ffef93e:	7933      	ldrb	r3, [r6, #4]
2ffef940:	2b01      	cmp	r3, #1
2ffef942:	d11a      	bne.n	2ffef97a <stm32_tamp_configure_external+0xc6>
2ffef944:	f105 0b18 	add.w	fp, r5, #24
2ffef948:	fa03 f30b 	lsl.w	r3, r3, fp
2ffef94c:	f896 b005 	ldrb.w	fp, [r6, #5]
2ffef950:	f1bb 0f00 	cmp.w	fp, #0
2ffef954:	d000      	beq.n	2ffef958 <stm32_tamp_configure_external+0xa4>
2ffef956:	430b      	orrs	r3, r1
2ffef958:	f896 b006 	ldrb.w	fp, [r6, #6]
2ffef95c:	f1bb 0f00 	cmp.w	fp, #0
2ffef960:	d012      	beq.n	2ffef988 <stm32_tamp_configure_external+0xd4>
2ffef962:	3510      	adds	r5, #16
2ffef964:	fa0a f505 	lsl.w	r5, sl, r5
2ffef968:	432b      	orrs	r3, r5
2ffef96a:	f8de 1000 	ldr.w	r1, [lr]
2ffef96e:	430b      	orrs	r3, r1
2ffef970:	f8ce 3000 	str.w	r3, [lr]
2ffef974:	3001      	adds	r0, #1
2ffef976:	360c      	adds	r6, #12
2ffef978:	e7b2      	b.n	2ffef8e0 <stm32_tamp_configure_external+0x2c>
2ffef97a:	2b02      	cmp	r3, #2
2ffef97c:	f04f 0300 	mov.w	r3, #0
2ffef980:	bf04      	itt	eq
2ffef982:	430a      	orreq	r2, r1
2ffef984:	b2d2      	uxtbeq	r2, r2
2ffef986:	e7e1      	b.n	2ffef94c <stm32_tamp_configure_external+0x98>
2ffef988:	f8dc 5000 	ldr.w	r5, [ip]
2ffef98c:	4329      	orrs	r1, r5
2ffef98e:	f8cc 1000 	str.w	r1, [ip]
2ffef992:	e7ea      	b.n	2ffef96a <stm32_tamp_configure_external+0xb6>
2ffef994:	3b01      	subs	r3, #1
2ffef996:	e7ba      	b.n	2ffef90e <stm32_tamp_configure_external+0x5a>
2ffef998:	2b00      	cmp	r3, #0
2ffef99a:	d0bd      	beq.n	2ffef918 <stm32_tamp_configure_external+0x64>
2ffef99c:	f8c9 8018 	str.w	r8, [r9, #24]
2ffef9a0:	f889 7012 	strb.w	r7, [r9, #18]
2ffef9a4:	b005      	add	sp, #20
2ffef9a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffef9aa:	bf00      	nop
2ffef9ac:	2fffe438 	.word	0x2fffe438
2ffef9b0:	2fffa19c 	.word	0x2fffa19c
2ffef9b4:	2fffa17d 	.word	0x2fffa17d

2ffef9b8 <stm32_tamp_it_handler>:
2ffef9b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffef9bc:	b08a      	sub	sp, #40	; 0x28
2ffef9be:	4d31      	ldr	r5, [pc, #196]	; (2ffefa84 <stm32_tamp_it_handler+0xcc>)
2ffef9c0:	682b      	ldr	r3, [r5, #0]
2ffef9c2:	f8d5 9014 	ldr.w	r9, [r5, #20]
2ffef9c6:	6b1c      	ldr	r4, [r3, #48]	; 0x30
2ffef9c8:	f8d5 8018 	ldr.w	r8, [r5, #24]
2ffef9cc:	f7ff ff1c 	bl	2ffef808 <stm32_rtc_is_timestamp_enable>
2ffef9d0:	b178      	cbz	r0, 2ffef9f2 <stm32_tamp_it_handler+0x3a>
2ffef9d2:	a803      	add	r0, sp, #12
2ffef9d4:	f7ff febc 	bl	2ffef750 <stm32_rtc_get_timestamp>
2ffef9d8:	482b      	ldr	r0, [pc, #172]	; (2ffefa88 <stm32_tamp_it_handler+0xd0>)
2ffef9da:	f002 ff43 	bl	2fff2864 <tf_log>
2ffef9de:	9b05      	ldr	r3, [sp, #20]
2ffef9e0:	9a08      	ldr	r2, [sp, #32]
2ffef9e2:	9301      	str	r3, [sp, #4]
2ffef9e4:	9b04      	ldr	r3, [sp, #16]
2ffef9e6:	9907      	ldr	r1, [sp, #28]
2ffef9e8:	9300      	str	r3, [sp, #0]
2ffef9ea:	4828      	ldr	r0, [pc, #160]	; (2ffefa8c <stm32_tamp_it_handler+0xd4>)
2ffef9ec:	9b03      	ldr	r3, [sp, #12]
2ffef9ee:	f002 ff39 	bl	2fff2864 <tf_log>
2ffef9f2:	0c23      	lsrs	r3, r4, #16
2ffef9f4:	041b      	lsls	r3, r3, #16
2ffef9f6:	b33b      	cbz	r3, 2ffefa48 <stm32_tamp_it_handler+0x90>
2ffef9f8:	2700      	movs	r7, #0
2ffef9fa:	f04f 0a01 	mov.w	sl, #1
2ffef9fe:	8a29      	ldrh	r1, [r5, #16]
2ffefa00:	b2fa      	uxtb	r2, r7
2ffefa02:	428a      	cmp	r2, r1
2ffefa04:	d307      	bcc.n	2ffefa16 <stm32_tamp_it_handler+0x5e>
2ffefa06:	b2e3      	uxtb	r3, r4
2ffefa08:	b1db      	cbz	r3, 2ffefa42 <stm32_tamp_it_handler+0x8a>
2ffefa0a:	2600      	movs	r6, #0
2ffefa0c:	f04f 090c 	mov.w	r9, #12
2ffefa10:	f04f 0a01 	mov.w	sl, #1
2ffefa14:	e031      	b.n	2ffefa7a <stm32_tamp_it_handler+0xc2>
2ffefa16:	f859 0032 	ldr.w	r0, [r9, r2, lsl #3]
2ffefa1a:	eb09 03c2 	add.w	r3, r9, r2, lsl #3
2ffefa1e:	f100 0610 	add.w	r6, r0, #16
2ffefa22:	fa0a f606 	lsl.w	r6, sl, r6
2ffefa26:	4226      	tst	r6, r4
2ffefa28:	d008      	beq.n	2ffefa3c <stm32_tamp_it_handler+0x84>
2ffefa2a:	685b      	ldr	r3, [r3, #4]
2ffefa2c:	b103      	cbz	r3, 2ffefa30 <stm32_tamp_it_handler+0x78>
2ffefa2e:	4798      	blx	r3
2ffefa30:	682a      	ldr	r2, [r5, #0]
2ffefa32:	ea24 0406 	bic.w	r4, r4, r6
2ffefa36:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
2ffefa38:	4333      	orrs	r3, r6
2ffefa3a:	63d3      	str	r3, [r2, #60]	; 0x3c
2ffefa3c:	3701      	adds	r7, #1
2ffefa3e:	2c00      	cmp	r4, #0
2ffefa40:	d1dd      	bne.n	2ffef9fe <stm32_tamp_it_handler+0x46>
2ffefa42:	b00a      	add	sp, #40	; 0x28
2ffefa44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffefa48:	2c00      	cmp	r4, #0
2ffefa4a:	d1dc      	bne.n	2ffefa06 <stm32_tamp_it_handler+0x4e>
2ffefa4c:	e7f9      	b.n	2ffefa42 <stm32_tamp_it_handler+0x8a>
2ffefa4e:	fb09 f303 	mul.w	r3, r9, r3
2ffefa52:	f858 0003 	ldr.w	r0, [r8, r3]
2ffefa56:	eb08 0203 	add.w	r2, r8, r3
2ffefa5a:	fa0a f700 	lsl.w	r7, sl, r0
2ffefa5e:	4227      	tst	r7, r4
2ffefa60:	d008      	beq.n	2ffefa74 <stm32_tamp_it_handler+0xbc>
2ffefa62:	6893      	ldr	r3, [r2, #8]
2ffefa64:	b103      	cbz	r3, 2ffefa68 <stm32_tamp_it_handler+0xb0>
2ffefa66:	4798      	blx	r3
2ffefa68:	682a      	ldr	r2, [r5, #0]
2ffefa6a:	ea24 0407 	bic.w	r4, r4, r7
2ffefa6e:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
2ffefa70:	433b      	orrs	r3, r7
2ffefa72:	63d3      	str	r3, [r2, #60]	; 0x3c
2ffefa74:	3601      	adds	r6, #1
2ffefa76:	2c00      	cmp	r4, #0
2ffefa78:	d0e3      	beq.n	2ffefa42 <stm32_tamp_it_handler+0x8a>
2ffefa7a:	7caa      	ldrb	r2, [r5, #18]
2ffefa7c:	b2f3      	uxtb	r3, r6
2ffefa7e:	429a      	cmp	r2, r3
2ffefa80:	d8e5      	bhi.n	2ffefa4e <stm32_tamp_it_handler+0x96>
2ffefa82:	e7de      	b.n	2ffefa42 <stm32_tamp_it_handler+0x8a>
2ffefa84:	2fffe438 	.word	0x2fffe438
2ffefa88:	2fffa1c2 	.word	0x2fffa1c2
2ffefa8c:	2fffa1da 	.word	0x2fffa1da

2ffefa90 <stm32_tamp_init>:
2ffefa90:	b570      	push	{r4, r5, r6, lr}
2ffefa92:	b086      	sub	sp, #24
2ffefa94:	a801      	add	r0, sp, #4
2ffefa96:	f008 f9b7 	bl	2fff7e08 <fdt_get_address>
2ffefa9a:	b918      	cbnz	r0, 2ffefaa4 <stm32_tamp_init+0x14>
2ffefa9c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffefaa0:	b006      	add	sp, #24
2ffefaa2:	bd70      	pop	{r4, r5, r6, pc}
2ffefaa4:	4a36      	ldr	r2, [pc, #216]	; (2ffefb80 <stm32_tamp_init+0xf0>)
2ffefaa6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffefaaa:	a802      	add	r0, sp, #8
2ffefaac:	f008 fa96 	bl	2fff7fdc <dt_get_node>
2ffefab0:	1e04      	subs	r4, r0, #0
2ffefab2:	dbf3      	blt.n	2ffefa9c <stm32_tamp_init+0xc>
2ffefab4:	9b02      	ldr	r3, [sp, #8]
2ffefab6:	b923      	cbnz	r3, 2ffefac2 <stm32_tamp_init+0x32>
2ffefab8:	f240 114b 	movw	r1, #331	; 0x14b
2ffefabc:	4831      	ldr	r0, [pc, #196]	; (2ffefb84 <stm32_tamp_init+0xf4>)
2ffefabe:	f009 ff15 	bl	2fff98ec <__assert>
2ffefac2:	9803      	ldr	r0, [sp, #12]
2ffefac4:	1c42      	adds	r2, r0, #1
2ffefac6:	d102      	bne.n	2ffeface <stm32_tamp_init+0x3e>
2ffefac8:	f44f 71a6 	mov.w	r1, #332	; 0x14c
2ffefacc:	e7f6      	b.n	2ffefabc <stm32_tamp_init+0x2c>
2ffeface:	4d2e      	ldr	r5, [pc, #184]	; (2ffefb88 <stm32_tamp_init+0xf8>)
2ffefad0:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
2ffefad4:	602b      	str	r3, [r5, #0]
2ffefad6:	6068      	str	r0, [r5, #4]
2ffefad8:	f005 fb2c 	bl	2fff5134 <stm32mp_clk_enable>
2ffefadc:	682a      	ldr	r2, [r5, #0]
2ffefade:	2300      	movs	r3, #0
2ffefae0:	6013      	str	r3, [r2, #0]
2ffefae2:	6053      	str	r3, [r2, #4]
2ffefae4:	60d3      	str	r3, [r2, #12]
2ffefae6:	6113      	str	r3, [r2, #16]
2ffefae8:	6a11      	ldr	r1, [r2, #32]
2ffefaea:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
2ffefaee:	6211      	str	r1, [r2, #32]
2ffefaf0:	62d3      	str	r3, [r2, #44]	; 0x2c
2ffefaf2:	63d6      	str	r6, [r2, #60]	; 0x3c
2ffefaf4:	6d11      	ldr	r1, [r2, #80]	; 0x50
2ffefaf6:	f021 0101 	bic.w	r1, r1, #1
2ffefafa:	6511      	str	r1, [r2, #80]	; 0x50
2ffefafc:	9905      	ldr	r1, [sp, #20]
2ffefafe:	3902      	subs	r1, #2
2ffefb00:	2901      	cmp	r1, #1
2ffefb02:	d83b      	bhi.n	2ffefb7c <stm32_tamp_init+0xec>
2ffefb04:	f8d2 13f0 	ldr.w	r1, [r2, #1008]	; 0x3f0
2ffefb08:	60a9      	str	r1, [r5, #8]
2ffefb0a:	f8d2 13ec 	ldr.w	r1, [r2, #1004]	; 0x3ec
2ffefb0e:	f8d2 03f4 	ldr.w	r0, [r2, #1012]	; 0x3f4
2ffefb12:	60e9      	str	r1, [r5, #12]
2ffefb14:	f411 6f70 	tst.w	r1, #3840	; 0xf00
2ffefb18:	d103      	bne.n	2ffefb22 <stm32_tamp_init+0x92>
2ffefb1a:	481c      	ldr	r0, [pc, #112]	; (2ffefb8c <stm32_tamp_init+0xfc>)
2ffefb1c:	f002 fea2 	bl	2fff2864 <tf_log>
2ffefb20:	e7bc      	b.n	2ffefa9c <stm32_tamp_init+0xc>
2ffefb22:	6a11      	ldr	r1, [r2, #32]
2ffefb24:	9801      	ldr	r0, [sp, #4]
2ffefb26:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
2ffefb2a:	6211      	str	r1, [r2, #32]
2ffefb2c:	4621      	mov	r1, r4
2ffefb2e:	4a18      	ldr	r2, [pc, #96]	; (2ffefb90 <stm32_tamp_init+0x100>)
2ffefb30:	f009 fd3e 	bl	2fff95b0 <fdt_getprop>
2ffefb34:	b120      	cbz	r0, 2ffefb40 <stm32_tamp_init+0xb0>
2ffefb36:	682a      	ldr	r2, [r5, #0]
2ffefb38:	6d13      	ldr	r3, [r2, #80]	; 0x50
2ffefb3a:	f043 0301 	orr.w	r3, r3, #1
2ffefb3e:	6513      	str	r3, [r2, #80]	; 0x50
2ffefb40:	2100      	movs	r1, #0
2ffefb42:	4620      	mov	r0, r4
2ffefb44:	f001 fd6a 	bl	2fff161c <stm32_gic_enable_spi>
2ffefb48:	2800      	cmp	r0, #0
2ffefb4a:	da03      	bge.n	2ffefb54 <stm32_tamp_init+0xc4>
2ffefb4c:	f002 ff2e 	bl	2fff29ac <console_flush>
2ffefb50:	f008 ee92 	blx	2fff8878 <do_panic>
2ffefb54:	4a0f      	ldr	r2, [pc, #60]	; (2ffefb94 <stm32_tamp_init+0x104>)
2ffefb56:	2300      	movs	r3, #0
2ffefb58:	9801      	ldr	r0, [sp, #4]
2ffefb5a:	4621      	mov	r1, r4
2ffefb5c:	f009 fd28 	bl	2fff95b0 <fdt_getprop>
2ffefb60:	b150      	cbz	r0, 2ffefb78 <stm32_tamp_init+0xe8>
2ffefb62:	4b0d      	ldr	r3, [pc, #52]	; (2ffefb98 <stm32_tamp_init+0x108>)
2ffefb64:	695a      	ldr	r2, [r3, #20]
2ffefb66:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
2ffefb6a:	615a      	str	r2, [r3, #20]
2ffefb6c:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
2ffefb70:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
2ffefb74:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
2ffefb78:	2001      	movs	r0, #1
2ffefb7a:	e791      	b.n	2ffefaa0 <stm32_tamp_init+0x10>
2ffefb7c:	4618      	mov	r0, r3
2ffefb7e:	e78f      	b.n	2ffefaa0 <stm32_tamp_init+0x10>
2ffefb80:	2fffa1fc 	.word	0x2fffa1fc
2ffefb84:	2fffa17d 	.word	0x2fffa17d
2ffefb88:	2fffe438 	.word	0x2fffe438
2ffefb8c:	2fffa20a 	.word	0x2fffa20a
2ffefb90:	2fffa22f 	.word	0x2fffa22f
2ffefb94:	2fffa23c 	.word	0x2fffa23c
2ffefb98:	5000d000 	.word	0x5000d000

2ffefb9c <stm32_timer_config>:
2ffefb9c:	b510      	push	{r4, lr}
2ffefb9e:	4604      	mov	r4, r0
2ffefba0:	6840      	ldr	r0, [r0, #4]
2ffefba2:	f005 fac7 	bl	2fff5134 <stm32mp_clk_enable>
2ffefba6:	6860      	ldr	r0, [r4, #4]
2ffefba8:	f005 fbf6 	bl	2fff5398 <stm32mp_clk_timer_get_rate>
2ffefbac:	4b18      	ldr	r3, [pc, #96]	; (2ffefc10 <stm32_timer_config+0x74>)
2ffefbae:	60a0      	str	r0, [r4, #8]
2ffefbb0:	4298      	cmp	r0, r3
2ffefbb2:	d808      	bhi.n	2ffefbc6 <stm32_timer_config+0x2a>
2ffefbb4:	4817      	ldr	r0, [pc, #92]	; (2ffefc14 <stm32_timer_config+0x78>)
2ffefbb6:	f002 fe55 	bl	2fff2864 <tf_log>
2ffefbba:	6860      	ldr	r0, [r4, #4]
2ffefbbc:	f005 fabd 	bl	2fff513a <stm32mp_clk_disable>
2ffefbc0:	f06f 0015 	mvn.w	r0, #21
2ffefbc4:	bd10      	pop	{r4, pc}
2ffefbc6:	6823      	ldr	r3, [r4, #0]
2ffefbc8:	7b21      	ldrb	r1, [r4, #12]
2ffefbca:	6e9a      	ldr	r2, [r3, #104]	; 0x68
2ffefbcc:	f002 020f 	and.w	r2, r2, #15
2ffefbd0:	428a      	cmp	r2, r1
2ffefbd2:	d018      	beq.n	2ffefc06 <stm32_timer_config+0x6a>
2ffefbd4:	699a      	ldr	r2, [r3, #24]
2ffefbd6:	f022 0203 	bic.w	r2, r2, #3
2ffefbda:	f042 0201 	orr.w	r2, r2, #1
2ffefbde:	619a      	str	r2, [r3, #24]
2ffefbe0:	6a1a      	ldr	r2, [r3, #32]
2ffefbe2:	f022 020a 	bic.w	r2, r2, #10
2ffefbe6:	621a      	str	r2, [r3, #32]
2ffefbe8:	689a      	ldr	r2, [r3, #8]
2ffefbea:	f022 0277 	bic.w	r2, r2, #119	; 0x77
2ffefbee:	f042 0254 	orr.w	r2, r2, #84	; 0x54
2ffefbf2:	609a      	str	r2, [r3, #8]
2ffefbf4:	6699      	str	r1, [r3, #104]	; 0x68
2ffefbf6:	681a      	ldr	r2, [r3, #0]
2ffefbf8:	f042 0201 	orr.w	r2, r2, #1
2ffefbfc:	601a      	str	r2, [r3, #0]
2ffefbfe:	6a1a      	ldr	r2, [r3, #32]
2ffefc00:	f042 0201 	orr.w	r2, r2, #1
2ffefc04:	621a      	str	r2, [r3, #32]
2ffefc06:	6860      	ldr	r0, [r4, #4]
2ffefc08:	f005 fa97 	bl	2fff513a <stm32mp_clk_disable>
2ffefc0c:	2000      	movs	r0, #0
2ffefc0e:	e7d9      	b.n	2ffefbc4 <stm32_timer_config+0x28>
2ffefc10:	02faf07f 	.word	0x02faf07f
2ffefc14:	2fffa24a 	.word	0x2fffa24a

2ffefc18 <stm32_timer_start_capture>:
2ffefc18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffefc1a:	4606      	mov	r6, r0
2ffefc1c:	f7ff ffbe 	bl	2ffefb9c <stm32_timer_config>
2ffefc20:	2800      	cmp	r0, #0
2ffefc22:	db2b      	blt.n	2ffefc7c <stm32_timer_start_capture+0x64>
2ffefc24:	6870      	ldr	r0, [r6, #4]
2ffefc26:	f242 7410 	movw	r4, #10000	; 0x2710
2ffefc2a:	f005 fa83 	bl	2fff5134 <stm32mp_clk_enable>
2ffefc2e:	6833      	ldr	r3, [r6, #0]
2ffefc30:	2200      	movs	r2, #0
2ffefc32:	611a      	str	r2, [r3, #16]
2ffefc34:	6833      	ldr	r3, [r6, #0]
2ffefc36:	f103 0210 	add.w	r2, r3, #16
2ffefc3a:	691b      	ldr	r3, [r3, #16]
2ffefc3c:	07d9      	lsls	r1, r3, #31
2ffefc3e:	d407      	bmi.n	2ffefc50 <stm32_timer_start_capture+0x38>
2ffefc40:	b90c      	cbnz	r4, 2ffefc46 <stm32_timer_start_capture+0x2e>
2ffefc42:	4625      	mov	r5, r4
2ffefc44:	e016      	b.n	2ffefc74 <stm32_timer_start_capture+0x5c>
2ffefc46:	200a      	movs	r0, #10
2ffefc48:	3c01      	subs	r4, #1
2ffefc4a:	f004 f949 	bl	2fff3ee0 <udelay>
2ffefc4e:	e7f1      	b.n	2ffefc34 <stm32_timer_start_capture+0x1c>
2ffefc50:	2500      	movs	r5, #0
2ffefc52:	2c00      	cmp	r4, #0
2ffefc54:	d0f5      	beq.n	2ffefc42 <stm32_timer_start_capture+0x2a>
2ffefc56:	6015      	str	r5, [r2, #0]
2ffefc58:	462f      	mov	r7, r5
2ffefc5a:	f242 7410 	movw	r4, #10000	; 0x2710
2ffefc5e:	e003      	b.n	2ffefc68 <stm32_timer_start_capture+0x50>
2ffefc60:	200a      	movs	r0, #10
2ffefc62:	3c01      	subs	r4, #1
2ffefc64:	f004 f93c 	bl	2fff3ee0 <udelay>
2ffefc68:	6833      	ldr	r3, [r6, #0]
2ffefc6a:	691a      	ldr	r2, [r3, #16]
2ffefc6c:	0792      	lsls	r2, r2, #30
2ffefc6e:	d408      	bmi.n	2ffefc82 <stm32_timer_start_capture+0x6a>
2ffefc70:	2c00      	cmp	r4, #0
2ffefc72:	d1f5      	bne.n	2ffefc60 <stm32_timer_start_capture+0x48>
2ffefc74:	6870      	ldr	r0, [r6, #4]
2ffefc76:	f005 fa60 	bl	2fff513a <stm32mp_clk_disable>
2ffefc7a:	b904      	cbnz	r4, 2ffefc7e <stm32_timer_start_capture+0x66>
2ffefc7c:	2500      	movs	r5, #0
2ffefc7e:	4628      	mov	r0, r5
2ffefc80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffefc82:	2c00      	cmp	r4, #0
2ffefc84:	d0f6      	beq.n	2ffefc74 <stm32_timer_start_capture+0x5c>
2ffefc86:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffefc88:	3701      	adds	r7, #1
2ffefc8a:	2f01      	cmp	r7, #1
2ffefc8c:	d101      	bne.n	2ffefc92 <stm32_timer_start_capture+0x7a>
2ffefc8e:	461d      	mov	r5, r3
2ffefc90:	e7e3      	b.n	2ffefc5a <stm32_timer_start_capture+0x42>
2ffefc92:	42ab      	cmp	r3, r5
2ffefc94:	d1fb      	bne.n	2ffefc8e <stm32_timer_start_capture+0x76>
2ffefc96:	e7ed      	b.n	2ffefc74 <stm32_timer_start_capture+0x5c>

2ffefc98 <stm32_timer_hsi_freq>:
2ffefc98:	b510      	push	{r4, lr}
2ffefc9a:	4c07      	ldr	r4, [pc, #28]	; (2ffefcb8 <stm32_timer_hsi_freq+0x20>)
2ffefc9c:	6823      	ldr	r3, [r4, #0]
2ffefc9e:	b90b      	cbnz	r3, 2ffefca4 <stm32_timer_hsi_freq+0xc>
2ffefca0:	2000      	movs	r0, #0
2ffefca2:	bd10      	pop	{r4, pc}
2ffefca4:	4620      	mov	r0, r4
2ffefca6:	f7ff ffb7 	bl	2ffefc18 <stm32_timer_start_capture>
2ffefcaa:	2800      	cmp	r0, #0
2ffefcac:	d0f8      	beq.n	2ffefca0 <stm32_timer_hsi_freq+0x8>
2ffefcae:	68a3      	ldr	r3, [r4, #8]
2ffefcb0:	fbb3 f0f0 	udiv	r0, r3, r0
2ffefcb4:	0280      	lsls	r0, r0, #10
2ffefcb6:	e7f4      	b.n	2ffefca2 <stm32_timer_hsi_freq+0xa>
2ffefcb8:	2fffe454 	.word	0x2fffe454

2ffefcbc <stm32_timer_csi_freq>:
2ffefcbc:	b510      	push	{r4, lr}
2ffefcbe:	4c08      	ldr	r4, [pc, #32]	; (2ffefce0 <stm32_timer_csi_freq+0x24>)
2ffefcc0:	6923      	ldr	r3, [r4, #16]
2ffefcc2:	b90b      	cbnz	r3, 2ffefcc8 <stm32_timer_csi_freq+0xc>
2ffefcc4:	2000      	movs	r0, #0
2ffefcc6:	bd10      	pop	{r4, pc}
2ffefcc8:	f104 0010 	add.w	r0, r4, #16
2ffefccc:	f7ff ffa4 	bl	2ffefc18 <stm32_timer_start_capture>
2ffefcd0:	2800      	cmp	r0, #0
2ffefcd2:	d0f7      	beq.n	2ffefcc4 <stm32_timer_csi_freq+0x8>
2ffefcd4:	69a3      	ldr	r3, [r4, #24]
2ffefcd6:	fbb3 f0f0 	udiv	r0, r3, r0
2ffefcda:	01c0      	lsls	r0, r0, #7
2ffefcdc:	e7f3      	b.n	2ffefcc6 <stm32_timer_csi_freq+0xa>
2ffefcde:	bf00      	nop
2ffefce0:	2fffe454 	.word	0x2fffe454

2ffefce4 <stm32_timer_freq_func>:
2ffefce4:	b508      	push	{r3, lr}
2ffefce6:	4b09      	ldr	r3, [pc, #36]	; (2ffefd0c <stm32_timer_freq_func+0x28>)
2ffefce8:	b129      	cbz	r1, 2ffefcf6 <stm32_timer_freq_func+0x12>
2ffefcea:	2901      	cmp	r1, #1
2ffefcec:	d008      	beq.n	2ffefd00 <stm32_timer_freq_func+0x1c>
2ffefcee:	f002 fe5d 	bl	2fff29ac <console_flush>
2ffefcf2:	f008 edc2 	blx	2fff8878 <do_panic>
2ffefcf6:	681b      	ldr	r3, [r3, #0]
2ffefcf8:	b10b      	cbz	r3, 2ffefcfe <stm32_timer_freq_func+0x1a>
2ffefcfa:	4b05      	ldr	r3, [pc, #20]	; (2ffefd10 <stm32_timer_freq_func+0x2c>)
2ffefcfc:	6003      	str	r3, [r0, #0]
2ffefcfe:	bd08      	pop	{r3, pc}
2ffefd00:	691b      	ldr	r3, [r3, #16]
2ffefd02:	2b00      	cmp	r3, #0
2ffefd04:	d0fb      	beq.n	2ffefcfe <stm32_timer_freq_func+0x1a>
2ffefd06:	4b03      	ldr	r3, [pc, #12]	; (2ffefd14 <stm32_timer_freq_func+0x30>)
2ffefd08:	e7f8      	b.n	2ffefcfc <stm32_timer_freq_func+0x18>
2ffefd0a:	bf00      	nop
2ffefd0c:	2fffe454 	.word	0x2fffe454
2ffefd10:	2ffefc99 	.word	0x2ffefc99
2ffefd14:	2ffefcbd 	.word	0x2ffefcbd

2ffefd18 <stm32_timer_init>:
2ffefd18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffefd1c:	b087      	sub	sp, #28
2ffefd1e:	a801      	add	r0, sp, #4
2ffefd20:	f008 f872 	bl	2fff7e08 <fdt_get_address>
2ffefd24:	2800      	cmp	r0, #0
2ffefd26:	d058      	beq.n	2ffefdda <stm32_timer_init+0xc2>
2ffefd28:	4a2d      	ldr	r2, [pc, #180]	; (2ffefde0 <stm32_timer_init+0xc8>)
2ffefd2a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffefd2e:	a802      	add	r0, sp, #8
2ffefd30:	f008 f954 	bl	2fff7fdc <dt_get_node>
2ffefd34:	1e06      	subs	r6, r0, #0
2ffefd36:	da0b      	bge.n	2ffefd50 <stm32_timer_init+0x38>
2ffefd38:	492a      	ldr	r1, [pc, #168]	; (2ffefde4 <stm32_timer_init+0xcc>)
2ffefd3a:	2400      	movs	r4, #0
2ffefd3c:	482a      	ldr	r0, [pc, #168]	; (2ffefde8 <stm32_timer_init+0xd0>)
2ffefd3e:	f002 fd91 	bl	2fff2864 <tf_log>
2ffefd42:	fab4 f484 	clz	r4, r4
2ffefd46:	0964      	lsrs	r4, r4, #5
2ffefd48:	4260      	negs	r0, r4
2ffefd4a:	b007      	add	sp, #28
2ffefd4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffefd50:	4d26      	ldr	r5, [pc, #152]	; (2ffefdec <stm32_timer_init+0xd4>)
2ffefd52:	2400      	movs	r4, #0
2ffefd54:	f8df 8098 	ldr.w	r8, [pc, #152]	; 2ffefdf0 <stm32_timer_init+0xd8>
2ffefd58:	f105 0910 	add.w	r9, r5, #16
2ffefd5c:	9b05      	ldr	r3, [sp, #20]
2ffefd5e:	2b02      	cmp	r3, #2
2ffefd60:	d119      	bne.n	2ffefd96 <stm32_timer_init+0x7e>
2ffefd62:	9801      	ldr	r0, [sp, #4]
2ffefd64:	2300      	movs	r3, #0
2ffefd66:	4642      	mov	r2, r8
2ffefd68:	4631      	mov	r1, r6
2ffefd6a:	3401      	adds	r4, #1
2ffefd6c:	f009 fc20 	bl	2fff95b0 <fdt_getprop>
2ffefd70:	b2e4      	uxtb	r4, r4
2ffefd72:	4607      	mov	r7, r0
2ffefd74:	b1b8      	cbz	r0, 2ffefda6 <stm32_timer_init+0x8e>
2ffefd76:	9b02      	ldr	r3, [sp, #8]
2ffefd78:	9803      	ldr	r0, [sp, #12]
2ffefd7a:	602b      	str	r3, [r5, #0]
2ffefd7c:	6068      	str	r0, [r5, #4]
2ffefd7e:	f005 fb0b 	bl	2fff5398 <stm32mp_clk_timer_get_rate>
2ffefd82:	78fb      	ldrb	r3, [r7, #3]
2ffefd84:	60a8      	str	r0, [r5, #8]
2ffefd86:	4819      	ldr	r0, [pc, #100]	; (2ffefdec <stm32_timer_init+0xd4>)
2ffefd88:	732b      	strb	r3, [r5, #12]
2ffefd8a:	f7ff ff07 	bl	2ffefb9c <stm32_timer_config>
2ffefd8e:	2800      	cmp	r0, #0
2ffefd90:	da09      	bge.n	2ffefda6 <stm32_timer_init+0x8e>
2ffefd92:	2300      	movs	r3, #0
2ffefd94:	602b      	str	r3, [r5, #0]
2ffefd96:	4a12      	ldr	r2, [pc, #72]	; (2ffefde0 <stm32_timer_init+0xc8>)
2ffefd98:	4631      	mov	r1, r6
2ffefd9a:	a802      	add	r0, sp, #8
2ffefd9c:	f008 f91e 	bl	2fff7fdc <dt_get_node>
2ffefda0:	1e06      	subs	r6, r0, #0
2ffefda2:	dadb      	bge.n	2ffefd5c <stm32_timer_init+0x44>
2ffefda4:	e7cd      	b.n	2ffefd42 <stm32_timer_init+0x2a>
2ffefda6:	4a13      	ldr	r2, [pc, #76]	; (2ffefdf4 <stm32_timer_init+0xdc>)
2ffefda8:	2300      	movs	r3, #0
2ffefdaa:	9801      	ldr	r0, [sp, #4]
2ffefdac:	4631      	mov	r1, r6
2ffefdae:	f009 fbff 	bl	2fff95b0 <fdt_getprop>
2ffefdb2:	4607      	mov	r7, r0
2ffefdb4:	2800      	cmp	r0, #0
2ffefdb6:	d0ee      	beq.n	2ffefd96 <stm32_timer_init+0x7e>
2ffefdb8:	9b02      	ldr	r3, [sp, #8]
2ffefdba:	9803      	ldr	r0, [sp, #12]
2ffefdbc:	612b      	str	r3, [r5, #16]
2ffefdbe:	6168      	str	r0, [r5, #20]
2ffefdc0:	f005 faea 	bl	2fff5398 <stm32mp_clk_timer_get_rate>
2ffefdc4:	78fb      	ldrb	r3, [r7, #3]
2ffefdc6:	61a8      	str	r0, [r5, #24]
2ffefdc8:	4648      	mov	r0, r9
2ffefdca:	772b      	strb	r3, [r5, #28]
2ffefdcc:	f7ff fee6 	bl	2ffefb9c <stm32_timer_config>
2ffefdd0:	2800      	cmp	r0, #0
2ffefdd2:	bfbc      	itt	lt
2ffefdd4:	2300      	movlt	r3, #0
2ffefdd6:	612b      	strlt	r3, [r5, #16]
2ffefdd8:	e7dd      	b.n	2ffefd96 <stm32_timer_init+0x7e>
2ffefdda:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffefdde:	e7b4      	b.n	2ffefd4a <stm32_timer_init+0x32>
2ffefde0:	2fffa279 	.word	0x2fffa279
2ffefde4:	2fffa2c0 	.word	0x2fffa2c0
2ffefde8:	2fffa289 	.word	0x2fffa289
2ffefdec:	2fffe454 	.word	0x2fffe454
2ffefdf0:	2fffa29e 	.word	0x2fffa29e
2ffefdf4:	2fffa2af 	.word	0x2fffa2af

2ffefdf8 <stm32mp1_tamper_action>:
2ffefdf8:	b508      	push	{r3, lr}
2ffefdfa:	4b05      	ldr	r3, [pc, #20]	; (2ffefe10 <stm32mp1_tamper_action+0x18>)
2ffefdfc:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
2ffefe00:	4804      	ldr	r0, [pc, #16]	; (2ffefe14 <stm32mp1_tamper_action+0x1c>)
2ffefe02:	f002 fd2f 	bl	2fff2864 <tf_log>
2ffefe06:	f009 e8bc 	blx	2fff8f80 <plat_my_core_pos>
2ffefe0a:	f003 f839 	bl	2fff2e80 <stm32mp_plat_reset>
2ffefe0e:	bf00      	nop
2ffefe10:	2fffa498 	.word	0x2fffa498
2ffefe14:	2fffa2d8 	.word	0x2fffa2d8

2ffefe18 <sp_min_plat_fiq_handler>:
2ffefe18:	b510      	push	{r4, lr}
2ffefe1a:	4601      	mov	r1, r0
2ffefe1c:	f3c0 0409 	ubfx	r4, r0, #0, #10
2ffefe20:	2cb1      	cmp	r4, #177	; 0xb1
2ffefe22:	d818      	bhi.n	2ffefe56 <sp_min_plat_fiq_handler+0x3e>
2ffefe24:	2caf      	cmp	r4, #175	; 0xaf
2ffefe26:	d833      	bhi.n	2ffefe90 <sp_min_plat_fiq_handler+0x78>
2ffefe28:	2c1d      	cmp	r4, #29
2ffefe2a:	d031      	beq.n	2ffefe90 <sp_min_plat_fiq_handler+0x78>
2ffefe2c:	2c24      	cmp	r4, #36	; 0x24
2ffefe2e:	d034      	beq.n	2ffefe9a <sp_min_plat_fiq_handler+0x82>
2ffefe30:	2c09      	cmp	r4, #9
2ffefe32:	d145      	bne.n	2ffefec0 <sp_min_plat_fiq_handler+0xa8>
2ffefe34:	f002 ff3a 	bl	2fff2cac <stm32mp_mask_timer>
2ffefe38:	4620      	mov	r0, r4
2ffefe3a:	f001 f9e7 	bl	2fff120c <gicv2_end_of_interrupt>
2ffefe3e:	f001 fb53 	bl	2fff14e8 <plat_ic_get_pending_interrupt_id>
2ffefe42:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2ffefe46:	4604      	mov	r4, r0
2ffefe48:	d23f      	bcs.n	2ffefeca <sp_min_plat_fiq_handler+0xb2>
2ffefe4a:	f001 f9df 	bl	2fff120c <gicv2_end_of_interrupt>
2ffefe4e:	4620      	mov	r0, r4
2ffefe50:	f001 fb58 	bl	2fff1504 <plat_ic_disable_interrupt>
2ffefe54:	e7f3      	b.n	2ffefe3e <sp_min_plat_fiq_handler+0x26>
2ffefe56:	2ce5      	cmp	r4, #229	; 0xe5
2ffefe58:	d028      	beq.n	2ffefeac <sp_min_plat_fiq_handler+0x94>
2ffefe5a:	d804      	bhi.n	2ffefe66 <sp_min_plat_fiq_handler+0x4e>
2ffefe5c:	3cb6      	subs	r4, #182	; 0xb6
2ffefe5e:	2c01      	cmp	r4, #1
2ffefe60:	d82e      	bhi.n	2ffefec0 <sp_min_plat_fiq_handler+0xa8>
2ffefe62:	f007 f975 	bl	2fff7150 <stm32_iwdg_it_handler>
2ffefe66:	2cf4      	cmp	r4, #244	; 0xf4
2ffefe68:	d12a      	bne.n	2ffefec0 <sp_min_plat_fiq_handler+0xa8>
2ffefe6a:	4819      	ldr	r0, [pc, #100]	; (2ffefed0 <sp_min_plat_fiq_handler+0xb8>)
2ffefe6c:	f002 fcfa 	bl	2fff2864 <tf_log>
2ffefe70:	4818      	ldr	r0, [pc, #96]	; (2ffefed4 <sp_min_plat_fiq_handler+0xbc>)
2ffefe72:	f003 fed9 	bl	2fff3c28 <tzc400_init>
2ffefe76:	ee39 3f70 	mrc	15, 1, r3, cr9, cr0, {3}
2ffefe7a:	b1db      	cbz	r3, 2ffefeb4 <sp_min_plat_fiq_handler+0x9c>
2ffefe7c:	2300      	movs	r3, #0
2ffefe7e:	ee29 3f70 	mcr	15, 1, r3, cr9, cr0, {3}
2ffefe82:	f003 ffb1 	bl	2fff3de8 <tzc400_is_pending_interrupt>
2ffefe86:	b1c8      	cbz	r0, 2ffefebc <sp_min_plat_fiq_handler+0xa4>
2ffefe88:	4813      	ldr	r0, [pc, #76]	; (2ffefed8 <sp_min_plat_fiq_handler+0xc0>)
2ffefe8a:	f002 fceb 	bl	2fff2864 <tf_log>
2ffefe8e:	e009      	b.n	2ffefea4 <sp_min_plat_fiq_handler+0x8c>
2ffefe90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffefe94:	4608      	mov	r0, r1
2ffefe96:	f7ff b85f 	b.w	2ffeef58 <stm32mp1_calib_it_handler>
2ffefe9a:	480e      	ldr	r0, [pc, #56]	; (2ffefed4 <sp_min_plat_fiq_handler+0xbc>)
2ffefe9c:	f003 fec4 	bl	2fff3c28 <tzc400_init>
2ffefea0:	f003 ffc0 	bl	2fff3e24 <tzc400_it_handler>
2ffefea4:	f002 fd82 	bl	2fff29ac <console_flush>
2ffefea8:	f008 ece6 	blx	2fff8878 <do_panic>
2ffefeac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffefeb0:	f7ff bd82 	b.w	2ffef9b8 <stm32_tamp_it_handler>
2ffefeb4:	4809      	ldr	r0, [pc, #36]	; (2ffefedc <sp_min_plat_fiq_handler+0xc4>)
2ffefeb6:	f002 fcd5 	bl	2fff2864 <tf_log>
2ffefeba:	e7e2      	b.n	2ffefe82 <sp_min_plat_fiq_handler+0x6a>
2ffefebc:	4808      	ldr	r0, [pc, #32]	; (2ffefee0 <sp_min_plat_fiq_handler+0xc8>)
2ffefebe:	e7e4      	b.n	2ffefe8a <sp_min_plat_fiq_handler+0x72>
2ffefec0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffefec4:	4807      	ldr	r0, [pc, #28]	; (2ffefee4 <sp_min_plat_fiq_handler+0xcc>)
2ffefec6:	f002 bccd 	b.w	2fff2864 <tf_log>
2ffefeca:	f002 fefc 	bl	2fff2cc6 <stm32mp_wait_cpu_reset>
2ffefece:	bf00      	nop
2ffefed0:	2fffa2eb 	.word	0x2fffa2eb
2ffefed4:	5c006000 	.word	0x5c006000
2ffefed8:	2fffa33d 	.word	0x2fffa33d
2ffefedc:	2fffa30e 	.word	0x2fffa30e
2ffefee0:	2fffa362 	.word	0x2fffa362
2ffefee4:	2fffa389 	.word	0x2fffa389

2ffefee8 <sp_min_plat_get_bl33_ep_info>:
2ffefee8:	b570      	push	{r4, r5, r6, lr}
2ffefeea:	4c16      	ldr	r4, [pc, #88]	; (2ffeff44 <sp_min_plat_get_bl33_ep_info+0x5c>)
2ffefeec:	68a3      	ldr	r3, [r4, #8]
2ffefeee:	bb23      	cbnz	r3, 2ffeff3a <sp_min_plat_get_bl33_ep_info+0x52>
2ffefef0:	2041      	movs	r0, #65	; 0x41
2ffefef2:	f005 f91f 	bl	2fff5134 <stm32mp_clk_enable>
2ffefef6:	4b14      	ldr	r3, [pc, #80]	; (2ffeff48 <sp_min_plat_get_bl33_ep_info+0x60>)
2ffefef8:	2041      	movs	r0, #65	; 0x41
2ffefefa:	f8d3 6110 	ldr.w	r6, [r3, #272]	; 0x110
2ffefefe:	f8d3 5114 	ldr.w	r5, [r3, #276]	; 0x114
2ffeff02:	f005 f91a 	bl	2fff513a <stm32mp_clk_disable>
2ffeff06:	f008 fa4f 	bl	2fff83a8 <stm32_restore_context>
2ffeff0a:	b118      	cbz	r0, 2ffeff14 <sp_min_plat_get_bl33_ep_info+0x2c>
2ffeff0c:	f002 fd4e 	bl	2fff29ac <console_flush>
2ffeff10:	f008 ecb2 	blx	2fff8878 <do_panic>
2ffeff14:	2001      	movs	r0, #1
2ffeff16:	f7fd fab1 	bl	2ffed47c <cm_get_context>
2ffeff1a:	6983      	ldr	r3, [r0, #24]
2ffeff1c:	60e3      	str	r3, [r4, #12]
2ffeff1e:	4b0b      	ldr	r3, [pc, #44]	; (2ffeff4c <sp_min_plat_get_bl33_ep_info+0x64>)
2ffeff20:	429e      	cmp	r6, r3
2ffeff22:	d10c      	bne.n	2ffeff3e <sp_min_plat_get_bl33_ep_info+0x56>
2ffeff24:	f1b5 4f40 	cmp.w	r5, #3221225472	; 0xc0000000
2ffeff28:	d3f0      	bcc.n	2ffeff0c <sp_min_plat_get_bl33_ep_info+0x24>
2ffeff2a:	f008 f88d 	bl	2fff8048 <dt_get_ddr_size>
2ffeff2e:	f100 4040 	add.w	r0, r0, #3221225472	; 0xc0000000
2ffeff32:	3801      	subs	r0, #1
2ffeff34:	42a8      	cmp	r0, r5
2ffeff36:	d3e9      	bcc.n	2ffeff0c <sp_min_plat_get_bl33_ep_info+0x24>
2ffeff38:	60a5      	str	r5, [r4, #8]
2ffeff3a:	4802      	ldr	r0, [pc, #8]	; (2ffeff44 <sp_min_plat_get_bl33_ep_info+0x5c>)
2ffeff3c:	bd70      	pop	{r4, r5, r6, pc}
2ffeff3e:	6903      	ldr	r3, [r0, #16]
2ffeff40:	60a3      	str	r3, [r4, #8]
2ffeff42:	e7fa      	b.n	2ffeff3a <sp_min_plat_get_bl33_ep_info+0x52>
2ffeff44:	2fffe474 	.word	0x2fffe474
2ffeff48:	5c00a000 	.word	0x5c00a000
2ffeff4c:	ca7face0 	.word	0xca7face0

2ffeff50 <sp_min_early_platform_setup2>:
2ffeff50:	b530      	push	{r4, r5, lr}
2ffeff52:	4604      	mov	r4, r0
2ffeff54:	b087      	sub	sp, #28
2ffeff56:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffeff5a:	f043 0320 	orr.w	r3, r3, #32
2ffeff5e:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffeff62:	4a3f      	ldr	r2, [pc, #252]	; (2fff0060 <sp_min_early_platform_setup2+0x110>)
2ffeff64:	2302      	movs	r3, #2
2ffeff66:	9300      	str	r3, [sp, #0]
2ffeff68:	2100      	movs	r1, #0
2ffeff6a:	4b3e      	ldr	r3, [pc, #248]	; (2fff0064 <sp_min_early_platform_setup2+0x114>)
2ffeff6c:	4610      	mov	r0, r2
2ffeff6e:	1a9b      	subs	r3, r3, r2
2ffeff70:	f003 f900 	bl	2fff3174 <mmap_add_region>
2ffeff74:	f002 fe8c 	bl	2fff2c90 <configure_mmu>
2ffeff78:	b924      	cbnz	r4, 2ffeff84 <sp_min_early_platform_setup2+0x34>
2ffeff7a:	f44f 71a5 	mov.w	r1, #330	; 0x14a
2ffeff7e:	483a      	ldr	r0, [pc, #232]	; (2fff0068 <sp_min_early_platform_setup2+0x118>)
2ffeff80:	f009 fcb4 	bl	2fff98ec <__assert>
2ffeff84:	7823      	ldrb	r3, [r4, #0]
2ffeff86:	2b05      	cmp	r3, #5
2ffeff88:	d002      	beq.n	2ffeff90 <sp_min_early_platform_setup2+0x40>
2ffeff8a:	f240 114b 	movw	r1, #331	; 0x14b
2ffeff8e:	e7f6      	b.n	2ffeff7e <sp_min_early_platform_setup2+0x2e>
2ffeff90:	7863      	ldrb	r3, [r4, #1]
2ffeff92:	2b01      	cmp	r3, #1
2ffeff94:	d802      	bhi.n	2ffeff9c <sp_min_early_platform_setup2+0x4c>
2ffeff96:	f44f 71a6 	mov.w	r1, #332	; 0x14c
2ffeff9a:	e7f0      	b.n	2ffeff7e <sp_min_early_platform_setup2+0x2e>
2ffeff9c:	68a3      	ldr	r3, [r4, #8]
2ffeff9e:	b153      	cbz	r3, 2ffeffb6 <sp_min_early_platform_setup2+0x66>
2ffeffa0:	681a      	ldr	r2, [r3, #0]
2ffeffa2:	2a05      	cmp	r2, #5
2ffeffa4:	d10f      	bne.n	2ffeffc6 <sp_min_early_platform_setup2+0x76>
2ffeffa6:	689d      	ldr	r5, [r3, #8]
2ffeffa8:	4c30      	ldr	r4, [pc, #192]	; (2fff006c <sp_min_early_platform_setup2+0x11c>)
2ffeffaa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffeffac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffeffae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffeffb0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffeffb2:	682b      	ldr	r3, [r5, #0]
2ffeffb4:	6023      	str	r3, [r4, #0]
2ffeffb6:	f007 ff19 	bl	2fff7dec <dt_open_and_check>
2ffeffba:	2800      	cmp	r0, #0
2ffeffbc:	da05      	bge.n	2ffeffca <sp_min_early_platform_setup2+0x7a>
2ffeffbe:	f002 fcf5 	bl	2fff29ac <console_flush>
2ffeffc2:	f008 ec5a 	blx	2fff8878 <do_panic>
2ffeffc6:	68db      	ldr	r3, [r3, #12]
2ffeffc8:	e7e9      	b.n	2ffeff9e <sp_min_early_platform_setup2+0x4e>
2ffeffca:	f004 f9ab 	bl	2fff4324 <bsec_probe>
2ffeffce:	4604      	mov	r4, r0
2ffeffd0:	2800      	cmp	r0, #0
2ffeffd2:	d1f4      	bne.n	2ffeffbe <sp_min_early_platform_setup2+0x6e>
2ffeffd4:	f005 fd50 	bl	2fff5a78 <stm32mp1_clk_probe>
2ffeffd8:	2800      	cmp	r0, #0
2ffeffda:	dbf0      	blt.n	2ffeffbe <sp_min_early_platform_setup2+0x6e>
2ffeffdc:	f7ff f8e6 	bl	2ffef1ac <etzpc_init>
2ffeffe0:	2800      	cmp	r0, #0
2ffeffe2:	d1ec      	bne.n	2ffeffbe <sp_min_early_platform_setup2+0x6e>
2ffeffe4:	f7ff f8e2 	bl	2ffef1ac <etzpc_init>
2ffeffe8:	f240 31ff 	movw	r1, #1023	; 0x3ff
2ffeffec:	4620      	mov	r0, r4
2ffeffee:	f7ff f8cb 	bl	2ffef188 <etzpc_configure_tzma>
2ffefff2:	213e      	movs	r1, #62	; 0x3e
2ffefff4:	2001      	movs	r0, #1
2ffefff6:	f7ff f8c7 	bl	2ffef188 <etzpc_configure_tzma>
2ffefffa:	a802      	add	r0, sp, #8
2ffefffc:	f008 f800 	bl	2fff8000 <dt_get_stdout_uart_info>
2fff0000:	2800      	cmp	r0, #0
2fff0002:	dd0f      	ble.n	2fff0024 <sp_min_early_platform_setup2+0xd4>
2fff0004:	9b05      	ldr	r3, [sp, #20]
2fff0006:	b16b      	cbz	r3, 2fff0024 <sp_min_early_platform_setup2+0xd4>
2fff0008:	4b19      	ldr	r3, [pc, #100]	; (2fff0070 <sp_min_early_platform_setup2+0x120>)
2fff000a:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
2fff000e:	9802      	ldr	r0, [sp, #8]
2fff0010:	4621      	mov	r1, r4
2fff0012:	f008 edee 	blx	2fff8bf0 <console_stm32_register>
2fff0016:	2800      	cmp	r0, #0
2fff0018:	d0d1      	beq.n	2ffeffbe <sp_min_early_platform_setup2+0x6e>
2fff001a:	4815      	ldr	r0, [pc, #84]	; (2fff0070 <sp_min_early_platform_setup2+0x120>)
2fff001c:	f240 1107 	movw	r1, #263	; 0x107
2fff0020:	f002 fc8a 	bl	2fff2938 <console_set_scope>
2fff0024:	f007 fb1c 	bl	2fff7660 <dt_pmic_status>
2fff0028:	2800      	cmp	r0, #0
2fff002a:	dd01      	ble.n	2fff0030 <sp_min_early_platform_setup2+0xe0>
2fff002c:	f007 fbf8 	bl	2fff7820 <initialize_pmic>
2fff0030:	f008 fa0a 	bl	2fff8448 <stm32_are_pll1_settings_valid_in_context>
2fff0034:	b980      	cbnz	r0, 2fff0058 <sp_min_early_platform_setup2+0x108>
2fff0036:	f007 fb13 	bl	2fff7660 <dt_pmic_status>
2fff003a:	2800      	cmp	r0, #0
2fff003c:	dd07      	ble.n	2fff004e <sp_min_early_platform_setup2+0xfe>
2fff003e:	f002 fe0f 	bl	2fff2c60 <stm32mp_get_cpu_supply_name>
2fff0042:	2800      	cmp	r0, #0
2fff0044:	d0bb      	beq.n	2ffeffbe <sp_min_early_platform_setup2+0x6e>
2fff0046:	f007 fc61 	bl	2fff790c <stpmic1_regulator_voltage_get>
2fff004a:	1e04      	subs	r4, r0, #0
2fff004c:	dbb7      	blt.n	2ffeffbe <sp_min_early_platform_setup2+0x6e>
2fff004e:	4620      	mov	r0, r4
2fff0050:	f005 fa44 	bl	2fff54dc <stm32mp1_clk_compute_all_pll1_settings>
2fff0054:	2800      	cmp	r0, #0
2fff0056:	d1b2      	bne.n	2ffeffbe <sp_min_early_platform_setup2+0x6e>
2fff0058:	f000 faa2 	bl	2fff05a0 <stm32mp1_init_lp_states>
2fff005c:	b007      	add	sp, #28
2fff005e:	bd30      	pop	{r4, r5, pc}
2fff0060:	2ffed000 	.word	0x2ffed000
2fff0064:	2fffd000 	.word	0x2fffd000
2fff0068:	2fffa3b4 	.word	0x2fffa3b4
2fff006c:	2fffe474 	.word	0x2fffe474
2fff0070:	2fffe498 	.word	0x2fffe498

2fff0074 <sp_min_platform_setup>:
2fff0074:	b508      	push	{r3, lr}
2fff0076:	f006 f8a7 	bl	2fff61c8 <ddr_save_sr_mode>
2fff007a:	f008 fa5d 	bl	2fff8538 <stm32mp1_security_setup>
2fff007e:	f003 ff87 	bl	2fff3f90 <generic_delay_timer_init>
2fff0082:	f001 fa83 	bl	2fff158c <stm32_gic_init>
2fff0086:	f7ff fbcf 	bl	2ffef828 <stm32_rtc_init>
2fff008a:	1e01      	subs	r1, r0, #0
2fff008c:	da02      	bge.n	2fff0094 <sp_min_platform_setup+0x20>
2fff008e:	481c      	ldr	r0, [pc, #112]	; (2fff0100 <sp_min_platform_setup+0x8c>)
2fff0090:	f002 fbe8 	bl	2fff2864 <tf_log>
2fff0094:	f7ff f974 	bl	2ffef380 <stm32_rng_init>
2fff0098:	1e01      	subs	r1, r0, #0
2fff009a:	da02      	bge.n	2fff00a2 <sp_min_platform_setup+0x2e>
2fff009c:	4819      	ldr	r0, [pc, #100]	; (2fff0104 <sp_min_platform_setup+0x90>)
2fff009e:	f002 fbe1 	bl	2fff2864 <tf_log>
2fff00a2:	f7ff fcf5 	bl	2ffefa90 <stm32_tamp_init>
2fff00a6:	2800      	cmp	r0, #0
2fff00a8:	dd0b      	ble.n	2fff00c2 <sp_min_platform_setup+0x4e>
2fff00aa:	4817      	ldr	r0, [pc, #92]	; (2fff0108 <sp_min_platform_setup+0x94>)
2fff00ac:	2106      	movs	r1, #6
2fff00ae:	f7ff fbd5 	bl	2ffef85c <stm32_tamp_configure_internal>
2fff00b2:	4816      	ldr	r0, [pc, #88]	; (2fff010c <sp_min_platform_setup+0x98>)
2fff00b4:	2300      	movs	r3, #0
2fff00b6:	461a      	mov	r2, r3
2fff00b8:	2103      	movs	r1, #3
2fff00ba:	f7ff fbfb 	bl	2ffef8b4 <stm32_tamp_configure_external>
2fff00be:	f7ff fb7f 	bl	2ffef7c0 <stm32_rtc_set_tamper_timestamp>
2fff00c2:	f7ff fe29 	bl	2ffefd18 <stm32_timer_init>
2fff00c6:	b908      	cbnz	r0, 2fff00cc <sp_min_platform_setup+0x58>
2fff00c8:	f7fe ffa6 	bl	2ffef018 <stm32mp1_calib_init>
2fff00cc:	f007 f86e 	bl	2fff71ac <stm32_iwdg_init>
2fff00d0:	2800      	cmp	r0, #0
2fff00d2:	da03      	bge.n	2fff00dc <sp_min_platform_setup+0x68>
2fff00d4:	f002 fc6a 	bl	2fff29ac <console_flush>
2fff00d8:	f008 ebce 	blx	2fff8878 <do_panic>
2fff00dc:	480c      	ldr	r0, [pc, #48]	; (2fff0110 <sp_min_platform_setup+0x9c>)
2fff00de:	f004 fb26 	bl	2fff472e <fdt_rcc_enable_it>
2fff00e2:	1e01      	subs	r1, r0, #0
2fff00e4:	da03      	bge.n	2fff00ee <sp_min_platform_setup+0x7a>
2fff00e6:	480b      	ldr	r0, [pc, #44]	; (2fff0114 <sp_min_platform_setup+0xa0>)
2fff00e8:	f002 fbbc 	bl	2fff2864 <tf_log>
2fff00ec:	e7f2      	b.n	2fff00d4 <sp_min_platform_setup+0x60>
2fff00ee:	2106      	movs	r1, #6
2fff00f0:	f001 fa0a 	bl	2fff1508 <plat_ic_set_interrupt_priority>
2fff00f4:	f000 fd84 	bl	2fff0c00 <stm32mp_lock_periph_registering>
2fff00f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff00fc:	f002 bae6 	b.w	2fff26cc <stm32mp1_init_scmi_server>
2fff0100:	2fffa3db 	.word	0x2fffa3db
2fff0104:	2fffa3f6 	.word	0x2fffa3f6
2fff0108:	2fffd1b8 	.word	0x2fffd1b8
2fff010c:	2fffd194 	.word	0x2fffd194
2fff0110:	2fffa411 	.word	0x2fffa411
2fff0114:	2fffa418 	.word	0x2fffa418

2fff0118 <sp_min_plat_arch_setup>:
2fff0118:	4770      	bx	lr
	...

2fff011c <stm32_apply_pmic_suspend_config>:
2fff011c:	4b0e      	ldr	r3, [pc, #56]	; (2fff0158 <stm32_apply_pmic_suspend_config+0x3c>)
2fff011e:	220c      	movs	r2, #12
2fff0120:	2806      	cmp	r0, #6
2fff0122:	fb02 3300 	mla	r3, r2, r0, r3
2fff0126:	b510      	push	{r4, lr}
2fff0128:	689c      	ldr	r4, [r3, #8]
2fff012a:	d903      	bls.n	2fff0134 <stm32_apply_pmic_suspend_config+0x18>
2fff012c:	480b      	ldr	r0, [pc, #44]	; (2fff015c <stm32_apply_pmic_suspend_config+0x40>)
2fff012e:	2162      	movs	r1, #98	; 0x62
2fff0130:	f009 fbdc 	bl	2fff98ec <__assert>
2fff0134:	b17c      	cbz	r4, 2fff0156 <stm32_apply_pmic_suspend_config+0x3a>
2fff0136:	f007 faef 	bl	2fff7718 <initialize_pmic_i2c>
2fff013a:	b918      	cbnz	r0, 2fff0144 <stm32_apply_pmic_suspend_config+0x28>
2fff013c:	f002 fc36 	bl	2fff29ac <console_flush>
2fff0140:	f008 eb9a 	blx	2fff8878 <do_panic>
2fff0144:	4620      	mov	r0, r4
2fff0146:	f007 faa4 	bl	2fff7692 <pmic_set_lp_config>
2fff014a:	2800      	cmp	r0, #0
2fff014c:	dbf6      	blt.n	2fff013c <stm32_apply_pmic_suspend_config+0x20>
2fff014e:	f007 fa9b 	bl	2fff7688 <pmic_configure_boot_on_regulators>
2fff0152:	2800      	cmp	r0, #0
2fff0154:	dbf2      	blt.n	2fff013c <stm32_apply_pmic_suspend_config+0x20>
2fff0156:	bd10      	pop	{r4, pc}
2fff0158:	2fffa530 	.word	0x2fffa530
2fff015c:	2fffa4b0 	.word	0x2fffa4b0

2fff0160 <stm32_exit_cstop>:
2fff0160:	b530      	push	{r4, r5, lr}
2fff0162:	b085      	sub	sp, #20
2fff0164:	f002 fd30 	bl	2fff2bc8 <stm32mp_pwr_base>
2fff0168:	4605      	mov	r5, r0
2fff016a:	f002 fd31 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff016e:	4b1f      	ldr	r3, [pc, #124]	; (2fff01ec <stm32_exit_cstop+0x8c>)
2fff0170:	4604      	mov	r4, r0
2fff0172:	781a      	ldrb	r2, [r3, #0]
2fff0174:	2a00      	cmp	r2, #0
2fff0176:	d037      	beq.n	2fff01e8 <stm32_exit_cstop+0x88>
2fff0178:	2200      	movs	r2, #0
2fff017a:	701a      	strb	r2, [r3, #0]
2fff017c:	f005 fd20 	bl	2fff5bc0 <ddr_sw_self_refresh_exit>
2fff0180:	b118      	cbz	r0, 2fff018a <stm32_exit_cstop+0x2a>
2fff0182:	f002 fc13 	bl	2fff29ac <console_flush>
2fff0186:	f008 eb78 	blx	2fff8878 <do_panic>
2fff018a:	f006 f825 	bl	2fff61d8 <ddr_restore_sr_mode>
2fff018e:	4b18      	ldr	r3, [pc, #96]	; (2fff01f0 <stm32_exit_cstop+0x90>)
2fff0190:	6818      	ldr	r0, [r3, #0]
2fff0192:	f001 f9bb 	bl	2fff150c <plat_ic_set_priority_mask>
2fff0196:	f8d4 3414 	ldr.w	r3, [r4, #1044]	; 0x414
2fff019a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
2fff019e:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
2fff01a2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
2fff01a6:	f043 0303 	orr.w	r3, r3, #3
2fff01aa:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
2fff01ae:	f3bf 8f4f 	dsb	sy
2fff01b2:	f3bf 8f6f 	isb	sy
2fff01b6:	68ab      	ldr	r3, [r5, #8]
2fff01b8:	a801      	add	r0, sp, #4
2fff01ba:	f023 0303 	bic.w	r3, r3, #3
2fff01be:	60ab      	str	r3, [r5, #8]
2fff01c0:	f7ff f9d2 	bl	2ffef568 <stm32_rtc_get_calendar>
2fff01c4:	490b      	ldr	r1, [pc, #44]	; (2fff01f4 <stm32_exit_cstop+0x94>)
2fff01c6:	a801      	add	r0, sp, #4
2fff01c8:	f7ff f9ee 	bl	2ffef5a8 <stm32_rtc_diff_calendar>
2fff01cc:	4605      	mov	r5, r0
2fff01ce:	460c      	mov	r4, r1
2fff01d0:	f008 f92c 	bl	2fff842c <stm32_get_stgen_from_context>
2fff01d4:	462a      	mov	r2, r5
2fff01d6:	4623      	mov	r3, r4
2fff01d8:	f004 fb0c 	bl	2fff47f4 <stm32mp_stgen_restore_counter>
2fff01dc:	f008 f9d4 	bl	2fff8588 <stm32mp1_syscfg_enable_io_compensation>
2fff01e0:	f005 fbfc 	bl	2fff59dc <stm32mp1_clock_stopmode_resume>
2fff01e4:	2800      	cmp	r0, #0
2fff01e6:	d1cc      	bne.n	2fff0182 <stm32_exit_cstop+0x22>
2fff01e8:	b005      	add	sp, #20
2fff01ea:	bd30      	pop	{r4, r5, pc}
2fff01ec:	2fffe4b0 	.word	0x2fffe4b0
2fff01f0:	2fffe4b4 	.word	0x2fffe4b4
2fff01f4:	2fffe8b8 	.word	0x2fffe8b8

2fff01f8 <stm32_pwr_down_wfi>:
2fff01f8:	b570      	push	{r4, r5, r6, lr}
2fff01fa:	2000      	movs	r0, #0
2fff01fc:	4e0b      	ldr	r6, [pc, #44]	; (2fff022c <stm32_pwr_down_wfi+0x34>)
2fff01fe:	f240 35ff 	movw	r5, #1023	; 0x3ff
2fff0202:	f7fe fea3 	bl	2ffeef4c <stm32mp1_calib_set_wakeup>
2fff0206:	f7fe fe9b 	bl	2ffeef40 <stm32mp1_calib_get_wakeup>
2fff020a:	b968      	cbnz	r0, 2fff0228 <stm32_pwr_down_wfi+0x30>
2fff020c:	4630      	mov	r0, r6
2fff020e:	f008 ef28 	blx	2fff9060 <wfi_svc_int_enable>
2fff0212:	f000 ffe9 	bl	2fff11e8 <gicv2_acknowledge_interrupt>
2fff0216:	42a8      	cmp	r0, r5
2fff0218:	4604      	mov	r4, r0
2fff021a:	d001      	beq.n	2fff0220 <stm32_pwr_down_wfi+0x28>
2fff021c:	f000 fff6 	bl	2fff120c <gicv2_end_of_interrupt>
2fff0220:	f006 ff76 	bl	2fff7110 <stm32_iwdg_refresh>
2fff0224:	42ac      	cmp	r4, r5
2fff0226:	d0ee      	beq.n	2fff0206 <stm32_pwr_down_wfi+0xe>
2fff0228:	bd70      	pop	{r4, r5, r6, pc}
2fff022a:	bf00      	nop
2fff022c:	2fffe4b8 	.word	0x2fffe4b8

2fff0230 <stm32_enter_low_power>:
2fff0230:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff0234:	460f      	mov	r7, r1
2fff0236:	4604      	mov	r4, r0
2fff0238:	b1d0      	cbz	r0, 2fff0270 <stm32_enter_low_power+0x40>
2fff023a:	2806      	cmp	r0, #6
2fff023c:	d12b      	bne.n	2fff0296 <stm32_enter_low_power+0x66>
2fff023e:	2000      	movs	r0, #0
2fff0240:	f005 fdb2 	bl	2fff5da8 <ddr_standby_sr_entry>
2fff0244:	b110      	cbz	r0, 2fff024c <stm32_enter_low_power+0x1c>
2fff0246:	4857      	ldr	r0, [pc, #348]	; (2fff03a4 <stm32_enter_low_power+0x174>)
2fff0248:	f002 fb0c 	bl	2fff2864 <tf_log>
2fff024c:	f007 fa08 	bl	2fff7660 <dt_pmic_status>
2fff0250:	2800      	cmp	r0, #0
2fff0252:	f340 80a4 	ble.w	2fff039e <stm32_enter_low_power+0x16e>
2fff0256:	f007 fa5f 	bl	2fff7718 <initialize_pmic_i2c>
2fff025a:	b918      	cbnz	r0, 2fff0264 <stm32_enter_low_power+0x34>
2fff025c:	f002 fba6 	bl	2fff29ac <console_flush>
2fff0260:	f008 eb0a 	blx	2fff8878 <do_panic>
2fff0264:	f007 fbe7 	bl	2fff7a36 <stpmic1_switch_off>
2fff0268:	2064      	movs	r0, #100	; 0x64
2fff026a:	f003 fe39 	bl	2fff3ee0 <udelay>
2fff026e:	e7f5      	b.n	2fff025c <stm32_enter_low_power+0x2c>
2fff0270:	f002 fcaa 	bl	2fff2bc8 <stm32mp_pwr_base>
2fff0274:	6903      	ldr	r3, [r0, #16]
2fff0276:	f423 7302 	bic.w	r3, r3, #520	; 0x208
2fff027a:	f023 0301 	bic.w	r3, r3, #1
2fff027e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
2fff0282:	6103      	str	r3, [r0, #16]
2fff0284:	6803      	ldr	r3, [r0, #0]
2fff0286:	f023 0307 	bic.w	r3, r3, #7
2fff028a:	6003      	str	r3, [r0, #0]
2fff028c:	b003      	add	sp, #12
2fff028e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
2fff0292:	f7ff bfb1 	b.w	2fff01f8 <stm32_pwr_down_wfi>
2fff0296:	f8df 9110 	ldr.w	r9, [pc, #272]	; 2fff03a8 <stm32_enter_low_power+0x178>
2fff029a:	230c      	movs	r3, #12
2fff029c:	4343      	muls	r3, r0
2fff029e:	f859 8003 	ldr.w	r8, [r9, r3]
2fff02a2:	f002 fc91 	bl	2fff2bc8 <stm32mp_pwr_base>
2fff02a6:	4605      	mov	r5, r0
2fff02a8:	f002 fc92 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff02ac:	4606      	mov	r6, r0
2fff02ae:	f008 f99b 	bl	2fff85e8 <stm32mp1_syscfg_disable_io_compensation>
2fff02b2:	2001      	movs	r0, #1
2fff02b4:	f005 fea2 	bl	2fff5ffc <ddr_set_sr_mode>
2fff02b8:	2001      	movs	r0, #1
2fff02ba:	f008 ec22 	blx	2fff8b00 <dcsw_op_all>
2fff02be:	f007 ffed 	bl	2fff829c <stm32_clean_context>
2fff02c2:	2c04      	cmp	r4, #4
2fff02c4:	d101      	bne.n	2fff02ca <stm32_enter_low_power+0x9a>
2fff02c6:	f008 f8d5 	bl	2fff8474 <stm32_save_ddr_training_area>
2fff02ca:	f007 f9c9 	bl	2fff7660 <dt_pmic_status>
2fff02ce:	2800      	cmp	r0, #0
2fff02d0:	dd06      	ble.n	2fff02e0 <stm32_enter_low_power+0xb0>
2fff02d2:	4620      	mov	r0, r4
2fff02d4:	f7ff ff22 	bl	2fff011c <stm32_apply_pmic_suspend_config>
2fff02d8:	2c02      	cmp	r4, #2
2fff02da:	bf08      	it	eq
2fff02dc:	f048 0802 	orreq.w	r8, r8, #2
2fff02e0:	f8d6 3418 	ldr.w	r3, [r6, #1048]	; 0x418
2fff02e4:	220c      	movs	r2, #12
2fff02e6:	fb02 9904 	mla	r9, r2, r4, r9
2fff02ea:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff02ee:	f8c6 3418 	str.w	r3, [r6, #1048]	; 0x418
2fff02f2:	f8d6 3414 	ldr.w	r3, [r6, #1044]	; 0x414
2fff02f6:	f8d9 2004 	ldr.w	r2, [r9, #4]
2fff02fa:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff02fe:	f8c6 3414 	str.w	r3, [r6, #1044]	; 0x414
2fff0302:	692b      	ldr	r3, [r5, #16]
2fff0304:	f423 7302 	bic.w	r3, r3, #520	; 0x208
2fff0308:	f023 0301 	bic.w	r3, r3, #1
2fff030c:	4313      	orrs	r3, r2
2fff030e:	612b      	str	r3, [r5, #16]
2fff0310:	682b      	ldr	r3, [r5, #0]
2fff0312:	f023 0307 	bic.w	r3, r3, #7
2fff0316:	ea43 0308 	orr.w	r3, r3, r8
2fff031a:	602b      	str	r3, [r5, #0]
2fff031c:	4b23      	ldr	r3, [pc, #140]	; (2fff03ac <stm32_enter_low_power+0x17c>)
2fff031e:	f8c6 3418 	str.w	r3, [r6, #1048]	; 0x418
2fff0322:	f8d6 3104 	ldr.w	r3, [r6, #260]	; 0x104
2fff0326:	f043 0303 	orr.w	r3, r3, #3
2fff032a:	f8c6 3104 	str.w	r3, [r6, #260]	; 0x104
2fff032e:	f006 feef 	bl	2fff7110 <stm32_iwdg_refresh>
2fff0332:	2008      	movs	r0, #8
2fff0334:	f001 f8ea 	bl	2fff150c <plat_ic_set_priority_mask>
2fff0338:	4b1d      	ldr	r3, [pc, #116]	; (2fff03b0 <stm32_enter_low_power+0x180>)
2fff033a:	6018      	str	r0, [r3, #0]
2fff033c:	a801      	add	r0, sp, #4
2fff033e:	f005 fd33 	bl	2fff5da8 <ddr_standby_sr_entry>
2fff0342:	4606      	mov	r6, r0
2fff0344:	2800      	cmp	r0, #0
2fff0346:	d189      	bne.n	2fff025c <stm32_enter_low_power+0x2c>
2fff0348:	f8df 8068 	ldr.w	r8, [pc, #104]	; 2fff03b4 <stm32_enter_low_power+0x184>
2fff034c:	2041      	movs	r0, #65	; 0x41
2fff034e:	f004 fef1 	bl	2fff5134 <stm32mp_clk_enable>
2fff0352:	f8c8 6114 	str.w	r6, [r8, #276]	; 0x114
2fff0356:	f8c8 6110 	str.w	r6, [r8, #272]	; 0x110
2fff035a:	f005 fb19 	bl	2fff5990 <stm32mp1_clock_stopmode_save>
2fff035e:	2c04      	cmp	r4, #4
2fff0360:	d114      	bne.n	2fff038c <stm32_enter_low_power+0x15c>
2fff0362:	4b15      	ldr	r3, [pc, #84]	; (2fff03b8 <stm32_enter_low_power+0x188>)
2fff0364:	f8c8 7114 	str.w	r7, [r8, #276]	; 0x114
2fff0368:	f8c8 3110 	str.w	r3, [r8, #272]	; 0x110
2fff036c:	9801      	ldr	r0, [sp, #4]
2fff036e:	f007 ffdd 	bl	2fff832c <stm32_save_context>
2fff0372:	2800      	cmp	r0, #0
2fff0374:	f47f af72 	bne.w	2fff025c <stm32_enter_low_power+0x2c>
2fff0378:	68ab      	ldr	r3, [r5, #8]
2fff037a:	f105 0208 	add.w	r2, r5, #8
2fff037e:	f043 0303 	orr.w	r3, r3, #3
2fff0382:	60ab      	str	r3, [r5, #8]
2fff0384:	6813      	ldr	r3, [r2, #0]
2fff0386:	f413 3f40 	tst.w	r3, #196608	; 0x30000
2fff038a:	d0fb      	beq.n	2fff0384 <stm32_enter_low_power+0x154>
2fff038c:	2041      	movs	r0, #65	; 0x41
2fff038e:	f004 fed4 	bl	2fff513a <stm32mp_clk_disable>
2fff0392:	480a      	ldr	r0, [pc, #40]	; (2fff03bc <stm32_enter_low_power+0x18c>)
2fff0394:	f7ff f8e8 	bl	2ffef568 <stm32_rtc_get_calendar>
2fff0398:	4b09      	ldr	r3, [pc, #36]	; (2fff03c0 <stm32_enter_low_power+0x190>)
2fff039a:	2201      	movs	r2, #1
2fff039c:	701a      	strb	r2, [r3, #0]
2fff039e:	b003      	add	sp, #12
2fff03a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff03a4:	2fffa4d6 	.word	0x2fffa4d6
2fff03a8:	2fffa530 	.word	0x2fffa530
2fff03ac:	00110f1f 	.word	0x00110f1f
2fff03b0:	2fffe4b4 	.word	0x2fffe4b4
2fff03b4:	5c00a000 	.word	0x5c00a000
2fff03b8:	ca7face0 	.word	0xca7face0
2fff03bc:	2fffe8b8 	.word	0x2fffe8b8
2fff03c0:	2fffe4b0 	.word	0x2fffe4b0

2fff03c4 <stm32_pwr_domain_off>:
2fff03c4:	4770      	bx	lr

2fff03c6 <stm32_validate_power_state>:
2fff03c6:	f3c0 4200 	ubfx	r2, r0, #16, #1
2fff03ca:	f3c0 6301 	ubfx	r3, r0, #24, #2
2fff03ce:	b280      	uxth	r0, r0
2fff03d0:	4313      	orrs	r3, r2
2fff03d2:	4318      	orrs	r0, r3
2fff03d4:	bf03      	ittte	eq
2fff03d6:	7048      	strbeq	r0, [r1, #1]
2fff03d8:	2301      	moveq	r3, #1
2fff03da:	700b      	strbeq	r3, [r1, #0]
2fff03dc:	f06f 0001 	mvnne.w	r0, #1
2fff03e0:	4770      	bx	lr
	...

2fff03e4 <stm32_validate_ns_entrypoint>:
2fff03e4:	f1b0 4f40 	cmp.w	r0, #3221225472	; 0xc0000000
2fff03e8:	bf23      	ittte	cs
2fff03ea:	4b03      	ldrcs	r3, [pc, #12]	; (2fff03f8 <stm32_validate_ns_entrypoint+0x14>)
2fff03ec:	6018      	strcs	r0, [r3, #0]
2fff03ee:	2000      	movcs	r0, #0
2fff03f0:	f06f 0008 	mvncc.w	r0, #8
2fff03f4:	4770      	bx	lr
2fff03f6:	bf00      	nop
2fff03f8:	2fffe8c8 	.word	0x2fffe8c8

2fff03fc <stm32_node_hw_state>:
2fff03fc:	2900      	cmp	r1, #0
2fff03fe:	bf14      	ite	ne
2fff0400:	f06f 0001 	mvnne.w	r0, #1
2fff0404:	2000      	moveq	r0, #0
2fff0406:	4770      	bx	lr

2fff0408 <stm32_get_sys_suspend_power_state>:
2fff0408:	2302      	movs	r3, #2
2fff040a:	7003      	strb	r3, [r0, #0]
2fff040c:	7043      	strb	r3, [r0, #1]
2fff040e:	4770      	bx	lr

2fff0410 <stm32_system_reset>:
2fff0410:	b508      	push	{r3, lr}
2fff0412:	f002 fbdd 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff0416:	f8d0 3404 	ldr.w	r3, [r0, #1028]	; 0x404
2fff041a:	f043 0301 	orr.w	r3, r3, #1
2fff041e:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2fff0422:	e7fe      	b.n	2fff0422 <stm32_system_reset+0x12>

2fff0424 <stm32_pwr_domain_suspend>:
2fff0424:	b508      	push	{r3, lr}
2fff0426:	2000      	movs	r0, #0
2fff0428:	f000 f932 	bl	2fff0690 <stm32mp1_get_lp_soc_mode>
2fff042c:	4b02      	ldr	r3, [pc, #8]	; (2fff0438 <stm32_pwr_domain_suspend+0x14>)
2fff042e:	6819      	ldr	r1, [r3, #0]
2fff0430:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0434:	f7ff befc 	b.w	2fff0230 <stm32_enter_low_power>
2fff0438:	2fffe8c8 	.word	0x2fffe8c8

2fff043c <stm32_system_off>:
2fff043c:	b508      	push	{r3, lr}
2fff043e:	2001      	movs	r0, #1
2fff0440:	f000 f926 	bl	2fff0690 <stm32mp1_get_lp_soc_mode>
2fff0444:	4604      	mov	r4, r0
2fff0446:	f002 fd05 	bl	2fff2e54 <stm32mp_is_single_core>
2fff044a:	b958      	cbnz	r0, 2fff0464 <stm32_system_off+0x28>
2fff044c:	f002 fbc0 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff0450:	f8d0 3404 	ldr.w	r3, [r0, #1028]	; 0x404
2fff0454:	2101      	movs	r1, #1
2fff0456:	f043 0320 	orr.w	r3, r3, #32
2fff045a:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2fff045e:	2009      	movs	r0, #9
2fff0460:	f000 ffb0 	bl	2fff13c4 <gicv2_raise_sgi>
2fff0464:	2100      	movs	r1, #0
2fff0466:	4620      	mov	r0, r4
2fff0468:	f7ff fee2 	bl	2fff0230 <stm32_enter_low_power>
2fff046c:	f7ff fec4 	bl	2fff01f8 <stm32_pwr_down_wfi>
2fff0470:	f002 fa9c 	bl	2fff29ac <console_flush>
2fff0474:	f008 ea00 	blx	2fff8878 <do_panic>

2fff0478 <stm32_pwr_domain_pwr_down_wfi>:
2fff0478:	b508      	push	{r3, lr}
2fff047a:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2fff047e:	b2db      	uxtb	r3, r3
2fff0480:	b943      	cbnz	r3, 2fff0494 <stm32_pwr_domain_pwr_down_wfi+0x1c>
2fff0482:	4b0b      	ldr	r3, [pc, #44]	; (2fff04b0 <stm32_pwr_domain_pwr_down_wfi+0x38>)
2fff0484:	681c      	ldr	r4, [r3, #0]
2fff0486:	f7ff feb7 	bl	2fff01f8 <stm32_pwr_down_wfi>
2fff048a:	f7ff fe69 	bl	2fff0160 <stm32_exit_cstop>
2fff048e:	f008 eb8a 	blx	2fff8ba4 <disable_mmu_icache_secure>
2fff0492:	47a0      	blx	r4
2fff0494:	f002 fb9c 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff0498:	2320      	movs	r3, #32
2fff049a:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2fff049e:	f3bf 8f4f 	dsb	sy
2fff04a2:	f3bf 8f6f 	isb	sy
2fff04a6:	bf30      	wfi
2fff04a8:	f002 fa80 	bl	2fff29ac <console_flush>
2fff04ac:	f008 e9e4 	blx	2fff8878 <do_panic>
2fff04b0:	2fffe8cc 	.word	0x2fffe8cc

2fff04b4 <stm32_pwr_domain_on_finish>:
2fff04b4:	b508      	push	{r3, lr}
2fff04b6:	f001 f85e 	bl	2fff1576 <stm32_gic_pcpu_init>
2fff04ba:	4b02      	ldr	r3, [pc, #8]	; (2fff04c4 <stm32_pwr_domain_on_finish+0x10>)
2fff04bc:	681b      	ldr	r3, [r3, #0]
2fff04be:	ee0e 3f10 	mcr	15, 0, r3, cr14, cr0, {0}
2fff04c2:	bd08      	pop	{r3, pc}
2fff04c4:	2fffe8c4 	.word	0x2fffe8c4

2fff04c8 <stm32_pwr_domain_on>:
2fff04c8:	b570      	push	{r4, r5, r6, lr}
2fff04ca:	4605      	mov	r5, r0
2fff04cc:	ee10 6fb0 	mrc	15, 0, r6, cr0, cr0, {5}
2fff04d0:	f002 fcc0 	bl	2fff2e54 <stm32mp_is_single_core>
2fff04d4:	4604      	mov	r4, r0
2fff04d6:	bb28      	cbnz	r0, 2fff0524 <stm32_pwr_domain_on+0x5c>
2fff04d8:	42b5      	cmp	r5, r6
2fff04da:	d026      	beq.n	2fff052a <stm32_pwr_domain_on+0x62>
2fff04dc:	4d16      	ldr	r5, [pc, #88]	; (2fff0538 <stm32_pwr_domain_on+0x70>)
2fff04de:	2101      	movs	r1, #1
2fff04e0:	4e16      	ldr	r6, [pc, #88]	; (2fff053c <stm32_pwr_domain_on+0x74>)
2fff04e2:	f8c5 0110 	str.w	r0, [r5, #272]	; 0x110
2fff04e6:	f000 ff6d 	bl	2fff13c4 <gicv2_raise_sgi>
2fff04ea:	200a      	movs	r0, #10
2fff04ec:	f003 fcf8 	bl	2fff3ee0 <udelay>
2fff04f0:	6832      	ldr	r2, [r6, #0]
2fff04f2:	4b13      	ldr	r3, [pc, #76]	; (2fff0540 <stm32_pwr_domain_on+0x78>)
2fff04f4:	429a      	cmp	r2, r3
2fff04f6:	d11b      	bne.n	2fff0530 <stm32_pwr_domain_on+0x68>
2fff04f8:	2041      	movs	r0, #65	; 0x41
2fff04fa:	f004 fe1b 	bl	2fff5134 <stm32mp_clk_enable>
2fff04fe:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2fff0502:	4b10      	ldr	r3, [pc, #64]	; (2fff0544 <stm32_pwr_domain_on+0x7c>)
2fff0504:	2041      	movs	r0, #65	; 0x41
2fff0506:	601a      	str	r2, [r3, #0]
2fff0508:	6833      	ldr	r3, [r6, #0]
2fff050a:	f8c5 3114 	str.w	r3, [r5, #276]	; 0x114
2fff050e:	4b0e      	ldr	r3, [pc, #56]	; (2fff0548 <stm32_pwr_domain_on+0x80>)
2fff0510:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
2fff0514:	f004 fe11 	bl	2fff513a <stm32mp_clk_disable>
2fff0518:	2008      	movs	r0, #8
2fff051a:	2101      	movs	r1, #1
2fff051c:	f000 ff52 	bl	2fff13c4 <gicv2_raise_sgi>
2fff0520:	4620      	mov	r0, r4
2fff0522:	bd70      	pop	{r4, r5, r6, pc}
2fff0524:	f06f 0005 	mvn.w	r0, #5
2fff0528:	e7fb      	b.n	2fff0522 <stm32_pwr_domain_on+0x5a>
2fff052a:	f06f 0001 	mvn.w	r0, #1
2fff052e:	e7f8      	b.n	2fff0522 <stm32_pwr_domain_on+0x5a>
2fff0530:	f06f 0008 	mvn.w	r0, #8
2fff0534:	e7f5      	b.n	2fff0522 <stm32_pwr_domain_on+0x5a>
2fff0536:	bf00      	nop
2fff0538:	5c00a000 	.word	0x5c00a000
2fff053c:	2fffe8cc 	.word	0x2fffe8cc
2fff0540:	2ffed2e0 	.word	0x2ffed2e0
2fff0544:	2fffe8c4 	.word	0x2fffe8c4
2fff0548:	ca7face1 	.word	0xca7face1

2fff054c <stm32_cpu_standby>:
2fff054c:	2801      	cmp	r0, #1
2fff054e:	b510      	push	{r4, lr}
2fff0550:	d003      	beq.n	2fff055a <stm32_cpu_standby+0xe>
2fff0552:	480c      	ldr	r0, [pc, #48]	; (2fff0584 <stm32_cpu_standby+0x38>)
2fff0554:	2128      	movs	r1, #40	; 0x28
2fff0556:	f009 f9c9 	bl	2fff98ec <__assert>
2fff055a:	f3bf 8f4f 	dsb	sy
2fff055e:	f3bf 8f6f 	isb	sy
2fff0562:	f240 34ff 	movw	r4, #1023	; 0x3ff
2fff0566:	bf30      	wfi
2fff0568:	f000 fe3e 	bl	2fff11e8 <gicv2_acknowledge_interrupt>
2fff056c:	f2a0 32fe 	subw	r2, r0, #1022	; 0x3fe
2fff0570:	2a01      	cmp	r2, #1
2fff0572:	d903      	bls.n	2fff057c <stm32_cpu_standby+0x30>
2fff0574:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0578:	f000 be48 	b.w	2fff120c <gicv2_end_of_interrupt>
2fff057c:	42a0      	cmp	r0, r4
2fff057e:	d0f2      	beq.n	2fff0566 <stm32_cpu_standby+0x1a>
2fff0580:	bd10      	pop	{r4, pc}
2fff0582:	bf00      	nop
2fff0584:	2fffa584 	.word	0x2fffa584

2fff0588 <stm32_pwr_domain_suspend_finish>:
2fff0588:	4770      	bx	lr
	...

2fff058c <plat_setup_psci_ops>:
2fff058c:	4b02      	ldr	r3, [pc, #8]	; (2fff0598 <plat_setup_psci_ops+0xc>)
2fff058e:	6018      	str	r0, [r3, #0]
2fff0590:	2000      	movs	r0, #0
2fff0592:	4b02      	ldr	r3, [pc, #8]	; (2fff059c <plat_setup_psci_ops+0x10>)
2fff0594:	600b      	str	r3, [r1, #0]
2fff0596:	4770      	bx	lr
2fff0598:	2fffe8cc 	.word	0x2fffe8cc
2fff059c:	2fffa5a4 	.word	0x2fffa5a4

2fff05a0 <stm32mp1_init_lp_states>:
2fff05a0:	b530      	push	{r4, r5, lr}
2fff05a2:	b08b      	sub	sp, #44	; 0x2c
2fff05a4:	a801      	add	r0, sp, #4
2fff05a6:	f007 fc2f 	bl	2fff7e08 <fdt_get_address>
2fff05aa:	b938      	cbnz	r0, 2fff05bc <stm32mp1_init_lp_states+0x1c>
2fff05ac:	492a      	ldr	r1, [pc, #168]	; (2fff0658 <stm32mp1_init_lp_states+0xb8>)
2fff05ae:	482b      	ldr	r0, [pc, #172]	; (2fff065c <stm32mp1_init_lp_states+0xbc>)
2fff05b0:	f002 f958 	bl	2fff2864 <tf_log>
2fff05b4:	f002 f9fa 	bl	2fff29ac <console_flush>
2fff05b8:	f008 e95e 	blx	2fff8878 <do_panic>
2fff05bc:	4828      	ldr	r0, [pc, #160]	; (2fff0660 <stm32mp1_init_lp_states+0xc0>)
2fff05be:	f007 fd2f 	bl	2fff8020 <dt_get_node_by_compatible>
2fff05c2:	1e04      	subs	r4, r0, #0
2fff05c4:	dbf2      	blt.n	2fff05ac <stm32mp1_init_lp_states+0xc>
2fff05c6:	4a24      	ldr	r2, [pc, #144]	; (2fff0658 <stm32mp1_init_lp_states+0xb8>)
2fff05c8:	2300      	movs	r3, #0
2fff05ca:	9801      	ldr	r0, [sp, #4]
2fff05cc:	4621      	mov	r1, r4
2fff05ce:	f008 ffef 	bl	2fff95b0 <fdt_getprop>
2fff05d2:	2800      	cmp	r0, #0
2fff05d4:	d0ea      	beq.n	2fff05ac <stm32mp1_init_lp_states+0xc>
2fff05d6:	6802      	ldr	r2, [r0, #0]
2fff05d8:	9801      	ldr	r0, [sp, #4]
2fff05da:	f3c2 2107 	ubfx	r1, r2, #8, #8
2fff05de:	0e13      	lsrs	r3, r2, #24
2fff05e0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2fff05e4:	f3c2 4207 	ubfx	r2, r2, #16, #8
2fff05e8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2fff05ec:	4621      	mov	r1, r4
2fff05ee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff05f2:	4a1c      	ldr	r2, [pc, #112]	; (2fff0664 <stm32mp1_init_lp_states+0xc4>)
2fff05f4:	6013      	str	r3, [r2, #0]
2fff05f6:	ab02      	add	r3, sp, #8
2fff05f8:	4a1b      	ldr	r2, [pc, #108]	; (2fff0668 <stm32mp1_init_lp_states+0xc8>)
2fff05fa:	f008 ffd9 	bl	2fff95b0 <fdt_getprop>
2fff05fe:	2800      	cmp	r0, #0
2fff0600:	d0d8      	beq.n	2fff05b4 <stm32mp1_init_lp_states+0x14>
2fff0602:	9b02      	ldr	r3, [sp, #8]
2fff0604:	089d      	lsrs	r5, r3, #2
2fff0606:	2b1f      	cmp	r3, #31
2fff0608:	d8d4      	bhi.n	2fff05b4 <stm32mp1_init_lp_states+0x14>
2fff060a:	4917      	ldr	r1, [pc, #92]	; (2fff0668 <stm32mp1_init_lp_states+0xc8>)
2fff060c:	462b      	mov	r3, r5
2fff060e:	aa03      	add	r2, sp, #12
2fff0610:	4620      	mov	r0, r4
2fff0612:	f007 fc79 	bl	2fff7f08 <fdt_read_uint32_array>
2fff0616:	2800      	cmp	r0, #0
2fff0618:	db0d      	blt.n	2fff0636 <stm32mp1_init_lp_states+0x96>
2fff061a:	4814      	ldr	r0, [pc, #80]	; (2fff066c <stm32mp1_init_lp_states+0xcc>)
2fff061c:	aa03      	add	r2, sp, #12
2fff061e:	2100      	movs	r1, #0
2fff0620:	2401      	movs	r4, #1
2fff0622:	428d      	cmp	r5, r1
2fff0624:	d10b      	bne.n	2fff063e <stm32mp1_init_lp_states+0x9e>
2fff0626:	2306      	movs	r3, #6
2fff0628:	5cc2      	ldrb	r2, [r0, r3]
2fff062a:	2a01      	cmp	r2, #1
2fff062c:	d110      	bne.n	2fff0650 <stm32mp1_init_lp_states+0xb0>
2fff062e:	4a10      	ldr	r2, [pc, #64]	; (2fff0670 <stm32mp1_init_lp_states+0xd0>)
2fff0630:	6013      	str	r3, [r2, #0]
2fff0632:	b00b      	add	sp, #44	; 0x2c
2fff0634:	bd30      	pop	{r4, r5, pc}
2fff0636:	480f      	ldr	r0, [pc, #60]	; (2fff0674 <stm32mp1_init_lp_states+0xd4>)
2fff0638:	f002 f914 	bl	2fff2864 <tf_log>
2fff063c:	e7ba      	b.n	2fff05b4 <stm32mp1_init_lp_states+0x14>
2fff063e:	f852 3b04 	ldr.w	r3, [r2], #4
2fff0642:	2b06      	cmp	r3, #6
2fff0644:	d901      	bls.n	2fff064a <stm32mp1_init_lp_states+0xaa>
2fff0646:	480c      	ldr	r0, [pc, #48]	; (2fff0678 <stm32mp1_init_lp_states+0xd8>)
2fff0648:	e7f6      	b.n	2fff0638 <stm32mp1_init_lp_states+0x98>
2fff064a:	54c4      	strb	r4, [r0, r3]
2fff064c:	3101      	adds	r1, #1
2fff064e:	e7e8      	b.n	2fff0622 <stm32mp1_init_lp_states+0x82>
2fff0650:	3b01      	subs	r3, #1
2fff0652:	d1e9      	bne.n	2fff0628 <stm32mp1_init_lp_states+0x88>
2fff0654:	e7ed      	b.n	2fff0632 <stm32mp1_init_lp_states+0x92>
2fff0656:	bf00      	nop
2fff0658:	2fffa5f8 	.word	0x2fffa5f8
2fff065c:	2fffa60c 	.word	0x2fffa60c
2fff0660:	2fffa620 	.word	0x2fffa620
2fff0664:	2fffe8e0 	.word	0x2fffe8e0
2fff0668:	2fffa634 	.word	0x2fffa634
2fff066c:	2fffe8d7 	.word	0x2fffe8d7
2fff0670:	2fffe8d0 	.word	0x2fffe8d0
2fff0674:	2fffa657 	.word	0x2fffa657
2fff0678:	2fffa660 	.word	0x2fffa660

2fff067c <stm32mp1_set_pm_domain_state>:
2fff067c:	2802      	cmp	r0, #2
2fff067e:	bf9d      	ittte	ls
2fff0680:	4b02      	ldrls	r3, [pc, #8]	; (2fff068c <stm32mp1_set_pm_domain_state+0x10>)
2fff0682:	5419      	strbls	r1, [r3, r0]
2fff0684:	2000      	movls	r0, #0
2fff0686:	f06f 0015 	mvnhi.w	r0, #21
2fff068a:	4770      	bx	lr
2fff068c:	2fffe8d4 	.word	0x2fffe8d4

2fff0690 <stm32mp1_get_lp_soc_mode>:
2fff0690:	2801      	cmp	r0, #1
2fff0692:	b510      	push	{r4, lr}
2fff0694:	d102      	bne.n	2fff069c <stm32mp1_get_lp_soc_mode+0xc>
2fff0696:	4b0f      	ldr	r3, [pc, #60]	; (2fff06d4 <stm32mp1_get_lp_soc_mode+0x44>)
2fff0698:	6818      	ldr	r0, [r3, #0]
2fff069a:	bd10      	pop	{r4, pc}
2fff069c:	4b0e      	ldr	r3, [pc, #56]	; (2fff06d8 <stm32mp1_get_lp_soc_mode+0x48>)
2fff069e:	4a0f      	ldr	r2, [pc, #60]	; (2fff06dc <stm32mp1_get_lp_soc_mode+0x4c>)
2fff06a0:	6818      	ldr	r0, [r3, #0]
2fff06a2:	7854      	ldrb	r4, [r2, #1]
2fff06a4:	7893      	ldrb	r3, [r2, #2]
2fff06a6:	490e      	ldr	r1, [pc, #56]	; (2fff06e0 <stm32mp1_get_lp_soc_mode+0x50>)
2fff06a8:	2800      	cmp	r0, #0
2fff06aa:	d0f6      	beq.n	2fff069a <stm32mp1_get_lp_soc_mode+0xa>
2fff06ac:	2806      	cmp	r0, #6
2fff06ae:	d903      	bls.n	2fff06b8 <stm32mp1_get_lp_soc_mode+0x28>
2fff06b0:	480c      	ldr	r0, [pc, #48]	; (2fff06e4 <stm32mp1_get_lp_soc_mode+0x54>)
2fff06b2:	218c      	movs	r1, #140	; 0x8c
2fff06b4:	f009 f91a 	bl	2fff98ec <__assert>
2fff06b8:	2804      	cmp	r0, #4
2fff06ba:	d103      	bne.n	2fff06c4 <stm32mp1_get_lp_soc_mode+0x34>
2fff06bc:	b103      	cbz	r3, 2fff06c0 <stm32mp1_get_lp_soc_mode+0x30>
2fff06be:	b92c      	cbnz	r4, 2fff06cc <stm32mp1_get_lp_soc_mode+0x3c>
2fff06c0:	3801      	subs	r0, #1
2fff06c2:	e7f1      	b.n	2fff06a8 <stm32mp1_get_lp_soc_mode+0x18>
2fff06c4:	2803      	cmp	r0, #3
2fff06c6:	d101      	bne.n	2fff06cc <stm32mp1_get_lp_soc_mode+0x3c>
2fff06c8:	2b00      	cmp	r3, #0
2fff06ca:	d0f9      	beq.n	2fff06c0 <stm32mp1_get_lp_soc_mode+0x30>
2fff06cc:	5c42      	ldrb	r2, [r0, r1]
2fff06ce:	2a01      	cmp	r2, #1
2fff06d0:	d1f6      	bne.n	2fff06c0 <stm32mp1_get_lp_soc_mode+0x30>
2fff06d2:	e7e2      	b.n	2fff069a <stm32mp1_get_lp_soc_mode+0xa>
2fff06d4:	2fffe8e0 	.word	0x2fffe8e0
2fff06d8:	2fffe8d0 	.word	0x2fffe8d0
2fff06dc:	2fffe8d4 	.word	0x2fffe8d4
2fff06e0:	2fffe8d7 	.word	0x2fffe8d7
2fff06e4:	2fffa66f 	.word	0x2fffa66f

2fff06e8 <decprot2str>:
2fff06e8:	4a0b      	ldr	r2, [pc, #44]	; (2fff0718 <decprot2str+0x30>)
2fff06ea:	4601      	mov	r1, r0
2fff06ec:	2300      	movs	r3, #0
2fff06ee:	4610      	mov	r0, r2
2fff06f0:	b510      	push	{r4, lr}
2fff06f2:	6854      	ldr	r4, [r2, #4]
2fff06f4:	428c      	cmp	r4, r1
2fff06f6:	d00a      	beq.n	2fff070e <decprot2str+0x26>
2fff06f8:	3301      	adds	r3, #1
2fff06fa:	320c      	adds	r2, #12
2fff06fc:	2b0c      	cmp	r3, #12
2fff06fe:	d1f8      	bne.n	2fff06f2 <decprot2str+0xa>
2fff0700:	4806      	ldr	r0, [pc, #24]	; (2fff071c <decprot2str+0x34>)
2fff0702:	f002 f8af 	bl	2fff2864 <tf_log>
2fff0706:	f002 f951 	bl	2fff29ac <console_flush>
2fff070a:	f008 e8b6 	blx	2fff8878 <do_panic>
2fff070e:	220c      	movs	r2, #12
2fff0710:	fb02 0303 	mla	r3, r2, r3, r0
2fff0714:	6898      	ldr	r0, [r3, #8]
2fff0716:	bd10      	pop	{r4, pc}
2fff0718:	2fffa868 	.word	0x2fffa868
2fff071c:	2fffa698 	.word	0x2fffa698

2fff0720 <check_decprot>:
2fff0720:	b570      	push	{r4, r5, r6, lr}
2fff0722:	460c      	mov	r4, r1
2fff0724:	4605      	mov	r5, r0
2fff0726:	f7fe fcfd 	bl	2ffef124 <etzpc_get_decprot>
2fff072a:	42a0      	cmp	r0, r4
2fff072c:	4606      	mov	r6, r0
2fff072e:	d00b      	beq.n	2fff0748 <check_decprot+0x28>
2fff0730:	b164      	cbz	r4, 2fff074c <check_decprot+0x2c>
2fff0732:	2c03      	cmp	r4, #3
2fff0734:	d115      	bne.n	2fff0762 <check_decprot+0x42>
2fff0736:	b938      	cbnz	r0, 2fff0748 <check_decprot+0x28>
2fff0738:	4628      	mov	r0, r5
2fff073a:	f7ff ffd5 	bl	2fff06e8 <decprot2str>
2fff073e:	4601      	mov	r1, r0
2fff0740:	462a      	mov	r2, r5
2fff0742:	480a      	ldr	r0, [pc, #40]	; (2fff076c <check_decprot+0x4c>)
2fff0744:	f002 f88e 	bl	2fff2864 <tf_log>
2fff0748:	2001      	movs	r0, #1
2fff074a:	e009      	b.n	2fff0760 <check_decprot+0x40>
2fff074c:	4628      	mov	r0, r5
2fff074e:	f7ff ffcb 	bl	2fff06e8 <decprot2str>
2fff0752:	4601      	mov	r1, r0
2fff0754:	4633      	mov	r3, r6
2fff0756:	4806      	ldr	r0, [pc, #24]	; (2fff0770 <check_decprot+0x50>)
2fff0758:	462a      	mov	r2, r5
2fff075a:	f002 f883 	bl	2fff2864 <tf_log>
2fff075e:	4620      	mov	r0, r4
2fff0760:	bd70      	pop	{r4, r5, r6, pc}
2fff0762:	f002 f923 	bl	2fff29ac <console_flush>
2fff0766:	f008 e888 	blx	2fff8878 <do_panic>
2fff076a:	bf00      	nop
2fff076c:	2fffa6a7 	.word	0x2fffa6a7
2fff0770:	2fffa6cc 	.word	0x2fffa6cc

2fff0774 <get_gpioz_nbpin>:
2fff0774:	b510      	push	{r4, lr}
2fff0776:	4c09      	ldr	r4, [pc, #36]	; (2fff079c <get_gpioz_nbpin+0x28>)
2fff0778:	f994 3000 	ldrsb.w	r3, [r4]
2fff077c:	2b00      	cmp	r3, #0
2fff077e:	da0a      	bge.n	2fff0796 <get_gpioz_nbpin+0x22>
2fff0780:	f007 fcfe 	bl	2fff8180 <fdt_get_gpioz_nbpins_from_dt>
2fff0784:	b240      	sxtb	r0, r0
2fff0786:	7020      	strb	r0, [r4, #0]
2fff0788:	f030 0308 	bics.w	r3, r0, #8
2fff078c:	d003      	beq.n	2fff0796 <get_gpioz_nbpin+0x22>
2fff078e:	4804      	ldr	r0, [pc, #16]	; (2fff07a0 <get_gpioz_nbpin+0x2c>)
2fff0790:	218e      	movs	r1, #142	; 0x8e
2fff0792:	f009 f8ab 	bl	2fff98ec <__assert>
2fff0796:	f994 0000 	ldrsb.w	r0, [r4]
2fff079a:	bd10      	pop	{r4, pc}
2fff079c:	2fffd1e8 	.word	0x2fffd1e8
2fff07a0:	2fffa6fe 	.word	0x2fffa6fe

2fff07a4 <register_periph>:
2fff07a4:	2813      	cmp	r0, #19
2fff07a6:	b538      	push	{r3, r4, r5, lr}
2fff07a8:	460c      	mov	r4, r1
2fff07aa:	d817      	bhi.n	2fff07dc <register_periph+0x38>
2fff07ac:	4925      	ldr	r1, [pc, #148]	; (2fff0844 <register_periph+0xa0>)
2fff07ae:	4a26      	ldr	r2, [pc, #152]	; (2fff0848 <register_periph+0xa4>)
2fff07b0:	7809      	ldrb	r1, [r1, #0]
2fff07b2:	5c13      	ldrb	r3, [r2, r0]
2fff07b4:	b9b1      	cbnz	r1, 2fff07e4 <register_periph+0x40>
2fff07b6:	b10b      	cbz	r3, 2fff07bc <register_periph+0x18>
2fff07b8:	429c      	cmp	r4, r3
2fff07ba:	d115      	bne.n	2fff07e8 <register_periph+0x44>
2fff07bc:	5414      	strb	r4, [r2, r0]
2fff07be:	1e45      	subs	r5, r0, #1
2fff07c0:	2d07      	cmp	r5, #7
2fff07c2:	d815      	bhi.n	2fff07f0 <register_periph+0x4c>
2fff07c4:	f7ff ffd6 	bl	2fff0774 <get_gpioz_nbpin>
2fff07c8:	4285      	cmp	r5, r0
2fff07ca:	d338      	bcc.n	2fff083e <register_periph+0x9a>
2fff07cc:	f7ff ffd2 	bl	2fff0774 <get_gpioz_nbpin>
2fff07d0:	4602      	mov	r2, r0
2fff07d2:	4629      	mov	r1, r5
2fff07d4:	481d      	ldr	r0, [pc, #116]	; (2fff084c <register_periph+0xa8>)
2fff07d6:	f002 f845 	bl	2fff2864 <tf_log>
2fff07da:	e005      	b.n	2fff07e8 <register_periph+0x44>
2fff07dc:	481c      	ldr	r0, [pc, #112]	; (2fff0850 <register_periph+0xac>)
2fff07de:	2197      	movs	r1, #151	; 0x97
2fff07e0:	f009 f884 	bl	2fff98ec <__assert>
2fff07e4:	42a3      	cmp	r3, r4
2fff07e6:	d02c      	beq.n	2fff0842 <register_periph+0x9e>
2fff07e8:	f002 f8e0 	bl	2fff29ac <console_flush>
2fff07ec:	f008 e844 	blx	2fff8878 <do_panic>
2fff07f0:	2c01      	cmp	r4, #1
2fff07f2:	d126      	bne.n	2fff0842 <register_periph+0x9e>
2fff07f4:	2812      	cmp	r0, #18
2fff07f6:	d824      	bhi.n	2fff0842 <register_periph+0x9e>
2fff07f8:	e8df f000 	tbb	[pc, r0]
2fff07fc:	0a0a0a1b 	.word	0x0a0a0a1b
2fff0800:	0a0a0a0a 	.word	0x0a0a0a0a
2fff0804:	1d15190a 	.word	0x1d15190a
2fff0808:	1723230f 	.word	0x1723230f
2fff080c:	131f      	.short	0x131f
2fff080e:	11          	.byte	0x11
2fff080f:	00          	.byte	0x00
2fff0810:	205f      	movs	r0, #95	; 0x5f
2fff0812:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff0816:	f004 bf1b 	b.w	2fff5650 <stm32mp1_register_clock_parents_secure>
2fff081a:	2044      	movs	r0, #68	; 0x44
2fff081c:	e7f9      	b.n	2fff0812 <register_periph+0x6e>
2fff081e:	2094      	movs	r0, #148	; 0x94
2fff0820:	e7f7      	b.n	2fff0812 <register_periph+0x6e>
2fff0822:	2087      	movs	r0, #135	; 0x87
2fff0824:	e7f5      	b.n	2fff0812 <register_periph+0x6e>
2fff0826:	208c      	movs	r0, #140	; 0x8c
2fff0828:	e7f3      	b.n	2fff0812 <register_periph+0x6e>
2fff082a:	207c      	movs	r0, #124	; 0x7c
2fff082c:	e7f1      	b.n	2fff0812 <register_periph+0x6e>
2fff082e:	2061      	movs	r0, #97	; 0x61
2fff0830:	e7ef      	b.n	2fff0812 <register_periph+0x6e>
2fff0832:	2060      	movs	r0, #96	; 0x60
2fff0834:	e7ed      	b.n	2fff0812 <register_periph+0x6e>
2fff0836:	208e      	movs	r0, #142	; 0x8e
2fff0838:	e7eb      	b.n	2fff0812 <register_periph+0x6e>
2fff083a:	20c0      	movs	r0, #192	; 0xc0
2fff083c:	e7e9      	b.n	2fff0812 <register_periph+0x6e>
2fff083e:	2c01      	cmp	r4, #1
2fff0840:	d0e6      	beq.n	2fff0810 <register_periph+0x6c>
2fff0842:	bd38      	pop	{r3, r4, r5, pc}
2fff0844:	2fffe8e4 	.word	0x2fffe8e4
2fff0848:	2fffe8e5 	.word	0x2fffe8e5
2fff084c:	2fffa72b 	.word	0x2fffa72b
2fff0850:	2fffa6fe 	.word	0x2fffa6fe

2fff0854 <register_periph_iomem>:
2fff0854:	f1b0 4fb8 	cmp.w	r0, #1543503872	; 0x5c000000
2fff0858:	b508      	push	{r3, lr}
2fff085a:	d060      	beq.n	2fff091e <register_periph_iomem+0xca>
2fff085c:	d848      	bhi.n	2fff08f0 <register_periph_iomem+0x9c>
2fff085e:	4b38      	ldr	r3, [pc, #224]	; (2fff0940 <register_periph_iomem+0xec>)
2fff0860:	4298      	cmp	r0, r3
2fff0862:	d061      	beq.n	2fff0928 <register_periph_iomem+0xd4>
2fff0864:	d83f      	bhi.n	2fff08e6 <register_periph_iomem+0x92>
2fff0866:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
2fff086a:	4298      	cmp	r0, r3
2fff086c:	d05e      	beq.n	2fff092c <register_periph_iomem+0xd8>
2fff086e:	d814      	bhi.n	2fff089a <register_periph_iomem+0x46>
2fff0870:	4b34      	ldr	r3, [pc, #208]	; (2fff0944 <register_periph_iomem+0xf0>)
2fff0872:	4298      	cmp	r0, r3
2fff0874:	d034      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff0876:	d81f      	bhi.n	2fff08b8 <register_periph_iomem+0x64>
2fff0878:	4b33      	ldr	r3, [pc, #204]	; (2fff0948 <register_periph_iomem+0xf4>)
2fff087a:	4298      	cmp	r0, r3
2fff087c:	d030      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff087e:	d810      	bhi.n	2fff08a2 <register_periph_iomem+0x4e>
2fff0880:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
2fff0884:	4298      	cmp	r0, r3
2fff0886:	d02b      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff0888:	d804      	bhi.n	2fff0894 <register_periph_iomem+0x40>
2fff088a:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
2fff088e:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
2fff0892:	e000      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff0894:	4b2d      	ldr	r3, [pc, #180]	; (2fff094c <register_periph_iomem+0xf8>)
2fff0896:	4298      	cmp	r0, r3
2fff0898:	d022      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff089a:	f002 f887 	bl	2fff29ac <console_flush>
2fff089e:	f007 efec 	blx	2fff8878 <do_panic>
2fff08a2:	4b2b      	ldr	r3, [pc, #172]	; (2fff0950 <register_periph_iomem+0xfc>)
2fff08a4:	4298      	cmp	r0, r3
2fff08a6:	d01b      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff08a8:	d804      	bhi.n	2fff08b4 <register_periph_iomem+0x60>
2fff08aa:	4b2a      	ldr	r3, [pc, #168]	; (2fff0954 <register_periph_iomem+0x100>)
2fff08ac:	4298      	cmp	r0, r3
2fff08ae:	d017      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff08b0:	4b29      	ldr	r3, [pc, #164]	; (2fff0958 <register_periph_iomem+0x104>)
2fff08b2:	e7f0      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff08b4:	4b29      	ldr	r3, [pc, #164]	; (2fff095c <register_periph_iomem+0x108>)
2fff08b6:	e7ee      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff08b8:	4b29      	ldr	r3, [pc, #164]	; (2fff0960 <register_periph_iomem+0x10c>)
2fff08ba:	4298      	cmp	r0, r3
2fff08bc:	d010      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff08be:	d80c      	bhi.n	2fff08da <register_periph_iomem+0x86>
2fff08c0:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
2fff08c4:	4298      	cmp	r0, r3
2fff08c6:	d00b      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff08c8:	d805      	bhi.n	2fff08d6 <register_periph_iomem+0x82>
2fff08ca:	f1b0 2f50 	cmp.w	r0, #1342197760	; 0x50005000
2fff08ce:	d007      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff08d0:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
2fff08d4:	e7df      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff08d6:	4b23      	ldr	r3, [pc, #140]	; (2fff0964 <register_periph_iomem+0x110>)
2fff08d8:	e7dd      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff08da:	4b23      	ldr	r3, [pc, #140]	; (2fff0968 <register_periph_iomem+0x114>)
2fff08dc:	4298      	cmp	r0, r3
2fff08de:	d1d4      	bne.n	2fff088a <register_periph_iomem+0x36>
2fff08e0:	2902      	cmp	r1, #2
2fff08e2:	d1da      	bne.n	2fff089a <register_periph_iomem+0x46>
2fff08e4:	bd08      	pop	{r3, pc}
2fff08e6:	4b21      	ldr	r3, [pc, #132]	; (2fff096c <register_periph_iomem+0x118>)
2fff08e8:	4298      	cmp	r0, r3
2fff08ea:	d021      	beq.n	2fff0930 <register_periph_iomem+0xdc>
2fff08ec:	4b20      	ldr	r3, [pc, #128]	; (2fff0970 <register_periph_iomem+0x11c>)
2fff08ee:	e7d2      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff08f0:	4b20      	ldr	r3, [pc, #128]	; (2fff0974 <register_periph_iomem+0x120>)
2fff08f2:	4298      	cmp	r0, r3
2fff08f4:	d01e      	beq.n	2fff0934 <register_periph_iomem+0xe0>
2fff08f6:	d809      	bhi.n	2fff090c <register_periph_iomem+0xb8>
2fff08f8:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
2fff08fc:	4298      	cmp	r0, r3
2fff08fe:	d01b      	beq.n	2fff0938 <register_periph_iomem+0xe4>
2fff0900:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
2fff0904:	4298      	cmp	r0, r3
2fff0906:	d1c8      	bne.n	2fff089a <register_periph_iomem+0x46>
2fff0908:	200a      	movs	r0, #10
2fff090a:	e009      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff090c:	4b1a      	ldr	r3, [pc, #104]	; (2fff0978 <register_periph_iomem+0x124>)
2fff090e:	4298      	cmp	r0, r3
2fff0910:	d014      	beq.n	2fff093c <register_periph_iomem+0xe8>
2fff0912:	f503 43a0 	add.w	r3, r3, #20480	; 0x5000
2fff0916:	4298      	cmp	r0, r3
2fff0918:	d1bf      	bne.n	2fff089a <register_periph_iomem+0x46>
2fff091a:	200b      	movs	r0, #11
2fff091c:	e000      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff091e:	2012      	movs	r0, #18
2fff0920:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0924:	f7ff bf3e 	b.w	2fff07a4 <register_periph>
2fff0928:	2009      	movs	r0, #9
2fff092a:	e7f9      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff092c:	2000      	movs	r0, #0
2fff092e:	e7f7      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff0930:	200f      	movs	r0, #15
2fff0932:	e7f5      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff0934:	200c      	movs	r0, #12
2fff0936:	e7f3      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff0938:	2011      	movs	r0, #17
2fff093a:	e7f1      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff093c:	2010      	movs	r0, #16
2fff093e:	e7ef      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff0940:	54002000 	.word	0x54002000
2fff0944:	50004000 	.word	0x50004000
2fff0948:	40018000 	.word	0x40018000
2fff094c:	40011000 	.word	0x40011000
2fff0950:	50002000 	.word	0x50002000
2fff0954:	40019000 	.word	0x40019000
2fff0958:	44003000 	.word	0x44003000
2fff095c:	50003000 	.word	0x50003000
2fff0960:	50009000 	.word	0x50009000
2fff0964:	50008000 	.word	0x50008000
2fff0968:	5000c000 	.word	0x5000c000
2fff096c:	54003000 	.word	0x54003000
2fff0970:	5a002000 	.word	0x5a002000
2fff0974:	5c003000 	.word	0x5c003000
2fff0978:	5c004000 	.word	0x5c004000

2fff097c <stm32mp_register_secure_periph>:
2fff097c:	2101      	movs	r1, #1
2fff097e:	f7ff bf11 	b.w	2fff07a4 <register_periph>

2fff0982 <stm32mp_register_secure_periph_iomem>:
2fff0982:	2101      	movs	r1, #1
2fff0984:	f7ff bf66 	b.w	2fff0854 <register_periph_iomem>

2fff0988 <stm32mp_register_non_secure_periph_iomem>:
2fff0988:	2102      	movs	r1, #2
2fff098a:	f7ff bf63 	b.w	2fff0854 <register_periph_iomem>
	...

2fff0990 <stm32mp_register_secure_gpio>:
2fff0990:	2819      	cmp	r0, #25
2fff0992:	b508      	push	{r3, lr}
2fff0994:	460b      	mov	r3, r1
2fff0996:	d105      	bne.n	2fff09a4 <stm32mp_register_secure_gpio+0x14>
2fff0998:	2101      	movs	r1, #1
2fff099a:	1858      	adds	r0, r3, r1
2fff099c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff09a0:	f7ff bf00 	b.w	2fff07a4 <register_periph>
2fff09a4:	4601      	mov	r1, r0
2fff09a6:	4803      	ldr	r0, [pc, #12]	; (2fff09b4 <stm32mp_register_secure_gpio+0x24>)
2fff09a8:	f001 ff5c 	bl	2fff2864 <tf_log>
2fff09ac:	f001 fffe 	bl	2fff29ac <console_flush>
2fff09b0:	f007 ef62 	blx	2fff8878 <do_panic>
2fff09b4:	2fffa756 	.word	0x2fffa756

2fff09b8 <stm32mp_register_non_secure_gpio>:
2fff09b8:	2819      	cmp	r0, #25
2fff09ba:	460b      	mov	r3, r1
2fff09bc:	d103      	bne.n	2fff09c6 <stm32mp_register_non_secure_gpio+0xe>
2fff09be:	2102      	movs	r1, #2
2fff09c0:	1c58      	adds	r0, r3, #1
2fff09c2:	f7ff beef 	b.w	2fff07a4 <register_periph>
2fff09c6:	4770      	bx	lr

2fff09c8 <stm32mp1_register_etzpc_decprot>:
2fff09c8:	b538      	push	{r3, r4, r5, lr}
2fff09ca:	b131      	cbz	r1, 2fff09da <stm32mp1_register_etzpc_decprot+0x12>
2fff09cc:	3901      	subs	r1, #1
2fff09ce:	2902      	cmp	r1, #2
2fff09d0:	d921      	bls.n	2fff0a16 <stm32mp1_register_etzpc_decprot+0x4e>
2fff09d2:	f001 ffeb 	bl	2fff29ac <console_flush>
2fff09d6:	f007 ef50 	blx	2fff8878 <do_panic>
2fff09da:	2801      	cmp	r0, #1
2fff09dc:	d911      	bls.n	2fff0a02 <stm32mp1_register_etzpc_decprot+0x3a>
2fff09de:	f1a0 030a 	sub.w	r3, r0, #10
2fff09e2:	2b01      	cmp	r3, #1
2fff09e4:	d90d      	bls.n	2fff0a02 <stm32mp1_register_etzpc_decprot+0x3a>
2fff09e6:	2101      	movs	r1, #1
2fff09e8:	4a0f      	ldr	r2, [pc, #60]	; (2fff0a28 <stm32mp1_register_etzpc_decprot+0x60>)
2fff09ea:	2300      	movs	r3, #0
2fff09ec:	4614      	mov	r4, r2
2fff09ee:	6855      	ldr	r5, [r2, #4]
2fff09f0:	42a8      	cmp	r0, r5
2fff09f2:	d107      	bne.n	2fff0a04 <stm32mp1_register_etzpc_decprot+0x3c>
2fff09f4:	220c      	movs	r2, #12
2fff09f6:	4353      	muls	r3, r2
2fff09f8:	58e0      	ldr	r0, [r4, r3]
2fff09fa:	1c43      	adds	r3, r0, #1
2fff09fc:	d107      	bne.n	2fff0a0e <stm32mp1_register_etzpc_decprot+0x46>
2fff09fe:	2901      	cmp	r1, #1
2fff0a00:	d0e7      	beq.n	2fff09d2 <stm32mp1_register_etzpc_decprot+0xa>
2fff0a02:	bd38      	pop	{r3, r4, r5, pc}
2fff0a04:	3301      	adds	r3, #1
2fff0a06:	320c      	adds	r2, #12
2fff0a08:	2b0c      	cmp	r3, #12
2fff0a0a:	d1f0      	bne.n	2fff09ee <stm32mp1_register_etzpc_decprot+0x26>
2fff0a0c:	e7f7      	b.n	2fff09fe <stm32mp1_register_etzpc_decprot+0x36>
2fff0a0e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff0a12:	f7ff bec7 	b.w	2fff07a4 <register_periph>
2fff0a16:	2801      	cmp	r0, #1
2fff0a18:	d9db      	bls.n	2fff09d2 <stm32mp1_register_etzpc_decprot+0xa>
2fff0a1a:	f1a0 030a 	sub.w	r3, r0, #10
2fff0a1e:	2b01      	cmp	r3, #1
2fff0a20:	d9d7      	bls.n	2fff09d2 <stm32mp1_register_etzpc_decprot+0xa>
2fff0a22:	2102      	movs	r1, #2
2fff0a24:	e7e0      	b.n	2fff09e8 <stm32mp1_register_etzpc_decprot+0x20>
2fff0a26:	bf00      	nop
2fff0a28:	2fffa868 	.word	0x2fffa868

2fff0a2c <stm32mp1_periph_is_secure>:
2fff0a2c:	4b04      	ldr	r3, [pc, #16]	; (2fff0a40 <stm32mp1_periph_is_secure+0x14>)
2fff0a2e:	2201      	movs	r2, #1
2fff0a30:	701a      	strb	r2, [r3, #0]
2fff0a32:	4b04      	ldr	r3, [pc, #16]	; (2fff0a44 <stm32mp1_periph_is_secure+0x18>)
2fff0a34:	5c18      	ldrb	r0, [r3, r0]
2fff0a36:	1a83      	subs	r3, r0, r2
2fff0a38:	4258      	negs	r0, r3
2fff0a3a:	4158      	adcs	r0, r3
2fff0a3c:	4770      	bx	lr
2fff0a3e:	bf00      	nop
2fff0a40:	2fffe8e4 	.word	0x2fffe8e4
2fff0a44:	2fffe8e5 	.word	0x2fffe8e5

2fff0a48 <stm32mp_gpio_bank_is_non_secure.part.0>:
2fff0a48:	b538      	push	{r3, r4, r5, lr}
2fff0a4a:	2400      	movs	r4, #0
2fff0a4c:	4625      	mov	r5, r4
2fff0a4e:	f7ff fe91 	bl	2fff0774 <get_gpioz_nbpin>
2fff0a52:	4284      	cmp	r4, r0
2fff0a54:	d305      	bcc.n	2fff0a62 <stm32mp_gpio_bank_is_non_secure.part.0+0x1a>
2fff0a56:	f7ff fe8d 	bl	2fff0774 <get_gpioz_nbpin>
2fff0a5a:	1a2b      	subs	r3, r5, r0
2fff0a5c:	4258      	negs	r0, r3
2fff0a5e:	4158      	adcs	r0, r3
2fff0a60:	bd38      	pop	{r3, r4, r5, pc}
2fff0a62:	3401      	adds	r4, #1
2fff0a64:	4620      	mov	r0, r4
2fff0a66:	f7ff ffe1 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0a6a:	2800      	cmp	r0, #0
2fff0a6c:	d1ef      	bne.n	2fff0a4e <stm32mp_gpio_bank_is_non_secure.part.0+0x6>
2fff0a6e:	3501      	adds	r5, #1
2fff0a70:	e7ed      	b.n	2fff0a4e <stm32mp_gpio_bank_is_non_secure.part.0+0x6>
	...

2fff0a74 <stm32mp_gpio_bank_is_non_secure>:
2fff0a74:	4a04      	ldr	r2, [pc, #16]	; (2fff0a88 <stm32mp_gpio_bank_is_non_secure+0x14>)
2fff0a76:	2819      	cmp	r0, #25
2fff0a78:	f04f 0301 	mov.w	r3, #1
2fff0a7c:	7013      	strb	r3, [r2, #0]
2fff0a7e:	d101      	bne.n	2fff0a84 <stm32mp_gpio_bank_is_non_secure+0x10>
2fff0a80:	f7ff bfe2 	b.w	2fff0a48 <stm32mp_gpio_bank_is_non_secure.part.0>
2fff0a84:	4618      	mov	r0, r3
2fff0a86:	4770      	bx	lr
2fff0a88:	2fffe8e4 	.word	0x2fffe8e4

2fff0a8c <stm32mp_nsec_can_access_clock>:
2fff0a8c:	2805      	cmp	r0, #5
2fff0a8e:	b538      	push	{r3, r4, r5, lr}
2fff0a90:	d957      	bls.n	2fff0b42 <stm32mp_nsec_can_access_clock+0xb6>
2fff0a92:	f1a0 03b4 	sub.w	r3, r0, #180	; 0xb4
2fff0a96:	2b08      	cmp	r3, #8
2fff0a98:	d953      	bls.n	2fff0b42 <stm32mp_nsec_can_access_clock+0xb6>
2fff0a9a:	2887      	cmp	r0, #135	; 0x87
2fff0a9c:	d040      	beq.n	2fff0b20 <stm32mp_nsec_can_access_clock+0x94>
2fff0a9e:	d822      	bhi.n	2fff0ae6 <stm32mp_nsec_can_access_clock+0x5a>
2fff0aa0:	2860      	cmp	r0, #96	; 0x60
2fff0aa2:	d044      	beq.n	2fff0b2e <stm32mp_nsec_can_access_clock+0xa2>
2fff0aa4:	d819      	bhi.n	2fff0ada <stm32mp_nsec_can_access_clock+0x4e>
2fff0aa6:	2845      	cmp	r0, #69	; 0x45
2fff0aa8:	d04b      	beq.n	2fff0b42 <stm32mp_nsec_can_access_clock+0xb6>
2fff0aaa:	d805      	bhi.n	2fff0ab8 <stm32mp_nsec_can_access_clock+0x2c>
2fff0aac:	2841      	cmp	r0, #65	; 0x41
2fff0aae:	d048      	beq.n	2fff0b42 <stm32mp_nsec_can_access_clock+0xb6>
2fff0ab0:	2844      	cmp	r0, #68	; 0x44
2fff0ab2:	d03e      	beq.n	2fff0b32 <stm32mp_nsec_can_access_clock+0xa6>
2fff0ab4:	2000      	movs	r0, #0
2fff0ab6:	bd38      	pop	{r3, r4, r5, pc}
2fff0ab8:	285f      	cmp	r0, #95	; 0x5f
2fff0aba:	d1fb      	bne.n	2fff0ab4 <stm32mp_nsec_can_access_clock+0x28>
2fff0abc:	4b22      	ldr	r3, [pc, #136]	; (2fff0b48 <stm32mp_nsec_can_access_clock+0xbc>)
2fff0abe:	2500      	movs	r5, #0
2fff0ac0:	462c      	mov	r4, r5
2fff0ac2:	2201      	movs	r2, #1
2fff0ac4:	701a      	strb	r2, [r3, #0]
2fff0ac6:	f7ff fe55 	bl	2fff0774 <get_gpioz_nbpin>
2fff0aca:	4285      	cmp	r5, r0
2fff0acc:	d320      	bcc.n	2fff0b10 <stm32mp_nsec_can_access_clock+0x84>
2fff0ace:	f7ff fe51 	bl	2fff0774 <get_gpioz_nbpin>
2fff0ad2:	1a20      	subs	r0, r4, r0
2fff0ad4:	bf18      	it	ne
2fff0ad6:	2001      	movne	r0, #1
2fff0ad8:	e7ed      	b.n	2fff0ab6 <stm32mp_nsec_can_access_clock+0x2a>
2fff0ada:	2861      	cmp	r0, #97	; 0x61
2fff0adc:	d02b      	beq.n	2fff0b36 <stm32mp_nsec_can_access_clock+0xaa>
2fff0ade:	287c      	cmp	r0, #124	; 0x7c
2fff0ae0:	d1e8      	bne.n	2fff0ab4 <stm32mp_nsec_can_access_clock+0x28>
2fff0ae2:	200f      	movs	r0, #15
2fff0ae4:	e01d      	b.n	2fff0b22 <stm32mp_nsec_can_access_clock+0x96>
2fff0ae6:	2894      	cmp	r0, #148	; 0x94
2fff0ae8:	d027      	beq.n	2fff0b3a <stm32mp_nsec_can_access_clock+0xae>
2fff0aea:	d805      	bhi.n	2fff0af8 <stm32mp_nsec_can_access_clock+0x6c>
2fff0aec:	288c      	cmp	r0, #140	; 0x8c
2fff0aee:	d026      	beq.n	2fff0b3e <stm32mp_nsec_can_access_clock+0xb2>
2fff0af0:	288e      	cmp	r0, #142	; 0x8e
2fff0af2:	d1df      	bne.n	2fff0ab4 <stm32mp_nsec_can_access_clock+0x28>
2fff0af4:	200b      	movs	r0, #11
2fff0af6:	e014      	b.n	2fff0b22 <stm32mp_nsec_can_access_clock+0x96>
2fff0af8:	28c3      	cmp	r0, #195	; 0xc3
2fff0afa:	d805      	bhi.n	2fff0b08 <stm32mp_nsec_can_access_clock+0x7c>
2fff0afc:	28c1      	cmp	r0, #193	; 0xc1
2fff0afe:	d820      	bhi.n	2fff0b42 <stm32mp_nsec_can_access_clock+0xb6>
2fff0b00:	28c0      	cmp	r0, #192	; 0xc0
2fff0b02:	d1d7      	bne.n	2fff0ab4 <stm32mp_nsec_can_access_clock+0x28>
2fff0b04:	2010      	movs	r0, #16
2fff0b06:	e00c      	b.n	2fff0b22 <stm32mp_nsec_can_access_clock+0x96>
2fff0b08:	28c4      	cmp	r0, #196	; 0xc4
2fff0b0a:	d1d3      	bne.n	2fff0ab4 <stm32mp_nsec_can_access_clock+0x28>
2fff0b0c:	200d      	movs	r0, #13
2fff0b0e:	e008      	b.n	2fff0b22 <stm32mp_nsec_can_access_clock+0x96>
2fff0b10:	3501      	adds	r5, #1
2fff0b12:	4628      	mov	r0, r5
2fff0b14:	f7ff ff8a 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0b18:	2800      	cmp	r0, #0
2fff0b1a:	d0d4      	beq.n	2fff0ac6 <stm32mp_nsec_can_access_clock+0x3a>
2fff0b1c:	3401      	adds	r4, #1
2fff0b1e:	e7d2      	b.n	2fff0ac6 <stm32mp_nsec_can_access_clock+0x3a>
2fff0b20:	2011      	movs	r0, #17
2fff0b22:	f7ff ff83 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0b26:	f080 0001 	eor.w	r0, r0, #1
2fff0b2a:	b2c0      	uxtb	r0, r0
2fff0b2c:	e7c3      	b.n	2fff0ab6 <stm32mp_nsec_can_access_clock+0x2a>
2fff0b2e:	2000      	movs	r0, #0
2fff0b30:	e7f7      	b.n	2fff0b22 <stm32mp_nsec_can_access_clock+0x96>
2fff0b32:	200c      	movs	r0, #12
2fff0b34:	e7f5      	b.n	2fff0b22 <stm32mp_nsec_can_access_clock+0x96>
2fff0b36:	2009      	movs	r0, #9
2fff0b38:	e7f3      	b.n	2fff0b22 <stm32mp_nsec_can_access_clock+0x96>
2fff0b3a:	2012      	movs	r0, #18
2fff0b3c:	e7f1      	b.n	2fff0b22 <stm32mp_nsec_can_access_clock+0x96>
2fff0b3e:	200a      	movs	r0, #10
2fff0b40:	e7ef      	b.n	2fff0b22 <stm32mp_nsec_can_access_clock+0x96>
2fff0b42:	2001      	movs	r0, #1
2fff0b44:	e7b7      	b.n	2fff0ab6 <stm32mp_nsec_can_access_clock+0x2a>
2fff0b46:	bf00      	nop
2fff0b48:	2fffe8e4 	.word	0x2fffe8e4

2fff0b4c <stm32mp_nsec_can_access_reset>:
2fff0b4c:	b508      	push	{r3, lr}
2fff0b4e:	f640 4386 	movw	r3, #3206	; 0xc86
2fff0b52:	4298      	cmp	r0, r3
2fff0b54:	d836      	bhi.n	2fff0bc4 <stm32mp_nsec_can_access_reset+0x78>
2fff0b56:	f5b0 6f48 	cmp.w	r0, #3200	; 0xc80
2fff0b5a:	d205      	bcs.n	2fff0b68 <stm32mp_nsec_can_access_reset+0x1c>
2fff0b5c:	f5a0 6044 	sub.w	r0, r0, #3136	; 0xc40
2fff0b60:	2804      	cmp	r0, #4
2fff0b62:	d91e      	bls.n	2fff0ba2 <stm32mp_nsec_can_access_reset+0x56>
2fff0b64:	2000      	movs	r0, #0
2fff0b66:	e01b      	b.n	2fff0ba0 <stm32mp_nsec_can_access_reset+0x54>
2fff0b68:	f5a0 6048 	sub.w	r0, r0, #3200	; 0xc80
2fff0b6c:	2806      	cmp	r0, #6
2fff0b6e:	d8f9      	bhi.n	2fff0b64 <stm32mp_nsec_can_access_reset+0x18>
2fff0b70:	a301      	add	r3, pc, #4	; (adr r3, 2fff0b78 <stm32mp_nsec_can_access_reset+0x2c>)
2fff0b72:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
2fff0b76:	bf00      	nop
2fff0b78:	2fff0bd7 	.word	0x2fff0bd7
2fff0b7c:	2fff0b65 	.word	0x2fff0b65
2fff0b80:	2fff0b65 	.word	0x2fff0b65
2fff0b84:	2fff0b65 	.word	0x2fff0b65
2fff0b88:	2fff0b95 	.word	0x2fff0b95
2fff0b8c:	2fff0bf1 	.word	0x2fff0bf1
2fff0b90:	2fff0bed 	.word	0x2fff0bed
2fff0b94:	2000      	movs	r0, #0
2fff0b96:	f7ff ff49 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0b9a:	f080 0001 	eor.w	r0, r0, #1
2fff0b9e:	b2c0      	uxtb	r0, r0
2fff0ba0:	bd08      	pop	{r3, pc}
2fff0ba2:	2804      	cmp	r0, #4
2fff0ba4:	d8de      	bhi.n	2fff0b64 <stm32mp_nsec_can_access_reset+0x18>
2fff0ba6:	a301      	add	r3, pc, #4	; (adr r3, 2fff0bac <stm32mp_nsec_can_access_reset+0x60>)
2fff0ba8:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
2fff0bac:	2fff0bf5 	.word	0x2fff0bf5
2fff0bb0:	2fff0b65 	.word	0x2fff0b65
2fff0bb4:	2fff0bc1 	.word	0x2fff0bc1
2fff0bb8:	2fff0be5 	.word	0x2fff0be5
2fff0bbc:	2fff0be9 	.word	0x2fff0be9
2fff0bc0:	200a      	movs	r0, #10
2fff0bc2:	e7e8      	b.n	2fff0b96 <stm32mp_nsec_can_access_reset+0x4a>
2fff0bc4:	f5b0 6f50 	cmp.w	r0, #3328	; 0xd00
2fff0bc8:	d016      	beq.n	2fff0bf8 <stm32mp_nsec_can_access_reset+0xac>
2fff0bca:	f242 0321 	movw	r3, #8225	; 0x2021
2fff0bce:	4298      	cmp	r0, r3
2fff0bd0:	d1c8      	bne.n	2fff0b64 <stm32mp_nsec_can_access_reset+0x18>
2fff0bd2:	200d      	movs	r0, #13
2fff0bd4:	e7df      	b.n	2fff0b96 <stm32mp_nsec_can_access_reset+0x4a>
2fff0bd6:	4b09      	ldr	r3, [pc, #36]	; (2fff0bfc <stm32mp_nsec_can_access_reset+0xb0>)
2fff0bd8:	2201      	movs	r2, #1
2fff0bda:	701a      	strb	r2, [r3, #0]
2fff0bdc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0be0:	f7ff bf32 	b.w	2fff0a48 <stm32mp_gpio_bank_is_non_secure.part.0>
2fff0be4:	200b      	movs	r0, #11
2fff0be6:	e7d6      	b.n	2fff0b96 <stm32mp_nsec_can_access_reset+0x4a>
2fff0be8:	2012      	movs	r0, #18
2fff0bea:	e7d4      	b.n	2fff0b96 <stm32mp_nsec_can_access_reset+0x4a>
2fff0bec:	200f      	movs	r0, #15
2fff0bee:	e7d2      	b.n	2fff0b96 <stm32mp_nsec_can_access_reset+0x4a>
2fff0bf0:	2009      	movs	r0, #9
2fff0bf2:	e7d0      	b.n	2fff0b96 <stm32mp_nsec_can_access_reset+0x4a>
2fff0bf4:	2011      	movs	r0, #17
2fff0bf6:	e7ce      	b.n	2fff0b96 <stm32mp_nsec_can_access_reset+0x4a>
2fff0bf8:	200e      	movs	r0, #14
2fff0bfa:	e7cc      	b.n	2fff0b96 <stm32mp_nsec_can_access_reset+0x4a>
2fff0bfc:	2fffe8e4 	.word	0x2fffe8e4

2fff0c00 <stm32mp_lock_periph_registering>:
2fff0c00:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff0c04:	2400      	movs	r4, #0
2fff0c06:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 2fff0dc8 <stm32mp_lock_periph_registering+0x1c8>
2fff0c0a:	2301      	movs	r3, #1
2fff0c0c:	f8df a1bc 	ldr.w	sl, [pc, #444]	; 2fff0dcc <stm32mp_lock_periph_registering+0x1cc>
2fff0c10:	4e6f      	ldr	r6, [pc, #444]	; (2fff0dd0 <stm32mp_lock_periph_registering+0x1d0>)
2fff0c12:	464d      	mov	r5, r9
2fff0c14:	4f6f      	ldr	r7, [pc, #444]	; (2fff0dd4 <stm32mp_lock_periph_registering+0x1d4>)
2fff0c16:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 2fff0dd8 <stm32mp_lock_periph_registering+0x1d8>
2fff0c1a:	f88a 3000 	strb.w	r3, [sl]
2fff0c1e:	f815 2b01 	ldrb.w	r2, [r5], #1
2fff0c22:	2a02      	cmp	r2, #2
2fff0c24:	d904      	bls.n	2fff0c30 <stm32mp_lock_periph_registering+0x30>
2fff0c26:	f44f 7135 	mov.w	r1, #724	; 0x2d4
2fff0c2a:	486c      	ldr	r0, [pc, #432]	; (2fff0ddc <stm32mp_lock_periph_registering+0x1dc>)
2fff0c2c:	f008 fe5e 	bl	2fff98ec <__assert>
2fff0c30:	2a01      	cmp	r2, #1
2fff0c32:	d106      	bne.n	2fff0c42 <stm32mp_lock_periph_registering+0x42>
2fff0c34:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
2fff0c38:	463b      	mov	r3, r7
2fff0c3a:	4622      	mov	r2, r4
2fff0c3c:	4640      	mov	r0, r8
2fff0c3e:	f001 fe11 	bl	2fff2864 <tf_log>
2fff0c42:	3401      	adds	r4, #1
2fff0c44:	2c14      	cmp	r4, #20
2fff0c46:	d1ea      	bne.n	2fff0c1e <stm32mp_lock_periph_registering+0x1e>
2fff0c48:	f8df b184 	ldr.w	fp, [pc, #388]	; 2fff0dd0 <stm32mp_lock_periph_registering+0x1d0>
2fff0c4c:	f004 ff12 	bl	2fff5a74 <stm32mp1_dump_clocks_state>
2fff0c50:	f8df 818c 	ldr.w	r8, [pc, #396]	; 2fff0de0 <stm32mp_lock_periph_registering+0x1e0>
2fff0c54:	f004 fa57 	bl	2fff5106 <stm32mp1_rcc_is_mckprot>
2fff0c58:	4607      	mov	r7, r0
2fff0c5a:	2500      	movs	r5, #0
2fff0c5c:	462c      	mov	r4, r5
2fff0c5e:	f004 fa4b 	bl	2fff50f8 <stm32mp1_rcc_is_secure>
2fff0c62:	4606      	mov	r6, r0
2fff0c64:	485f      	ldr	r0, [pc, #380]	; (2fff0de4 <stm32mp_lock_periph_registering+0x1e4>)
2fff0c66:	f819 3b01 	ldrb.w	r3, [r9], #1
2fff0c6a:	2b01      	cmp	r3, #1
2fff0c6c:	d11a      	bne.n	2fff0ca4 <stm32mp_lock_periph_registering+0xa4>
2fff0c6e:	2c0d      	cmp	r4, #13
2fff0c70:	d001      	beq.n	2fff0c76 <stm32mp_lock_periph_registering+0x76>
2fff0c72:	2c13      	cmp	r4, #19
2fff0c74:	d108      	bne.n	2fff0c88 <stm32mp_lock_periph_registering+0x88>
2fff0c76:	2f00      	cmp	r7, #0
2fff0c78:	f040 80a0 	bne.w	2fff0dbc <stm32mp_lock_periph_registering+0x1bc>
2fff0c7c:	495a      	ldr	r1, [pc, #360]	; (2fff0de8 <stm32mp_lock_periph_registering+0x1e8>)
2fff0c7e:	4a5b      	ldr	r2, [pc, #364]	; (2fff0dec <stm32mp_lock_periph_registering+0x1ec>)
2fff0c80:	2e00      	cmp	r6, #0
2fff0c82:	bf08      	it	eq
2fff0c84:	4641      	moveq	r1, r8
2fff0c86:	e006      	b.n	2fff0c96 <stm32mp_lock_periph_registering+0x96>
2fff0c88:	b966      	cbnz	r6, 2fff0ca4 <stm32mp_lock_periph_registering+0xa4>
2fff0c8a:	4a58      	ldr	r2, [pc, #352]	; (2fff0dec <stm32mp_lock_periph_registering+0x1ec>)
2fff0c8c:	4641      	mov	r1, r8
2fff0c8e:	4b58      	ldr	r3, [pc, #352]	; (2fff0df0 <stm32mp_lock_periph_registering+0x1f0>)
2fff0c90:	2f00      	cmp	r7, #0
2fff0c92:	bf18      	it	ne
2fff0c94:	461a      	movne	r2, r3
2fff0c96:	f85b 3024 	ldr.w	r3, [fp, r4, lsl #2]
2fff0c9a:	3501      	adds	r5, #1
2fff0c9c:	9400      	str	r4, [sp, #0]
2fff0c9e:	f001 fde1 	bl	2fff2864 <tf_log>
2fff0ca2:	4850      	ldr	r0, [pc, #320]	; (2fff0de4 <stm32mp_lock_periph_registering+0x1e4>)
2fff0ca4:	3401      	adds	r4, #1
2fff0ca6:	2c14      	cmp	r4, #20
2fff0ca8:	d1dd      	bne.n	2fff0c66 <stm32mp_lock_periph_registering+0x66>
2fff0caa:	b11d      	cbz	r5, 2fff0cb4 <stm32mp_lock_periph_registering+0xb4>
2fff0cac:	f001 fe7e 	bl	2fff29ac <console_flush>
2fff0cb0:	f007 ede2 	blx	2fff8878 <do_panic>
2fff0cb4:	f89a 3000 	ldrb.w	r3, [sl]
2fff0cb8:	b913      	cbnz	r3, 2fff0cc0 <stm32mp_lock_periph_registering+0xc0>
2fff0cba:	f240 2182 	movw	r1, #642	; 0x282
2fff0cbe:	e7b4      	b.n	2fff0c2a <stm32mp_lock_periph_registering+0x2a>
2fff0cc0:	4629      	mov	r1, r5
2fff0cc2:	4628      	mov	r0, r5
2fff0cc4:	f7ff fd2c 	bl	2fff0720 <check_decprot>
2fff0cc8:	4604      	mov	r4, r0
2fff0cca:	4629      	mov	r1, r5
2fff0ccc:	2001      	movs	r0, #1
2fff0cce:	f7ff fd27 	bl	2fff0720 <check_decprot>
2fff0cd2:	4004      	ands	r4, r0
2fff0cd4:	2012      	movs	r0, #18
2fff0cd6:	b2e4      	uxtb	r4, r4
2fff0cd8:	f7ff fea8 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0cdc:	2800      	cmp	r0, #0
2fff0cde:	f04f 0003 	mov.w	r0, #3
2fff0ce2:	bf0c      	ite	eq
2fff0ce4:	2103      	moveq	r1, #3
2fff0ce6:	2100      	movne	r1, #0
2fff0ce8:	f7ff fd1a 	bl	2fff0720 <check_decprot>
2fff0cec:	4004      	ands	r4, r0
2fff0cee:	2011      	movs	r0, #17
2fff0cf0:	f7ff fe9c 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0cf4:	2800      	cmp	r0, #0
2fff0cf6:	f04f 0004 	mov.w	r0, #4
2fff0cfa:	bf0c      	ite	eq
2fff0cfc:	2103      	moveq	r1, #3
2fff0cfe:	2100      	movne	r1, #0
2fff0d00:	f7ff fd0e 	bl	2fff0720 <check_decprot>
2fff0d04:	4004      	ands	r4, r0
2fff0d06:	200a      	movs	r0, #10
2fff0d08:	f7ff fe90 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0d0c:	2800      	cmp	r0, #0
2fff0d0e:	f04f 0005 	mov.w	r0, #5
2fff0d12:	bf0c      	ite	eq
2fff0d14:	2103      	moveq	r1, #3
2fff0d16:	2100      	movne	r1, #0
2fff0d18:	f7ff fd02 	bl	2fff0720 <check_decprot>
2fff0d1c:	4004      	ands	r4, r0
2fff0d1e:	200f      	movs	r0, #15
2fff0d20:	f7ff fe84 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0d24:	2800      	cmp	r0, #0
2fff0d26:	f04f 0007 	mov.w	r0, #7
2fff0d2a:	bf0c      	ite	eq
2fff0d2c:	2103      	moveq	r1, #3
2fff0d2e:	2100      	movne	r1, #0
2fff0d30:	f7ff fcf6 	bl	2fff0720 <check_decprot>
2fff0d34:	4004      	ands	r4, r0
2fff0d36:	2009      	movs	r0, #9
2fff0d38:	f7ff fe78 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0d3c:	2800      	cmp	r0, #0
2fff0d3e:	f04f 0008 	mov.w	r0, #8
2fff0d42:	bf0c      	ite	eq
2fff0d44:	2103      	moveq	r1, #3
2fff0d46:	2100      	movne	r1, #0
2fff0d48:	f7ff fcea 	bl	2fff0720 <check_decprot>
2fff0d4c:	4004      	ands	r4, r0
2fff0d4e:	4628      	mov	r0, r5
2fff0d50:	f7ff fe6c 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0d54:	2800      	cmp	r0, #0
2fff0d56:	f04f 0009 	mov.w	r0, #9
2fff0d5a:	bf0c      	ite	eq
2fff0d5c:	2103      	moveq	r1, #3
2fff0d5e:	2100      	movne	r1, #0
2fff0d60:	f7ff fcde 	bl	2fff0720 <check_decprot>
2fff0d64:	4004      	ands	r4, r0
2fff0d66:	4629      	mov	r1, r5
2fff0d68:	200a      	movs	r0, #10
2fff0d6a:	f7ff fcd9 	bl	2fff0720 <check_decprot>
2fff0d6e:	4004      	ands	r4, r0
2fff0d70:	4629      	mov	r1, r5
2fff0d72:	200b      	movs	r0, #11
2fff0d74:	f7ff fcd4 	bl	2fff0720 <check_decprot>
2fff0d78:	4004      	ands	r4, r0
2fff0d7a:	200b      	movs	r0, #11
2fff0d7c:	f7ff fe56 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0d80:	2800      	cmp	r0, #0
2fff0d82:	f04f 000c 	mov.w	r0, #12
2fff0d86:	bf0c      	ite	eq
2fff0d88:	2103      	moveq	r1, #3
2fff0d8a:	2100      	movne	r1, #0
2fff0d8c:	f7ff fcc8 	bl	2fff0720 <check_decprot>
2fff0d90:	2c00      	cmp	r4, #0
2fff0d92:	d08b      	beq.n	2fff0cac <stm32mp_lock_periph_registering+0xac>
2fff0d94:	2800      	cmp	r0, #0
2fff0d96:	d089      	beq.n	2fff0cac <stm32mp_lock_periph_registering+0xac>
2fff0d98:	f7ff fcec 	bl	2fff0774 <get_gpioz_nbpin>
2fff0d9c:	4285      	cmp	r5, r0
2fff0d9e:	d302      	bcc.n	2fff0da6 <stm32mp_lock_periph_registering+0x1a6>
2fff0da0:	b003      	add	sp, #12
2fff0da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff0da6:	1c6c      	adds	r4, r5, #1
2fff0da8:	4629      	mov	r1, r5
2fff0daa:	4620      	mov	r0, r4
2fff0dac:	4625      	mov	r5, r4
2fff0dae:	f7ff fe3d 	bl	2fff0a2c <stm32mp1_periph_is_secure>
2fff0db2:	4602      	mov	r2, r0
2fff0db4:	2019      	movs	r0, #25
2fff0db6:	f005 fb99 	bl	2fff64ec <set_gpio_secure_cfg>
2fff0dba:	e7ed      	b.n	2fff0d98 <stm32mp_lock_periph_registering+0x198>
2fff0dbc:	2e00      	cmp	r6, #0
2fff0dbe:	f47f af71 	bne.w	2fff0ca4 <stm32mp_lock_periph_registering+0xa4>
2fff0dc2:	4a0b      	ldr	r2, [pc, #44]	; (2fff0df0 <stm32mp_lock_periph_registering+0x1f0>)
2fff0dc4:	4641      	mov	r1, r8
2fff0dc6:	e766      	b.n	2fff0c96 <stm32mp_lock_periph_registering+0x96>
2fff0dc8:	2fffe8e5 	.word	0x2fffe8e5
2fff0dcc:	2fffe8e4 	.word	0x2fffe8e4
2fff0dd0:	2fffa8f8 	.word	0x2fffa8f8
2fff0dd4:	2fffa78a 	.word	0x2fffa78a
2fff0dd8:	2fffa791 	.word	0x2fffa791
2fff0ddc:	2fffa6fe 	.word	0x2fffa6fe
2fff0de0:	2fffa777 	.word	0x2fffa777
2fff0de4:	2fffa7a7 	.word	0x2fffa7a7
2fff0de8:	2fffa77b 	.word	0x2fffa77b
2fff0dec:	2fffa782 	.word	0x2fffa782
2fff0df0:	2fffa786 	.word	0x2fffa786

2fff0df4 <plat_get_power_domain_tree_desc>:
2fff0df4:	4800      	ldr	r0, [pc, #0]	; (2fff0df8 <plat_get_power_domain_tree_desc+0x4>)
2fff0df6:	4770      	bx	lr
2fff0df8:	2fffa948 	.word	0x2fffa948

2fff0dfc <plat_core_pos_by_mpidr>:
2fff0dfc:	f410 0f7f 	tst.w	r0, #16711680	; 0xff0000
2fff0e00:	d10a      	bne.n	2fff0e18 <plat_core_pos_by_mpidr+0x1c>
2fff0e02:	f3c0 2207 	ubfx	r2, r0, #8, #8
2fff0e06:	b2c3      	uxtb	r3, r0
2fff0e08:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
2fff0e0c:	4302      	orrs	r2, r0
2fff0e0e:	bf0c      	ite	eq
2fff0e10:	4618      	moveq	r0, r3
2fff0e12:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2fff0e16:	4770      	bx	lr
2fff0e18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff0e1c:	4770      	bx	lr

2fff0e1e <gicd_read_igroupr>:
2fff0e1e:	0949      	lsrs	r1, r1, #5
2fff0e20:	3080      	adds	r0, #128	; 0x80
2fff0e22:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
2fff0e26:	4770      	bx	lr

2fff0e28 <gicd_read_icfgr>:
2fff0e28:	0909      	lsrs	r1, r1, #4
2fff0e2a:	f500 6040 	add.w	r0, r0, #3072	; 0xc00
2fff0e2e:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
2fff0e32:	4770      	bx	lr

2fff0e34 <gicd_write_igroupr>:
2fff0e34:	0949      	lsrs	r1, r1, #5
2fff0e36:	3080      	adds	r0, #128	; 0x80
2fff0e38:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0e3c:	4770      	bx	lr

2fff0e3e <gicd_write_isenabler>:
2fff0e3e:	0949      	lsrs	r1, r1, #5
2fff0e40:	f500 7080 	add.w	r0, r0, #256	; 0x100
2fff0e44:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0e48:	4770      	bx	lr

2fff0e4a <gicd_write_icenabler>:
2fff0e4a:	0949      	lsrs	r1, r1, #5
2fff0e4c:	f500 70c0 	add.w	r0, r0, #384	; 0x180
2fff0e50:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0e54:	4770      	bx	lr

2fff0e56 <gicd_write_ipriorityr>:
2fff0e56:	f021 0103 	bic.w	r1, r1, #3
2fff0e5a:	f500 6080 	add.w	r0, r0, #1024	; 0x400
2fff0e5e:	500a      	str	r2, [r1, r0]
2fff0e60:	4770      	bx	lr

2fff0e62 <gicd_write_icfgr>:
2fff0e62:	0909      	lsrs	r1, r1, #4
2fff0e64:	f500 6040 	add.w	r0, r0, #3072	; 0xc00
2fff0e68:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0e6c:	4770      	bx	lr

2fff0e6e <gicd_set_igroupr>:
2fff0e6e:	460b      	mov	r3, r1
2fff0e70:	2201      	movs	r2, #1
2fff0e72:	b510      	push	{r4, lr}
2fff0e74:	4604      	mov	r4, r0
2fff0e76:	f7ff ffd2 	bl	2fff0e1e <gicd_read_igroupr>
2fff0e7a:	f003 011f 	and.w	r1, r3, #31
2fff0e7e:	408a      	lsls	r2, r1
2fff0e80:	4619      	mov	r1, r3
2fff0e82:	4302      	orrs	r2, r0
2fff0e84:	4620      	mov	r0, r4
2fff0e86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0e8a:	f7ff bfd3 	b.w	2fff0e34 <gicd_write_igroupr>

2fff0e8e <gicd_clr_igroupr>:
2fff0e8e:	460b      	mov	r3, r1
2fff0e90:	2201      	movs	r2, #1
2fff0e92:	b510      	push	{r4, lr}
2fff0e94:	4604      	mov	r4, r0
2fff0e96:	f7ff ffc2 	bl	2fff0e1e <gicd_read_igroupr>
2fff0e9a:	f003 011f 	and.w	r1, r3, #31
2fff0e9e:	408a      	lsls	r2, r1
2fff0ea0:	4619      	mov	r1, r3
2fff0ea2:	ea20 0202 	bic.w	r2, r0, r2
2fff0ea6:	4620      	mov	r0, r4
2fff0ea8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0eac:	f7ff bfc2 	b.w	2fff0e34 <gicd_write_igroupr>

2fff0eb0 <gicd_set_isenabler>:
2fff0eb0:	f001 031f 	and.w	r3, r1, #31
2fff0eb4:	2201      	movs	r2, #1
2fff0eb6:	409a      	lsls	r2, r3
2fff0eb8:	f7ff bfc1 	b.w	2fff0e3e <gicd_write_isenabler>

2fff0ebc <gicd_set_icenabler>:
2fff0ebc:	f001 031f 	and.w	r3, r1, #31
2fff0ec0:	2201      	movs	r2, #1
2fff0ec2:	409a      	lsls	r2, r3
2fff0ec4:	f7ff bfc1 	b.w	2fff0e4a <gicd_write_icenabler>

2fff0ec8 <gicd_set_ipriorityr>:
2fff0ec8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
2fff0ecc:	b2d2      	uxtb	r2, r2
2fff0ece:	540a      	strb	r2, [r1, r0]
2fff0ed0:	4770      	bx	lr

2fff0ed2 <gicd_set_icfgr>:
2fff0ed2:	b538      	push	{r3, r4, r5, lr}
2fff0ed4:	460b      	mov	r3, r1
2fff0ed6:	004c      	lsls	r4, r1, #1
2fff0ed8:	4605      	mov	r5, r0
2fff0eda:	f004 041e 	and.w	r4, r4, #30
2fff0ede:	f7ff ffa3 	bl	2fff0e28 <gicd_read_icfgr>
2fff0ee2:	2103      	movs	r1, #3
2fff0ee4:	f002 0203 	and.w	r2, r2, #3
2fff0ee8:	40a1      	lsls	r1, r4
2fff0eea:	ea20 0001 	bic.w	r0, r0, r1
2fff0eee:	4619      	mov	r1, r3
2fff0ef0:	40a2      	lsls	r2, r4
2fff0ef2:	4302      	orrs	r2, r0
2fff0ef4:	4628      	mov	r0, r5
2fff0ef6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff0efa:	f7ff bfb2 	b.w	2fff0e62 <gicd_write_icfgr>

2fff0efe <gicv2_get_cpuif_id>:
2fff0efe:	f8d0 0800 	ldr.w	r0, [r0, #2048]	; 0x800
2fff0f02:	b2c0      	uxtb	r0, r0
2fff0f04:	4770      	bx	lr

2fff0f06 <gicv2_spis_configure_defaults>:
2fff0f06:	b570      	push	{r4, r5, r6, lr}
2fff0f08:	4605      	mov	r5, r0
2fff0f0a:	6844      	ldr	r4, [r0, #4]
2fff0f0c:	2620      	movs	r6, #32
2fff0f0e:	f004 041f 	and.w	r4, r4, #31
2fff0f12:	3401      	adds	r4, #1
2fff0f14:	0164      	lsls	r4, r4, #5
2fff0f16:	42a6      	cmp	r6, r4
2fff0f18:	d306      	bcc.n	2fff0f28 <gicv2_spis_configure_defaults+0x22>
2fff0f1a:	2620      	movs	r6, #32
2fff0f1c:	42a6      	cmp	r6, r4
2fff0f1e:	d30b      	bcc.n	2fff0f38 <gicv2_spis_configure_defaults+0x32>
2fff0f20:	2620      	movs	r6, #32
2fff0f22:	42a6      	cmp	r6, r4
2fff0f24:	d310      	bcc.n	2fff0f48 <gicv2_spis_configure_defaults+0x42>
2fff0f26:	bd70      	pop	{r4, r5, r6, pc}
2fff0f28:	4631      	mov	r1, r6
2fff0f2a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2fff0f2e:	4628      	mov	r0, r5
2fff0f30:	3620      	adds	r6, #32
2fff0f32:	f7ff ff7f 	bl	2fff0e34 <gicd_write_igroupr>
2fff0f36:	e7ee      	b.n	2fff0f16 <gicv2_spis_configure_defaults+0x10>
2fff0f38:	4631      	mov	r1, r6
2fff0f3a:	f04f 3280 	mov.w	r2, #2155905152	; 0x80808080
2fff0f3e:	4628      	mov	r0, r5
2fff0f40:	3604      	adds	r6, #4
2fff0f42:	f7ff ff88 	bl	2fff0e56 <gicd_write_ipriorityr>
2fff0f46:	e7e9      	b.n	2fff0f1c <gicv2_spis_configure_defaults+0x16>
2fff0f48:	4631      	mov	r1, r6
2fff0f4a:	2200      	movs	r2, #0
2fff0f4c:	4628      	mov	r0, r5
2fff0f4e:	3610      	adds	r6, #16
2fff0f50:	f7ff ff87 	bl	2fff0e62 <gicd_write_icfgr>
2fff0f54:	e7e5      	b.n	2fff0f22 <gicv2_spis_configure_defaults+0x1c>
	...

2fff0f58 <gicv2_secure_spis_configure_props>:
2fff0f58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff0f5c:	4605      	mov	r5, r0
2fff0f5e:	460c      	mov	r4, r1
2fff0f60:	4690      	mov	r8, r2
2fff0f62:	2a00      	cmp	r2, #0
2fff0f64:	d03e      	beq.n	2fff0fe4 <gicv2_secure_spis_configure_props+0x8c>
2fff0f66:	b919      	cbnz	r1, 2fff0f70 <gicv2_secure_spis_configure_props+0x18>
2fff0f68:	2183      	movs	r1, #131	; 0x83
2fff0f6a:	481f      	ldr	r0, [pc, #124]	; (2fff0fe8 <gicv2_secure_spis_configure_props+0x90>)
2fff0f6c:	f008 fcbe 	bl	2fff98ec <__assert>
2fff0f70:	2600      	movs	r6, #0
2fff0f72:	f500 6900 	add.w	r9, r0, #2048	; 0x800
2fff0f76:	f834 1026 	ldrh.w	r1, [r4, r6, lsl #2]
2fff0f7a:	00b7      	lsls	r7, r6, #2
2fff0f7c:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff0f80:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
2fff0f84:	291f      	cmp	r1, #31
2fff0f86:	d92a      	bls.n	2fff0fde <gicv2_secure_spis_configure_props+0x86>
2fff0f88:	f89a 3002 	ldrb.w	r3, [sl, #2]
2fff0f8c:	f013 0f0c 	tst.w	r3, #12
2fff0f90:	d001      	beq.n	2fff0f96 <gicv2_secure_spis_configure_props+0x3e>
2fff0f92:	218c      	movs	r1, #140	; 0x8c
2fff0f94:	e7e9      	b.n	2fff0f6a <gicv2_secure_spis_configure_props+0x12>
2fff0f96:	4628      	mov	r0, r5
2fff0f98:	f7ff ff79 	bl	2fff0e8e <gicd_clr_igroupr>
2fff0f9c:	59e2      	ldr	r2, [r4, r7]
2fff0f9e:	4628      	mov	r0, r5
2fff0fa0:	5be1      	ldrh	r1, [r4, r7]
2fff0fa2:	f3c2 2287 	ubfx	r2, r2, #10, #8
2fff0fa6:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff0faa:	f7ff ff8d 	bl	2fff0ec8 <gicd_set_ipriorityr>
2fff0fae:	5be3      	ldrh	r3, [r4, r7]
2fff0fb0:	4628      	mov	r0, r5
2fff0fb2:	f8d9 2000 	ldr.w	r2, [r9]
2fff0fb6:	f3c3 0309 	ubfx	r3, r3, #0, #10
2fff0fba:	b2d2      	uxtb	r2, r2
2fff0fbc:	f803 2009 	strb.w	r2, [r3, r9]
2fff0fc0:	f89a 2002 	ldrb.w	r2, [sl, #2]
2fff0fc4:	5be1      	ldrh	r1, [r4, r7]
2fff0fc6:	f3c2 1201 	ubfx	r2, r2, #4, #2
2fff0fca:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff0fce:	f7ff ff80 	bl	2fff0ed2 <gicd_set_icfgr>
2fff0fd2:	5be1      	ldrh	r1, [r4, r7]
2fff0fd4:	4628      	mov	r0, r5
2fff0fd6:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff0fda:	f7ff ff69 	bl	2fff0eb0 <gicd_set_isenabler>
2fff0fde:	3601      	adds	r6, #1
2fff0fe0:	45b0      	cmp	r8, r6
2fff0fe2:	d1c8      	bne.n	2fff0f76 <gicv2_secure_spis_configure_props+0x1e>
2fff0fe4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff0fe8:	2fffa94a 	.word	0x2fffa94a

2fff0fec <gicv2_secure_ppi_sgi_setup_props>:
2fff0fec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff0ff0:	4604      	mov	r4, r0
2fff0ff2:	460d      	mov	r5, r1
2fff0ff4:	4690      	mov	r8, r2
2fff0ff6:	b122      	cbz	r2, 2fff1002 <gicv2_secure_ppi_sgi_setup_props+0x16>
2fff0ff8:	b919      	cbnz	r1, 2fff1002 <gicv2_secure_ppi_sgi_setup_props+0x16>
2fff0ffa:	21ad      	movs	r1, #173	; 0xad
2fff0ffc:	4827      	ldr	r0, [pc, #156]	; (2fff109c <gicv2_secure_ppi_sgi_setup_props+0xb0>)
2fff0ffe:	f008 fc75 	bl	2fff98ec <__assert>
2fff1002:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2fff1006:	2100      	movs	r1, #0
2fff1008:	4620      	mov	r0, r4
2fff100a:	2600      	movs	r6, #0
2fff100c:	f7ff ff1d 	bl	2fff0e4a <gicd_write_icenabler>
2fff1010:	4631      	mov	r1, r6
2fff1012:	f04f 3280 	mov.w	r2, #2155905152	; 0x80808080
2fff1016:	4620      	mov	r0, r4
2fff1018:	3604      	adds	r6, #4
2fff101a:	f7ff ff1c 	bl	2fff0e56 <gicd_write_ipriorityr>
2fff101e:	2e20      	cmp	r6, #32
2fff1020:	d1f6      	bne.n	2fff1010 <gicv2_secure_ppi_sgi_setup_props+0x24>
2fff1022:	2700      	movs	r7, #0
2fff1024:	f04f 0901 	mov.w	r9, #1
2fff1028:	463e      	mov	r6, r7
2fff102a:	4546      	cmp	r6, r8
2fff102c:	d10b      	bne.n	2fff1046 <gicv2_secure_ppi_sgi_setup_props+0x5a>
2fff102e:	43fa      	mvns	r2, r7
2fff1030:	4620      	mov	r0, r4
2fff1032:	2100      	movs	r1, #0
2fff1034:	f7ff fefe 	bl	2fff0e34 <gicd_write_igroupr>
2fff1038:	463a      	mov	r2, r7
2fff103a:	4620      	mov	r0, r4
2fff103c:	2100      	movs	r1, #0
2fff103e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff1042:	f7ff befc 	b.w	2fff0e3e <gicd_write_isenabler>
2fff1046:	f835 1026 	ldrh.w	r1, [r5, r6, lsl #2]
2fff104a:	ea4f 0a86 	mov.w	sl, r6, lsl #2
2fff104e:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff1052:	eb05 0386 	add.w	r3, r5, r6, lsl #2
2fff1056:	291f      	cmp	r1, #31
2fff1058:	d81e      	bhi.n	2fff1098 <gicv2_secure_ppi_sgi_setup_props+0xac>
2fff105a:	789a      	ldrb	r2, [r3, #2]
2fff105c:	f012 0f0c 	tst.w	r2, #12
2fff1060:	d001      	beq.n	2fff1066 <gicv2_secure_ppi_sgi_setup_props+0x7a>
2fff1062:	21c1      	movs	r1, #193	; 0xc1
2fff1064:	e7ca      	b.n	2fff0ffc <gicv2_secure_ppi_sgi_setup_props+0x10>
2fff1066:	f501 737c 	add.w	r3, r1, #1008	; 0x3f0
2fff106a:	f3c3 0309 	ubfx	r3, r3, #0, #10
2fff106e:	2b0f      	cmp	r3, #15
2fff1070:	d804      	bhi.n	2fff107c <gicv2_secure_ppi_sgi_setup_props+0x90>
2fff1072:	f3c2 1201 	ubfx	r2, r2, #4, #2
2fff1076:	4620      	mov	r0, r4
2fff1078:	f7ff ff2b 	bl	2fff0ed2 <gicd_set_icfgr>
2fff107c:	f835 100a 	ldrh.w	r1, [r5, sl]
2fff1080:	4620      	mov	r0, r4
2fff1082:	f855 200a 	ldr.w	r2, [r5, sl]
2fff1086:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff108a:	f3c2 2287 	ubfx	r2, r2, #10, #8
2fff108e:	fa09 f301 	lsl.w	r3, r9, r1
2fff1092:	431f      	orrs	r7, r3
2fff1094:	f7ff ff18 	bl	2fff0ec8 <gicd_set_ipriorityr>
2fff1098:	3601      	adds	r6, #1
2fff109a:	e7c6      	b.n	2fff102a <gicv2_secure_ppi_sgi_setup_props+0x3e>
2fff109c:	2fffa94a 	.word	0x2fffa94a

2fff10a0 <gicv2_cpuif_enable>:
2fff10a0:	b508      	push	{r3, lr}
2fff10a2:	4b08      	ldr	r3, [pc, #32]	; (2fff10c4 <gicv2_cpuif_enable+0x24>)
2fff10a4:	681b      	ldr	r3, [r3, #0]
2fff10a6:	b91b      	cbnz	r3, 2fff10b0 <gicv2_cpuif_enable+0x10>
2fff10a8:	2126      	movs	r1, #38	; 0x26
2fff10aa:	4807      	ldr	r0, [pc, #28]	; (2fff10c8 <gicv2_cpuif_enable+0x28>)
2fff10ac:	f008 fc1e 	bl	2fff98ec <__assert>
2fff10b0:	685b      	ldr	r3, [r3, #4]
2fff10b2:	b90b      	cbnz	r3, 2fff10b8 <gicv2_cpuif_enable+0x18>
2fff10b4:	2127      	movs	r1, #39	; 0x27
2fff10b6:	e7f8      	b.n	2fff10aa <gicv2_cpuif_enable+0xa>
2fff10b8:	22ff      	movs	r2, #255	; 0xff
2fff10ba:	605a      	str	r2, [r3, #4]
2fff10bc:	f240 12e9 	movw	r2, #489	; 0x1e9
2fff10c0:	601a      	str	r2, [r3, #0]
2fff10c2:	bd08      	pop	{r3, pc}
2fff10c4:	2fffe8fc 	.word	0x2fffe8fc
2fff10c8:	2fffa96d 	.word	0x2fffa96d

2fff10cc <gicv2_pcpu_distif_init>:
2fff10cc:	b510      	push	{r4, lr}
2fff10ce:	4c0c      	ldr	r4, [pc, #48]	; (2fff1100 <gicv2_pcpu_distif_init+0x34>)
2fff10d0:	6823      	ldr	r3, [r4, #0]
2fff10d2:	b91b      	cbnz	r3, 2fff10dc <gicv2_pcpu_distif_init+0x10>
2fff10d4:	2150      	movs	r1, #80	; 0x50
2fff10d6:	480b      	ldr	r0, [pc, #44]	; (2fff1104 <gicv2_pcpu_distif_init+0x38>)
2fff10d8:	f008 fc08 	bl	2fff98ec <__assert>
2fff10dc:	6818      	ldr	r0, [r3, #0]
2fff10de:	b908      	cbnz	r0, 2fff10e4 <gicv2_pcpu_distif_init+0x18>
2fff10e0:	2151      	movs	r1, #81	; 0x51
2fff10e2:	e7f8      	b.n	2fff10d6 <gicv2_pcpu_distif_init+0xa>
2fff10e4:	695a      	ldr	r2, [r3, #20]
2fff10e6:	6919      	ldr	r1, [r3, #16]
2fff10e8:	f7ff ff80 	bl	2fff0fec <gicv2_secure_ppi_sgi_setup_props>
2fff10ec:	6823      	ldr	r3, [r4, #0]
2fff10ee:	681a      	ldr	r2, [r3, #0]
2fff10f0:	6813      	ldr	r3, [r2, #0]
2fff10f2:	07d9      	lsls	r1, r3, #31
2fff10f4:	bf5c      	itt	pl
2fff10f6:	f043 0301 	orrpl.w	r3, r3, #1
2fff10fa:	6013      	strpl	r3, [r2, #0]
2fff10fc:	bd10      	pop	{r4, pc}
2fff10fe:	bf00      	nop
2fff1100:	2fffe8fc 	.word	0x2fffe8fc
2fff1104:	2fffa96d 	.word	0x2fffa96d

2fff1108 <gicv2_distif_init>:
2fff1108:	b538      	push	{r3, r4, r5, lr}
2fff110a:	4d0e      	ldr	r5, [pc, #56]	; (2fff1144 <gicv2_distif_init+0x3c>)
2fff110c:	682b      	ldr	r3, [r5, #0]
2fff110e:	b91b      	cbnz	r3, 2fff1118 <gicv2_distif_init+0x10>
2fff1110:	2168      	movs	r1, #104	; 0x68
2fff1112:	480d      	ldr	r0, [pc, #52]	; (2fff1148 <gicv2_distif_init+0x40>)
2fff1114:	f008 fbea 	bl	2fff98ec <__assert>
2fff1118:	6818      	ldr	r0, [r3, #0]
2fff111a:	b908      	cbnz	r0, 2fff1120 <gicv2_distif_init+0x18>
2fff111c:	2169      	movs	r1, #105	; 0x69
2fff111e:	e7f8      	b.n	2fff1112 <gicv2_distif_init+0xa>
2fff1120:	6804      	ldr	r4, [r0, #0]
2fff1122:	f024 0303 	bic.w	r3, r4, #3
2fff1126:	f044 0401 	orr.w	r4, r4, #1
2fff112a:	6003      	str	r3, [r0, #0]
2fff112c:	f7ff feeb 	bl	2fff0f06 <gicv2_spis_configure_defaults>
2fff1130:	682b      	ldr	r3, [r5, #0]
2fff1132:	695a      	ldr	r2, [r3, #20]
2fff1134:	6919      	ldr	r1, [r3, #16]
2fff1136:	6818      	ldr	r0, [r3, #0]
2fff1138:	f7ff ff0e 	bl	2fff0f58 <gicv2_secure_spis_configure_props>
2fff113c:	682b      	ldr	r3, [r5, #0]
2fff113e:	681b      	ldr	r3, [r3, #0]
2fff1140:	601c      	str	r4, [r3, #0]
2fff1142:	bd38      	pop	{r3, r4, r5, pc}
2fff1144:	2fffe8fc 	.word	0x2fffe8fc
2fff1148:	2fffa96d 	.word	0x2fffa96d

2fff114c <gicv2_driver_init>:
2fff114c:	b510      	push	{r4, lr}
2fff114e:	b918      	cbnz	r0, 2fff1158 <gicv2_driver_init+0xc>
2fff1150:	2183      	movs	r1, #131	; 0x83
2fff1152:	4814      	ldr	r0, [pc, #80]	; (2fff11a4 <gicv2_driver_init+0x58>)
2fff1154:	f008 fbca 	bl	2fff98ec <__assert>
2fff1158:	6802      	ldr	r2, [r0, #0]
2fff115a:	b90a      	cbnz	r2, 2fff1160 <gicv2_driver_init+0x14>
2fff115c:	2184      	movs	r1, #132	; 0x84
2fff115e:	e7f8      	b.n	2fff1152 <gicv2_driver_init+0x6>
2fff1160:	6841      	ldr	r1, [r0, #4]
2fff1162:	b909      	cbnz	r1, 2fff1168 <gicv2_driver_init+0x1c>
2fff1164:	2185      	movs	r1, #133	; 0x85
2fff1166:	e7f4      	b.n	2fff1152 <gicv2_driver_init+0x6>
2fff1168:	6941      	ldr	r1, [r0, #20]
2fff116a:	b119      	cbz	r1, 2fff1174 <gicv2_driver_init+0x28>
2fff116c:	6901      	ldr	r1, [r0, #16]
2fff116e:	b909      	cbnz	r1, 2fff1174 <gicv2_driver_init+0x28>
2fff1170:	2187      	movs	r1, #135	; 0x87
2fff1172:	e7ee      	b.n	2fff1152 <gicv2_driver_init+0x6>
2fff1174:	f8d2 2fe8 	ldr.w	r2, [r2, #4072]	; 0xfe8
2fff1178:	f3c2 1203 	ubfx	r2, r2, #4, #4
2fff117c:	3a01      	subs	r2, #1
2fff117e:	2a01      	cmp	r2, #1
2fff1180:	d901      	bls.n	2fff1186 <gicv2_driver_init+0x3a>
2fff1182:	219a      	movs	r1, #154	; 0x9a
2fff1184:	e7e5      	b.n	2fff1152 <gicv2_driver_init+0x6>
2fff1186:	4c08      	ldr	r4, [pc, #32]	; (2fff11a8 <gicv2_driver_init+0x5c>)
2fff1188:	2104      	movs	r1, #4
2fff118a:	6020      	str	r0, [r4, #0]
2fff118c:	4620      	mov	r0, r4
2fff118e:	f007 ec10 	blx	2fff89b0 <flush_dcache_range>
2fff1192:	6820      	ldr	r0, [r4, #0]
2fff1194:	2118      	movs	r1, #24
2fff1196:	f007 ec0c 	blx	2fff89b0 <flush_dcache_range>
2fff119a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff119e:	4803      	ldr	r0, [pc, #12]	; (2fff11ac <gicv2_driver_init+0x60>)
2fff11a0:	f001 bb60 	b.w	2fff2864 <tf_log>
2fff11a4:	2fffa96d 	.word	0x2fffa96d
2fff11a8:	2fffe8fc 	.word	0x2fffe8fc
2fff11ac:	2fffa98d 	.word	0x2fffa98d

2fff11b0 <gicv2_get_pending_interrupt_id>:
2fff11b0:	b508      	push	{r3, lr}
2fff11b2:	4b0b      	ldr	r3, [pc, #44]	; (2fff11e0 <gicv2_get_pending_interrupt_id+0x30>)
2fff11b4:	681b      	ldr	r3, [r3, #0]
2fff11b6:	b91b      	cbnz	r3, 2fff11c0 <gicv2_get_pending_interrupt_id+0x10>
2fff11b8:	21d5      	movs	r1, #213	; 0xd5
2fff11ba:	480a      	ldr	r0, [pc, #40]	; (2fff11e4 <gicv2_get_pending_interrupt_id+0x34>)
2fff11bc:	f008 fb96 	bl	2fff98ec <__assert>
2fff11c0:	685b      	ldr	r3, [r3, #4]
2fff11c2:	b90b      	cbnz	r3, 2fff11c8 <gicv2_get_pending_interrupt_id+0x18>
2fff11c4:	21d6      	movs	r1, #214	; 0xd6
2fff11c6:	e7f8      	b.n	2fff11ba <gicv2_get_pending_interrupt_id+0xa>
2fff11c8:	6998      	ldr	r0, [r3, #24]
2fff11ca:	f240 32fe 	movw	r2, #1022	; 0x3fe
2fff11ce:	f3c0 0009 	ubfx	r0, r0, #0, #10
2fff11d2:	4290      	cmp	r0, r2
2fff11d4:	bf04      	itt	eq
2fff11d6:	6a98      	ldreq	r0, [r3, #40]	; 0x28
2fff11d8:	f3c0 0009 	ubfxeq	r0, r0, #0, #10
2fff11dc:	bd08      	pop	{r3, pc}
2fff11de:	bf00      	nop
2fff11e0:	2fffe8fc 	.word	0x2fffe8fc
2fff11e4:	2fffa96d 	.word	0x2fffa96d

2fff11e8 <gicv2_acknowledge_interrupt>:
2fff11e8:	b508      	push	{r3, lr}
2fff11ea:	4b06      	ldr	r3, [pc, #24]	; (2fff1204 <gicv2_acknowledge_interrupt+0x1c>)
2fff11ec:	681b      	ldr	r3, [r3, #0]
2fff11ee:	b91b      	cbnz	r3, 2fff11f8 <gicv2_acknowledge_interrupt+0x10>
2fff11f0:	21eb      	movs	r1, #235	; 0xeb
2fff11f2:	4805      	ldr	r0, [pc, #20]	; (2fff1208 <gicv2_acknowledge_interrupt+0x20>)
2fff11f4:	f008 fb7a 	bl	2fff98ec <__assert>
2fff11f8:	685b      	ldr	r3, [r3, #4]
2fff11fa:	b90b      	cbnz	r3, 2fff1200 <gicv2_acknowledge_interrupt+0x18>
2fff11fc:	21ec      	movs	r1, #236	; 0xec
2fff11fe:	e7f8      	b.n	2fff11f2 <gicv2_acknowledge_interrupt+0xa>
2fff1200:	68d8      	ldr	r0, [r3, #12]
2fff1202:	bd08      	pop	{r3, pc}
2fff1204:	2fffe8fc 	.word	0x2fffe8fc
2fff1208:	2fffa96d 	.word	0x2fffa96d

2fff120c <gicv2_end_of_interrupt>:
2fff120c:	b508      	push	{r3, lr}
2fff120e:	4b06      	ldr	r3, [pc, #24]	; (2fff1228 <gicv2_end_of_interrupt+0x1c>)
2fff1210:	681b      	ldr	r3, [r3, #0]
2fff1212:	b91b      	cbnz	r3, 2fff121c <gicv2_end_of_interrupt+0x10>
2fff1214:	21f7      	movs	r1, #247	; 0xf7
2fff1216:	4805      	ldr	r0, [pc, #20]	; (2fff122c <gicv2_end_of_interrupt+0x20>)
2fff1218:	f008 fb68 	bl	2fff98ec <__assert>
2fff121c:	685b      	ldr	r3, [r3, #4]
2fff121e:	b90b      	cbnz	r3, 2fff1224 <gicv2_end_of_interrupt+0x18>
2fff1220:	21f8      	movs	r1, #248	; 0xf8
2fff1222:	e7f8      	b.n	2fff1216 <gicv2_end_of_interrupt+0xa>
2fff1224:	6118      	str	r0, [r3, #16]
2fff1226:	bd08      	pop	{r3, pc}
2fff1228:	2fffe8fc 	.word	0x2fffe8fc
2fff122c:	2fffa96d 	.word	0x2fffa96d

2fff1230 <gicv2_set_pe_target_mask>:
2fff1230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff1232:	4604      	mov	r4, r0
2fff1234:	4e16      	ldr	r6, [pc, #88]	; (2fff1290 <gicv2_set_pe_target_mask+0x60>)
2fff1236:	6833      	ldr	r3, [r6, #0]
2fff1238:	b923      	cbnz	r3, 2fff1244 <gicv2_set_pe_target_mask+0x14>
2fff123a:	f240 111f 	movw	r1, #287	; 0x11f
2fff123e:	4815      	ldr	r0, [pc, #84]	; (2fff1294 <gicv2_set_pe_target_mask+0x64>)
2fff1240:	f008 fb54 	bl	2fff98ec <__assert>
2fff1244:	6818      	ldr	r0, [r3, #0]
2fff1246:	b910      	cbnz	r0, 2fff124e <gicv2_set_pe_target_mask+0x1e>
2fff1248:	f44f 7190 	mov.w	r1, #288	; 0x120
2fff124c:	e7f7      	b.n	2fff123e <gicv2_set_pe_target_mask+0xe>
2fff124e:	689d      	ldr	r5, [r3, #8]
2fff1250:	b915      	cbnz	r5, 2fff1258 <gicv2_set_pe_target_mask+0x28>
2fff1252:	f240 1121 	movw	r1, #289	; 0x121
2fff1256:	e7f2      	b.n	2fff123e <gicv2_set_pe_target_mask+0xe>
2fff1258:	2c07      	cmp	r4, #7
2fff125a:	d902      	bls.n	2fff1262 <gicv2_set_pe_target_mask+0x32>
2fff125c:	f44f 7191 	mov.w	r1, #290	; 0x122
2fff1260:	e7ed      	b.n	2fff123e <gicv2_set_pe_target_mask+0xe>
2fff1262:	68db      	ldr	r3, [r3, #12]
2fff1264:	42a3      	cmp	r3, r4
2fff1266:	d802      	bhi.n	2fff126e <gicv2_set_pe_target_mask+0x3e>
2fff1268:	f240 1123 	movw	r1, #291	; 0x123
2fff126c:	e7e7      	b.n	2fff123e <gicv2_set_pe_target_mask+0xe>
2fff126e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
2fff1272:	00a7      	lsls	r7, r4, #2
2fff1274:	b95b      	cbnz	r3, 2fff128e <gicv2_set_pe_target_mask+0x5e>
2fff1276:	f7ff fe42 	bl	2fff0efe <gicv2_get_cpuif_id>
2fff127a:	6833      	ldr	r3, [r6, #0]
2fff127c:	2104      	movs	r1, #4
2fff127e:	f845 0024 	str.w	r0, [r5, r4, lsl #2]
2fff1282:	6898      	ldr	r0, [r3, #8]
2fff1284:	4438      	add	r0, r7
2fff1286:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff128a:	f00b b99d 	b.w	2fffc5c8 <__flush_dcache_range_from_thumb>
2fff128e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff1290:	2fffe8fc 	.word	0x2fffe8fc
2fff1294:	2fffa96d 	.word	0x2fffa96d

2fff1298 <gicv2_enable_interrupt>:
2fff1298:	b508      	push	{r3, lr}
2fff129a:	4601      	mov	r1, r0
2fff129c:	4b0d      	ldr	r3, [pc, #52]	; (2fff12d4 <gicv2_enable_interrupt+0x3c>)
2fff129e:	681a      	ldr	r2, [r3, #0]
2fff12a0:	b922      	cbnz	r2, 2fff12ac <gicv2_enable_interrupt+0x14>
2fff12a2:	f240 1151 	movw	r1, #337	; 0x151
2fff12a6:	480c      	ldr	r0, [pc, #48]	; (2fff12d8 <gicv2_enable_interrupt+0x40>)
2fff12a8:	f008 fb20 	bl	2fff98ec <__assert>
2fff12ac:	6812      	ldr	r2, [r2, #0]
2fff12ae:	b912      	cbnz	r2, 2fff12b6 <gicv2_enable_interrupt+0x1e>
2fff12b0:	f44f 71a9 	mov.w	r1, #338	; 0x152
2fff12b4:	e7f7      	b.n	2fff12a6 <gicv2_enable_interrupt+0xe>
2fff12b6:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff12ba:	d302      	bcc.n	2fff12c2 <gicv2_enable_interrupt+0x2a>
2fff12bc:	f240 1153 	movw	r1, #339	; 0x153
2fff12c0:	e7f1      	b.n	2fff12a6 <gicv2_enable_interrupt+0xe>
2fff12c2:	f3bf 8f4a 	dsb	ishst
2fff12c6:	681b      	ldr	r3, [r3, #0]
2fff12c8:	6818      	ldr	r0, [r3, #0]
2fff12ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff12ce:	f7ff bdef 	b.w	2fff0eb0 <gicd_set_isenabler>
2fff12d2:	bf00      	nop
2fff12d4:	2fffe8fc 	.word	0x2fffe8fc
2fff12d8:	2fffa96d 	.word	0x2fffa96d

2fff12dc <gicv2_disable_interrupt>:
2fff12dc:	b508      	push	{r3, lr}
2fff12de:	4601      	mov	r1, r0
2fff12e0:	4b0b      	ldr	r3, [pc, #44]	; (2fff1310 <gicv2_disable_interrupt+0x34>)
2fff12e2:	681b      	ldr	r3, [r3, #0]
2fff12e4:	b923      	cbnz	r3, 2fff12f0 <gicv2_disable_interrupt+0x14>
2fff12e6:	f44f 71b1 	mov.w	r1, #354	; 0x162
2fff12ea:	480a      	ldr	r0, [pc, #40]	; (2fff1314 <gicv2_disable_interrupt+0x38>)
2fff12ec:	f008 fafe 	bl	2fff98ec <__assert>
2fff12f0:	6818      	ldr	r0, [r3, #0]
2fff12f2:	b910      	cbnz	r0, 2fff12fa <gicv2_disable_interrupt+0x1e>
2fff12f4:	f240 1163 	movw	r1, #355	; 0x163
2fff12f8:	e7f7      	b.n	2fff12ea <gicv2_disable_interrupt+0xe>
2fff12fa:	f5b1 7f7f 	cmp.w	r1, #1020	; 0x3fc
2fff12fe:	d302      	bcc.n	2fff1306 <gicv2_disable_interrupt+0x2a>
2fff1300:	f44f 71b2 	mov.w	r1, #356	; 0x164
2fff1304:	e7f1      	b.n	2fff12ea <gicv2_disable_interrupt+0xe>
2fff1306:	f7ff fdd9 	bl	2fff0ebc <gicd_set_icenabler>
2fff130a:	f3bf 8f4a 	dsb	ishst
2fff130e:	bd08      	pop	{r3, pc}
2fff1310:	2fffe8fc 	.word	0x2fffe8fc
2fff1314:	2fffa96d 	.word	0x2fffa96d

2fff1318 <gicv2_set_interrupt_priority>:
2fff1318:	460a      	mov	r2, r1
2fff131a:	490d      	ldr	r1, [pc, #52]	; (2fff1350 <gicv2_set_interrupt_priority+0x38>)
2fff131c:	b508      	push	{r3, lr}
2fff131e:	4603      	mov	r3, r0
2fff1320:	6809      	ldr	r1, [r1, #0]
2fff1322:	b921      	cbnz	r1, 2fff132e <gicv2_set_interrupt_priority+0x16>
2fff1324:	f44f 71ba 	mov.w	r1, #372	; 0x174
2fff1328:	480a      	ldr	r0, [pc, #40]	; (2fff1354 <gicv2_set_interrupt_priority+0x3c>)
2fff132a:	f008 fadf 	bl	2fff98ec <__assert>
2fff132e:	6808      	ldr	r0, [r1, #0]
2fff1330:	b910      	cbnz	r0, 2fff1338 <gicv2_set_interrupt_priority+0x20>
2fff1332:	f240 1175 	movw	r1, #373	; 0x175
2fff1336:	e7f7      	b.n	2fff1328 <gicv2_set_interrupt_priority+0x10>
2fff1338:	f5b3 7f7f 	cmp.w	r3, #1020	; 0x3fc
2fff133c:	d302      	bcc.n	2fff1344 <gicv2_set_interrupt_priority+0x2c>
2fff133e:	f44f 71bb 	mov.w	r1, #374	; 0x176
2fff1342:	e7f1      	b.n	2fff1328 <gicv2_set_interrupt_priority+0x10>
2fff1344:	4619      	mov	r1, r3
2fff1346:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff134a:	f7ff bdbd 	b.w	2fff0ec8 <gicd_set_ipriorityr>
2fff134e:	bf00      	nop
2fff1350:	2fffe8fc 	.word	0x2fffe8fc
2fff1354:	2fffa96d 	.word	0x2fffa96d

2fff1358 <gicv2_set_interrupt_type>:
2fff1358:	b570      	push	{r4, r5, r6, lr}
2fff135a:	4604      	mov	r4, r0
2fff135c:	4e16      	ldr	r6, [pc, #88]	; (2fff13b8 <gicv2_set_interrupt_type+0x60>)
2fff135e:	460d      	mov	r5, r1
2fff1360:	6833      	ldr	r3, [r6, #0]
2fff1362:	b923      	cbnz	r3, 2fff136e <gicv2_set_interrupt_type+0x16>
2fff1364:	f240 1181 	movw	r1, #385	; 0x181
2fff1368:	4814      	ldr	r0, [pc, #80]	; (2fff13bc <gicv2_set_interrupt_type+0x64>)
2fff136a:	f008 fabf 	bl	2fff98ec <__assert>
2fff136e:	681b      	ldr	r3, [r3, #0]
2fff1370:	b913      	cbnz	r3, 2fff1378 <gicv2_set_interrupt_type+0x20>
2fff1372:	f44f 71c1 	mov.w	r1, #386	; 0x182
2fff1376:	e7f7      	b.n	2fff1368 <gicv2_set_interrupt_type+0x10>
2fff1378:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff137c:	d302      	bcc.n	2fff1384 <gicv2_set_interrupt_type+0x2c>
2fff137e:	f240 1183 	movw	r1, #387	; 0x183
2fff1382:	e7f1      	b.n	2fff1368 <gicv2_set_interrupt_type+0x10>
2fff1384:	480e      	ldr	r0, [pc, #56]	; (2fff13c0 <gicv2_set_interrupt_type+0x68>)
2fff1386:	f007 e9f2 	blx	2fff876c <spin_lock>
2fff138a:	b15d      	cbz	r5, 2fff13a4 <gicv2_set_interrupt_type+0x4c>
2fff138c:	2d01      	cmp	r5, #1
2fff138e:	d10f      	bne.n	2fff13b0 <gicv2_set_interrupt_type+0x58>
2fff1390:	6833      	ldr	r3, [r6, #0]
2fff1392:	4621      	mov	r1, r4
2fff1394:	6818      	ldr	r0, [r3, #0]
2fff1396:	f7ff fd6a 	bl	2fff0e6e <gicd_set_igroupr>
2fff139a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff139e:	4808      	ldr	r0, [pc, #32]	; (2fff13c0 <gicv2_set_interrupt_type+0x68>)
2fff13a0:	f00b b90a 	b.w	2fffc5b8 <__spin_unlock_from_thumb>
2fff13a4:	6833      	ldr	r3, [r6, #0]
2fff13a6:	4621      	mov	r1, r4
2fff13a8:	6818      	ldr	r0, [r3, #0]
2fff13aa:	f7ff fd70 	bl	2fff0e8e <gicd_clr_igroupr>
2fff13ae:	e7f4      	b.n	2fff139a <gicv2_set_interrupt_type+0x42>
2fff13b0:	f240 118f 	movw	r1, #399	; 0x18f
2fff13b4:	e7d8      	b.n	2fff1368 <gicv2_set_interrupt_type+0x10>
2fff13b6:	bf00      	nop
2fff13b8:	2fffe8fc 	.word	0x2fffe8fc
2fff13bc:	2fffa96d 	.word	0x2fffa96d
2fff13c0:	2fffe900 	.word	0x2fffe900

2fff13c4 <gicv2_raise_sgi>:
2fff13c4:	4a18      	ldr	r2, [pc, #96]	; (2fff1428 <gicv2_raise_sgi+0x64>)
2fff13c6:	b510      	push	{r4, lr}
2fff13c8:	6813      	ldr	r3, [r2, #0]
2fff13ca:	b923      	cbnz	r3, 2fff13d6 <gicv2_raise_sgi+0x12>
2fff13cc:	f240 119f 	movw	r1, #415	; 0x19f
2fff13d0:	4816      	ldr	r0, [pc, #88]	; (2fff142c <gicv2_raise_sgi+0x68>)
2fff13d2:	f008 fa8b 	bl	2fff98ec <__assert>
2fff13d6:	2907      	cmp	r1, #7
2fff13d8:	d902      	bls.n	2fff13e0 <gicv2_raise_sgi+0x1c>
2fff13da:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
2fff13de:	e7f7      	b.n	2fff13d0 <gicv2_raise_sgi+0xc>
2fff13e0:	681c      	ldr	r4, [r3, #0]
2fff13e2:	b914      	cbnz	r4, 2fff13ea <gicv2_raise_sgi+0x26>
2fff13e4:	f240 11a1 	movw	r1, #417	; 0x1a1
2fff13e8:	e7f2      	b.n	2fff13d0 <gicv2_raise_sgi+0xc>
2fff13ea:	689c      	ldr	r4, [r3, #8]
2fff13ec:	b914      	cbnz	r4, 2fff13f4 <gicv2_raise_sgi+0x30>
2fff13ee:	f240 11a7 	movw	r1, #423	; 0x1a7
2fff13f2:	e7ed      	b.n	2fff13d0 <gicv2_raise_sgi+0xc>
2fff13f4:	68db      	ldr	r3, [r3, #12]
2fff13f6:	4299      	cmp	r1, r3
2fff13f8:	d302      	bcc.n	2fff1400 <gicv2_raise_sgi+0x3c>
2fff13fa:	f44f 71d4 	mov.w	r1, #424	; 0x1a8
2fff13fe:	e7e7      	b.n	2fff13d0 <gicv2_raise_sgi+0xc>
2fff1400:	f854 3021 	ldr.w	r3, [r4, r1, lsl #2]
2fff1404:	b913      	cbnz	r3, 2fff140c <gicv2_raise_sgi+0x48>
2fff1406:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
2fff140a:	e7e1      	b.n	2fff13d0 <gicv2_raise_sgi+0xc>
2fff140c:	041b      	lsls	r3, r3, #16
2fff140e:	f000 000f 	and.w	r0, r0, #15
2fff1412:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
2fff1416:	4303      	orrs	r3, r0
2fff1418:	f3bf 8f4a 	dsb	ishst
2fff141c:	6812      	ldr	r2, [r2, #0]
2fff141e:	6812      	ldr	r2, [r2, #0]
2fff1420:	f8c2 3f00 	str.w	r3, [r2, #3840]	; 0xf00
2fff1424:	bd10      	pop	{r4, pc}
2fff1426:	bf00      	nop
2fff1428:	2fffe8fc 	.word	0x2fffe8fc
2fff142c:	2fffa96d 	.word	0x2fffa96d

2fff1430 <gicv2_set_spi_routing>:
2fff1430:	4b18      	ldr	r3, [pc, #96]	; (2fff1494 <gicv2_set_spi_routing+0x64>)
2fff1432:	b510      	push	{r4, lr}
2fff1434:	681a      	ldr	r2, [r3, #0]
2fff1436:	b922      	cbnz	r2, 2fff1442 <gicv2_set_spi_routing+0x12>
2fff1438:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
2fff143c:	4816      	ldr	r0, [pc, #88]	; (2fff1498 <gicv2_set_spi_routing+0x68>)
2fff143e:	f008 fa55 	bl	2fff98ec <__assert>
2fff1442:	6813      	ldr	r3, [r2, #0]
2fff1444:	b913      	cbnz	r3, 2fff144c <gicv2_set_spi_routing+0x1c>
2fff1446:	f240 11c3 	movw	r1, #451	; 0x1c3
2fff144a:	e7f7      	b.n	2fff143c <gicv2_set_spi_routing+0xc>
2fff144c:	f1a0 0420 	sub.w	r4, r0, #32
2fff1450:	f5b4 7f77 	cmp.w	r4, #988	; 0x3dc
2fff1454:	d302      	bcc.n	2fff145c <gicv2_set_spi_routing+0x2c>
2fff1456:	f240 11c5 	movw	r1, #453	; 0x1c5
2fff145a:	e7ef      	b.n	2fff143c <gicv2_set_spi_routing+0xc>
2fff145c:	6894      	ldr	r4, [r2, #8]
2fff145e:	b914      	cbnz	r4, 2fff1466 <gicv2_set_spi_routing+0x36>
2fff1460:	f240 11cb 	movw	r1, #459	; 0x1cb
2fff1464:	e7ea      	b.n	2fff143c <gicv2_set_spi_routing+0xc>
2fff1466:	2907      	cmp	r1, #7
2fff1468:	d902      	bls.n	2fff1470 <gicv2_set_spi_routing+0x40>
2fff146a:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
2fff146e:	e7e5      	b.n	2fff143c <gicv2_set_spi_routing+0xc>
2fff1470:	68d2      	ldr	r2, [r2, #12]
2fff1472:	4291      	cmp	r1, r2
2fff1474:	d302      	bcc.n	2fff147c <gicv2_set_spi_routing+0x4c>
2fff1476:	f240 11cd 	movw	r1, #461	; 0x1cd
2fff147a:	e7df      	b.n	2fff143c <gicv2_set_spi_routing+0xc>
2fff147c:	f854 2021 	ldr.w	r2, [r4, r1, lsl #2]
2fff1480:	b912      	cbnz	r2, 2fff1488 <gicv2_set_spi_routing+0x58>
2fff1482:	f240 11d5 	movw	r1, #469	; 0x1d5
2fff1486:	e7d9      	b.n	2fff143c <gicv2_set_spi_routing+0xc>
2fff1488:	f503 6300 	add.w	r3, r3, #2048	; 0x800
2fff148c:	b2d2      	uxtb	r2, r2
2fff148e:	541a      	strb	r2, [r3, r0]
2fff1490:	bd10      	pop	{r4, pc}
2fff1492:	bf00      	nop
2fff1494:	2fffe8fc 	.word	0x2fffe8fc
2fff1498:	2fffa96d 	.word	0x2fffa96d

2fff149c <gicv2_set_pmr>:
2fff149c:	4a0b      	ldr	r2, [pc, #44]	; (2fff14cc <gicv2_set_pmr+0x30>)
2fff149e:	b508      	push	{r3, lr}
2fff14a0:	4603      	mov	r3, r0
2fff14a2:	6811      	ldr	r1, [r2, #0]
2fff14a4:	b921      	cbnz	r1, 2fff14b0 <gicv2_set_pmr+0x14>
2fff14a6:	f240 2109 	movw	r1, #521	; 0x209
2fff14aa:	4809      	ldr	r0, [pc, #36]	; (2fff14d0 <gicv2_set_pmr+0x34>)
2fff14ac:	f008 fa1e 	bl	2fff98ec <__assert>
2fff14b0:	6849      	ldr	r1, [r1, #4]
2fff14b2:	b911      	cbnz	r1, 2fff14ba <gicv2_set_pmr+0x1e>
2fff14b4:	f240 210a 	movw	r1, #522	; 0x20a
2fff14b8:	e7f7      	b.n	2fff14aa <gicv2_set_pmr+0xe>
2fff14ba:	6848      	ldr	r0, [r1, #4]
2fff14bc:	f3bf 8f5a 	dmb	ishst
2fff14c0:	6812      	ldr	r2, [r2, #0]
2fff14c2:	6852      	ldr	r2, [r2, #4]
2fff14c4:	6053      	str	r3, [r2, #4]
2fff14c6:	f3bf 8f4a 	dsb	ishst
2fff14ca:	bd08      	pop	{r3, pc}
2fff14cc:	2fffe8fc 	.word	0x2fffe8fc
2fff14d0:	2fffa96d 	.word	0x2fffa96d

2fff14d4 <gicv2_interrupt_set_cfg>:
2fff14d4:	4b03      	ldr	r3, [pc, #12]	; (2fff14e4 <gicv2_interrupt_set_cfg+0x10>)
2fff14d6:	460a      	mov	r2, r1
2fff14d8:	4601      	mov	r1, r0
2fff14da:	681b      	ldr	r3, [r3, #0]
2fff14dc:	6818      	ldr	r0, [r3, #0]
2fff14de:	f7ff bcf8 	b.w	2fff0ed2 <gicd_set_icfgr>
2fff14e2:	bf00      	nop
2fff14e4:	2fffe8fc 	.word	0x2fffe8fc

2fff14e8 <plat_ic_get_pending_interrupt_id>:
2fff14e8:	b508      	push	{r3, lr}
2fff14ea:	f7ff fe61 	bl	2fff11b0 <gicv2_get_pending_interrupt_id>
2fff14ee:	f240 33ff 	movw	r3, #1023	; 0x3ff
2fff14f2:	4298      	cmp	r0, r3
2fff14f4:	bf08      	it	eq
2fff14f6:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2fff14fa:	bd08      	pop	{r3, pc}

2fff14fc <plat_ic_acknowledge_interrupt>:
2fff14fc:	f7ff be74 	b.w	2fff11e8 <gicv2_acknowledge_interrupt>

2fff1500 <plat_ic_end_of_interrupt>:
2fff1500:	f7ff be84 	b.w	2fff120c <gicv2_end_of_interrupt>

2fff1504 <plat_ic_disable_interrupt>:
2fff1504:	f7ff beea 	b.w	2fff12dc <gicv2_disable_interrupt>

2fff1508 <plat_ic_set_interrupt_priority>:
2fff1508:	f7ff bf06 	b.w	2fff1318 <gicv2_set_interrupt_priority>

2fff150c <plat_ic_set_priority_mask>:
2fff150c:	f7ff bfc6 	b.w	2fff149c <gicv2_set_pmr>

2fff1510 <fdt32_to_cpu>:
2fff1510:	ba00      	rev	r0, r0
2fff1512:	4770      	bx	lr

2fff1514 <enable_gic_interrupt>:
2fff1514:	b538      	push	{r3, r4, r5, lr}
2fff1516:	4603      	mov	r3, r0
2fff1518:	6800      	ldr	r0, [r0, #0]
2fff151a:	f7ff fff9 	bl	2fff1510 <fdt32_to_cpu>
2fff151e:	b340      	cbz	r0, 2fff1572 <enable_gic_interrupt+0x5e>
2fff1520:	2801      	cmp	r0, #1
2fff1522:	bf14      	ite	ne
2fff1524:	2400      	movne	r4, #0
2fff1526:	2410      	moveq	r4, #16
2fff1528:	6858      	ldr	r0, [r3, #4]
2fff152a:	f7ff fff1 	bl	2fff1510 <fdt32_to_cpu>
2fff152e:	4404      	add	r4, r0
2fff1530:	6898      	ldr	r0, [r3, #8]
2fff1532:	f1a4 0320 	sub.w	r3, r4, #32
2fff1536:	f7ff ffeb 	bl	2fff1510 <fdt32_to_cpu>
2fff153a:	2803      	cmp	r0, #3
2fff153c:	bf94      	ite	ls
2fff153e:	2502      	movls	r5, #2
2fff1540:	2500      	movhi	r5, #0
2fff1542:	f5b3 7f77 	cmp.w	r3, #988	; 0x3dc
2fff1546:	d212      	bcs.n	2fff156e <enable_gic_interrupt+0x5a>
2fff1548:	2100      	movs	r1, #0
2fff154a:	4620      	mov	r0, r4
2fff154c:	f7ff ff04 	bl	2fff1358 <gicv2_set_interrupt_type>
2fff1550:	2110      	movs	r1, #16
2fff1552:	4620      	mov	r0, r4
2fff1554:	f7ff fee0 	bl	2fff1318 <gicv2_set_interrupt_priority>
2fff1558:	2100      	movs	r1, #0
2fff155a:	4620      	mov	r0, r4
2fff155c:	f7ff ff68 	bl	2fff1430 <gicv2_set_spi_routing>
2fff1560:	4620      	mov	r0, r4
2fff1562:	4629      	mov	r1, r5
2fff1564:	f7ff ffb6 	bl	2fff14d4 <gicv2_interrupt_set_cfg>
2fff1568:	4620      	mov	r0, r4
2fff156a:	f7ff fe95 	bl	2fff1298 <gicv2_enable_interrupt>
2fff156e:	4620      	mov	r0, r4
2fff1570:	bd38      	pop	{r3, r4, r5, pc}
2fff1572:	2420      	movs	r4, #32
2fff1574:	e7d8      	b.n	2fff1528 <enable_gic_interrupt+0x14>

2fff1576 <stm32_gic_pcpu_init>:
2fff1576:	b508      	push	{r3, lr}
2fff1578:	f7ff fda8 	bl	2fff10cc <gicv2_pcpu_distif_init>
2fff157c:	f007 ed00 	blx	2fff8f80 <plat_my_core_pos>
2fff1580:	f7ff fe56 	bl	2fff1230 <gicv2_set_pe_target_mask>
2fff1584:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff1588:	f7ff bd8a 	b.w	2fff10a0 <gicv2_cpuif_enable>

2fff158c <stm32_gic_init>:
2fff158c:	b570      	push	{r4, r5, r6, lr}
2fff158e:	b086      	sub	sp, #24
2fff1590:	a801      	add	r0, sp, #4
2fff1592:	f006 fc39 	bl	2fff7e08 <fdt_get_address>
2fff1596:	b918      	cbnz	r0, 2fff15a0 <stm32_gic_init+0x14>
2fff1598:	f001 fa08 	bl	2fff29ac <console_flush>
2fff159c:	f007 e96c 	blx	2fff8878 <do_panic>
2fff15a0:	4a19      	ldr	r2, [pc, #100]	; (2fff1608 <stm32_gic_init+0x7c>)
2fff15a2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff15a6:	a802      	add	r0, sp, #8
2fff15a8:	f006 fd18 	bl	2fff7fdc <dt_get_node>
2fff15ac:	1e04      	subs	r4, r0, #0
2fff15ae:	dbf3      	blt.n	2fff1598 <stm32_gic_init+0xc>
2fff15b0:	9b02      	ldr	r3, [sp, #8]
2fff15b2:	4621      	mov	r1, r4
2fff15b4:	4d15      	ldr	r5, [pc, #84]	; (2fff160c <stm32_gic_init+0x80>)
2fff15b6:	4a16      	ldr	r2, [pc, #88]	; (2fff1610 <stm32_gic_init+0x84>)
2fff15b8:	602b      	str	r3, [r5, #0]
2fff15ba:	2300      	movs	r3, #0
2fff15bc:	9801      	ldr	r0, [sp, #4]
2fff15be:	f007 fff7 	bl	2fff95b0 <fdt_getprop>
2fff15c2:	2800      	cmp	r0, #0
2fff15c4:	d0e8      	beq.n	2fff1598 <stm32_gic_init+0xc>
2fff15c6:	6880      	ldr	r0, [r0, #8]
2fff15c8:	2300      	movs	r3, #0
2fff15ca:	4a12      	ldr	r2, [pc, #72]	; (2fff1614 <stm32_gic_init+0x88>)
2fff15cc:	f7ff ffa0 	bl	2fff1510 <fdt32_to_cpu>
2fff15d0:	6068      	str	r0, [r5, #4]
2fff15d2:	4621      	mov	r1, r4
2fff15d4:	9801      	ldr	r0, [sp, #4]
2fff15d6:	f007 ffeb 	bl	2fff95b0 <fdt_getprop>
2fff15da:	2800      	cmp	r0, #0
2fff15dc:	d0dc      	beq.n	2fff1598 <stm32_gic_init+0xc>
2fff15de:	6800      	ldr	r0, [r0, #0]
2fff15e0:	4621      	mov	r1, r4
2fff15e2:	4e0d      	ldr	r6, [pc, #52]	; (2fff1618 <stm32_gic_init+0x8c>)
2fff15e4:	f7ff ff94 	bl	2fff1510 <fdt32_to_cpu>
2fff15e8:	6030      	str	r0, [r6, #0]
2fff15ea:	9801      	ldr	r0, [sp, #4]
2fff15ec:	f007 fff2 	bl	2fff95d4 <fdt_get_phandle>
2fff15f0:	6070      	str	r0, [r6, #4]
2fff15f2:	2800      	cmp	r0, #0
2fff15f4:	d0d0      	beq.n	2fff1598 <stm32_gic_init+0xc>
2fff15f6:	4628      	mov	r0, r5
2fff15f8:	f7ff fda8 	bl	2fff114c <gicv2_driver_init>
2fff15fc:	f7ff fd84 	bl	2fff1108 <gicv2_distif_init>
2fff1600:	f7ff ffb9 	bl	2fff1576 <stm32_gic_pcpu_init>
2fff1604:	b006      	add	sp, #24
2fff1606:	bd70      	pop	{r4, r5, r6, pc}
2fff1608:	2fffa9ac 	.word	0x2fffa9ac
2fff160c:	2fffd1ec 	.word	0x2fffd1ec
2fff1610:	2fffa630 	.word	0x2fffa630
2fff1614:	2fffa9be 	.word	0x2fffa9be
2fff1618:	2fffe904 	.word	0x2fffe904

2fff161c <stm32_gic_enable_spi>:
2fff161c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2fff1620:	b087      	sub	sp, #28
2fff1622:	4606      	mov	r6, r0
2fff1624:	a802      	add	r0, sp, #8
2fff1626:	460c      	mov	r4, r1
2fff1628:	f006 fbee 	bl	2fff7e08 <fdt_get_address>
2fff162c:	b918      	cbnz	r0, 2fff1636 <stm32_gic_enable_spi+0x1a>
2fff162e:	f001 f9bd 	bl	2fff29ac <console_flush>
2fff1632:	f007 e922 	blx	2fff8878 <do_panic>
2fff1636:	4a42      	ldr	r2, [pc, #264]	; (2fff1740 <stm32_gic_enable_spi+0x124>)
2fff1638:	2300      	movs	r3, #0
2fff163a:	9802      	ldr	r0, [sp, #8]
2fff163c:	4631      	mov	r1, r6
2fff163e:	f007 ffb7 	bl	2fff95b0 <fdt_getprop>
2fff1642:	b130      	cbz	r0, 2fff1652 <stm32_gic_enable_spi+0x36>
2fff1644:	4b3f      	ldr	r3, [pc, #252]	; (2fff1744 <stm32_gic_enable_spi+0x128>)
2fff1646:	6800      	ldr	r0, [r0, #0]
2fff1648:	685b      	ldr	r3, [r3, #4]
2fff164a:	f7ff ff61 	bl	2fff1510 <fdt32_to_cpu>
2fff164e:	4283      	cmp	r3, r0
2fff1650:	d173      	bne.n	2fff173a <stm32_gic_enable_spi+0x11e>
2fff1652:	b37c      	cbz	r4, 2fff16b4 <stm32_gic_enable_spi+0x98>
2fff1654:	4630      	mov	r0, r6
2fff1656:	f006 fbe3 	bl	2fff7e20 <fdt_get_status>
2fff165a:	2802      	cmp	r0, #2
2fff165c:	4623      	mov	r3, r4
2fff165e:	9802      	ldr	r0, [sp, #8]
2fff1660:	4631      	mov	r1, r6
2fff1662:	bf0c      	ite	eq
2fff1664:	4a38      	ldreq	r2, [pc, #224]	; (2fff1748 <stm32_gic_enable_spi+0x12c>)
2fff1666:	4a39      	ldrne	r2, [pc, #228]	; (2fff174c <stm32_gic_enable_spi+0x130>)
2fff1668:	f008 f8d8 	bl	2fff981c <fdt_stringlist_search>
2fff166c:	2800      	cmp	r0, #0
2fff166e:	4604      	mov	r4, r0
2fff1670:	db1c      	blt.n	2fff16ac <stm32_gic_enable_spi+0x90>
2fff1672:	4605      	mov	r5, r0
2fff1674:	f10d 0307 	add.w	r3, sp, #7
2fff1678:	aa03      	add	r2, sp, #12
2fff167a:	a904      	add	r1, sp, #16
2fff167c:	4630      	mov	r0, r6
2fff167e:	f006 fc01 	bl	2fff7e84 <fdt_get_interrupt>
2fff1682:	1e04      	subs	r4, r0, #0
2fff1684:	db12      	blt.n	2fff16ac <stm32_gic_enable_spi+0x90>
2fff1686:	9f03      	ldr	r7, [sp, #12]
2fff1688:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff168c:	9b04      	ldr	r3, [sp, #16]
2fff168e:	2600      	movs	r6, #0
2fff1690:	f027 0703 	bic.w	r7, r7, #3
2fff1694:	441f      	add	r7, r3
2fff1696:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 2fff1744 <stm32_gic_enable_spi+0x128>
2fff169a:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 2fff1750 <stm32_gic_enable_spi+0x134>
2fff169e:	9b04      	ldr	r3, [sp, #16]
2fff16a0:	42bb      	cmp	r3, r7
2fff16a2:	d203      	bcs.n	2fff16ac <stm32_gic_enable_spi+0x90>
2fff16a4:	42b5      	cmp	r5, r6
2fff16a6:	da08      	bge.n	2fff16ba <stm32_gic_enable_spi+0x9e>
2fff16a8:	1c6a      	adds	r2, r5, #1
2fff16aa:	d006      	beq.n	2fff16ba <stm32_gic_enable_spi+0x9e>
2fff16ac:	4620      	mov	r0, r4
2fff16ae:	b007      	add	sp, #28
2fff16b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff16b4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff16b8:	e7dc      	b.n	2fff1674 <stm32_gic_enable_spi+0x58>
2fff16ba:	f89d 2007 	ldrb.w	r2, [sp, #7]
2fff16be:	b942      	cbnz	r2, 2fff16d2 <stm32_gic_enable_spi+0xb6>
2fff16c0:	1c68      	adds	r0, r5, #1
2fff16c2:	d001      	beq.n	2fff16c8 <stm32_gic_enable_spi+0xac>
2fff16c4:	42b5      	cmp	r5, r6
2fff16c6:	d112      	bne.n	2fff16ee <stm32_gic_enable_spi+0xd2>
2fff16c8:	4618      	mov	r0, r3
2fff16ca:	f7ff ff23 	bl	2fff1514 <enable_gic_interrupt>
2fff16ce:	4604      	mov	r4, r0
2fff16d0:	e00d      	b.n	2fff16ee <stm32_gic_enable_spi+0xd2>
2fff16d2:	6818      	ldr	r0, [r3, #0]
2fff16d4:	f7ff ff1c 	bl	2fff1510 <fdt32_to_cpu>
2fff16d8:	f8d8 2004 	ldr.w	r2, [r8, #4]
2fff16dc:	4290      	cmp	r0, r2
2fff16de:	d10e      	bne.n	2fff16fe <stm32_gic_enable_spi+0xe2>
2fff16e0:	1c69      	adds	r1, r5, #1
2fff16e2:	f103 0004 	add.w	r0, r3, #4
2fff16e6:	9004      	str	r0, [sp, #16]
2fff16e8:	d0ef      	beq.n	2fff16ca <stm32_gic_enable_spi+0xae>
2fff16ea:	42b5      	cmp	r5, r6
2fff16ec:	d0ed      	beq.n	2fff16ca <stm32_gic_enable_spi+0xae>
2fff16ee:	f8d8 2000 	ldr.w	r2, [r8]
2fff16f2:	9b04      	ldr	r3, [sp, #16]
2fff16f4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
2fff16f8:	9304      	str	r3, [sp, #16]
2fff16fa:	3601      	adds	r6, #1
2fff16fc:	e7cf      	b.n	2fff169e <stm32_gic_enable_spi+0x82>
2fff16fe:	a805      	add	r0, sp, #20
2fff1700:	f006 fb82 	bl	2fff7e08 <fdt_get_address>
2fff1704:	2800      	cmp	r0, #0
2fff1706:	d092      	beq.n	2fff162e <stm32_gic_enable_spi+0x12>
2fff1708:	9b04      	ldr	r3, [sp, #16]
2fff170a:	6818      	ldr	r0, [r3, #0]
2fff170c:	f7ff ff00 	bl	2fff1510 <fdt32_to_cpu>
2fff1710:	4601      	mov	r1, r0
2fff1712:	9805      	ldr	r0, [sp, #20]
2fff1714:	f008 f83e 	bl	2fff9794 <fdt_node_offset_by_phandle>
2fff1718:	1e01      	subs	r1, r0, #0
2fff171a:	db88      	blt.n	2fff162e <stm32_gic_enable_spi+0x12>
2fff171c:	9805      	ldr	r0, [sp, #20]
2fff171e:	2300      	movs	r3, #0
2fff1720:	464a      	mov	r2, r9
2fff1722:	f007 ff45 	bl	2fff95b0 <fdt_getprop>
2fff1726:	2800      	cmp	r0, #0
2fff1728:	d081      	beq.n	2fff162e <stm32_gic_enable_spi+0x12>
2fff172a:	6800      	ldr	r0, [r0, #0]
2fff172c:	f7ff fef0 	bl	2fff1510 <fdt32_to_cpu>
2fff1730:	9b04      	ldr	r3, [sp, #16]
2fff1732:	3001      	adds	r0, #1
2fff1734:	eb03 0380 	add.w	r3, r3, r0, lsl #2
2fff1738:	e7de      	b.n	2fff16f8 <stm32_gic_enable_spi+0xdc>
2fff173a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff173e:	e7b5      	b.n	2fff16ac <stm32_gic_enable_spi+0x90>
2fff1740:	2fffa9cf 	.word	0x2fffa9cf
2fff1744:	2fffe904 	.word	0x2fffe904
2fff1748:	2fffa9e7 	.word	0x2fffa9e7
2fff174c:	2fffa9e0 	.word	0x2fffa9e0
2fff1750:	2fffa9be 	.word	0x2fffa9be

2fff1754 <plat_get_target_pwr_state>:
2fff1754:	b508      	push	{r3, lr}
2fff1756:	b91a      	cbnz	r2, 2fff1760 <plat_get_target_pwr_state+0xc>
2fff1758:	4806      	ldr	r0, [pc, #24]	; (2fff1774 <plat_get_target_pwr_state+0x20>)
2fff175a:	219d      	movs	r1, #157	; 0x9d
2fff175c:	f008 f8c6 	bl	2fff98ec <__assert>
2fff1760:	440a      	add	r2, r1
2fff1762:	2002      	movs	r0, #2
2fff1764:	f811 3b01 	ldrb.w	r3, [r1], #1
2fff1768:	4298      	cmp	r0, r3
2fff176a:	bf28      	it	cs
2fff176c:	4618      	movcs	r0, r3
2fff176e:	428a      	cmp	r2, r1
2fff1770:	d1f8      	bne.n	2fff1764 <plat_get_target_pwr_state+0x10>
2fff1772:	bd08      	pop	{r3, pc}
2fff1774:	2fffaa24 	.word	0x2fffaa24

2fff1778 <bsec_main>:
2fff1778:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff177a:	461e      	mov	r6, r3
2fff177c:	2300      	movs	r3, #0
2fff177e:	4604      	mov	r4, r0
2fff1780:	9301      	str	r3, [sp, #4]
2fff1782:	1f43      	subs	r3, r0, #5
2fff1784:	2b01      	cmp	r3, #1
2fff1786:	460d      	mov	r5, r1
2fff1788:	4617      	mov	r7, r2
2fff178a:	d802      	bhi.n	2fff1792 <bsec_main+0x1a>
2fff178c:	f06f 0402 	mvn.w	r4, #2
2fff1790:	e02c      	b.n	2fff17ec <bsec_main+0x74>
2fff1792:	4608      	mov	r0, r1
2fff1794:	f002 ff3a 	bl	2fff460c <bsec_check_nsec_access_rights>
2fff1798:	2800      	cmp	r0, #0
2fff179a:	d1f7      	bne.n	2fff178c <bsec_main+0x14>
2fff179c:	3c01      	subs	r4, #1
2fff179e:	2c06      	cmp	r4, #6
2fff17a0:	d8f4      	bhi.n	2fff178c <bsec_main+0x14>
2fff17a2:	a301      	add	r3, pc, #4	; (adr r3, 2fff17a8 <bsec_main+0x30>)
2fff17a4:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
2fff17a8:	2fff17c5 	.word	0x2fff17c5
2fff17ac:	2fff17d3 	.word	0x2fff17d3
2fff17b0:	2fff185d 	.word	0x2fff185d
2fff17b4:	2fff186b 	.word	0x2fff186b
2fff17b8:	2fff178d 	.word	0x2fff178d
2fff17bc:	2fff178d 	.word	0x2fff178d
2fff17c0:	2fff1897 	.word	0x2fff1897
2fff17c4:	4629      	mov	r1, r5
2fff17c6:	4630      	mov	r0, r6
2fff17c8:	f002 fcac 	bl	2fff4124 <bsec_read_otp>
2fff17cc:	4604      	mov	r4, r0
2fff17ce:	b168      	cbz	r0, 2fff17ec <bsec_main+0x74>
2fff17d0:	e00a      	b.n	2fff17e8 <bsec_main+0x70>
2fff17d2:	2d08      	cmp	r5, #8
2fff17d4:	f04f 0300 	mov.w	r3, #0
2fff17d8:	6033      	str	r3, [r6, #0]
2fff17da:	d113      	bne.n	2fff1804 <bsec_main+0x8c>
2fff17dc:	4629      	mov	r1, r5
2fff17de:	a801      	add	r0, sp, #4
2fff17e0:	f002 fca0 	bl	2fff4124 <bsec_read_otp>
2fff17e4:	4604      	mov	r4, r0
2fff17e6:	b120      	cbz	r0, 2fff17f2 <bsec_main+0x7a>
2fff17e8:	f06f 0401 	mvn.w	r4, #1
2fff17ec:	4620      	mov	r0, r4
2fff17ee:	b003      	add	sp, #12
2fff17f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff17f2:	9b01      	ldr	r3, [sp, #4]
2fff17f4:	f407 7240 	and.w	r2, r7, #768	; 0x300
2fff17f8:	f413 7340 	ands.w	r3, r3, #768	; 0x300
2fff17fc:	d107      	bne.n	2fff180e <bsec_main+0x96>
2fff17fe:	b96a      	cbnz	r2, 2fff181c <bsec_main+0xa4>
2fff1800:	2300      	movs	r3, #0
2fff1802:	6033      	str	r3, [r6, #0]
2fff1804:	4629      	mov	r1, r5
2fff1806:	4638      	mov	r0, r7
2fff1808:	f002 fe90 	bl	2fff452c <bsec_program_otp>
2fff180c:	e7de      	b.n	2fff17cc <bsec_main+0x54>
2fff180e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
2fff1812:	d1f4      	bne.n	2fff17fe <bsec_main+0x86>
2fff1814:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
2fff1818:	d1f1      	bne.n	2fff17fe <bsec_main+0x86>
2fff181a:	e7f1      	b.n	2fff1800 <bsec_main+0x88>
2fff181c:	05bb      	lsls	r3, r7, #22
2fff181e:	d41a      	bmi.n	2fff1856 <bsec_main+0xde>
2fff1820:	4b1f      	ldr	r3, [pc, #124]	; (2fff18a0 <bsec_main+0x128>)
2fff1822:	2118      	movs	r1, #24
2fff1824:	f8d3 010c 	ldr.w	r0, [r3, #268]	; 0x10c
2fff1828:	f103 53da 	add.w	r3, r3, #457179136	; 0x1b400000
2fff182c:	f503 23ca 	add.w	r3, r3, #413696	; 0x65000
2fff1830:	f503 63aa 	add.w	r3, r3, #1360	; 0x550
2fff1834:	6003      	str	r3, [r0, #0]
2fff1836:	f007 e8bc 	blx	2fff89b0 <flush_dcache_range>
2fff183a:	f005 ff11 	bl	2fff7660 <dt_pmic_status>
2fff183e:	2800      	cmp	r0, #0
2fff1840:	dc01      	bgt.n	2fff1846 <bsec_main+0xce>
2fff1842:	2301      	movs	r3, #1
2fff1844:	e7dd      	b.n	2fff1802 <bsec_main+0x8a>
2fff1846:	f005 ffeb 	bl	2fff7820 <initialize_pmic>
2fff184a:	f001 fa09 	bl	2fff2c60 <stm32mp_get_cpu_supply_name>
2fff184e:	b110      	cbz	r0, 2fff1856 <bsec_main+0xde>
2fff1850:	f006 f940 	bl	2fff7ad4 <stpmic1_regulator_mask_reset_set>
2fff1854:	e7f5      	b.n	2fff1842 <bsec_main+0xca>
2fff1856:	2302      	movs	r3, #2
2fff1858:	6033      	str	r3, [r6, #0]
2fff185a:	e7c7      	b.n	2fff17ec <bsec_main+0x74>
2fff185c:	4629      	mov	r1, r5
2fff185e:	4638      	mov	r0, r7
2fff1860:	2300      	movs	r3, #0
2fff1862:	6033      	str	r3, [r6, #0]
2fff1864:	f002 fe08 	bl	2fff4478 <bsec_write_otp>
2fff1868:	e7b0      	b.n	2fff17cc <bsec_main+0x54>
2fff186a:	2300      	movs	r3, #0
2fff186c:	4629      	mov	r1, r5
2fff186e:	6033      	str	r3, [r6, #0]
2fff1870:	a801      	add	r0, sp, #4
2fff1872:	f002 fc57 	bl	2fff4124 <bsec_read_otp>
2fff1876:	2800      	cmp	r0, #0
2fff1878:	d1b6      	bne.n	2fff17e8 <bsec_main+0x70>
2fff187a:	4628      	mov	r0, r5
2fff187c:	f002 fd14 	bl	2fff42a8 <bsec_shadow_register>
2fff1880:	2800      	cmp	r0, #0
2fff1882:	d1b1      	bne.n	2fff17e8 <bsec_main+0x70>
2fff1884:	4629      	mov	r1, r5
2fff1886:	4630      	mov	r0, r6
2fff1888:	f002 fc4c 	bl	2fff4124 <bsec_read_otp>
2fff188c:	2800      	cmp	r0, #0
2fff188e:	d1ab      	bne.n	2fff17e8 <bsec_main+0x70>
2fff1890:	9801      	ldr	r0, [sp, #4]
2fff1892:	4629      	mov	r1, r5
2fff1894:	e7e6      	b.n	2fff1864 <bsec_main+0xec>
2fff1896:	4628      	mov	r0, r5
2fff1898:	f002 fc92 	bl	2fff41c0 <bsec_permanent_lock_otp>
2fff189c:	e796      	b.n	2fff17cc <bsec_main+0x54>
2fff189e:	bf00      	nop
2fff18a0:	2ffc0000 	.word	0x2ffc0000

2fff18a4 <pm_domain_scv_handler>:
2fff18a4:	3900      	subs	r1, #0
2fff18a6:	bf18      	it	ne
2fff18a8:	2101      	movne	r1, #1
2fff18aa:	b508      	push	{r3, lr}
2fff18ac:	f7fe fee6 	bl	2fff067c <stm32mp1_set_pm_domain_state>
2fff18b0:	2800      	cmp	r0, #0
2fff18b2:	bfb4      	ite	lt
2fff18b4:	f06f 0001 	mvnlt.w	r0, #1
2fff18b8:	2000      	movge	r0, #0
2fff18ba:	bd08      	pop	{r3, pc}

2fff18bc <pwr_scv_handler>:
2fff18bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff18c0:	4607      	mov	r7, r0
2fff18c2:	f421 767f 	bic.w	r6, r1, #1020	; 0x3fc
2fff18c6:	460c      	mov	r4, r1
2fff18c8:	f026 0603 	bic.w	r6, r6, #3
2fff18cc:	4615      	mov	r5, r2
2fff18ce:	b12e      	cbz	r6, 2fff18dc <pwr_scv_handler+0x20>
2fff18d0:	f001 f97a 	bl	2fff2bc8 <stm32mp_pwr_base>
2fff18d4:	4286      	cmp	r6, r0
2fff18d6:	d132      	bne.n	2fff193e <pwr_scv_handler+0x82>
2fff18d8:	f3c4 0409 	ubfx	r4, r4, #0, #10
2fff18dc:	2c20      	cmp	r4, #32
2fff18de:	d01c      	beq.n	2fff191a <pwr_scv_handler+0x5e>
2fff18e0:	2c28      	cmp	r4, #40	; 0x28
2fff18e2:	d01d      	beq.n	2fff1920 <pwr_scv_handler+0x64>
2fff18e4:	2c0c      	cmp	r4, #12
2fff18e6:	d123      	bne.n	2fff1930 <pwr_scv_handler+0x74>
2fff18e8:	f8df 905c 	ldr.w	r9, [pc, #92]	; 2fff1948 <pwr_scv_handler+0x8c>
2fff18ec:	ea05 0509 	and.w	r5, r5, r9
2fff18f0:	f001 f96a 	bl	2fff2bc8 <stm32mp_pwr_base>
2fff18f4:	eb04 0800 	add.w	r8, r4, r0
2fff18f8:	4606      	mov	r6, r0
2fff18fa:	f001 f975 	bl	2fff2be8 <stm32mp_pwr_regs_lock>
2fff18fe:	2f02      	cmp	r7, #2
2fff1900:	d011      	beq.n	2fff1926 <pwr_scv_handler+0x6a>
2fff1902:	2f03      	cmp	r7, #3
2fff1904:	d016      	beq.n	2fff1934 <pwr_scv_handler+0x78>
2fff1906:	2f01      	cmp	r7, #1
2fff1908:	d110      	bne.n	2fff192c <pwr_scv_handler+0x70>
2fff190a:	f8d8 2000 	ldr.w	r2, [r8]
2fff190e:	ea22 0209 	bic.w	r2, r2, r9
2fff1912:	4315      	orrs	r5, r2
2fff1914:	f8c8 5000 	str.w	r5, [r8]
2fff1918:	e008      	b.n	2fff192c <pwr_scv_handler+0x70>
2fff191a:	f8df 9030 	ldr.w	r9, [pc, #48]	; 2fff194c <pwr_scv_handler+0x90>
2fff191e:	e7e5      	b.n	2fff18ec <pwr_scv_handler+0x30>
2fff1920:	f04f 093f 	mov.w	r9, #63	; 0x3f
2fff1924:	e7e2      	b.n	2fff18ec <pwr_scv_handler+0x30>
2fff1926:	59a2      	ldr	r2, [r4, r6]
2fff1928:	4315      	orrs	r5, r2
2fff192a:	51a5      	str	r5, [r4, r6]
2fff192c:	f001 f968 	bl	2fff2c00 <stm32mp_pwr_regs_unlock>
2fff1930:	2000      	movs	r0, #0
2fff1932:	e006      	b.n	2fff1942 <pwr_scv_handler+0x86>
2fff1934:	f8d8 2000 	ldr.w	r2, [r8]
2fff1938:	ea22 0505 	bic.w	r5, r2, r5
2fff193c:	e7ea      	b.n	2fff1914 <pwr_scv_handler+0x58>
2fff193e:	f06f 0002 	mvn.w	r0, #2
2fff1942:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff1946:	bf00      	nop
2fff1948:	51000300 	.word	0x51000300
2fff194c:	0fff3f3f 	.word	0x0fff3f3f

2fff1950 <rcc_scv_handler>:
2fff1950:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff1952:	4606      	mov	r6, r0
2fff1954:	f421 677f 	bic.w	r7, r1, #4080	; 0xff0
2fff1958:	460c      	mov	r4, r1
2fff195a:	f027 070f 	bic.w	r7, r7, #15
2fff195e:	4615      	mov	r5, r2
2fff1960:	b12f      	cbz	r7, 2fff196e <rcc_scv_handler+0x1e>
2fff1962:	f001 f935 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff1966:	4287      	cmp	r7, r0
2fff1968:	d12a      	bne.n	2fff19c0 <rcc_scv_handler+0x70>
2fff196a:	f3c4 040b 	ubfx	r4, r4, #0, #12
2fff196e:	f240 4314 	movw	r3, #1044	; 0x414
2fff1972:	429c      	cmp	r4, r3
2fff1974:	d009      	beq.n	2fff198a <rcc_scv_handler+0x3a>
2fff1976:	f5b4 6f83 	cmp.w	r4, #1048	; 0x418
2fff197a:	d006      	beq.n	2fff198a <rcc_scv_handler+0x3a>
2fff197c:	f5b4 7f86 	cmp.w	r4, #268	; 0x10c
2fff1980:	d016      	beq.n	2fff19b0 <rcc_scv_handler+0x60>
2fff1982:	f001 f813 	bl	2fff29ac <console_flush>
2fff1986:	f006 ef78 	blx	2fff8878 <do_panic>
2fff198a:	f44f 1780 	mov.w	r7, #1048576	; 0x100000
2fff198e:	f001 f91f 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff1992:	4420      	add	r0, r4
2fff1994:	2e02      	cmp	r6, #2
2fff1996:	ea05 0107 	and.w	r1, r5, r7
2fff199a:	d00b      	beq.n	2fff19b4 <rcc_scv_handler+0x64>
2fff199c:	2e03      	cmp	r6, #3
2fff199e:	d00c      	beq.n	2fff19ba <rcc_scv_handler+0x6a>
2fff19a0:	2e01      	cmp	r6, #1
2fff19a2:	d103      	bne.n	2fff19ac <rcc_scv_handler+0x5c>
2fff19a4:	460a      	mov	r2, r1
2fff19a6:	4639      	mov	r1, r7
2fff19a8:	f006 fc50 	bl	2fff824c <stm32mp_mmio_clrsetbits_32_shregs>
2fff19ac:	2000      	movs	r0, #0
2fff19ae:	e009      	b.n	2fff19c4 <rcc_scv_handler+0x74>
2fff19b0:	2701      	movs	r7, #1
2fff19b2:	e7ec      	b.n	2fff198e <rcc_scv_handler+0x3e>
2fff19b4:	f006 fc66 	bl	2fff8284 <stm32mp_mmio_setbits_32_shregs>
2fff19b8:	e7f8      	b.n	2fff19ac <rcc_scv_handler+0x5c>
2fff19ba:	f006 fc56 	bl	2fff826a <stm32mp_mmio_clrbits_32_shregs>
2fff19be:	e7f5      	b.n	2fff19ac <rcc_scv_handler+0x5c>
2fff19c0:	f06f 0002 	mvn.w	r0, #2
2fff19c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

2fff19c6 <rcc_cal_scv_handler>:
2fff19c6:	2801      	cmp	r0, #1
2fff19c8:	b508      	push	{r3, lr}
2fff19ca:	d004      	beq.n	2fff19d6 <rcc_cal_scv_handler+0x10>
2fff19cc:	2804      	cmp	r0, #4
2fff19ce:	d00a      	beq.n	2fff19e6 <rcc_cal_scv_handler+0x20>
2fff19d0:	f06f 0002 	mvn.w	r0, #2
2fff19d4:	bd08      	pop	{r3, pc}
2fff19d6:	f7fd fb11 	bl	2ffeeffc <stm32mp1_calib_start_csi_cal>
2fff19da:	b110      	cbz	r0, 2fff19e2 <rcc_cal_scv_handler+0x1c>
2fff19dc:	f06f 0001 	mvn.w	r0, #1
2fff19e0:	e7f8      	b.n	2fff19d4 <rcc_cal_scv_handler+0xe>
2fff19e2:	2000      	movs	r0, #0
2fff19e4:	e7f6      	b.n	2fff19d4 <rcc_cal_scv_handler+0xe>
2fff19e6:	f7fd fafb 	bl	2ffeefe0 <stm32mp1_calib_start_hsi_cal>
2fff19ea:	e7f6      	b.n	2fff19da <rcc_cal_scv_handler+0x14>

2fff19ec <rcc_opp_scv_handler>:
2fff19ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff19ee:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
2fff19f2:	4604      	mov	r4, r0
2fff19f4:	4615      	mov	r5, r2
2fff19f6:	fbb1 f0f6 	udiv	r0, r1, r6
2fff19fa:	9001      	str	r0, [sp, #4]
2fff19fc:	b134      	cbz	r4, 2fff1a0c <rcc_opp_scv_handler+0x20>
2fff19fe:	2c01      	cmp	r4, #1
2fff1a00:	d00b      	beq.n	2fff1a1a <rcc_opp_scv_handler+0x2e>
2fff1a02:	f06f 0402 	mvn.w	r4, #2
2fff1a06:	4620      	mov	r0, r4
2fff1a08:	b002      	add	sp, #8
2fff1a0a:	bd70      	pop	{r4, r5, r6, pc}
2fff1a0c:	f003 fd2e 	bl	2fff546c <stm32mp1_set_opp_khz>
2fff1a10:	2800      	cmp	r0, #0
2fff1a12:	d0f8      	beq.n	2fff1a06 <rcc_opp_scv_handler+0x1a>
2fff1a14:	f06f 0401 	mvn.w	r4, #1
2fff1a18:	e7f5      	b.n	2fff1a06 <rcc_opp_scv_handler+0x1a>
2fff1a1a:	a801      	add	r0, sp, #4
2fff1a1c:	f003 fd0a 	bl	2fff5434 <stm32mp1_round_opp_khz>
2fff1a20:	4604      	mov	r4, r0
2fff1a22:	2800      	cmp	r0, #0
2fff1a24:	d1f6      	bne.n	2fff1a14 <rcc_opp_scv_handler+0x28>
2fff1a26:	9b01      	ldr	r3, [sp, #4]
2fff1a28:	4a02      	ldr	r2, [pc, #8]	; (2fff1a34 <rcc_opp_scv_handler+0x48>)
2fff1a2a:	4293      	cmp	r3, r2
2fff1a2c:	d8f2      	bhi.n	2fff1a14 <rcc_opp_scv_handler+0x28>
2fff1a2e:	4373      	muls	r3, r6
2fff1a30:	602b      	str	r3, [r5, #0]
2fff1a32:	e7e8      	b.n	2fff1a06 <rcc_opp_scv_handler+0x1a>
2fff1a34:	00418937 	.word	0x00418937

2fff1a38 <stm32mp1_svc_setup>:
2fff1a38:	2000      	movs	r0, #0
2fff1a3a:	4770      	bx	lr

2fff1a3c <stm32mp1_svc_smc_handler>:
2fff1a3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff1a3e:	4606      	mov	r6, r0
2fff1a40:	9d08      	ldr	r5, [sp, #32]
2fff1a42:	4608      	mov	r0, r1
2fff1a44:	4611      	mov	r1, r2
2fff1a46:	461a      	mov	r2, r3
2fff1a48:	4b32      	ldr	r3, [pc, #200]	; (2fff1b14 <stm32mp1_svc_smc_handler+0xd8>)
2fff1a4a:	2400      	movs	r4, #0
2fff1a4c:	9401      	str	r4, [sp, #4]
2fff1a4e:	429e      	cmp	r6, r3
2fff1a50:	d80f      	bhi.n	2fff1a72 <stm32mp1_svc_smc_handler+0x36>
2fff1a52:	3b0a      	subs	r3, #10
2fff1a54:	429e      	cmp	r6, r3
2fff1a56:	d917      	bls.n	2fff1a88 <stm32mp1_svc_smc_handler+0x4c>
2fff1a58:	f106 43fc 	add.w	r3, r6, #2113929216	; 0x7e000000
2fff1a5c:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
2fff1a60:	2b09      	cmp	r3, #9
2fff1a62:	d811      	bhi.n	2fff1a88 <stm32mp1_svc_smc_handler+0x4c>
2fff1a64:	e8df f003 	tbb	[pc, r3]
2fff1a68:	232b3227 	.word	0x232b3227
2fff1a6c:	10101010 	.word	0x10101010
2fff1a70:	2e35      	.short	0x2e35
2fff1a72:	4b29      	ldr	r3, [pc, #164]	; (2fff1b18 <stm32mp1_svc_smc_handler+0xdc>)
2fff1a74:	429e      	cmp	r6, r3
2fff1a76:	d04a      	beq.n	2fff1b0e <stm32mp1_svc_smc_handler+0xd2>
2fff1a78:	d80d      	bhi.n	2fff1a96 <stm32mp1_svc_smc_handler+0x5a>
2fff1a7a:	f5a3 435f 	sub.w	r3, r3, #57088	; 0xdf00
2fff1a7e:	429e      	cmp	r6, r3
2fff1a80:	d02a      	beq.n	2fff1ad8 <stm32mp1_svc_smc_handler+0x9c>
2fff1a82:	3301      	adds	r3, #1
2fff1a84:	429e      	cmp	r6, r3
2fff1a86:	d02c      	beq.n	2fff1ae2 <stm32mp1_svc_smc_handler+0xa6>
2fff1a88:	4824      	ldr	r0, [pc, #144]	; (2fff1b1c <stm32mp1_svc_smc_handler+0xe0>)
2fff1a8a:	4631      	mov	r1, r6
2fff1a8c:	f000 feea 	bl	2fff2864 <tf_log>
2fff1a90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff1a94:	e011      	b.n	2fff1aba <stm32mp1_svc_smc_handler+0x7e>
2fff1a96:	4b22      	ldr	r3, [pc, #136]	; (2fff1b20 <stm32mp1_svc_smc_handler+0xe4>)
2fff1a98:	429e      	cmp	r6, r3
2fff1a9a:	d024      	beq.n	2fff1ae6 <stm32mp1_svc_smc_handler+0xaa>
2fff1a9c:	3302      	adds	r3, #2
2fff1a9e:	429e      	cmp	r6, r3
2fff1aa0:	d1f2      	bne.n	2fff1a88 <stm32mp1_svc_smc_handler+0x4c>
2fff1aa2:	4620      	mov	r0, r4
2fff1aa4:	2301      	movs	r3, #1
2fff1aa6:	9301      	str	r3, [sp, #4]
2fff1aa8:	9b01      	ldr	r3, [sp, #4]
2fff1aaa:	606b      	str	r3, [r5, #4]
2fff1aac:	e005      	b.n	2fff1aba <stm32mp1_svc_smc_handler+0x7e>
2fff1aae:	ab01      	add	r3, sp, #4
2fff1ab0:	f7ff fe62 	bl	2fff1778 <bsec_main>
2fff1ab4:	e7f8      	b.n	2fff1aa8 <stm32mp1_svc_smc_handler+0x6c>
2fff1ab6:	f7ff ff4b 	bl	2fff1950 <rcc_scv_handler>
2fff1aba:	6028      	str	r0, [r5, #0]
2fff1abc:	e024      	b.n	2fff1b08 <stm32mp1_svc_smc_handler+0xcc>
2fff1abe:	f7ff ff82 	bl	2fff19c6 <rcc_cal_scv_handler>
2fff1ac2:	e7fa      	b.n	2fff1aba <stm32mp1_svc_smc_handler+0x7e>
2fff1ac4:	aa01      	add	r2, sp, #4
2fff1ac6:	f7ff ff91 	bl	2fff19ec <rcc_opp_scv_handler>
2fff1aca:	e7ed      	b.n	2fff1aa8 <stm32mp1_svc_smc_handler+0x6c>
2fff1acc:	f7ff fef6 	bl	2fff18bc <pwr_scv_handler>
2fff1ad0:	e7f3      	b.n	2fff1aba <stm32mp1_svc_smc_handler+0x7e>
2fff1ad2:	f7ff fee7 	bl	2fff18a4 <pm_domain_scv_handler>
2fff1ad6:	e7f0      	b.n	2fff1aba <stm32mp1_svc_smc_handler+0x7e>
2fff1ad8:	4620      	mov	r0, r4
2fff1ada:	f000 fc89 	bl	2fff23f0 <scmi_smt_fastcall_smc_entry>
2fff1ade:	4620      	mov	r0, r4
2fff1ae0:	e7eb      	b.n	2fff1aba <stm32mp1_svc_smc_handler+0x7e>
2fff1ae2:	2001      	movs	r0, #1
2fff1ae4:	e7f9      	b.n	2fff1ada <stm32mp1_svc_smc_handler+0x9e>
2fff1ae6:	4b0f      	ldr	r3, [pc, #60]	; (2fff1b24 <stm32mp1_svc_smc_handler+0xe8>)
2fff1ae8:	60eb      	str	r3, [r5, #12]
2fff1aea:	f103 5361 	add.w	r3, r3, #943718400	; 0x38400000
2fff1aee:	f503 130f 	add.w	r3, r3, #2342912	; 0x23c000
2fff1af2:	f603 2331 	addw	r3, r3, #2609	; 0xa31
2fff1af6:	60ab      	str	r3, [r5, #8]
2fff1af8:	f1a3 7344 	sub.w	r3, r3, #51380224	; 0x3100000
2fff1afc:	f5a3 33e1 	sub.w	r3, r3, #115200	; 0x1c200
2fff1b00:	3b96      	subs	r3, #150	; 0x96
2fff1b02:	606b      	str	r3, [r5, #4]
2fff1b04:	4b08      	ldr	r3, [pc, #32]	; (2fff1b28 <stm32mp1_svc_smc_handler+0xec>)
2fff1b06:	602b      	str	r3, [r5, #0]
2fff1b08:	4628      	mov	r0, r5
2fff1b0a:	b002      	add	sp, #8
2fff1b0c:	bd70      	pop	{r4, r5, r6, pc}
2fff1b0e:	200d      	movs	r0, #13
2fff1b10:	e7d3      	b.n	2fff1aba <stm32mp1_svc_smc_handler+0x7e>
2fff1b12:	bf00      	nop
2fff1b14:	82001009 	.word	0x82001009
2fff1b18:	8200ff00 	.word	0x8200ff00
2fff1b1c:	2fffaa43 	.word	0x2fffaa43
2fff1b20:	8200ff01 	.word	0x8200ff01
2fff1b24:	14c29459 	.word	0x14c29459
2fff1b28:	50aa78a7 	.word	0x50aa78a7

2fff1b2c <discover_list_protocols>:
2fff1b2c:	6903      	ldr	r3, [r0, #16]
2fff1b2e:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff1b30:	2b04      	cmp	r3, #4
2fff1b32:	b087      	sub	sp, #28
2fff1b34:	f04f 0400 	mov.w	r4, #0
2fff1b38:	4605      	mov	r5, r0
2fff1b3a:	e9cd 4400 	strd	r4, r4, [sp]
2fff1b3e:	e9cd 4402 	strd	r4, r4, [sp, #8]
2fff1b42:	9404      	str	r4, [sp, #16]
2fff1b44:	9405      	str	r4, [sp, #20]
2fff1b46:	d005      	beq.n	2fff1b54 <discover_list_protocols+0x28>
2fff1b48:	f06f 0109 	mvn.w	r1, #9
2fff1b4c:	f000 fabc 	bl	2fff20c8 <scmi_status_response>
2fff1b50:	b007      	add	sp, #28
2fff1b52:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff1b54:	6983      	ldr	r3, [r0, #24]
2fff1b56:	2b10      	cmp	r3, #16
2fff1b58:	d803      	bhi.n	2fff1b62 <discover_list_protocols+0x36>
2fff1b5a:	4816      	ldr	r0, [pc, #88]	; (2fff1bb4 <discover_list_protocols+0x88>)
2fff1b5c:	2198      	movs	r1, #152	; 0x98
2fff1b5e:	f007 fec5 	bl	2fff98ec <__assert>
2fff1b62:	68c7      	ldr	r7, [r0, #12]
2fff1b64:	6800      	ldr	r0, [r0, #0]
2fff1b66:	f000 fcb9 	bl	2fff24dc <plat_scmi_protocol_list>
2fff1b6a:	4606      	mov	r6, r0
2fff1b6c:	b9d8      	cbnz	r0, 2fff1ba6 <discover_list_protocols+0x7a>
2fff1b6e:	4604      	mov	r4, r0
2fff1b70:	683b      	ldr	r3, [r7, #0]
2fff1b72:	42a3      	cmp	r3, r4
2fff1b74:	d21b      	bcs.n	2fff1bae <discover_list_protocols+0x82>
2fff1b76:	1ae4      	subs	r4, r4, r3
2fff1b78:	2c08      	cmp	r4, #8
2fff1b7a:	bf28      	it	cs
2fff1b7c:	2408      	movcs	r4, #8
2fff1b7e:	9401      	str	r4, [sp, #4]
2fff1b80:	2208      	movs	r2, #8
2fff1b82:	eb0d 0002 	add.w	r0, sp, r2
2fff1b86:	4669      	mov	r1, sp
2fff1b88:	f007 fed8 	bl	2fff993c <memcpy>
2fff1b8c:	6839      	ldr	r1, [r7, #0]
2fff1b8e:	4622      	mov	r2, r4
2fff1b90:	a804      	add	r0, sp, #16
2fff1b92:	4431      	add	r1, r6
2fff1b94:	f007 fed2 	bl	2fff993c <memcpy>
2fff1b98:	2210      	movs	r2, #16
2fff1b9a:	a902      	add	r1, sp, #8
2fff1b9c:	4628      	mov	r0, r5
2fff1b9e:	f000 faab 	bl	2fff20f8 <scmi_write_response>
2fff1ba2:	e7d5      	b.n	2fff1b50 <discover_list_protocols+0x24>
2fff1ba4:	3401      	adds	r4, #1
2fff1ba6:	5d33      	ldrb	r3, [r6, r4]
2fff1ba8:	2b00      	cmp	r3, #0
2fff1baa:	d1fb      	bne.n	2fff1ba4 <discover_list_protocols+0x78>
2fff1bac:	e7e0      	b.n	2fff1b70 <discover_list_protocols+0x44>
2fff1bae:	2400      	movs	r4, #0
2fff1bb0:	e7e5      	b.n	2fff1b7e <discover_list_protocols+0x52>
2fff1bb2:	bf00      	nop
2fff1bb4:	2fffaa80 	.word	0x2fffaa80

2fff1bb8 <discover_implementation_version>:
2fff1bb8:	2300      	movs	r3, #0
2fff1bba:	b507      	push	{r0, r1, r2, lr}
2fff1bbc:	e9cd 3300 	strd	r3, r3, [sp]
2fff1bc0:	6903      	ldr	r3, [r0, #16]
2fff1bc2:	b133      	cbz	r3, 2fff1bd2 <discover_implementation_version+0x1a>
2fff1bc4:	f06f 0109 	mvn.w	r1, #9
2fff1bc8:	f000 fa7e 	bl	2fff20c8 <scmi_status_response>
2fff1bcc:	b003      	add	sp, #12
2fff1bce:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1bd2:	2208      	movs	r2, #8
2fff1bd4:	4669      	mov	r1, sp
2fff1bd6:	f000 fa8f 	bl	2fff20f8 <scmi_write_response>
2fff1bda:	e7f7      	b.n	2fff1bcc <discover_implementation_version+0x14>

2fff1bdc <report_message_attributes>:
2fff1bdc:	b507      	push	{r0, r1, r2, lr}
2fff1bde:	2200      	movs	r2, #0
2fff1be0:	e9cd 2200 	strd	r2, r2, [sp]
2fff1be4:	6902      	ldr	r2, [r0, #16]
2fff1be6:	4603      	mov	r3, r0
2fff1be8:	68c1      	ldr	r1, [r0, #12]
2fff1bea:	2a04      	cmp	r2, #4
2fff1bec:	d004      	beq.n	2fff1bf8 <report_message_attributes+0x1c>
2fff1bee:	f06f 0109 	mvn.w	r1, #9
2fff1bf2:	f000 fa69 	bl	2fff20c8 <scmi_status_response>
2fff1bf6:	e00a      	b.n	2fff1c0e <report_message_attributes+0x32>
2fff1bf8:	680a      	ldr	r2, [r1, #0]
2fff1bfa:	2a06      	cmp	r2, #6
2fff1bfc:	d80a      	bhi.n	2fff1c14 <report_message_attributes+0x38>
2fff1bfe:	4907      	ldr	r1, [pc, #28]	; (2fff1c1c <report_message_attributes+0x40>)
2fff1c00:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff1c04:	b132      	cbz	r2, 2fff1c14 <report_message_attributes+0x38>
2fff1c06:	2208      	movs	r2, #8
2fff1c08:	4669      	mov	r1, sp
2fff1c0a:	f000 fa75 	bl	2fff20f8 <scmi_write_response>
2fff1c0e:	b003      	add	sp, #12
2fff1c10:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1c14:	f06f 0103 	mvn.w	r1, #3
2fff1c18:	4618      	mov	r0, r3
2fff1c1a:	e7ea      	b.n	2fff1bf2 <report_message_attributes+0x16>
2fff1c1c:	2fffaa9c 	.word	0x2fffaa9c

2fff1c20 <report_version>:
2fff1c20:	f44f 3300 	mov.w	r3, #131072	; 0x20000
2fff1c24:	b507      	push	{r0, r1, r2, lr}
2fff1c26:	2200      	movs	r2, #0
2fff1c28:	e9cd 2300 	strd	r2, r3, [sp]
2fff1c2c:	6903      	ldr	r3, [r0, #16]
2fff1c2e:	b133      	cbz	r3, 2fff1c3e <report_version+0x1e>
2fff1c30:	f06f 0109 	mvn.w	r1, #9
2fff1c34:	f000 fa48 	bl	2fff20c8 <scmi_status_response>
2fff1c38:	b003      	add	sp, #12
2fff1c3a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1c3e:	2208      	movs	r2, #8
2fff1c40:	4669      	mov	r1, sp
2fff1c42:	f000 fa59 	bl	2fff20f8 <scmi_write_response>
2fff1c46:	e7f7      	b.n	2fff1c38 <report_version+0x18>

2fff1c48 <discover_sub_vendor>:
2fff1c48:	b530      	push	{r4, r5, lr}
2fff1c4a:	b087      	sub	sp, #28
2fff1c4c:	4604      	mov	r4, r0
2fff1c4e:	f000 fc3f 	bl	2fff24d0 <plat_scmi_sub_vendor_name>
2fff1c52:	4605      	mov	r5, r0
2fff1c54:	2214      	movs	r2, #20
2fff1c56:	2100      	movs	r1, #0
2fff1c58:	a801      	add	r0, sp, #4
2fff1c5a:	f007 fe90 	bl	2fff997e <memset>
2fff1c5e:	6923      	ldr	r3, [r4, #16]
2fff1c60:	b133      	cbz	r3, 2fff1c70 <discover_sub_vendor+0x28>
2fff1c62:	f06f 0109 	mvn.w	r1, #9
2fff1c66:	4620      	mov	r0, r4
2fff1c68:	f000 fa2e 	bl	2fff20c8 <scmi_status_response>
2fff1c6c:	b007      	add	sp, #28
2fff1c6e:	bd30      	pop	{r4, r5, pc}
2fff1c70:	4628      	mov	r0, r5
2fff1c72:	f007 ffe2 	bl	2fff9c3a <strlen>
2fff1c76:	280f      	cmp	r0, #15
2fff1c78:	d903      	bls.n	2fff1c82 <discover_sub_vendor+0x3a>
2fff1c7a:	4807      	ldr	r0, [pc, #28]	; (2fff1c98 <discover_sub_vendor+0x50>)
2fff1c7c:	2166      	movs	r1, #102	; 0x66
2fff1c7e:	f007 fe35 	bl	2fff98ec <__assert>
2fff1c82:	4629      	mov	r1, r5
2fff1c84:	2210      	movs	r2, #16
2fff1c86:	a802      	add	r0, sp, #8
2fff1c88:	f007 ffbb 	bl	2fff9c02 <strlcpy>
2fff1c8c:	2214      	movs	r2, #20
2fff1c8e:	a901      	add	r1, sp, #4
2fff1c90:	4620      	mov	r0, r4
2fff1c92:	f000 fa31 	bl	2fff20f8 <scmi_write_response>
2fff1c96:	e7e9      	b.n	2fff1c6c <discover_sub_vendor+0x24>
2fff1c98:	2fffaa80 	.word	0x2fffaa80

2fff1c9c <discover_vendor>:
2fff1c9c:	b530      	push	{r4, r5, lr}
2fff1c9e:	b087      	sub	sp, #28
2fff1ca0:	4604      	mov	r4, r0
2fff1ca2:	f000 fc11 	bl	2fff24c8 <plat_scmi_vendor_name>
2fff1ca6:	4605      	mov	r5, r0
2fff1ca8:	2214      	movs	r2, #20
2fff1caa:	2100      	movs	r1, #0
2fff1cac:	a801      	add	r0, sp, #4
2fff1cae:	f007 fe66 	bl	2fff997e <memset>
2fff1cb2:	6923      	ldr	r3, [r4, #16]
2fff1cb4:	b133      	cbz	r3, 2fff1cc4 <discover_vendor+0x28>
2fff1cb6:	f06f 0109 	mvn.w	r1, #9
2fff1cba:	4620      	mov	r0, r4
2fff1cbc:	f000 fa04 	bl	2fff20c8 <scmi_status_response>
2fff1cc0:	b007      	add	sp, #28
2fff1cc2:	bd30      	pop	{r4, r5, pc}
2fff1cc4:	4628      	mov	r0, r5
2fff1cc6:	f007 ffb8 	bl	2fff9c3a <strlen>
2fff1cca:	280f      	cmp	r0, #15
2fff1ccc:	d903      	bls.n	2fff1cd6 <discover_vendor+0x3a>
2fff1cce:	4807      	ldr	r0, [pc, #28]	; (2fff1cec <discover_vendor+0x50>)
2fff1cd0:	2155      	movs	r1, #85	; 0x55
2fff1cd2:	f007 fe0b 	bl	2fff98ec <__assert>
2fff1cd6:	4629      	mov	r1, r5
2fff1cd8:	2210      	movs	r2, #16
2fff1cda:	a802      	add	r0, sp, #8
2fff1cdc:	f007 ff91 	bl	2fff9c02 <strlcpy>
2fff1ce0:	2214      	movs	r2, #20
2fff1ce2:	a901      	add	r1, sp, #4
2fff1ce4:	4620      	mov	r0, r4
2fff1ce6:	f000 fa07 	bl	2fff20f8 <scmi_write_response>
2fff1cea:	e7e9      	b.n	2fff1cc0 <discover_vendor+0x24>
2fff1cec:	2fffaa80 	.word	0x2fffaa80

2fff1cf0 <report_attributes>:
2fff1cf0:	b513      	push	{r0, r1, r4, lr}
2fff1cf2:	4604      	mov	r4, r0
2fff1cf4:	f000 fbf0 	bl	2fff24d8 <plat_scmi_protocol_count>
2fff1cf8:	2300      	movs	r3, #0
2fff1cfa:	b2c0      	uxtb	r0, r0
2fff1cfc:	9300      	str	r3, [sp, #0]
2fff1cfe:	6923      	ldr	r3, [r4, #16]
2fff1d00:	9001      	str	r0, [sp, #4]
2fff1d02:	b133      	cbz	r3, 2fff1d12 <report_attributes+0x22>
2fff1d04:	f06f 0109 	mvn.w	r1, #9
2fff1d08:	4620      	mov	r0, r4
2fff1d0a:	f000 f9dd 	bl	2fff20c8 <scmi_status_response>
2fff1d0e:	b002      	add	sp, #8
2fff1d10:	bd10      	pop	{r4, pc}
2fff1d12:	2208      	movs	r2, #8
2fff1d14:	4669      	mov	r1, sp
2fff1d16:	4620      	mov	r0, r4
2fff1d18:	f000 f9ee 	bl	2fff20f8 <scmi_write_response>
2fff1d1c:	e7f7      	b.n	2fff1d0e <report_attributes+0x1e>
	...

2fff1d20 <scmi_msg_get_base_handler>:
2fff1d20:	6883      	ldr	r3, [r0, #8]
2fff1d22:	2b06      	cmp	r3, #6
2fff1d24:	d809      	bhi.n	2fff1d3a <scmi_msg_get_base_handler+0x1a>
2fff1d26:	2207      	movs	r2, #7
2fff1d28:	4293      	cmp	r3, r2
2fff1d2a:	bf28      	it	cs
2fff1d2c:	2300      	movcs	r3, #0
2fff1d2e:	f3af 8014 	csdb
2fff1d32:	4a03      	ldr	r2, [pc, #12]	; (2fff1d40 <scmi_msg_get_base_handler+0x20>)
2fff1d34:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
2fff1d38:	4770      	bx	lr
2fff1d3a:	2000      	movs	r0, #0
2fff1d3c:	4770      	bx	lr
2fff1d3e:	bf00      	nop
2fff1d40:	2fffaa9c 	.word	0x2fffaa9c

2fff1d44 <confine_array_index>:
2fff1d44:	4288      	cmp	r0, r1
2fff1d46:	bf28      	it	cs
2fff1d48:	2000      	movcs	r0, #0
2fff1d4a:	f3af 8014 	csdb
2fff1d4e:	4770      	bx	lr

2fff1d50 <report_message_attributes>:
2fff1d50:	b507      	push	{r0, r1, r2, lr}
2fff1d52:	2200      	movs	r2, #0
2fff1d54:	e9cd 2200 	strd	r2, r2, [sp]
2fff1d58:	6902      	ldr	r2, [r0, #16]
2fff1d5a:	4603      	mov	r3, r0
2fff1d5c:	68c1      	ldr	r1, [r0, #12]
2fff1d5e:	2a04      	cmp	r2, #4
2fff1d60:	d004      	beq.n	2fff1d6c <report_message_attributes+0x1c>
2fff1d62:	f06f 0109 	mvn.w	r1, #9
2fff1d66:	f000 f9af 	bl	2fff20c8 <scmi_status_response>
2fff1d6a:	e00a      	b.n	2fff1d82 <report_message_attributes+0x32>
2fff1d6c:	680a      	ldr	r2, [r1, #0]
2fff1d6e:	2a07      	cmp	r2, #7
2fff1d70:	d80a      	bhi.n	2fff1d88 <report_message_attributes+0x38>
2fff1d72:	4907      	ldr	r1, [pc, #28]	; (2fff1d90 <report_message_attributes+0x40>)
2fff1d74:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff1d78:	b132      	cbz	r2, 2fff1d88 <report_message_attributes+0x38>
2fff1d7a:	2208      	movs	r2, #8
2fff1d7c:	4669      	mov	r1, sp
2fff1d7e:	f000 f9bb 	bl	2fff20f8 <scmi_write_response>
2fff1d82:	b003      	add	sp, #12
2fff1d84:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1d88:	f06f 0103 	mvn.w	r1, #3
2fff1d8c:	4618      	mov	r0, r3
2fff1d8e:	e7ea      	b.n	2fff1d66 <report_message_attributes+0x16>
2fff1d90:	2fffaad4 	.word	0x2fffaad4

2fff1d94 <report_version>:
2fff1d94:	f44f 3300 	mov.w	r3, #131072	; 0x20000
2fff1d98:	b507      	push	{r0, r1, r2, lr}
2fff1d9a:	2200      	movs	r2, #0
2fff1d9c:	e9cd 2300 	strd	r2, r3, [sp]
2fff1da0:	6903      	ldr	r3, [r0, #16]
2fff1da2:	b133      	cbz	r3, 2fff1db2 <report_version+0x1e>
2fff1da4:	f06f 0109 	mvn.w	r1, #9
2fff1da8:	f000 f98e 	bl	2fff20c8 <scmi_status_response>
2fff1dac:	b003      	add	sp, #12
2fff1dae:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1db2:	2208      	movs	r2, #8
2fff1db4:	4669      	mov	r1, sp
2fff1db6:	f000 f99f 	bl	2fff20f8 <scmi_write_response>
2fff1dba:	e7f7      	b.n	2fff1dac <report_version+0x18>

2fff1dbc <write_rate_desc_array_in_buffer>:
2fff1dbc:	f010 0303 	ands.w	r3, r0, #3
2fff1dc0:	b570      	push	{r4, r5, r6, lr}
2fff1dc2:	d104      	bne.n	2fff1dce <write_rate_desc_array_in_buffer+0x12>
2fff1dc4:	1d04      	adds	r4, r0, #4
2fff1dc6:	461d      	mov	r5, r3
2fff1dc8:	4293      	cmp	r3, r2
2fff1dca:	d105      	bne.n	2fff1dd8 <write_rate_desc_array_in_buffer+0x1c>
2fff1dcc:	bd70      	pop	{r4, r5, r6, pc}
2fff1dce:	4806      	ldr	r0, [pc, #24]	; (2fff1de8 <write_rate_desc_array_in_buffer+0x2c>)
2fff1dd0:	f240 1111 	movw	r1, #273	; 0x111
2fff1dd4:	f007 fd8a 	bl	2fff98ec <__assert>
2fff1dd8:	f851 6023 	ldr.w	r6, [r1, r3, lsl #2]
2fff1ddc:	f840 6033 	str.w	r6, [r0, r3, lsl #3]
2fff1de0:	f844 5033 	str.w	r5, [r4, r3, lsl #3]
2fff1de4:	3301      	adds	r3, #1
2fff1de6:	e7ef      	b.n	2fff1dc8 <write_rate_desc_array_in_buffer+0xc>
2fff1de8:	2fffaab8 	.word	0x2fffaab8

2fff1dec <report_attributes>:
2fff1dec:	b513      	push	{r0, r1, r4, lr}
2fff1dee:	4604      	mov	r4, r0
2fff1df0:	6800      	ldr	r0, [r0, #0]
2fff1df2:	f000 fb77 	bl	2fff24e4 <plat_scmi_clock_count>
2fff1df6:	2300      	movs	r3, #0
2fff1df8:	b280      	uxth	r0, r0
2fff1dfa:	9300      	str	r3, [sp, #0]
2fff1dfc:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
2fff1e00:	6923      	ldr	r3, [r4, #16]
2fff1e02:	9001      	str	r0, [sp, #4]
2fff1e04:	b133      	cbz	r3, 2fff1e14 <report_attributes+0x28>
2fff1e06:	f06f 0109 	mvn.w	r1, #9
2fff1e0a:	4620      	mov	r0, r4
2fff1e0c:	f000 f95c 	bl	2fff20c8 <scmi_status_response>
2fff1e10:	b002      	add	sp, #8
2fff1e12:	bd10      	pop	{r4, pc}
2fff1e14:	2208      	movs	r2, #8
2fff1e16:	4669      	mov	r1, sp
2fff1e18:	4620      	mov	r0, r4
2fff1e1a:	f000 f96d 	bl	2fff20f8 <scmi_write_response>
2fff1e1e:	e7f7      	b.n	2fff1e10 <report_attributes+0x24>

2fff1e20 <scmi_clock_describe_rates>:
2fff1e20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2fff1e24:	b08f      	sub	sp, #60	; 0x3c
2fff1e26:	f8d0 8010 	ldr.w	r8, [r0, #16]
2fff1e2a:	2600      	movs	r6, #0
2fff1e2c:	f8d0 900c 	ldr.w	r9, [r0, #12]
2fff1e30:	4604      	mov	r4, r0
2fff1e32:	f1b8 0f08 	cmp.w	r8, #8
2fff1e36:	e9cd 6602 	strd	r6, r6, [sp, #8]
2fff1e3a:	d004      	beq.n	2fff1e46 <scmi_clock_describe_rates+0x26>
2fff1e3c:	f06f 0109 	mvn.w	r1, #9
2fff1e40:	f000 f942 	bl	2fff20c8 <scmi_status_response>
2fff1e44:	e048      	b.n	2fff1ed8 <scmi_clock_describe_rates+0xb8>
2fff1e46:	f8d9 5000 	ldr.w	r5, [r9]
2fff1e4a:	6800      	ldr	r0, [r0, #0]
2fff1e4c:	f000 fb4a 	bl	2fff24e4 <plat_scmi_clock_count>
2fff1e50:	4285      	cmp	r5, r0
2fff1e52:	d303      	bcc.n	2fff1e5c <scmi_clock_describe_rates+0x3c>
2fff1e54:	f06f 0101 	mvn.w	r1, #1
2fff1e58:	4620      	mov	r0, r4
2fff1e5a:	e7f1      	b.n	2fff1e40 <scmi_clock_describe_rates+0x20>
2fff1e5c:	f8d9 5000 	ldr.w	r5, [r9]
2fff1e60:	6820      	ldr	r0, [r4, #0]
2fff1e62:	f000 fb3f 	bl	2fff24e4 <plat_scmi_clock_count>
2fff1e66:	4601      	mov	r1, r0
2fff1e68:	4628      	mov	r0, r5
2fff1e6a:	466b      	mov	r3, sp
2fff1e6c:	f7ff ff6a 	bl	2fff1d44 <confine_array_index>
2fff1e70:	4601      	mov	r1, r0
2fff1e72:	4607      	mov	r7, r0
2fff1e74:	6820      	ldr	r0, [r4, #0]
2fff1e76:	4632      	mov	r2, r6
2fff1e78:	f000 fb4e 	bl	2fff2518 <plat_scmi_clock_rates_array>
2fff1e7c:	4605      	mov	r5, r0
2fff1e7e:	bb70      	cbnz	r0, 2fff1ede <scmi_clock_describe_rates+0xbe>
2fff1e80:	f8d9 3004 	ldr.w	r3, [r9, #4]
2fff1e84:	aa04      	add	r2, sp, #16
2fff1e86:	9e00      	ldr	r6, [sp, #0]
2fff1e88:	4639      	mov	r1, r7
2fff1e8a:	6820      	ldr	r0, [r4, #0]
2fff1e8c:	1af6      	subs	r6, r6, r3
2fff1e8e:	ab01      	add	r3, sp, #4
2fff1e90:	2e0a      	cmp	r6, #10
2fff1e92:	46b1      	mov	r9, r6
2fff1e94:	bf28      	it	cs
2fff1e96:	f04f 090a 	movcs.w	r9, #10
2fff1e9a:	f8cd 9004 	str.w	r9, [sp, #4]
2fff1e9e:	f000 fb3b 	bl	2fff2518 <plat_scmi_clock_rates_array>
2fff1ea2:	4605      	mov	r5, r0
2fff1ea4:	2800      	cmp	r0, #0
2fff1ea6:	d137      	bne.n	2fff1f18 <scmi_clock_describe_rates+0xf8>
2fff1ea8:	6960      	ldr	r0, [r4, #20]
2fff1eaa:	a904      	add	r1, sp, #16
2fff1eac:	9a01      	ldr	r2, [sp, #4]
2fff1eae:	eba6 0609 	sub.w	r6, r6, r9
2fff1eb2:	3008      	adds	r0, #8
2fff1eb4:	f7ff ff82 	bl	2fff1dbc <write_rate_desc_array_in_buffer>
2fff1eb8:	9b01      	ldr	r3, [sp, #4]
2fff1eba:	4642      	mov	r2, r8
2fff1ebc:	6960      	ldr	r0, [r4, #20]
2fff1ebe:	a902      	add	r1, sp, #8
2fff1ec0:	f3c3 030b 	ubfx	r3, r3, #0, #12
2fff1ec4:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
2fff1ec8:	e9cd 5302 	strd	r5, r3, [sp, #8]
2fff1ecc:	f007 fd36 	bl	2fff993c <memcpy>
2fff1ed0:	9b01      	ldr	r3, [sp, #4]
2fff1ed2:	3301      	adds	r3, #1
2fff1ed4:	00db      	lsls	r3, r3, #3
2fff1ed6:	61e3      	str	r3, [r4, #28]
2fff1ed8:	b00f      	add	sp, #60	; 0x3c
2fff1eda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff1ede:	1c43      	adds	r3, r0, #1
2fff1ee0:	d11a      	bne.n	2fff1f18 <scmi_clock_describe_rates+0xf8>
2fff1ee2:	6820      	ldr	r0, [r4, #0]
2fff1ee4:	aa04      	add	r2, sp, #16
2fff1ee6:	9606      	str	r6, [sp, #24]
2fff1ee8:	4639      	mov	r1, r7
2fff1eea:	e9cd 6604 	strd	r6, r6, [sp, #16]
2fff1eee:	f000 fb16 	bl	2fff251e <plat_scmi_clock_rates_by_step>
2fff1ef2:	4605      	mov	r5, r0
2fff1ef4:	b980      	cbnz	r0, 2fff1f18 <scmi_clock_describe_rates+0xf8>
2fff1ef6:	6960      	ldr	r0, [r4, #20]
2fff1ef8:	2203      	movs	r2, #3
2fff1efa:	a904      	add	r1, sp, #16
2fff1efc:	3008      	adds	r0, #8
2fff1efe:	f7ff ff5d 	bl	2fff1dbc <write_rate_desc_array_in_buffer>
2fff1f02:	6960      	ldr	r0, [r4, #20]
2fff1f04:	f241 0303 	movw	r3, #4099	; 0x1003
2fff1f08:	4642      	mov	r2, r8
2fff1f0a:	a902      	add	r1, sp, #8
2fff1f0c:	e9cd 5302 	strd	r5, r3, [sp, #8]
2fff1f10:	f007 fd14 	bl	2fff993c <memcpy>
2fff1f14:	2320      	movs	r3, #32
2fff1f16:	e7de      	b.n	2fff1ed6 <scmi_clock_describe_rates+0xb6>
2fff1f18:	4629      	mov	r1, r5
2fff1f1a:	e79d      	b.n	2fff1e58 <scmi_clock_describe_rates+0x38>

2fff1f1c <scmi_clock_rate_get>:
2fff1f1c:	6903      	ldr	r3, [r0, #16]
2fff1f1e:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff1f20:	2b04      	cmp	r3, #4
2fff1f22:	68c6      	ldr	r6, [r0, #12]
2fff1f24:	b085      	sub	sp, #20
2fff1f26:	f04f 0500 	mov.w	r5, #0
2fff1f2a:	4604      	mov	r4, r0
2fff1f2c:	9501      	str	r5, [sp, #4]
2fff1f2e:	9502      	str	r5, [sp, #8]
2fff1f30:	9503      	str	r5, [sp, #12]
2fff1f32:	d005      	beq.n	2fff1f40 <scmi_clock_rate_get+0x24>
2fff1f34:	f06f 0109 	mvn.w	r1, #9
2fff1f38:	f000 f8c6 	bl	2fff20c8 <scmi_status_response>
2fff1f3c:	b005      	add	sp, #20
2fff1f3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff1f40:	6837      	ldr	r7, [r6, #0]
2fff1f42:	6800      	ldr	r0, [r0, #0]
2fff1f44:	f000 face 	bl	2fff24e4 <plat_scmi_clock_count>
2fff1f48:	4287      	cmp	r7, r0
2fff1f4a:	d303      	bcc.n	2fff1f54 <scmi_clock_rate_get+0x38>
2fff1f4c:	f06f 0101 	mvn.w	r1, #1
2fff1f50:	4620      	mov	r0, r4
2fff1f52:	e7f1      	b.n	2fff1f38 <scmi_clock_rate_get+0x1c>
2fff1f54:	6836      	ldr	r6, [r6, #0]
2fff1f56:	6820      	ldr	r0, [r4, #0]
2fff1f58:	f000 fac4 	bl	2fff24e4 <plat_scmi_clock_count>
2fff1f5c:	4601      	mov	r1, r0
2fff1f5e:	4630      	mov	r0, r6
2fff1f60:	f7ff fef0 	bl	2fff1d44 <confine_array_index>
2fff1f64:	4601      	mov	r1, r0
2fff1f66:	6820      	ldr	r0, [r4, #0]
2fff1f68:	f000 fb1f 	bl	2fff25aa <plat_scmi_clock_get_rate>
2fff1f6c:	9002      	str	r0, [sp, #8]
2fff1f6e:	220c      	movs	r2, #12
2fff1f70:	9503      	str	r5, [sp, #12]
2fff1f72:	a901      	add	r1, sp, #4
2fff1f74:	4620      	mov	r0, r4
2fff1f76:	f000 f8bf 	bl	2fff20f8 <scmi_write_response>
2fff1f7a:	e7df      	b.n	2fff1f3c <scmi_clock_rate_get+0x20>

2fff1f7c <scmi_clock_rate_set>:
2fff1f7c:	6903      	ldr	r3, [r0, #16]
2fff1f7e:	b570      	push	{r4, r5, r6, lr}
2fff1f80:	2b10      	cmp	r3, #16
2fff1f82:	4604      	mov	r4, r0
2fff1f84:	d005      	beq.n	2fff1f92 <scmi_clock_rate_set+0x16>
2fff1f86:	f06f 0109 	mvn.w	r1, #9
2fff1f8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff1f8e:	f000 b89b 	b.w	2fff20c8 <scmi_status_response>
2fff1f92:	68c5      	ldr	r5, [r0, #12]
2fff1f94:	6800      	ldr	r0, [r0, #0]
2fff1f96:	686e      	ldr	r6, [r5, #4]
2fff1f98:	f000 faa4 	bl	2fff24e4 <plat_scmi_clock_count>
2fff1f9c:	4286      	cmp	r6, r0
2fff1f9e:	d303      	bcc.n	2fff1fa8 <scmi_clock_rate_set+0x2c>
2fff1fa0:	f06f 0101 	mvn.w	r1, #1
2fff1fa4:	4620      	mov	r0, r4
2fff1fa6:	e7f0      	b.n	2fff1f8a <scmi_clock_rate_set+0xe>
2fff1fa8:	686e      	ldr	r6, [r5, #4]
2fff1faa:	6820      	ldr	r0, [r4, #0]
2fff1fac:	f000 fa9a 	bl	2fff24e4 <plat_scmi_clock_count>
2fff1fb0:	4601      	mov	r1, r0
2fff1fb2:	4630      	mov	r0, r6
2fff1fb4:	f7ff fec6 	bl	2fff1d44 <confine_array_index>
2fff1fb8:	68aa      	ldr	r2, [r5, #8]
2fff1fba:	4601      	mov	r1, r0
2fff1fbc:	6820      	ldr	r0, [r4, #0]
2fff1fbe:	f000 fad0 	bl	2fff2562 <plat_scmi_clock_set_rate>
2fff1fc2:	4601      	mov	r1, r0
2fff1fc4:	e7ee      	b.n	2fff1fa4 <scmi_clock_rate_set+0x28>
	...

2fff1fc8 <scmi_clock_attributes>:
2fff1fc8:	b570      	push	{r4, r5, r6, lr}
2fff1fca:	4604      	mov	r4, r0
2fff1fcc:	68c5      	ldr	r5, [r0, #12]
2fff1fce:	b086      	sub	sp, #24
2fff1fd0:	2218      	movs	r2, #24
2fff1fd2:	2100      	movs	r1, #0
2fff1fd4:	4668      	mov	r0, sp
2fff1fd6:	f007 fcd2 	bl	2fff997e <memset>
2fff1fda:	6923      	ldr	r3, [r4, #16]
2fff1fdc:	2b04      	cmp	r3, #4
2fff1fde:	d006      	beq.n	2fff1fee <scmi_clock_attributes+0x26>
2fff1fe0:	f06f 0109 	mvn.w	r1, #9
2fff1fe4:	4620      	mov	r0, r4
2fff1fe6:	f000 f86f 	bl	2fff20c8 <scmi_status_response>
2fff1fea:	b006      	add	sp, #24
2fff1fec:	bd70      	pop	{r4, r5, r6, pc}
2fff1fee:	682e      	ldr	r6, [r5, #0]
2fff1ff0:	6820      	ldr	r0, [r4, #0]
2fff1ff2:	f000 fa77 	bl	2fff24e4 <plat_scmi_clock_count>
2fff1ff6:	4286      	cmp	r6, r0
2fff1ff8:	d302      	bcc.n	2fff2000 <scmi_clock_attributes+0x38>
2fff1ffa:	f06f 0101 	mvn.w	r1, #1
2fff1ffe:	e7f1      	b.n	2fff1fe4 <scmi_clock_attributes+0x1c>
2fff2000:	682d      	ldr	r5, [r5, #0]
2fff2002:	6820      	ldr	r0, [r4, #0]
2fff2004:	f000 fa6e 	bl	2fff24e4 <plat_scmi_clock_count>
2fff2008:	4601      	mov	r1, r0
2fff200a:	4628      	mov	r0, r5
2fff200c:	f7ff fe9a 	bl	2fff1d44 <confine_array_index>
2fff2010:	4601      	mov	r1, r0
2fff2012:	4605      	mov	r5, r0
2fff2014:	6820      	ldr	r0, [r4, #0]
2fff2016:	f000 fa71 	bl	2fff24fc <plat_scmi_clock_get_name>
2fff201a:	4606      	mov	r6, r0
2fff201c:	b910      	cbnz	r0, 2fff2024 <scmi_clock_attributes+0x5c>
2fff201e:	f06f 0103 	mvn.w	r1, #3
2fff2022:	e7df      	b.n	2fff1fe4 <scmi_clock_attributes+0x1c>
2fff2024:	f007 fe09 	bl	2fff9c3a <strlen>
2fff2028:	280f      	cmp	r0, #15
2fff202a:	d903      	bls.n	2fff2034 <scmi_clock_attributes+0x6c>
2fff202c:	4809      	ldr	r0, [pc, #36]	; (2fff2054 <scmi_clock_attributes+0x8c>)
2fff202e:	21a0      	movs	r1, #160	; 0xa0
2fff2030:	f007 fc5c 	bl	2fff98ec <__assert>
2fff2034:	2210      	movs	r2, #16
2fff2036:	4631      	mov	r1, r6
2fff2038:	a802      	add	r0, sp, #8
2fff203a:	f007 fde2 	bl	2fff9c02 <strlcpy>
2fff203e:	6820      	ldr	r0, [r4, #0]
2fff2040:	4629      	mov	r1, r5
2fff2042:	f000 fac2 	bl	2fff25ca <plat_scmi_clock_get_state>
2fff2046:	9001      	str	r0, [sp, #4]
2fff2048:	2218      	movs	r2, #24
2fff204a:	4669      	mov	r1, sp
2fff204c:	4620      	mov	r0, r4
2fff204e:	f000 f853 	bl	2fff20f8 <scmi_write_response>
2fff2052:	e7ca      	b.n	2fff1fea <scmi_clock_attributes+0x22>
2fff2054:	2fffaab8 	.word	0x2fffaab8

2fff2058 <scmi_clock_config_set>:
2fff2058:	6903      	ldr	r3, [r0, #16]
2fff205a:	b570      	push	{r4, r5, r6, lr}
2fff205c:	2b08      	cmp	r3, #8
2fff205e:	4604      	mov	r4, r0
2fff2060:	d005      	beq.n	2fff206e <scmi_clock_config_set+0x16>
2fff2062:	f06f 0109 	mvn.w	r1, #9
2fff2066:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff206a:	f000 b82d 	b.w	2fff20c8 <scmi_status_response>
2fff206e:	68c5      	ldr	r5, [r0, #12]
2fff2070:	6800      	ldr	r0, [r0, #0]
2fff2072:	682e      	ldr	r6, [r5, #0]
2fff2074:	f000 fa36 	bl	2fff24e4 <plat_scmi_clock_count>
2fff2078:	4286      	cmp	r6, r0
2fff207a:	d303      	bcc.n	2fff2084 <scmi_clock_config_set+0x2c>
2fff207c:	f06f 0101 	mvn.w	r1, #1
2fff2080:	4620      	mov	r0, r4
2fff2082:	e7f0      	b.n	2fff2066 <scmi_clock_config_set+0xe>
2fff2084:	682e      	ldr	r6, [r5, #0]
2fff2086:	6820      	ldr	r0, [r4, #0]
2fff2088:	f000 fa2c 	bl	2fff24e4 <plat_scmi_clock_count>
2fff208c:	4601      	mov	r1, r0
2fff208e:	4630      	mov	r0, r6
2fff2090:	f7ff fe58 	bl	2fff1d44 <confine_array_index>
2fff2094:	686a      	ldr	r2, [r5, #4]
2fff2096:	4601      	mov	r1, r0
2fff2098:	6820      	ldr	r0, [r4, #0]
2fff209a:	f002 0201 	and.w	r2, r2, #1
2fff209e:	f000 faa2 	bl	2fff25e6 <plat_scmi_clock_set_state>
2fff20a2:	4601      	mov	r1, r0
2fff20a4:	e7ec      	b.n	2fff2080 <scmi_clock_config_set+0x28>
	...

2fff20a8 <scmi_msg_get_clock_handler>:
2fff20a8:	6880      	ldr	r0, [r0, #8]
2fff20aa:	b508      	push	{r3, lr}
2fff20ac:	2807      	cmp	r0, #7
2fff20ae:	d806      	bhi.n	2fff20be <scmi_msg_get_clock_handler+0x16>
2fff20b0:	4b04      	ldr	r3, [pc, #16]	; (2fff20c4 <scmi_msg_get_clock_handler+0x1c>)
2fff20b2:	2108      	movs	r1, #8
2fff20b4:	f7ff fe46 	bl	2fff1d44 <confine_array_index>
2fff20b8:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2fff20bc:	bd08      	pop	{r3, pc}
2fff20be:	2000      	movs	r0, #0
2fff20c0:	e7fc      	b.n	2fff20bc <scmi_msg_get_clock_handler+0x14>
2fff20c2:	bf00      	nop
2fff20c4:	2fffaad4 	.word	0x2fffaad4

2fff20c8 <scmi_status_response>:
2fff20c8:	b513      	push	{r0, r1, r4, lr}
2fff20ca:	4604      	mov	r4, r0
2fff20cc:	6940      	ldr	r0, [r0, #20]
2fff20ce:	9101      	str	r1, [sp, #4]
2fff20d0:	b110      	cbz	r0, 2fff20d8 <scmi_status_response+0x10>
2fff20d2:	69a3      	ldr	r3, [r4, #24]
2fff20d4:	2b03      	cmp	r3, #3
2fff20d6:	d803      	bhi.n	2fff20e0 <scmi_status_response+0x18>
2fff20d8:	4806      	ldr	r0, [pc, #24]	; (2fff20f4 <scmi_status_response+0x2c>)
2fff20da:	2110      	movs	r1, #16
2fff20dc:	f007 fc06 	bl	2fff98ec <__assert>
2fff20e0:	2204      	movs	r2, #4
2fff20e2:	eb0d 0102 	add.w	r1, sp, r2
2fff20e6:	f007 fc29 	bl	2fff993c <memcpy>
2fff20ea:	2304      	movs	r3, #4
2fff20ec:	61e3      	str	r3, [r4, #28]
2fff20ee:	b002      	add	sp, #8
2fff20f0:	bd10      	pop	{r4, pc}
2fff20f2:	bf00      	nop
2fff20f4:	2fffaaf4 	.word	0x2fffaaf4

2fff20f8 <scmi_write_response>:
2fff20f8:	b538      	push	{r3, r4, r5, lr}
2fff20fa:	4604      	mov	r4, r0
2fff20fc:	4615      	mov	r5, r2
2fff20fe:	b131      	cbz	r1, 2fff210e <scmi_write_response+0x16>
2fff2100:	2a03      	cmp	r2, #3
2fff2102:	d904      	bls.n	2fff210e <scmi_write_response+0x16>
2fff2104:	6983      	ldr	r3, [r0, #24]
2fff2106:	4293      	cmp	r3, r2
2fff2108:	d301      	bcc.n	2fff210e <scmi_write_response+0x16>
2fff210a:	6940      	ldr	r0, [r0, #20]
2fff210c:	b918      	cbnz	r0, 2fff2116 <scmi_write_response+0x1e>
2fff210e:	4804      	ldr	r0, [pc, #16]	; (2fff2120 <scmi_write_response+0x28>)
2fff2110:	211d      	movs	r1, #29
2fff2112:	f007 fbeb 	bl	2fff98ec <__assert>
2fff2116:	f007 fc11 	bl	2fff993c <memcpy>
2fff211a:	61e5      	str	r5, [r4, #28]
2fff211c:	bd38      	pop	{r3, r4, r5, pc}
2fff211e:	bf00      	nop
2fff2120:	2fffaaf4 	.word	0x2fffaaf4

2fff2124 <scmi_process_message>:
2fff2124:	6843      	ldr	r3, [r0, #4]
2fff2126:	b510      	push	{r4, lr}
2fff2128:	2b14      	cmp	r3, #20
2fff212a:	4604      	mov	r4, r0
2fff212c:	d00b      	beq.n	2fff2146 <scmi_process_message+0x22>
2fff212e:	2b16      	cmp	r3, #22
2fff2130:	d00c      	beq.n	2fff214c <scmi_process_message+0x28>
2fff2132:	2b10      	cmp	r3, #16
2fff2134:	d10d      	bne.n	2fff2152 <scmi_process_message+0x2e>
2fff2136:	f7ff fdf3 	bl	2fff1d20 <scmi_msg_get_base_handler>
2fff213a:	4603      	mov	r3, r0
2fff213c:	b148      	cbz	r0, 2fff2152 <scmi_process_message+0x2e>
2fff213e:	4620      	mov	r0, r4
2fff2140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff2144:	4718      	bx	r3
2fff2146:	f7ff ffaf 	bl	2fff20a8 <scmi_msg_get_clock_handler>
2fff214a:	e7f6      	b.n	2fff213a <scmi_process_message+0x16>
2fff214c:	f000 f8e6 	bl	2fff231c <scmi_msg_get_rd_handler>
2fff2150:	e7f3      	b.n	2fff213a <scmi_process_message+0x16>
2fff2152:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
2fff2156:	4805      	ldr	r0, [pc, #20]	; (2fff216c <scmi_process_message+0x48>)
2fff2158:	f000 fb84 	bl	2fff2864 <tf_log>
2fff215c:	4620      	mov	r0, r4
2fff215e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff2162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff2166:	f7ff bfaf 	b.w	2fff20c8 <scmi_status_response>
2fff216a:	bf00      	nop
2fff216c:	2fffab10 	.word	0x2fffab10

2fff2170 <report_message_attributes>:
2fff2170:	b507      	push	{r0, r1, r2, lr}
2fff2172:	2200      	movs	r2, #0
2fff2174:	e9cd 2200 	strd	r2, r2, [sp]
2fff2178:	6902      	ldr	r2, [r0, #16]
2fff217a:	4603      	mov	r3, r0
2fff217c:	68c1      	ldr	r1, [r0, #12]
2fff217e:	2a04      	cmp	r2, #4
2fff2180:	d004      	beq.n	2fff218c <report_message_attributes+0x1c>
2fff2182:	f06f 0109 	mvn.w	r1, #9
2fff2186:	f7ff ff9f 	bl	2fff20c8 <scmi_status_response>
2fff218a:	e00a      	b.n	2fff21a2 <report_message_attributes+0x32>
2fff218c:	680a      	ldr	r2, [r1, #0]
2fff218e:	2a04      	cmp	r2, #4
2fff2190:	d80a      	bhi.n	2fff21a8 <report_message_attributes+0x38>
2fff2192:	4907      	ldr	r1, [pc, #28]	; (2fff21b0 <report_message_attributes+0x40>)
2fff2194:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff2198:	b132      	cbz	r2, 2fff21a8 <report_message_attributes+0x38>
2fff219a:	2208      	movs	r2, #8
2fff219c:	4669      	mov	r1, sp
2fff219e:	f7ff ffab 	bl	2fff20f8 <scmi_write_response>
2fff21a2:	b003      	add	sp, #12
2fff21a4:	f85d fb04 	ldr.w	pc, [sp], #4
2fff21a8:	f06f 0103 	mvn.w	r1, #3
2fff21ac:	4618      	mov	r0, r3
2fff21ae:	e7ea      	b.n	2fff2186 <report_message_attributes+0x16>
2fff21b0:	2fffab68 	.word	0x2fffab68

2fff21b4 <report_version>:
2fff21b4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
2fff21b8:	b507      	push	{r0, r1, r2, lr}
2fff21ba:	2200      	movs	r2, #0
2fff21bc:	e9cd 2300 	strd	r2, r3, [sp]
2fff21c0:	6903      	ldr	r3, [r0, #16]
2fff21c2:	b133      	cbz	r3, 2fff21d2 <report_version+0x1e>
2fff21c4:	f06f 0109 	mvn.w	r1, #9
2fff21c8:	f7ff ff7e 	bl	2fff20c8 <scmi_status_response>
2fff21cc:	b003      	add	sp, #12
2fff21ce:	f85d fb04 	ldr.w	pc, [sp], #4
2fff21d2:	2208      	movs	r2, #8
2fff21d4:	4669      	mov	r1, sp
2fff21d6:	f7ff ff8f 	bl	2fff20f8 <scmi_write_response>
2fff21da:	e7f7      	b.n	2fff21cc <report_version+0x18>

2fff21dc <report_attributes>:
2fff21dc:	b513      	push	{r0, r1, r4, lr}
2fff21de:	4604      	mov	r4, r0
2fff21e0:	6800      	ldr	r0, [r0, #0]
2fff21e2:	2300      	movs	r3, #0
2fff21e4:	9300      	str	r3, [sp, #0]
2fff21e6:	f000 fa27 	bl	2fff2638 <plat_scmi_rd_count>
2fff21ea:	6923      	ldr	r3, [r4, #16]
2fff21ec:	9001      	str	r0, [sp, #4]
2fff21ee:	b133      	cbz	r3, 2fff21fe <report_attributes+0x22>
2fff21f0:	f06f 0109 	mvn.w	r1, #9
2fff21f4:	4620      	mov	r0, r4
2fff21f6:	f7ff ff67 	bl	2fff20c8 <scmi_status_response>
2fff21fa:	b002      	add	sp, #8
2fff21fc:	bd10      	pop	{r4, pc}
2fff21fe:	2208      	movs	r2, #8
2fff2200:	4669      	mov	r1, sp
2fff2202:	4620      	mov	r0, r4
2fff2204:	f7ff ff78 	bl	2fff20f8 <scmi_write_response>
2fff2208:	e7f7      	b.n	2fff21fa <report_attributes+0x1e>
	...

2fff220c <reset_domain_attributes>:
2fff220c:	6903      	ldr	r3, [r0, #16]
2fff220e:	b570      	push	{r4, r5, r6, lr}
2fff2210:	2b04      	cmp	r3, #4
2fff2212:	b088      	sub	sp, #32
2fff2214:	4604      	mov	r4, r0
2fff2216:	d006      	beq.n	2fff2226 <reset_domain_attributes+0x1a>
2fff2218:	f06f 0109 	mvn.w	r1, #9
2fff221c:	b008      	add	sp, #32
2fff221e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff2222:	f7ff bf51 	b.w	2fff20c8 <scmi_status_response>
2fff2226:	68c5      	ldr	r5, [r0, #12]
2fff2228:	6800      	ldr	r0, [r0, #0]
2fff222a:	682e      	ldr	r6, [r5, #0]
2fff222c:	f000 fa04 	bl	2fff2638 <plat_scmi_rd_count>
2fff2230:	4286      	cmp	r6, r0
2fff2232:	d303      	bcc.n	2fff223c <reset_domain_attributes+0x30>
2fff2234:	f06f 0101 	mvn.w	r1, #1
2fff2238:	4620      	mov	r0, r4
2fff223a:	e7ef      	b.n	2fff221c <reset_domain_attributes+0x10>
2fff223c:	682d      	ldr	r5, [r5, #0]
2fff223e:	6820      	ldr	r0, [r4, #0]
2fff2240:	f000 f9fa 	bl	2fff2638 <plat_scmi_rd_count>
2fff2244:	4629      	mov	r1, r5
2fff2246:	4281      	cmp	r1, r0
2fff2248:	bf28      	it	cs
2fff224a:	2100      	movcs	r1, #0
2fff224c:	f3af 8014 	csdb
2fff2250:	6820      	ldr	r0, [r4, #0]
2fff2252:	f000 f9ea 	bl	2fff262a <plat_scmi_rd_get_name>
2fff2256:	4605      	mov	r5, r0
2fff2258:	b910      	cbnz	r0, 2fff2260 <reset_domain_attributes+0x54>
2fff225a:	f06f 0103 	mvn.w	r1, #3
2fff225e:	e7eb      	b.n	2fff2238 <reset_domain_attributes+0x2c>
2fff2260:	211c      	movs	r1, #28
2fff2262:	a801      	add	r0, sp, #4
2fff2264:	f006 ec5e 	blx	2fff8b24 <zero_normalmem>
2fff2268:	2300      	movs	r3, #0
2fff226a:	4628      	mov	r0, r5
2fff226c:	9301      	str	r3, [sp, #4]
2fff226e:	9302      	str	r3, [sp, #8]
2fff2270:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
2fff2274:	9303      	str	r3, [sp, #12]
2fff2276:	f007 fce0 	bl	2fff9c3a <strlen>
2fff227a:	280f      	cmp	r0, #15
2fff227c:	d903      	bls.n	2fff2286 <reset_domain_attributes+0x7a>
2fff227e:	4808      	ldr	r0, [pc, #32]	; (2fff22a0 <reset_domain_attributes+0x94>)
2fff2280:	2182      	movs	r1, #130	; 0x82
2fff2282:	f007 fb33 	bl	2fff98ec <__assert>
2fff2286:	2210      	movs	r2, #16
2fff2288:	4629      	mov	r1, r5
2fff228a:	eb0d 0002 	add.w	r0, sp, r2
2fff228e:	f007 fcb8 	bl	2fff9c02 <strlcpy>
2fff2292:	221c      	movs	r2, #28
2fff2294:	a901      	add	r1, sp, #4
2fff2296:	4620      	mov	r0, r4
2fff2298:	f7ff ff2e 	bl	2fff20f8 <scmi_write_response>
2fff229c:	b008      	add	sp, #32
2fff229e:	bd70      	pop	{r4, r5, r6, pc}
2fff22a0:	2fffab44 	.word	0x2fffab44

2fff22a4 <reset_request>:
2fff22a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff22a6:	2300      	movs	r3, #0
2fff22a8:	68c6      	ldr	r6, [r0, #12]
2fff22aa:	4604      	mov	r4, r0
2fff22ac:	6800      	ldr	r0, [r0, #0]
2fff22ae:	6835      	ldr	r5, [r6, #0]
2fff22b0:	9301      	str	r3, [sp, #4]
2fff22b2:	f000 f9c1 	bl	2fff2638 <plat_scmi_rd_count>
2fff22b6:	4285      	cmp	r5, r0
2fff22b8:	bf28      	it	cs
2fff22ba:	2500      	movcs	r5, #0
2fff22bc:	f3af 8014 	csdb
2fff22c0:	6923      	ldr	r3, [r4, #16]
2fff22c2:	2b0c      	cmp	r3, #12
2fff22c4:	d006      	beq.n	2fff22d4 <reset_request+0x30>
2fff22c6:	f06f 0109 	mvn.w	r1, #9
2fff22ca:	4620      	mov	r0, r4
2fff22cc:	f7ff fefc 	bl	2fff20c8 <scmi_status_response>
2fff22d0:	b003      	add	sp, #12
2fff22d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff22d4:	6837      	ldr	r7, [r6, #0]
2fff22d6:	6820      	ldr	r0, [r4, #0]
2fff22d8:	f000 f9ae 	bl	2fff2638 <plat_scmi_rd_count>
2fff22dc:	4287      	cmp	r7, r0
2fff22de:	d302      	bcc.n	2fff22e6 <reset_request+0x42>
2fff22e0:	f06f 0103 	mvn.w	r1, #3
2fff22e4:	e7f1      	b.n	2fff22ca <reset_request+0x26>
2fff22e6:	6872      	ldr	r2, [r6, #4]
2fff22e8:	6820      	ldr	r0, [r4, #0]
2fff22ea:	07d3      	lsls	r3, r2, #31
2fff22ec:	d50e      	bpl.n	2fff230c <reset_request+0x68>
2fff22ee:	68b2      	ldr	r2, [r6, #8]
2fff22f0:	4629      	mov	r1, r5
2fff22f2:	f000 f9ad 	bl	2fff2650 <plat_scmi_rd_autonomous>
2fff22f6:	9001      	str	r0, [sp, #4]
2fff22f8:	9901      	ldr	r1, [sp, #4]
2fff22fa:	2900      	cmp	r1, #0
2fff22fc:	d1e5      	bne.n	2fff22ca <reset_request+0x26>
2fff22fe:	2204      	movs	r2, #4
2fff2300:	4620      	mov	r0, r4
2fff2302:	eb0d 0102 	add.w	r1, sp, r2
2fff2306:	f7ff fef7 	bl	2fff20f8 <scmi_write_response>
2fff230a:	e7e1      	b.n	2fff22d0 <reset_request+0x2c>
2fff230c:	f012 0202 	ands.w	r2, r2, #2
2fff2310:	4629      	mov	r1, r5
2fff2312:	bf18      	it	ne
2fff2314:	2201      	movne	r2, #1
2fff2316:	f000 f9be 	bl	2fff2696 <plat_scmi_rd_set_state>
2fff231a:	e7ec      	b.n	2fff22f6 <reset_request+0x52>

2fff231c <scmi_msg_get_rd_handler>:
2fff231c:	6883      	ldr	r3, [r0, #8]
2fff231e:	2b04      	cmp	r3, #4
2fff2320:	d809      	bhi.n	2fff2336 <scmi_msg_get_rd_handler+0x1a>
2fff2322:	2205      	movs	r2, #5
2fff2324:	4293      	cmp	r3, r2
2fff2326:	bf28      	it	cs
2fff2328:	2300      	movcs	r3, #0
2fff232a:	f3af 8014 	csdb
2fff232e:	4a03      	ldr	r2, [pc, #12]	; (2fff233c <scmi_msg_get_rd_handler+0x20>)
2fff2330:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
2fff2334:	4770      	bx	lr
2fff2336:	2000      	movs	r0, #0
2fff2338:	4770      	bx	lr
2fff233a:	bf00      	nop
2fff233c:	2fffab68 	.word	0x2fffab68

2fff2340 <scmi_proccess_smt>:
2fff2340:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff2344:	b088      	sub	sp, #32
2fff2346:	4680      	mov	r8, r0
2fff2348:	4689      	mov	r9, r1
2fff234a:	f000 f8ad 	bl	2fff24a8 <plat_scmi_get_channel>
2fff234e:	4605      	mov	r5, r0
2fff2350:	2800      	cmp	r0, #0
2fff2352:	d041      	beq.n	2fff23d8 <scmi_proccess_smt+0x98>
2fff2354:	6804      	ldr	r4, [r0, #0]
2fff2356:	b91c      	cbnz	r4, 2fff2360 <scmi_proccess_smt+0x20>
2fff2358:	217b      	movs	r1, #123	; 0x7b
2fff235a:	4823      	ldr	r0, [pc, #140]	; (2fff23e8 <scmi_proccess_smt+0xa8>)
2fff235c:	f007 fac6 	bl	2fff98ec <__assert>
2fff2360:	4822      	ldr	r0, [pc, #136]	; (2fff23ec <scmi_proccess_smt+0xac>)
2fff2362:	f8d4 a004 	ldr.w	sl, [r4, #4]
2fff2366:	f006 ea02 	blx	2fff876c <spin_lock>
2fff236a:	7a2f      	ldrb	r7, [r5, #8]
2fff236c:	b90f      	cbnz	r7, 2fff2372 <scmi_proccess_smt+0x32>
2fff236e:	2301      	movs	r3, #1
2fff2370:	722b      	strb	r3, [r5, #8]
2fff2372:	481e      	ldr	r0, [pc, #120]	; (2fff23ec <scmi_proccess_smt+0xac>)
2fff2374:	f006 ea0c 	blx	2fff8790 <spin_unlock>
2fff2378:	bb8f      	cbnz	r7, 2fff23de <scmi_proccess_smt+0x9e>
2fff237a:	6966      	ldr	r6, [r4, #20]
2fff237c:	3e04      	subs	r6, #4
2fff237e:	2e5c      	cmp	r6, #92	; 0x5c
2fff2380:	d82d      	bhi.n	2fff23de <scmi_proccess_smt+0x9e>
2fff2382:	f01a 0f03 	tst.w	sl, #3
2fff2386:	d12a      	bne.n	2fff23de <scmi_proccess_smt+0x9e>
2fff2388:	2120      	movs	r1, #32
2fff238a:	4668      	mov	r0, sp
2fff238c:	f006 ebca 	blx	2fff8b24 <zero_normalmem>
2fff2390:	686b      	ldr	r3, [r5, #4]
2fff2392:	f104 011c 	add.w	r1, r4, #28
2fff2396:	f8cd 900c 	str.w	r9, [sp, #12]
2fff239a:	9604      	str	r6, [sp, #16]
2fff239c:	3b20      	subs	r3, #32
2fff239e:	9105      	str	r1, [sp, #20]
2fff23a0:	2b03      	cmp	r3, #3
2fff23a2:	9306      	str	r3, [sp, #24]
2fff23a4:	d801      	bhi.n	2fff23aa <scmi_proccess_smt+0x6a>
2fff23a6:	2199      	movs	r1, #153	; 0x99
2fff23a8:	e7d7      	b.n	2fff235a <scmi_proccess_smt+0x1a>
2fff23aa:	4632      	mov	r2, r6
2fff23ac:	4648      	mov	r0, r9
2fff23ae:	f007 fac5 	bl	2fff993c <memcpy>
2fff23b2:	69a3      	ldr	r3, [r4, #24]
2fff23b4:	4668      	mov	r0, sp
2fff23b6:	f8cd 8000 	str.w	r8, [sp]
2fff23ba:	f3c3 2287 	ubfx	r2, r3, #10, #8
2fff23be:	b2db      	uxtb	r3, r3
2fff23c0:	9302      	str	r3, [sp, #8]
2fff23c2:	9201      	str	r2, [sp, #4]
2fff23c4:	f7ff feae 	bl	2fff2124 <scmi_process_message>
2fff23c8:	9b07      	ldr	r3, [sp, #28]
2fff23ca:	3304      	adds	r3, #4
2fff23cc:	6163      	str	r3, [r4, #20]
2fff23ce:	6863      	ldr	r3, [r4, #4]
2fff23d0:	722f      	strb	r7, [r5, #8]
2fff23d2:	f043 0301 	orr.w	r3, r3, #1
2fff23d6:	6063      	str	r3, [r4, #4]
2fff23d8:	b008      	add	sp, #32
2fff23da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff23de:	6863      	ldr	r3, [r4, #4]
2fff23e0:	f043 0303 	orr.w	r3, r3, #3
2fff23e4:	e7f7      	b.n	2fff23d6 <scmi_proccess_smt+0x96>
2fff23e6:	bf00      	nop
2fff23e8:	2fffab7c 	.word	0x2fffab7c
2fff23ec:	2fffe9c4 	.word	0x2fffe9c4

2fff23f0 <scmi_smt_fastcall_smc_entry>:
2fff23f0:	b510      	push	{r4, lr}
2fff23f2:	4604      	mov	r4, r0
2fff23f4:	f006 edc4 	blx	2fff8f80 <plat_my_core_pos>
2fff23f8:	4b04      	ldr	r3, [pc, #16]	; (2fff240c <scmi_smt_fastcall_smc_entry+0x1c>)
2fff23fa:	215c      	movs	r1, #92	; 0x5c
2fff23fc:	fb01 3100 	mla	r1, r1, r0, r3
2fff2400:	4620      	mov	r0, r4
2fff2402:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff2406:	f7ff bf9b 	b.w	2fff2340 <scmi_proccess_smt>
2fff240a:	bf00      	nop
2fff240c:	2fffe90c 	.word	0x2fffe90c

2fff2410 <scmi_smt_init_agent_channel>:
2fff2410:	b510      	push	{r4, lr}
2fff2412:	b148      	cbz	r0, 2fff2428 <scmi_smt_init_agent_channel+0x18>
2fff2414:	6804      	ldr	r4, [r0, #0]
2fff2416:	b13c      	cbz	r4, 2fff2428 <scmi_smt_init_agent_channel+0x18>
2fff2418:	2220      	movs	r2, #32
2fff241a:	2100      	movs	r1, #0
2fff241c:	4620      	mov	r0, r4
2fff241e:	f007 faae 	bl	2fff997e <memset>
2fff2422:	2301      	movs	r3, #1
2fff2424:	6063      	str	r3, [r4, #4]
2fff2426:	bd10      	pop	{r4, pc}
2fff2428:	f000 fac0 	bl	2fff29ac <console_flush>
2fff242c:	f006 ea24 	blx	2fff8878 <do_panic>

2fff2430 <find_resource.part.0>:
2fff2430:	4802      	ldr	r0, [pc, #8]	; (2fff243c <find_resource.part.0+0xc>)
2fff2432:	219b      	movs	r1, #155	; 0x9b
2fff2434:	b508      	push	{r3, lr}
2fff2436:	f007 fa59 	bl	2fff98ec <__assert>
2fff243a:	bf00      	nop
2fff243c:	2fffab96 	.word	0x2fffab96

2fff2440 <find_clock>:
2fff2440:	2801      	cmp	r0, #1
2fff2442:	b510      	push	{r4, lr}
2fff2444:	d809      	bhi.n	2fff245a <find_clock+0x1a>
2fff2446:	4a0a      	ldr	r2, [pc, #40]	; (2fff2470 <find_clock+0x30>)
2fff2448:	2300      	movs	r3, #0
2fff244a:	0104      	lsls	r4, r0, #4
2fff244c:	eb02 1000 	add.w	r0, r2, r0, lsl #4
2fff2450:	6840      	ldr	r0, [r0, #4]
2fff2452:	4283      	cmp	r3, r0
2fff2454:	d103      	bne.n	2fff245e <find_clock+0x1e>
2fff2456:	2000      	movs	r0, #0
2fff2458:	e007      	b.n	2fff246a <find_clock+0x2a>
2fff245a:	f7ff ffe9 	bl	2fff2430 <find_resource.part.0>
2fff245e:	4299      	cmp	r1, r3
2fff2460:	d104      	bne.n	2fff246c <find_clock+0x2c>
2fff2462:	5910      	ldr	r0, [r2, r4]
2fff2464:	230c      	movs	r3, #12
2fff2466:	fb03 0001 	mla	r0, r3, r1, r0
2fff246a:	bd10      	pop	{r4, pc}
2fff246c:	3301      	adds	r3, #1
2fff246e:	e7f0      	b.n	2fff2452 <find_clock+0x12>
2fff2470:	2fffacb8 	.word	0x2fffacb8

2fff2474 <find_rd>:
2fff2474:	2801      	cmp	r0, #1
2fff2476:	b510      	push	{r4, lr}
2fff2478:	d809      	bhi.n	2fff248e <find_rd+0x1a>
2fff247a:	4a0a      	ldr	r2, [pc, #40]	; (2fff24a4 <find_rd+0x30>)
2fff247c:	2300      	movs	r3, #0
2fff247e:	0104      	lsls	r4, r0, #4
2fff2480:	eb02 1000 	add.w	r0, r2, r0, lsl #4
2fff2484:	68c0      	ldr	r0, [r0, #12]
2fff2486:	4283      	cmp	r3, r0
2fff2488:	d103      	bne.n	2fff2492 <find_rd+0x1e>
2fff248a:	2000      	movs	r0, #0
2fff248c:	e007      	b.n	2fff249e <find_rd+0x2a>
2fff248e:	f7ff ffcf 	bl	2fff2430 <find_resource.part.0>
2fff2492:	4299      	cmp	r1, r3
2fff2494:	d104      	bne.n	2fff24a0 <find_rd+0x2c>
2fff2496:	4422      	add	r2, r4
2fff2498:	6890      	ldr	r0, [r2, #8]
2fff249a:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
2fff249e:	bd10      	pop	{r4, pc}
2fff24a0:	3301      	adds	r3, #1
2fff24a2:	e7f0      	b.n	2fff2486 <find_rd+0x12>
2fff24a4:	2fffacb8 	.word	0x2fffacb8

2fff24a8 <plat_scmi_get_channel>:
2fff24a8:	2801      	cmp	r0, #1
2fff24aa:	b508      	push	{r3, lr}
2fff24ac:	d903      	bls.n	2fff24b6 <plat_scmi_get_channel+0xe>
2fff24ae:	4804      	ldr	r0, [pc, #16]	; (2fff24c0 <plat_scmi_get_channel+0x18>)
2fff24b0:	2147      	movs	r1, #71	; 0x47
2fff24b2:	f007 fa1b 	bl	2fff98ec <__assert>
2fff24b6:	4b03      	ldr	r3, [pc, #12]	; (2fff24c4 <plat_scmi_get_channel+0x1c>)
2fff24b8:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff24bc:	bd08      	pop	{r3, pc}
2fff24be:	bf00      	nop
2fff24c0:	2fffab96 	.word	0x2fffab96
2fff24c4:	2fffd20c 	.word	0x2fffd20c

2fff24c8 <plat_scmi_vendor_name>:
2fff24c8:	4800      	ldr	r0, [pc, #0]	; (2fff24cc <plat_scmi_vendor_name+0x4>)
2fff24ca:	4770      	bx	lr
2fff24cc:	2fffacdc 	.word	0x2fffacdc

2fff24d0 <plat_scmi_sub_vendor_name>:
2fff24d0:	4800      	ldr	r0, [pc, #0]	; (2fff24d4 <plat_scmi_sub_vendor_name+0x4>)
2fff24d2:	4770      	bx	lr
2fff24d4:	2fffacdb 	.word	0x2fffacdb

2fff24d8 <plat_scmi_protocol_count>:
2fff24d8:	2002      	movs	r0, #2
2fff24da:	4770      	bx	lr

2fff24dc <plat_scmi_protocol_list>:
2fff24dc:	4800      	ldr	r0, [pc, #0]	; (2fff24e0 <plat_scmi_protocol_list+0x4>)
2fff24de:	4770      	bx	lr
2fff24e0:	2fffacd8 	.word	0x2fffacd8

2fff24e4 <plat_scmi_clock_count>:
2fff24e4:	2801      	cmp	r0, #1
2fff24e6:	b508      	push	{r3, lr}
2fff24e8:	d901      	bls.n	2fff24ee <plat_scmi_clock_count+0xa>
2fff24ea:	f7ff ffa1 	bl	2fff2430 <find_resource.part.0>
2fff24ee:	4b02      	ldr	r3, [pc, #8]	; (2fff24f8 <plat_scmi_clock_count+0x14>)
2fff24f0:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff24f4:	6840      	ldr	r0, [r0, #4]
2fff24f6:	bd08      	pop	{r3, pc}
2fff24f8:	2fffacb8 	.word	0x2fffacb8

2fff24fc <plat_scmi_clock_get_name>:
2fff24fc:	b510      	push	{r4, lr}
2fff24fe:	f7ff ff9f 	bl	2fff2440 <find_clock>
2fff2502:	4604      	mov	r4, r0
2fff2504:	b908      	cbnz	r0, 2fff250a <plat_scmi_clock_get_name+0xe>
2fff2506:	2000      	movs	r0, #0
2fff2508:	bd10      	pop	{r4, pc}
2fff250a:	6800      	ldr	r0, [r0, #0]
2fff250c:	f7fe fabe 	bl	2fff0a8c <stm32mp_nsec_can_access_clock>
2fff2510:	2800      	cmp	r0, #0
2fff2512:	d0f8      	beq.n	2fff2506 <plat_scmi_clock_get_name+0xa>
2fff2514:	6860      	ldr	r0, [r4, #4]
2fff2516:	e7f7      	b.n	2fff2508 <plat_scmi_clock_get_name+0xc>

2fff2518 <plat_scmi_clock_rates_array>:
2fff2518:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff251c:	4770      	bx	lr

2fff251e <plat_scmi_clock_rates_by_step>:
2fff251e:	b570      	push	{r4, r5, r6, lr}
2fff2520:	460e      	mov	r6, r1
2fff2522:	4614      	mov	r4, r2
2fff2524:	f7ff ff8c 	bl	2fff2440 <find_clock>
2fff2528:	4605      	mov	r5, r0
2fff252a:	b1a0      	cbz	r0, 2fff2556 <plat_scmi_clock_rates_by_step+0x38>
2fff252c:	6800      	ldr	r0, [r0, #0]
2fff252e:	f7fe faad 	bl	2fff0a8c <stm32mp_nsec_can_access_clock>
2fff2532:	b198      	cbz	r0, 2fff255c <plat_scmi_clock_rates_by_step+0x3e>
2fff2534:	2e07      	cmp	r6, #7
2fff2536:	d106      	bne.n	2fff2546 <plat_scmi_clock_rates_by_step+0x28>
2fff2538:	2000      	movs	r0, #0
2fff253a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2fff253e:	2301      	movs	r3, #1
2fff2540:	e884 000d 	stmia.w	r4, {r0, r2, r3}
2fff2544:	bd70      	pop	{r4, r5, r6, pc}
2fff2546:	6828      	ldr	r0, [r5, #0]
2fff2548:	f002 fe20 	bl	2fff518c <stm32mp_clk_get_rate>
2fff254c:	6020      	str	r0, [r4, #0]
2fff254e:	6060      	str	r0, [r4, #4]
2fff2550:	2000      	movs	r0, #0
2fff2552:	60a0      	str	r0, [r4, #8]
2fff2554:	e7f6      	b.n	2fff2544 <plat_scmi_clock_rates_by_step+0x26>
2fff2556:	f06f 0003 	mvn.w	r0, #3
2fff255a:	e7f3      	b.n	2fff2544 <plat_scmi_clock_rates_by_step+0x26>
2fff255c:	f06f 0002 	mvn.w	r0, #2
2fff2560:	e7f0      	b.n	2fff2544 <plat_scmi_clock_rates_by_step+0x26>

2fff2562 <plat_scmi_clock_set_rate>:
2fff2562:	b570      	push	{r4, r5, r6, lr}
2fff2564:	460e      	mov	r6, r1
2fff2566:	4615      	mov	r5, r2
2fff2568:	f7ff ff6a 	bl	2fff2440 <find_clock>
2fff256c:	4604      	mov	r4, r0
2fff256e:	b1b0      	cbz	r0, 2fff259e <plat_scmi_clock_set_rate+0x3c>
2fff2570:	6800      	ldr	r0, [r0, #0]
2fff2572:	f7fe fa8b 	bl	2fff0a8c <stm32mp_nsec_can_access_clock>
2fff2576:	b1a8      	cbz	r0, 2fff25a4 <plat_scmi_clock_set_rate+0x42>
2fff2578:	2e07      	cmp	r6, #7
2fff257a:	d108      	bne.n	2fff258e <plat_scmi_clock_set_rate+0x2c>
2fff257c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
2fff2580:	fbb5 f0f0 	udiv	r0, r5, r0
2fff2584:	f002 ff72 	bl	2fff546c <stm32mp1_set_opp_khz>
2fff2588:	b930      	cbnz	r0, 2fff2598 <plat_scmi_clock_set_rate+0x36>
2fff258a:	2000      	movs	r0, #0
2fff258c:	bd70      	pop	{r4, r5, r6, pc}
2fff258e:	6820      	ldr	r0, [r4, #0]
2fff2590:	f002 fdfc 	bl	2fff518c <stm32mp_clk_get_rate>
2fff2594:	42a8      	cmp	r0, r5
2fff2596:	d0f8      	beq.n	2fff258a <plat_scmi_clock_set_rate+0x28>
2fff2598:	f06f 0001 	mvn.w	r0, #1
2fff259c:	e7f6      	b.n	2fff258c <plat_scmi_clock_set_rate+0x2a>
2fff259e:	f06f 0003 	mvn.w	r0, #3
2fff25a2:	e7f3      	b.n	2fff258c <plat_scmi_clock_set_rate+0x2a>
2fff25a4:	f06f 0002 	mvn.w	r0, #2
2fff25a8:	e7f0      	b.n	2fff258c <plat_scmi_clock_set_rate+0x2a>

2fff25aa <plat_scmi_clock_get_rate>:
2fff25aa:	b510      	push	{r4, lr}
2fff25ac:	f7ff ff48 	bl	2fff2440 <find_clock>
2fff25b0:	4604      	mov	r4, r0
2fff25b2:	b140      	cbz	r0, 2fff25c6 <plat_scmi_clock_get_rate+0x1c>
2fff25b4:	6800      	ldr	r0, [r0, #0]
2fff25b6:	f7fe fa69 	bl	2fff0a8c <stm32mp_nsec_can_access_clock>
2fff25ba:	b120      	cbz	r0, 2fff25c6 <plat_scmi_clock_get_rate+0x1c>
2fff25bc:	6820      	ldr	r0, [r4, #0]
2fff25be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff25c2:	f002 bde3 	b.w	2fff518c <stm32mp_clk_get_rate>
2fff25c6:	2000      	movs	r0, #0
2fff25c8:	bd10      	pop	{r4, pc}

2fff25ca <plat_scmi_clock_get_state>:
2fff25ca:	b510      	push	{r4, lr}
2fff25cc:	f7ff ff38 	bl	2fff2440 <find_clock>
2fff25d0:	4604      	mov	r4, r0
2fff25d2:	b908      	cbnz	r0, 2fff25d8 <plat_scmi_clock_get_state+0xe>
2fff25d4:	2000      	movs	r0, #0
2fff25d6:	bd10      	pop	{r4, pc}
2fff25d8:	6800      	ldr	r0, [r0, #0]
2fff25da:	f7fe fa57 	bl	2fff0a8c <stm32mp_nsec_can_access_clock>
2fff25de:	2800      	cmp	r0, #0
2fff25e0:	d0f8      	beq.n	2fff25d4 <plat_scmi_clock_get_state+0xa>
2fff25e2:	7a20      	ldrb	r0, [r4, #8]
2fff25e4:	e7f7      	b.n	2fff25d6 <plat_scmi_clock_get_state+0xc>

2fff25e6 <plat_scmi_clock_set_state>:
2fff25e6:	b570      	push	{r4, r5, r6, lr}
2fff25e8:	4616      	mov	r6, r2
2fff25ea:	f7ff ff29 	bl	2fff2440 <find_clock>
2fff25ee:	4605      	mov	r5, r0
2fff25f0:	b1a8      	cbz	r0, 2fff261e <plat_scmi_clock_set_state+0x38>
2fff25f2:	6800      	ldr	r0, [r0, #0]
2fff25f4:	f7fe fa4a 	bl	2fff0a8c <stm32mp_nsec_can_access_clock>
2fff25f8:	b1a0      	cbz	r0, 2fff2624 <plat_scmi_clock_set_state+0x3e>
2fff25fa:	7a2c      	ldrb	r4, [r5, #8]
2fff25fc:	b13e      	cbz	r6, 2fff260e <plat_scmi_clock_set_state+0x28>
2fff25fe:	b964      	cbnz	r4, 2fff261a <plat_scmi_clock_set_state+0x34>
2fff2600:	6828      	ldr	r0, [r5, #0]
2fff2602:	f002 fd97 	bl	2fff5134 <stm32mp_clk_enable>
2fff2606:	2301      	movs	r3, #1
2fff2608:	722b      	strb	r3, [r5, #8]
2fff260a:	4620      	mov	r0, r4
2fff260c:	e009      	b.n	2fff2622 <plat_scmi_clock_set_state+0x3c>
2fff260e:	2c00      	cmp	r4, #0
2fff2610:	d0fb      	beq.n	2fff260a <plat_scmi_clock_set_state+0x24>
2fff2612:	6828      	ldr	r0, [r5, #0]
2fff2614:	f002 fd91 	bl	2fff513a <stm32mp_clk_disable>
2fff2618:	722e      	strb	r6, [r5, #8]
2fff261a:	2000      	movs	r0, #0
2fff261c:	e001      	b.n	2fff2622 <plat_scmi_clock_set_state+0x3c>
2fff261e:	f06f 0003 	mvn.w	r0, #3
2fff2622:	bd70      	pop	{r4, r5, r6, pc}
2fff2624:	f06f 0002 	mvn.w	r0, #2
2fff2628:	e7fb      	b.n	2fff2622 <plat_scmi_clock_set_state+0x3c>

2fff262a <plat_scmi_rd_get_name>:
2fff262a:	b508      	push	{r3, lr}
2fff262c:	f7ff ff22 	bl	2fff2474 <find_rd>
2fff2630:	b100      	cbz	r0, 2fff2634 <plat_scmi_rd_get_name+0xa>
2fff2632:	6840      	ldr	r0, [r0, #4]
2fff2634:	bd08      	pop	{r3, pc}
	...

2fff2638 <plat_scmi_rd_count>:
2fff2638:	2801      	cmp	r0, #1
2fff263a:	b508      	push	{r3, lr}
2fff263c:	d901      	bls.n	2fff2642 <plat_scmi_rd_count+0xa>
2fff263e:	f7ff fef7 	bl	2fff2430 <find_resource.part.0>
2fff2642:	4b02      	ldr	r3, [pc, #8]	; (2fff264c <plat_scmi_rd_count+0x14>)
2fff2644:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff2648:	68c0      	ldr	r0, [r0, #12]
2fff264a:	bd08      	pop	{r3, pc}
2fff264c:	2fffacb8 	.word	0x2fffacb8

2fff2650 <plat_scmi_rd_autonomous>:
2fff2650:	b538      	push	{r3, r4, r5, lr}
2fff2652:	4615      	mov	r5, r2
2fff2654:	f7ff ff0e 	bl	2fff2474 <find_rd>
2fff2658:	4604      	mov	r4, r0
2fff265a:	b198      	cbz	r0, 2fff2684 <plat_scmi_rd_autonomous+0x34>
2fff265c:	6800      	ldr	r0, [r0, #0]
2fff265e:	f7fe fa75 	bl	2fff0b4c <stm32mp_nsec_can_access_reset>
2fff2662:	b190      	cbz	r0, 2fff268a <plat_scmi_rd_autonomous+0x3a>
2fff2664:	b9a5      	cbnz	r5, 2fff2690 <plat_scmi_rd_autonomous+0x40>
2fff2666:	6820      	ldr	r0, [r4, #0]
2fff2668:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff266c:	f005 fa90 	bl	2fff7b90 <stm32mp_reset_assert_to>
2fff2670:	b928      	cbnz	r0, 2fff267e <plat_scmi_rd_autonomous+0x2e>
2fff2672:	6820      	ldr	r0, [r4, #0]
2fff2674:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff2678:	f005 fac6 	bl	2fff7c08 <stm32mp_reset_deassert_to>
2fff267c:	b108      	cbz	r0, 2fff2682 <plat_scmi_rd_autonomous+0x32>
2fff267e:	f06f 0008 	mvn.w	r0, #8
2fff2682:	bd38      	pop	{r3, r4, r5, pc}
2fff2684:	f06f 0003 	mvn.w	r0, #3
2fff2688:	e7fb      	b.n	2fff2682 <plat_scmi_rd_autonomous+0x32>
2fff268a:	f06f 0002 	mvn.w	r0, #2
2fff268e:	e7f8      	b.n	2fff2682 <plat_scmi_rd_autonomous+0x32>
2fff2690:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff2694:	e7f5      	b.n	2fff2682 <plat_scmi_rd_autonomous+0x32>

2fff2696 <plat_scmi_rd_set_state>:
2fff2696:	b538      	push	{r3, r4, r5, lr}
2fff2698:	4614      	mov	r4, r2
2fff269a:	f7ff feeb 	bl	2fff2474 <find_rd>
2fff269e:	4605      	mov	r5, r0
2fff26a0:	b170      	cbz	r0, 2fff26c0 <plat_scmi_rd_set_state+0x2a>
2fff26a2:	6800      	ldr	r0, [r0, #0]
2fff26a4:	f7fe fa52 	bl	2fff0b4c <stm32mp_nsec_can_access_reset>
2fff26a8:	b168      	cbz	r0, 2fff26c6 <plat_scmi_rd_set_state+0x30>
2fff26aa:	6828      	ldr	r0, [r5, #0]
2fff26ac:	b124      	cbz	r4, 2fff26b8 <plat_scmi_rd_set_state+0x22>
2fff26ae:	2100      	movs	r1, #0
2fff26b0:	f005 fa6e 	bl	2fff7b90 <stm32mp_reset_assert_to>
2fff26b4:	2000      	movs	r0, #0
2fff26b6:	bd38      	pop	{r3, r4, r5, pc}
2fff26b8:	4621      	mov	r1, r4
2fff26ba:	f005 faa5 	bl	2fff7c08 <stm32mp_reset_deassert_to>
2fff26be:	e7f9      	b.n	2fff26b4 <plat_scmi_rd_set_state+0x1e>
2fff26c0:	f06f 0003 	mvn.w	r0, #3
2fff26c4:	e7f7      	b.n	2fff26b6 <plat_scmi_rd_set_state+0x20>
2fff26c6:	f06f 0002 	mvn.w	r0, #2
2fff26ca:	e7f4      	b.n	2fff26b6 <plat_scmi_rd_set_state+0x20>

2fff26cc <stm32mp1_init_scmi_server>:
2fff26cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff26d0:	2700      	movs	r7, #0
2fff26d2:	4823      	ldr	r0, [pc, #140]	; (2fff2760 <stm32mp1_init_scmi_server+0x94>)
2fff26d4:	f04f 080c 	mov.w	r8, #12
2fff26d8:	4c22      	ldr	r4, [pc, #136]	; (2fff2764 <stm32mp1_init_scmi_server+0x98>)
2fff26da:	f7ff fe99 	bl	2fff2410 <scmi_smt_init_agent_channel>
2fff26de:	4822      	ldr	r0, [pc, #136]	; (2fff2768 <stm32mp1_init_scmi_server+0x9c>)
2fff26e0:	f7ff fe96 	bl	2fff2410 <scmi_smt_init_agent_channel>
2fff26e4:	2500      	movs	r5, #0
2fff26e6:	e020      	b.n	2fff272a <stm32mp1_init_scmi_server+0x5e>
2fff26e8:	fb08 f605 	mul.w	r6, r8, r5
2fff26ec:	f8d4 9000 	ldr.w	r9, [r4]
2fff26f0:	eb09 0a06 	add.w	sl, r9, r6
2fff26f4:	f8da 0004 	ldr.w	r0, [sl, #4]
2fff26f8:	b930      	cbnz	r0, 2fff2708 <stm32mp1_init_scmi_server+0x3c>
2fff26fa:	481c      	ldr	r0, [pc, #112]	; (2fff276c <stm32mp1_init_scmi_server+0xa0>)
2fff26fc:	f000 f8b2 	bl	2fff2864 <tf_log>
2fff2700:	f000 f954 	bl	2fff29ac <console_flush>
2fff2704:	f006 e8b8 	blx	2fff8878 <do_panic>
2fff2708:	f007 fa97 	bl	2fff9c3a <strlen>
2fff270c:	280f      	cmp	r0, #15
2fff270e:	d8f4      	bhi.n	2fff26fa <stm32mp1_init_scmi_server+0x2e>
2fff2710:	f89a 3008 	ldrb.w	r3, [sl, #8]
2fff2714:	b143      	cbz	r3, 2fff2728 <stm32mp1_init_scmi_server+0x5c>
2fff2716:	f859 0006 	ldr.w	r0, [r9, r6]
2fff271a:	f7fe f9b7 	bl	2fff0a8c <stm32mp_nsec_can_access_clock>
2fff271e:	b118      	cbz	r0, 2fff2728 <stm32mp1_init_scmi_server+0x5c>
2fff2720:	f859 0006 	ldr.w	r0, [r9, r6]
2fff2724:	f002 fd06 	bl	2fff5134 <stm32mp_clk_enable>
2fff2728:	3501      	adds	r5, #1
2fff272a:	6863      	ldr	r3, [r4, #4]
2fff272c:	42ab      	cmp	r3, r5
2fff272e:	d8db      	bhi.n	2fff26e8 <stm32mp1_init_scmi_server+0x1c>
2fff2730:	2500      	movs	r5, #0
2fff2732:	68e3      	ldr	r3, [r4, #12]
2fff2734:	42ab      	cmp	r3, r5
2fff2736:	d803      	bhi.n	2fff2740 <stm32mp1_init_scmi_server+0x74>
2fff2738:	3410      	adds	r4, #16
2fff273a:	b977      	cbnz	r7, 2fff275a <stm32mp1_init_scmi_server+0x8e>
2fff273c:	2701      	movs	r7, #1
2fff273e:	e7d1      	b.n	2fff26e4 <stm32mp1_init_scmi_server+0x18>
2fff2740:	68a3      	ldr	r3, [r4, #8]
2fff2742:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
2fff2746:	6858      	ldr	r0, [r3, #4]
2fff2748:	b908      	cbnz	r0, 2fff274e <stm32mp1_init_scmi_server+0x82>
2fff274a:	4809      	ldr	r0, [pc, #36]	; (2fff2770 <stm32mp1_init_scmi_server+0xa4>)
2fff274c:	e7d6      	b.n	2fff26fc <stm32mp1_init_scmi_server+0x30>
2fff274e:	f007 fa74 	bl	2fff9c3a <strlen>
2fff2752:	280f      	cmp	r0, #15
2fff2754:	d8f9      	bhi.n	2fff274a <stm32mp1_init_scmi_server+0x7e>
2fff2756:	3501      	adds	r5, #1
2fff2758:	e7eb      	b.n	2fff2732 <stm32mp1_init_scmi_server+0x66>
2fff275a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff275e:	bf00      	nop
2fff2760:	2fffd20c 	.word	0x2fffd20c
2fff2764:	2fffacb8 	.word	0x2fffacb8
2fff2768:	2fffd21c 	.word	0x2fffd21c
2fff276c:	2fffabb7 	.word	0x2fffabb7
2fff2770:	2fffabd1 	.word	0x2fffabd1

2fff2774 <stm32mp1_pm_save_scmi_state>:
2fff2774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff2776:	460d      	mov	r5, r1
2fff2778:	4604      	mov	r4, r0
2fff277a:	2701      	movs	r7, #1
2fff277c:	f006 e9d2 	blx	2fff8b24 <zero_normalmem>
2fff2780:	4918      	ldr	r1, [pc, #96]	; (2fff27e4 <stm32mp1_pm_save_scmi_state+0x70>)
2fff2782:	2300      	movs	r3, #0
2fff2784:	ebb5 0fd3 	cmp.w	r5, r3, lsr #3
2fff2788:	ea4f 00d3 	mov.w	r0, r3, lsr #3
2fff278c:	d318      	bcc.n	2fff27c0 <stm32mp1_pm_save_scmi_state+0x4c>
2fff278e:	7a0a      	ldrb	r2, [r1, #8]
2fff2790:	b962      	cbnz	r2, 2fff27ac <stm32mp1_pm_save_scmi_state+0x38>
2fff2792:	3301      	adds	r3, #1
2fff2794:	310c      	adds	r1, #12
2fff2796:	2b15      	cmp	r3, #21
2fff2798:	d1f4      	bne.n	2fff2784 <stm32mp1_pm_save_scmi_state+0x10>
2fff279a:	4913      	ldr	r1, [pc, #76]	; (2fff27e8 <stm32mp1_pm_save_scmi_state+0x74>)
2fff279c:	2200      	movs	r2, #0
2fff279e:	200c      	movs	r0, #12
2fff27a0:	2601      	movs	r6, #1
2fff27a2:	2a03      	cmp	r2, #3
2fff27a4:	f102 0315 	add.w	r3, r2, #21
2fff27a8:	d108      	bne.n	2fff27bc <stm32mp1_pm_save_scmi_state+0x48>
2fff27aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff27ac:	5c26      	ldrb	r6, [r4, r0]
2fff27ae:	f003 0207 	and.w	r2, r3, #7
2fff27b2:	fa07 f202 	lsl.w	r2, r7, r2
2fff27b6:	4332      	orrs	r2, r6
2fff27b8:	5422      	strb	r2, [r4, r0]
2fff27ba:	e7ea      	b.n	2fff2792 <stm32mp1_pm_save_scmi_state+0x1e>
2fff27bc:	2d01      	cmp	r5, #1
2fff27be:	d803      	bhi.n	2fff27c8 <stm32mp1_pm_save_scmi_state+0x54>
2fff27c0:	f000 f8f4 	bl	2fff29ac <console_flush>
2fff27c4:	f006 e858 	blx	2fff8878 <do_panic>
2fff27c8:	fb00 1702 	mla	r7, r0, r2, r1
2fff27cc:	7a3f      	ldrb	r7, [r7, #8]
2fff27ce:	b137      	cbz	r7, 2fff27de <stm32mp1_pm_save_scmi_state+0x6a>
2fff27d0:	78a7      	ldrb	r7, [r4, #2]
2fff27d2:	f003 0307 	and.w	r3, r3, #7
2fff27d6:	fa06 f303 	lsl.w	r3, r6, r3
2fff27da:	433b      	orrs	r3, r7
2fff27dc:	70a3      	strb	r3, [r4, #2]
2fff27de:	3201      	adds	r2, #1
2fff27e0:	e7df      	b.n	2fff27a2 <stm32mp1_pm_save_scmi_state+0x2e>
2fff27e2:	bf00      	nop
2fff27e4:	2fffd22c 	.word	0x2fffd22c
2fff27e8:	2fffd380 	.word	0x2fffd380

2fff27ec <stm32mp1_pm_restore_scmi_state>:
2fff27ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff27ee:	2200      	movs	r2, #0
2fff27f0:	4c19      	ldr	r4, [pc, #100]	; (2fff2858 <stm32mp1_pm_restore_scmi_state+0x6c>)
2fff27f2:	2601      	movs	r6, #1
2fff27f4:	08d5      	lsrs	r5, r2, #3
2fff27f6:	f002 0707 	and.w	r7, r2, #7
2fff27fa:	5d43      	ldrb	r3, [r0, r5]
2fff27fc:	40fb      	lsrs	r3, r7
2fff27fe:	f013 0301 	ands.w	r3, r3, #1
2fff2802:	d011      	beq.n	2fff2828 <stm32mp1_pm_restore_scmi_state+0x3c>
2fff2804:	7226      	strb	r6, [r4, #8]
2fff2806:	42a9      	cmp	r1, r5
2fff2808:	f104 040c 	add.w	r4, r4, #12
2fff280c:	d31c      	bcc.n	2fff2848 <stm32mp1_pm_restore_scmi_state+0x5c>
2fff280e:	3201      	adds	r2, #1
2fff2810:	2a15      	cmp	r2, #21
2fff2812:	d1ef      	bne.n	2fff27f4 <stm32mp1_pm_restore_scmi_state+0x8>
2fff2814:	4e11      	ldr	r6, [pc, #68]	; (2fff285c <stm32mp1_pm_restore_scmi_state+0x70>)
2fff2816:	2200      	movs	r2, #0
2fff2818:	270c      	movs	r7, #12
2fff281a:	f04f 0c01 	mov.w	ip, #1
2fff281e:	2a03      	cmp	r2, #3
2fff2820:	f102 0415 	add.w	r4, r2, #21
2fff2824:	d102      	bne.n	2fff282c <stm32mp1_pm_restore_scmi_state+0x40>
2fff2826:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff2828:	7223      	strb	r3, [r4, #8]
2fff282a:	e7ec      	b.n	2fff2806 <stm32mp1_pm_restore_scmi_state+0x1a>
2fff282c:	7883      	ldrb	r3, [r0, #2]
2fff282e:	f004 0407 	and.w	r4, r4, #7
2fff2832:	fb07 6502 	mla	r5, r7, r2, r6
2fff2836:	40e3      	lsrs	r3, r4
2fff2838:	f013 0301 	ands.w	r3, r3, #1
2fff283c:	bf0c      	ite	eq
2fff283e:	722b      	strbeq	r3, [r5, #8]
2fff2840:	f885 c008 	strbne.w	ip, [r5, #8]
2fff2844:	2901      	cmp	r1, #1
2fff2846:	d804      	bhi.n	2fff2852 <stm32mp1_pm_restore_scmi_state+0x66>
2fff2848:	4805      	ldr	r0, [pc, #20]	; (2fff2860 <stm32mp1_pm_restore_scmi_state+0x74>)
2fff284a:	f240 2142 	movw	r1, #578	; 0x242
2fff284e:	f007 f84d 	bl	2fff98ec <__assert>
2fff2852:	3201      	adds	r2, #1
2fff2854:	e7e3      	b.n	2fff281e <stm32mp1_pm_restore_scmi_state+0x32>
2fff2856:	bf00      	nop
2fff2858:	2fffd22c 	.word	0x2fffd22c
2fff285c:	2fffd380 	.word	0x2fffd380
2fff2860:	2fffab96 	.word	0x2fffab96

2fff2864 <tf_log>:
2fff2864:	b40f      	push	{r0, r1, r2, r3}
2fff2866:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff2868:	9d06      	ldr	r5, [sp, #24]
2fff286a:	7828      	ldrb	r0, [r5, #0]
2fff286c:	1e43      	subs	r3, r0, #1
2fff286e:	2b31      	cmp	r3, #49	; 0x31
2fff2870:	d903      	bls.n	2fff287a <tf_log+0x16>
2fff2872:	2122      	movs	r1, #34	; 0x22
2fff2874:	4810      	ldr	r0, [pc, #64]	; (2fff28b8 <tf_log+0x54>)
2fff2876:	f007 f839 	bl	2fff98ec <__assert>
2fff287a:	220a      	movs	r2, #10
2fff287c:	fbb0 f3f2 	udiv	r3, r0, r2
2fff2880:	fb02 0313 	mls	r3, r2, r3, r0
2fff2884:	b10b      	cbz	r3, 2fff288a <tf_log+0x26>
2fff2886:	2123      	movs	r1, #35	; 0x23
2fff2888:	e7f4      	b.n	2fff2874 <tf_log+0x10>
2fff288a:	4b0c      	ldr	r3, [pc, #48]	; (2fff28bc <tf_log+0x58>)
2fff288c:	681b      	ldr	r3, [r3, #0]
2fff288e:	4283      	cmp	r3, r0
2fff2890:	d30a      	bcc.n	2fff28a8 <tf_log+0x44>
2fff2892:	f000 f8ab 	bl	2fff29ec <plat_log_get_prefix>
2fff2896:	1e44      	subs	r4, r0, #1
2fff2898:	f814 0f01 	ldrb.w	r0, [r4, #1]!
2fff289c:	b948      	cbnz	r0, 2fff28b2 <tf_log+0x4e>
2fff289e:	a907      	add	r1, sp, #28
2fff28a0:	1c68      	adds	r0, r5, #1
2fff28a2:	9101      	str	r1, [sp, #4]
2fff28a4:	f007 f8b2 	bl	2fff9a0c <vprintf>
2fff28a8:	b003      	add	sp, #12
2fff28aa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff28ae:	b004      	add	sp, #16
2fff28b0:	4770      	bx	lr
2fff28b2:	f007 f984 	bl	2fff9bbe <putchar>
2fff28b6:	e7ef      	b.n	2fff2898 <tf_log+0x34>
2fff28b8:	2fffacdf 	.word	0x2fffacdf
2fff28bc:	2fffd3a4 	.word	0x2fffd3a4

2fff28c0 <console_is_registered>:
2fff28c0:	b508      	push	{r3, lr}
2fff28c2:	4603      	mov	r3, r0
2fff28c4:	b918      	cbnz	r0, 2fff28ce <console_is_registered+0xe>
2fff28c6:	4807      	ldr	r0, [pc, #28]	; (2fff28e4 <console_is_registered+0x24>)
2fff28c8:	2134      	movs	r1, #52	; 0x34
2fff28ca:	f007 f80f 	bl	2fff98ec <__assert>
2fff28ce:	4a06      	ldr	r2, [pc, #24]	; (2fff28e8 <console_is_registered+0x28>)
2fff28d0:	6810      	ldr	r0, [r2, #0]
2fff28d2:	b900      	cbnz	r0, 2fff28d6 <console_is_registered+0x16>
2fff28d4:	bd08      	pop	{r3, pc}
2fff28d6:	4298      	cmp	r0, r3
2fff28d8:	d001      	beq.n	2fff28de <console_is_registered+0x1e>
2fff28da:	6800      	ldr	r0, [r0, #0]
2fff28dc:	e7f9      	b.n	2fff28d2 <console_is_registered+0x12>
2fff28de:	2001      	movs	r0, #1
2fff28e0:	e7f8      	b.n	2fff28d4 <console_is_registered+0x14>
2fff28e2:	bf00      	nop
2fff28e4:	2fffacef 	.word	0x2fffacef
2fff28e8:	2fffe9c8 	.word	0x2fffe9c8

2fff28ec <console_register>:
2fff28ec:	4b0b      	ldr	r3, [pc, #44]	; (2fff291c <console_register+0x30>)
2fff28ee:	b510      	push	{r4, lr}
2fff28f0:	4604      	mov	r4, r0
2fff28f2:	4298      	cmp	r0, r3
2fff28f4:	d306      	bcc.n	2fff2904 <console_register+0x18>
2fff28f6:	4b0a      	ldr	r3, [pc, #40]	; (2fff2920 <console_register+0x34>)
2fff28f8:	4298      	cmp	r0, r3
2fff28fa:	d203      	bcs.n	2fff2904 <console_register+0x18>
2fff28fc:	4809      	ldr	r0, [pc, #36]	; (2fff2924 <console_register+0x38>)
2fff28fe:	2114      	movs	r1, #20
2fff2900:	f006 fff4 	bl	2fff98ec <__assert>
2fff2904:	4620      	mov	r0, r4
2fff2906:	f7ff ffdb 	bl	2fff28c0 <console_is_registered>
2fff290a:	2801      	cmp	r0, #1
2fff290c:	f04f 0001 	mov.w	r0, #1
2fff2910:	bf1f      	itttt	ne
2fff2912:	4b05      	ldrne	r3, [pc, #20]	; (2fff2928 <console_register+0x3c>)
2fff2914:	681a      	ldrne	r2, [r3, #0]
2fff2916:	6022      	strne	r2, [r4, #0]
2fff2918:	601c      	strne	r4, [r3, #0]
2fff291a:	bd10      	pop	{r4, pc}
2fff291c:	2fffd540 	.word	0x2fffd540
2fff2920:	2fffe140 	.word	0x2fffe140
2fff2924:	2fffacef 	.word	0x2fffacef
2fff2928:	2fffe9c8 	.word	0x2fffe9c8

2fff292c <console_switch_state>:
2fff292c:	4b01      	ldr	r3, [pc, #4]	; (2fff2934 <console_switch_state+0x8>)
2fff292e:	7018      	strb	r0, [r3, #0]
2fff2930:	4770      	bx	lr
2fff2932:	bf00      	nop
2fff2934:	2fffd3a8 	.word	0x2fffd3a8

2fff2938 <console_set_scope>:
2fff2938:	b508      	push	{r3, lr}
2fff293a:	b918      	cbnz	r0, 2fff2944 <console_set_scope+0xc>
2fff293c:	4804      	ldr	r0, [pc, #16]	; (2fff2950 <console_set_scope+0x18>)
2fff293e:	2144      	movs	r1, #68	; 0x44
2fff2940:	f006 ffd4 	bl	2fff98ec <__assert>
2fff2944:	6843      	ldr	r3, [r0, #4]
2fff2946:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
2fff294a:	430b      	orrs	r3, r1
2fff294c:	6043      	str	r3, [r0, #4]
2fff294e:	bd08      	pop	{r3, pc}
2fff2950:	2fffacef 	.word	0x2fffacef

2fff2954 <console_putc>:
2fff2954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff2956:	4606      	mov	r6, r0
2fff2958:	4b12      	ldr	r3, [pc, #72]	; (2fff29a4 <console_putc+0x50>)
2fff295a:	f06f 057f 	mvn.w	r5, #127	; 0x7f
2fff295e:	4f12      	ldr	r7, [pc, #72]	; (2fff29a8 <console_putc+0x54>)
2fff2960:	681c      	ldr	r4, [r3, #0]
2fff2962:	b90c      	cbnz	r4, 2fff2968 <console_putc+0x14>
2fff2964:	4628      	mov	r0, r5
2fff2966:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff2968:	6862      	ldr	r2, [r4, #4]
2fff296a:	783b      	ldrb	r3, [r7, #0]
2fff296c:	4213      	tst	r3, r2
2fff296e:	d00d      	beq.n	2fff298c <console_putc+0x38>
2fff2970:	68a3      	ldr	r3, [r4, #8]
2fff2972:	b15b      	cbz	r3, 2fff298c <console_putc+0x38>
2fff2974:	2e0a      	cmp	r6, #10
2fff2976:	d00b      	beq.n	2fff2990 <console_putc+0x3c>
2fff2978:	68a3      	ldr	r3, [r4, #8]
2fff297a:	4621      	mov	r1, r4
2fff297c:	4630      	mov	r0, r6
2fff297e:	4798      	blx	r3
2fff2980:	f115 0f80 	cmn.w	r5, #128	; 0x80
2fff2984:	d00c      	beq.n	2fff29a0 <console_putc+0x4c>
2fff2986:	4285      	cmp	r5, r0
2fff2988:	bfa8      	it	ge
2fff298a:	4605      	movge	r5, r0
2fff298c:	6824      	ldr	r4, [r4, #0]
2fff298e:	e7e8      	b.n	2fff2962 <console_putc+0xe>
2fff2990:	05d2      	lsls	r2, r2, #23
2fff2992:	d5f1      	bpl.n	2fff2978 <console_putc+0x24>
2fff2994:	4621      	mov	r1, r4
2fff2996:	200d      	movs	r0, #13
2fff2998:	4798      	blx	r3
2fff299a:	2800      	cmp	r0, #0
2fff299c:	daec      	bge.n	2fff2978 <console_putc+0x24>
2fff299e:	e7ef      	b.n	2fff2980 <console_putc+0x2c>
2fff29a0:	4605      	mov	r5, r0
2fff29a2:	e7f3      	b.n	2fff298c <console_putc+0x38>
2fff29a4:	2fffe9c8 	.word	0x2fffe9c8
2fff29a8:	2fffd3a8 	.word	0x2fffd3a8

2fff29ac <console_flush>:
2fff29ac:	4b0d      	ldr	r3, [pc, #52]	; (2fff29e4 <console_flush+0x38>)
2fff29ae:	b570      	push	{r4, r5, r6, lr}
2fff29b0:	f06f 057f 	mvn.w	r5, #127	; 0x7f
2fff29b4:	681c      	ldr	r4, [r3, #0]
2fff29b6:	4e0c      	ldr	r6, [pc, #48]	; (2fff29e8 <console_flush+0x3c>)
2fff29b8:	b90c      	cbnz	r4, 2fff29be <console_flush+0x12>
2fff29ba:	4628      	mov	r0, r5
2fff29bc:	bd70      	pop	{r4, r5, r6, pc}
2fff29be:	7832      	ldrb	r2, [r6, #0]
2fff29c0:	6863      	ldr	r3, [r4, #4]
2fff29c2:	421a      	tst	r2, r3
2fff29c4:	d009      	beq.n	2fff29da <console_flush+0x2e>
2fff29c6:	6923      	ldr	r3, [r4, #16]
2fff29c8:	b13b      	cbz	r3, 2fff29da <console_flush+0x2e>
2fff29ca:	4620      	mov	r0, r4
2fff29cc:	4798      	blx	r3
2fff29ce:	f115 0f80 	cmn.w	r5, #128	; 0x80
2fff29d2:	d004      	beq.n	2fff29de <console_flush+0x32>
2fff29d4:	4285      	cmp	r5, r0
2fff29d6:	bfa8      	it	ge
2fff29d8:	4605      	movge	r5, r0
2fff29da:	6824      	ldr	r4, [r4, #0]
2fff29dc:	e7ec      	b.n	2fff29b8 <console_flush+0xc>
2fff29de:	4605      	mov	r5, r0
2fff29e0:	e7fb      	b.n	2fff29da <console_flush+0x2e>
2fff29e2:	bf00      	nop
2fff29e4:	2fffe9c8 	.word	0x2fffe9c8
2fff29e8:	2fffd3a8 	.word	0x2fffd3a8

2fff29ec <plat_log_get_prefix>:
2fff29ec:	2832      	cmp	r0, #50	; 0x32
2fff29ee:	f04f 030a 	mov.w	r3, #10
2fff29f2:	bf28      	it	cs
2fff29f4:	2032      	movcs	r0, #50	; 0x32
2fff29f6:	280a      	cmp	r0, #10
2fff29f8:	bf38      	it	cc
2fff29fa:	200a      	movcc	r0, #10
2fff29fc:	fbb0 f0f3 	udiv	r0, r0, r3
2fff2a00:	4b02      	ldr	r3, [pc, #8]	; (2fff2a0c <plat_log_get_prefix+0x20>)
2fff2a02:	3801      	subs	r0, #1
2fff2a04:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2fff2a08:	4770      	bx	lr
2fff2a0a:	bf00      	nop
2fff2a0c:	2fffad44 	.word	0x2fffad44

2fff2a10 <bl32_plat_enable_mmu>:
2fff2a10:	f000 bc04 	b.w	2fff321c <enable_mmu_svc_mon>

2fff2a14 <__ctzdi2>:
2fff2a14:	fab0 f380 	clz	r3, r0
2fff2a18:	095b      	lsrs	r3, r3, #5
2fff2a1a:	425a      	negs	r2, r3
2fff2a1c:	3b01      	subs	r3, #1
2fff2a1e:	4003      	ands	r3, r0
2fff2a20:	4011      	ands	r1, r2
2fff2a22:	430b      	orrs	r3, r1
2fff2a24:	f002 0020 	and.w	r0, r2, #32
2fff2a28:	fa93 f3a3 	rbit	r3, r3
2fff2a2c:	fab3 f383 	clz	r3, r3
2fff2a30:	4418      	add	r0, r3
2fff2a32:	4770      	bx	lr

2fff2a34 <__udivmoddi4>:
2fff2a34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff2a38:	9d06      	ldr	r5, [sp, #24]
2fff2a3a:	b981      	cbnz	r1, 2fff2a5e <__udivmoddi4+0x2a>
2fff2a3c:	b953      	cbnz	r3, 2fff2a54 <__udivmoddi4+0x20>
2fff2a3e:	fbb0 f1f2 	udiv	r1, r0, r2
2fff2a42:	b11d      	cbz	r5, 2fff2a4c <__udivmoddi4+0x18>
2fff2a44:	fb02 0011 	mls	r0, r2, r1, r0
2fff2a48:	e9c5 0300 	strd	r0, r3, [r5]
2fff2a4c:	4608      	mov	r0, r1
2fff2a4e:	2100      	movs	r1, #0
2fff2a50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff2a54:	b10d      	cbz	r5, 2fff2a5a <__udivmoddi4+0x26>
2fff2a56:	e9c5 0100 	strd	r0, r1, [r5]
2fff2a5a:	4608      	mov	r0, r1
2fff2a5c:	e7f8      	b.n	2fff2a50 <__udivmoddi4+0x1c>
2fff2a5e:	bbba      	cbnz	r2, 2fff2ad0 <__udivmoddi4+0x9c>
2fff2a60:	b903      	cbnz	r3, 2fff2a64 <__udivmoddi4+0x30>
2fff2a62:	deff      	udf	#255	; 0xff
2fff2a64:	b940      	cbnz	r0, 2fff2a78 <__udivmoddi4+0x44>
2fff2a66:	fbb1 f2f3 	udiv	r2, r1, r3
2fff2a6a:	b11d      	cbz	r5, 2fff2a74 <__udivmoddi4+0x40>
2fff2a6c:	fb03 1112 	mls	r1, r3, r2, r1
2fff2a70:	e9c5 0100 	strd	r0, r1, [r5]
2fff2a74:	4610      	mov	r0, r2
2fff2a76:	e7ea      	b.n	2fff2a4e <__udivmoddi4+0x1a>
2fff2a78:	1e5c      	subs	r4, r3, #1
2fff2a7a:	421c      	tst	r4, r3
2fff2a7c:	d10a      	bne.n	2fff2a94 <__udivmoddi4+0x60>
2fff2a7e:	b115      	cbz	r5, 2fff2a86 <__udivmoddi4+0x52>
2fff2a80:	400c      	ands	r4, r1
2fff2a82:	e9c5 0400 	strd	r0, r4, [r5]
2fff2a86:	fa93 f0a3 	rbit	r0, r3
2fff2a8a:	fab0 f080 	clz	r0, r0
2fff2a8e:	fa21 f000 	lsr.w	r0, r1, r0
2fff2a92:	e7dc      	b.n	2fff2a4e <__udivmoddi4+0x1a>
2fff2a94:	fab3 f483 	clz	r4, r3
2fff2a98:	fab1 f681 	clz	r6, r1
2fff2a9c:	1ba4      	subs	r4, r4, r6
2fff2a9e:	2c1e      	cmp	r4, #30
2fff2aa0:	d907      	bls.n	2fff2ab2 <__udivmoddi4+0x7e>
2fff2aa2:	2d00      	cmp	r5, #0
2fff2aa4:	f000 8083 	beq.w	2fff2bae <__udivmoddi4+0x17a>
2fff2aa8:	e9c5 0100 	strd	r0, r1, [r5]
2fff2aac:	2000      	movs	r0, #0
2fff2aae:	4601      	mov	r1, r0
2fff2ab0:	e7ce      	b.n	2fff2a50 <__udivmoddi4+0x1c>
2fff2ab2:	f104 0c01 	add.w	ip, r4, #1
2fff2ab6:	4617      	mov	r7, r2
2fff2ab8:	f1c4 041f 	rsb	r4, r4, #31
2fff2abc:	fa00 f604 	lsl.w	r6, r0, r4
2fff2ac0:	fa01 f404 	lsl.w	r4, r1, r4
2fff2ac4:	fa20 f00c 	lsr.w	r0, r0, ip
2fff2ac8:	fa21 fe0c 	lsr.w	lr, r1, ip
2fff2acc:	4304      	orrs	r4, r0
2fff2ace:	e038      	b.n	2fff2b42 <__udivmoddi4+0x10e>
2fff2ad0:	2b00      	cmp	r3, #0
2fff2ad2:	d15d      	bne.n	2fff2b90 <__udivmoddi4+0x15c>
2fff2ad4:	1e54      	subs	r4, r2, #1
2fff2ad6:	ea14 0602 	ands.w	r6, r4, r2
2fff2ada:	d111      	bne.n	2fff2b00 <__udivmoddi4+0xcc>
2fff2adc:	b115      	cbz	r5, 2fff2ae4 <__udivmoddi4+0xb0>
2fff2ade:	4004      	ands	r4, r0
2fff2ae0:	e9c5 4600 	strd	r4, r6, [r5]
2fff2ae4:	2a01      	cmp	r2, #1
2fff2ae6:	d0b3      	beq.n	2fff2a50 <__udivmoddi4+0x1c>
2fff2ae8:	fa92 f2a2 	rbit	r2, r2
2fff2aec:	fab2 f282 	clz	r2, r2
2fff2af0:	f1c2 0320 	rsb	r3, r2, #32
2fff2af4:	40d0      	lsrs	r0, r2
2fff2af6:	fa01 f303 	lsl.w	r3, r1, r3
2fff2afa:	4318      	orrs	r0, r3
2fff2afc:	40d1      	lsrs	r1, r2
2fff2afe:	e7a7      	b.n	2fff2a50 <__udivmoddi4+0x1c>
2fff2b00:	fab1 f681 	clz	r6, r1
2fff2b04:	fab2 f482 	clz	r4, r2
2fff2b08:	1ba4      	subs	r4, r4, r6
2fff2b0a:	1c66      	adds	r6, r4, #1
2fff2b0c:	f104 0c21 	add.w	ip, r4, #33	; 0x21
2fff2b10:	d104      	bne.n	2fff2b1c <__udivmoddi4+0xe8>
2fff2b12:	461f      	mov	r7, r3
2fff2b14:	4606      	mov	r6, r0
2fff2b16:	469e      	mov	lr, r3
2fff2b18:	460c      	mov	r4, r1
2fff2b1a:	e012      	b.n	2fff2b42 <__udivmoddi4+0x10e>
2fff2b1c:	f1bc 0f1f 	cmp.w	ip, #31
2fff2b20:	d803      	bhi.n	2fff2b2a <__udivmoddi4+0xf6>
2fff2b22:	461f      	mov	r7, r3
2fff2b24:	f1cc 0420 	rsb	r4, ip, #32
2fff2b28:	e7c8      	b.n	2fff2abc <__udivmoddi4+0x88>
2fff2b2a:	f1cc 0640 	rsb	r6, ip, #64	; 0x40
2fff2b2e:	3401      	adds	r4, #1
2fff2b30:	469e      	mov	lr, r3
2fff2b32:	fa00 f706 	lsl.w	r7, r0, r6
2fff2b36:	40e0      	lsrs	r0, r4
2fff2b38:	fa01 f606 	lsl.w	r6, r1, r6
2fff2b3c:	4306      	orrs	r6, r0
2fff2b3e:	fa21 f404 	lsr.w	r4, r1, r4
2fff2b42:	2000      	movs	r0, #0
2fff2b44:	0fe1      	lsrs	r1, r4, #31
2fff2b46:	ea41 0e4e 	orr.w	lr, r1, lr, lsl #1
2fff2b4a:	0ff1      	lsrs	r1, r6, #31
2fff2b4c:	ea41 0444 	orr.w	r4, r1, r4, lsl #1
2fff2b50:	0ff9      	lsrs	r1, r7, #31
2fff2b52:	ea41 0646 	orr.w	r6, r1, r6, lsl #1
2fff2b56:	43e1      	mvns	r1, r4
2fff2b58:	1889      	adds	r1, r1, r2
2fff2b5a:	eb63 010e 	sbc.w	r1, r3, lr
2fff2b5e:	ea40 0747 	orr.w	r7, r0, r7, lsl #1
2fff2b62:	ea02 78e1 	and.w	r8, r2, r1, asr #31
2fff2b66:	ebb4 0408 	subs.w	r4, r4, r8
2fff2b6a:	ea4f 70d1 	mov.w	r0, r1, lsr #31
2fff2b6e:	ea03 71e1 	and.w	r1, r3, r1, asr #31
2fff2b72:	eb6e 0e01 	sbc.w	lr, lr, r1
2fff2b76:	f1bc 0c01 	subs.w	ip, ip, #1
2fff2b7a:	d1e3      	bne.n	2fff2b44 <__udivmoddi4+0x110>
2fff2b7c:	19ff      	adds	r7, r7, r7
2fff2b7e:	eb46 0106 	adc.w	r1, r6, r6
2fff2b82:	4338      	orrs	r0, r7
2fff2b84:	2d00      	cmp	r5, #0
2fff2b86:	f43f af63 	beq.w	2fff2a50 <__udivmoddi4+0x1c>
2fff2b8a:	e9c5 4e00 	strd	r4, lr, [r5]
2fff2b8e:	e75f      	b.n	2fff2a50 <__udivmoddi4+0x1c>
2fff2b90:	fab3 f483 	clz	r4, r3
2fff2b94:	fab1 f681 	clz	r6, r1
2fff2b98:	1ba4      	subs	r4, r4, r6
2fff2b9a:	2c1f      	cmp	r4, #31
2fff2b9c:	d881      	bhi.n	2fff2aa2 <__udivmoddi4+0x6e>
2fff2b9e:	f104 0c01 	add.w	ip, r4, #1
2fff2ba2:	f04f 0700 	mov.w	r7, #0
2fff2ba6:	d1bd      	bne.n	2fff2b24 <__udivmoddi4+0xf0>
2fff2ba8:	4606      	mov	r6, r0
2fff2baa:	46be      	mov	lr, r7
2fff2bac:	e7b4      	b.n	2fff2b18 <__udivmoddi4+0xe4>
2fff2bae:	4628      	mov	r0, r5
2fff2bb0:	e77d      	b.n	2fff2aae <__udivmoddi4+0x7a>

2fff2bb2 <plat_get_syscnt_freq2>:
2fff2bb2:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff2bb6:	4770      	bx	lr

2fff2bb8 <stm32mp_ddrctrl_base>:
2fff2bb8:	4800      	ldr	r0, [pc, #0]	; (2fff2bbc <stm32mp_ddrctrl_base+0x4>)
2fff2bba:	4770      	bx	lr
2fff2bbc:	5a003000 	.word	0x5a003000

2fff2bc0 <stm32mp_ddrphyc_base>:
2fff2bc0:	4800      	ldr	r0, [pc, #0]	; (2fff2bc4 <stm32mp_ddrphyc_base+0x4>)
2fff2bc2:	4770      	bx	lr
2fff2bc4:	5a004000 	.word	0x5a004000

2fff2bc8 <stm32mp_pwr_base>:
2fff2bc8:	4800      	ldr	r0, [pc, #0]	; (2fff2bcc <stm32mp_pwr_base+0x4>)
2fff2bca:	4770      	bx	lr
2fff2bcc:	50001000 	.word	0x50001000

2fff2bd0 <stm32mp_rcc_base>:
2fff2bd0:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
2fff2bd4:	4770      	bx	lr

2fff2bd6 <stm32mp_lock_available>:
2fff2bd6:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff2bda:	f000 0005 	and.w	r0, r0, #5
2fff2bde:	1f43      	subs	r3, r0, #5
2fff2be0:	4258      	negs	r0, r3
2fff2be2:	4158      	adcs	r0, r3
2fff2be4:	4770      	bx	lr
	...

2fff2be8 <stm32mp_pwr_regs_lock>:
2fff2be8:	b508      	push	{r3, lr}
2fff2bea:	f7ff fff4 	bl	2fff2bd6 <stm32mp_lock_available>
2fff2bee:	b120      	cbz	r0, 2fff2bfa <stm32mp_pwr_regs_lock+0x12>
2fff2bf0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff2bf4:	4801      	ldr	r0, [pc, #4]	; (2fff2bfc <stm32mp_pwr_regs_lock+0x14>)
2fff2bf6:	f009 bcd3 	b.w	2fffc5a0 <__spin_lock_from_thumb>
2fff2bfa:	bd08      	pop	{r3, pc}
2fff2bfc:	2fffe9cc 	.word	0x2fffe9cc

2fff2c00 <stm32mp_pwr_regs_unlock>:
2fff2c00:	b508      	push	{r3, lr}
2fff2c02:	f7ff ffe8 	bl	2fff2bd6 <stm32mp_lock_available>
2fff2c06:	b120      	cbz	r0, 2fff2c12 <stm32mp_pwr_regs_unlock+0x12>
2fff2c08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff2c0c:	4801      	ldr	r0, [pc, #4]	; (2fff2c14 <stm32mp_pwr_regs_unlock+0x14>)
2fff2c0e:	f009 bcd3 	b.w	2fffc5b8 <__spin_unlock_from_thumb>
2fff2c12:	bd08      	pop	{r3, pc}
2fff2c14:	2fffe9cc 	.word	0x2fffe9cc

2fff2c18 <stm32_get_gpio_bank_base>:
2fff2c18:	2819      	cmp	r0, #25
2fff2c1a:	b508      	push	{r3, lr}
2fff2c1c:	d00a      	beq.n	2fff2c34 <stm32_get_gpio_bank_base+0x1c>
2fff2c1e:	280a      	cmp	r0, #10
2fff2c20:	d903      	bls.n	2fff2c2a <stm32_get_gpio_bank_base+0x12>
2fff2c22:	4805      	ldr	r0, [pc, #20]	; (2fff2c38 <stm32_get_gpio_bank_base+0x20>)
2fff2c24:	2164      	movs	r1, #100	; 0x64
2fff2c26:	f006 fe61 	bl	2fff98ec <__assert>
2fff2c2a:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
2fff2c2e:	3002      	adds	r0, #2
2fff2c30:	0300      	lsls	r0, r0, #12
2fff2c32:	bd08      	pop	{r3, pc}
2fff2c34:	4801      	ldr	r0, [pc, #4]	; (2fff2c3c <stm32_get_gpio_bank_base+0x24>)
2fff2c36:	e7fc      	b.n	2fff2c32 <stm32_get_gpio_bank_base+0x1a>
2fff2c38:	2fffad58 	.word	0x2fffad58
2fff2c3c:	54004000 	.word	0x54004000

2fff2c40 <stm32_get_gpio_bank_offset>:
2fff2c40:	2819      	cmp	r0, #25
2fff2c42:	b508      	push	{r3, lr}
2fff2c44:	d007      	beq.n	2fff2c56 <stm32_get_gpio_bank_offset+0x16>
2fff2c46:	280a      	cmp	r0, #10
2fff2c48:	d903      	bls.n	2fff2c52 <stm32_get_gpio_bank_offset+0x12>
2fff2c4a:	4804      	ldr	r0, [pc, #16]	; (2fff2c5c <stm32_get_gpio_bank_offset+0x1c>)
2fff2c4c:	216f      	movs	r1, #111	; 0x6f
2fff2c4e:	f006 fe4d 	bl	2fff98ec <__assert>
2fff2c52:	0300      	lsls	r0, r0, #12
2fff2c54:	bd08      	pop	{r3, pc}
2fff2c56:	2000      	movs	r0, #0
2fff2c58:	e7fc      	b.n	2fff2c54 <stm32_get_gpio_bank_offset+0x14>
2fff2c5a:	bf00      	nop
2fff2c5c:	2fffad58 	.word	0x2fffad58

2fff2c60 <stm32mp_get_cpu_supply_name>:
2fff2c60:	b513      	push	{r0, r1, r4, lr}
2fff2c62:	2300      	movs	r3, #0
2fff2c64:	9301      	str	r3, [sp, #4]
2fff2c66:	f005 fa4b 	bl	2fff8100 <dt_get_cpu_regulator_name>
2fff2c6a:	4604      	mov	r4, r0
2fff2c6c:	b910      	cbnz	r0, 2fff2c74 <stm32mp_get_cpu_supply_name+0x14>
2fff2c6e:	2000      	movs	r0, #0
2fff2c70:	b002      	add	sp, #8
2fff2c72:	bd10      	pop	{r4, pc}
2fff2c74:	f004 fcf4 	bl	2fff7660 <dt_pmic_status>
2fff2c78:	2800      	cmp	r0, #0
2fff2c7a:	dc01      	bgt.n	2fff2c80 <stm32mp_get_cpu_supply_name+0x20>
2fff2c7c:	9801      	ldr	r0, [sp, #4]
2fff2c7e:	e7f7      	b.n	2fff2c70 <stm32mp_get_cpu_supply_name+0x10>
2fff2c80:	4621      	mov	r1, r4
2fff2c82:	a801      	add	r0, sp, #4
2fff2c84:	f004 fd0a 	bl	2fff769c <dt_pmic_find_supply>
2fff2c88:	2800      	cmp	r0, #0
2fff2c8a:	d0f7      	beq.n	2fff2c7c <stm32mp_get_cpu_supply_name+0x1c>
2fff2c8c:	e7ef      	b.n	2fff2c6e <stm32mp_get_cpu_supply_name+0xe>
	...

2fff2c90 <configure_mmu>:
2fff2c90:	4805      	ldr	r0, [pc, #20]	; (2fff2ca8 <configure_mmu+0x18>)
2fff2c92:	b508      	push	{r3, lr}
2fff2c94:	f000 fa82 	bl	2fff319c <mmap_add>
2fff2c98:	f000 faa2 	bl	2fff31e0 <init_xlat_tables>
2fff2c9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff2ca0:	2000      	movs	r0, #0
2fff2ca2:	f000 babb 	b.w	2fff321c <enable_mmu_svc_mon>
2fff2ca6:	bf00      	nop
2fff2ca8:	2fffae10 	.word	0x2fffae10

2fff2cac <stm32mp_mask_timer>:
2fff2cac:	ee1e 3f32 	mrc	15, 0, r3, cr14, cr2, {1}
2fff2cb0:	f043 0302 	orr.w	r3, r3, #2
2fff2cb4:	ee0e 3f32 	mcr	15, 0, r3, cr14, cr2, {1}
2fff2cb8:	ee1e 3f33 	mrc	15, 0, r3, cr14, cr3, {1}
2fff2cbc:	f043 0302 	orr.w	r3, r3, #2
2fff2cc0:	ee0e 3f33 	mcr	15, 0, r3, cr14, cr3, {1}
2fff2cc4:	4770      	bx	lr

2fff2cc6 <stm32mp_wait_cpu_reset>:
2fff2cc6:	2001      	movs	r0, #1
2fff2cc8:	b508      	push	{r3, lr}
2fff2cca:	f005 ef1a 	blx	2fff8b00 <dcsw_op_all>
2fff2cce:	ee11 3f10 	mrc	15, 0, r3, cr1, cr0, {0}
2fff2cd2:	f023 0304 	bic.w	r3, r3, #4
2fff2cd6:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2fff2cda:	2001      	movs	r0, #1
2fff2cdc:	f005 ef10 	blx	2fff8b00 <dcsw_op_all>
2fff2ce0:	f3bf 8f2f 	clrex
2fff2ce4:	f3bf 8f4f 	dsb	sy
2fff2ce8:	f3bf 8f6f 	isb	sy
2fff2cec:	f7fe fbfc 	bl	2fff14e8 <plat_ic_get_pending_interrupt_id>
2fff2cf0:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff2cf4:	4604      	mov	r4, r0
2fff2cf6:	d205      	bcs.n	2fff2d04 <stm32mp_wait_cpu_reset+0x3e>
2fff2cf8:	f7fe fa88 	bl	2fff120c <gicv2_end_of_interrupt>
2fff2cfc:	4620      	mov	r0, r4
2fff2cfe:	f7fe fc01 	bl	2fff1504 <plat_ic_disable_interrupt>
2fff2d02:	e7f3      	b.n	2fff2cec <stm32mp_wait_cpu_reset+0x26>
2fff2d04:	bf30      	wfi
2fff2d06:	e7f1      	b.n	2fff2cec <stm32mp_wait_cpu_reset+0x26>

2fff2d08 <stm32_get_gpio_bank_clock>:
2fff2d08:	2819      	cmp	r0, #25
2fff2d0a:	b508      	push	{r3, lr}
2fff2d0c:	d008      	beq.n	2fff2d20 <stm32_get_gpio_bank_clock+0x18>
2fff2d0e:	280a      	cmp	r0, #10
2fff2d10:	d904      	bls.n	2fff2d1c <stm32_get_gpio_bank_clock+0x14>
2fff2d12:	4804      	ldr	r0, [pc, #16]	; (2fff2d24 <stm32_get_gpio_bank_clock+0x1c>)
2fff2d14:	f240 112b 	movw	r1, #299	; 0x12b
2fff2d18:	f006 fde8 	bl	2fff98ec <__assert>
2fff2d1c:	3054      	adds	r0, #84	; 0x54
2fff2d1e:	bd08      	pop	{r3, pc}
2fff2d20:	205f      	movs	r0, #95	; 0x5f
2fff2d22:	e7fc      	b.n	2fff2d1e <stm32_get_gpio_bank_clock+0x16>
2fff2d24:	2fffad78 	.word	0x2fffad78

2fff2d28 <stm32_get_otp_index>:
2fff2d28:	b508      	push	{r3, lr}
2fff2d2a:	b920      	cbnz	r0, 2fff2d36 <stm32_get_otp_index+0xe>
2fff2d2c:	f240 1133 	movw	r1, #307	; 0x133
2fff2d30:	4806      	ldr	r0, [pc, #24]	; (2fff2d4c <stm32_get_otp_index+0x24>)
2fff2d32:	f006 fddb 	bl	2fff98ec <__assert>
2fff2d36:	b911      	cbnz	r1, 2fff2d3e <stm32_get_otp_index+0x16>
2fff2d38:	f44f 719a 	mov.w	r1, #308	; 0x134
2fff2d3c:	e7f8      	b.n	2fff2d30 <stm32_get_otp_index+0x8>
2fff2d3e:	f001 f989 	bl	2fff4054 <bsec_find_otp_name_in_dt>
2fff2d42:	3800      	subs	r0, #0
2fff2d44:	bf18      	it	ne
2fff2d46:	2001      	movne	r0, #1
2fff2d48:	4240      	negs	r0, r0
2fff2d4a:	bd08      	pop	{r3, pc}
2fff2d4c:	2fffad78 	.word	0x2fffad78

2fff2d50 <stm32_get_otp_value_from_idx>:
2fff2d50:	b510      	push	{r4, lr}
2fff2d52:	4604      	mov	r4, r0
2fff2d54:	4608      	mov	r0, r1
2fff2d56:	b921      	cbnz	r1, 2fff2d62 <stm32_get_otp_value_from_idx+0x12>
2fff2d58:	4807      	ldr	r0, [pc, #28]	; (2fff2d78 <stm32_get_otp_value_from_idx+0x28>)
2fff2d5a:	f44f 71aa 	mov.w	r1, #340	; 0x154
2fff2d5e:	f006 fdc5 	bl	2fff98ec <__assert>
2fff2d62:	4621      	mov	r1, r4
2fff2d64:	f001 f9de 	bl	2fff4124 <bsec_read_otp>
2fff2d68:	b128      	cbz	r0, 2fff2d76 <stm32_get_otp_value_from_idx+0x26>
2fff2d6a:	4804      	ldr	r0, [pc, #16]	; (2fff2d7c <stm32_get_otp_value_from_idx+0x2c>)
2fff2d6c:	4621      	mov	r1, r4
2fff2d6e:	f7ff fd79 	bl	2fff2864 <tf_log>
2fff2d72:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff2d76:	bd10      	pop	{r4, pc}
2fff2d78:	2fffad78 	.word	0x2fffad78
2fff2d7c:	2fffad9c 	.word	0x2fffad9c

2fff2d80 <stm32_get_otp_value>:
2fff2d80:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff2d82:	460d      	mov	r5, r1
2fff2d84:	4604      	mov	r4, r0
2fff2d86:	b920      	cbnz	r0, 2fff2d92 <stm32_get_otp_value+0x12>
2fff2d88:	f240 1141 	movw	r1, #321	; 0x141
2fff2d8c:	480c      	ldr	r0, [pc, #48]	; (2fff2dc0 <stm32_get_otp_value+0x40>)
2fff2d8e:	f006 fdad 	bl	2fff98ec <__assert>
2fff2d92:	b911      	cbnz	r1, 2fff2d9a <stm32_get_otp_value+0x1a>
2fff2d94:	f44f 71a1 	mov.w	r1, #322	; 0x142
2fff2d98:	e7f8      	b.n	2fff2d8c <stm32_get_otp_value+0xc>
2fff2d9a:	2200      	movs	r2, #0
2fff2d9c:	a901      	add	r1, sp, #4
2fff2d9e:	f7ff ffc3 	bl	2fff2d28 <stm32_get_otp_index>
2fff2da2:	b940      	cbnz	r0, 2fff2db6 <stm32_get_otp_value+0x36>
2fff2da4:	9801      	ldr	r0, [sp, #4]
2fff2da6:	4629      	mov	r1, r5
2fff2da8:	f7ff ffd2 	bl	2fff2d50 <stm32_get_otp_value_from_idx>
2fff2dac:	b128      	cbz	r0, 2fff2dba <stm32_get_otp_value+0x3a>
2fff2dae:	4805      	ldr	r0, [pc, #20]	; (2fff2dc4 <stm32_get_otp_value+0x44>)
2fff2db0:	4621      	mov	r1, r4
2fff2db2:	f7ff fd57 	bl	2fff2864 <tf_log>
2fff2db6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff2dba:	b003      	add	sp, #12
2fff2dbc:	bd30      	pop	{r4, r5, pc}
2fff2dbe:	bf00      	nop
2fff2dc0:	2fffad78 	.word	0x2fffad78
2fff2dc4:	2fffadb6 	.word	0x2fffadb6

2fff2dc8 <get_part_number>:
2fff2dc8:	b513      	push	{r0, r1, r4, lr}
2fff2dca:	4c0f      	ldr	r4, [pc, #60]	; (2fff2e08 <get_part_number+0x40>)
2fff2dcc:	6820      	ldr	r0, [r4, #0]
2fff2dce:	b9c0      	cbnz	r0, 2fff2e02 <get_part_number+0x3a>
2fff2dd0:	a801      	add	r0, sp, #4
2fff2dd2:	f005 fb99 	bl	2fff8508 <stm32mp1_dbgmcu_get_chip_dev_id>
2fff2dd6:	2800      	cmp	r0, #0
2fff2dd8:	da05      	bge.n	2fff2de6 <get_part_number+0x1e>
2fff2dda:	480c      	ldr	r0, [pc, #48]	; (2fff2e0c <get_part_number+0x44>)
2fff2ddc:	f7ff fd42 	bl	2fff2864 <tf_log>
2fff2de0:	f44f 63a0 	mov.w	r3, #1280	; 0x500
2fff2de4:	9301      	str	r3, [sp, #4]
2fff2de6:	4908      	ldr	r1, [pc, #32]	; (2fff2e08 <get_part_number+0x40>)
2fff2de8:	4809      	ldr	r0, [pc, #36]	; (2fff2e10 <get_part_number+0x48>)
2fff2dea:	f7ff ffc9 	bl	2fff2d80 <stm32_get_otp_value>
2fff2dee:	b118      	cbz	r0, 2fff2df8 <get_part_number+0x30>
2fff2df0:	f7ff fddc 	bl	2fff29ac <console_flush>
2fff2df4:	f005 ed40 	blx	2fff8878 <do_panic>
2fff2df8:	7820      	ldrb	r0, [r4, #0]
2fff2dfa:	9b01      	ldr	r3, [sp, #4]
2fff2dfc:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
2fff2e00:	6020      	str	r0, [r4, #0]
2fff2e02:	b002      	add	sp, #8
2fff2e04:	bd10      	pop	{r4, pc}
2fff2e06:	bf00      	nop
2fff2e08:	2fffe9d0 	.word	0x2fffe9d0
2fff2e0c:	2fffadcc 	.word	0x2fffadcc
2fff2e10:	2fffadf2 	.word	0x2fffadf2

2fff2e14 <stm32mp_supports_cpu_opp>:
2fff2e14:	1e43      	subs	r3, r0, #1
2fff2e16:	2b01      	cmp	r3, #1
2fff2e18:	b510      	push	{r4, lr}
2fff2e1a:	4604      	mov	r4, r0
2fff2e1c:	d814      	bhi.n	2fff2e48 <stm32mp_supports_cpu_opp+0x34>
2fff2e1e:	f7ff ffd3 	bl	2fff2dc8 <get_part_number>
2fff2e22:	4b0b      	ldr	r3, [pc, #44]	; (2fff2e50 <stm32mp_supports_cpu_opp+0x3c>)
2fff2e24:	4298      	cmp	r0, r3
2fff2e26:	d80b      	bhi.n	2fff2e40 <stm32mp_supports_cpu_opp+0x2c>
2fff2e28:	3b02      	subs	r3, #2
2fff2e2a:	4298      	cmp	r0, r3
2fff2e2c:	d80e      	bhi.n	2fff2e4c <stm32mp_supports_cpu_opp+0x38>
2fff2e2e:	f100 437b 	add.w	r3, r0, #4211081216	; 0xfb000000
2fff2e32:	3b80      	subs	r3, #128	; 0x80
2fff2e34:	2b01      	cmp	r3, #1
2fff2e36:	d909      	bls.n	2fff2e4c <stm32mp_supports_cpu_opp+0x38>
2fff2e38:	1e63      	subs	r3, r4, #1
2fff2e3a:	4258      	negs	r0, r3
2fff2e3c:	4158      	adcs	r0, r3
2fff2e3e:	bd10      	pop	{r4, pc}
2fff2e40:	f100 437b 	add.w	r3, r0, #4211081216	; 0xfb000000
2fff2e44:	3bae      	subs	r3, #174	; 0xae
2fff2e46:	e7f5      	b.n	2fff2e34 <stm32mp_supports_cpu_opp+0x20>
2fff2e48:	2000      	movs	r0, #0
2fff2e4a:	e7f8      	b.n	2fff2e3e <stm32mp_supports_cpu_opp+0x2a>
2fff2e4c:	2001      	movs	r0, #1
2fff2e4e:	e7f6      	b.n	2fff2e3e <stm32mp_supports_cpu_opp+0x2a>
2fff2e50:	050000a5 	.word	0x050000a5

2fff2e54 <stm32mp_is_single_core>:
2fff2e54:	b508      	push	{r3, lr}
2fff2e56:	f7ff ffb7 	bl	2fff2dc8 <get_part_number>
2fff2e5a:	4b08      	ldr	r3, [pc, #32]	; (2fff2e7c <stm32mp_is_single_core+0x28>)
2fff2e5c:	4298      	cmp	r0, r3
2fff2e5e:	d805      	bhi.n	2fff2e6c <stm32mp_is_single_core+0x18>
2fff2e60:	3b02      	subs	r3, #2
2fff2e62:	4298      	cmp	r0, r3
2fff2e64:	bf94      	ite	ls
2fff2e66:	2000      	movls	r0, #0
2fff2e68:	2001      	movhi	r0, #1
2fff2e6a:	bd08      	pop	{r3, pc}
2fff2e6c:	f100 407b 	add.w	r0, r0, #4211081216	; 0xfb000000
2fff2e70:	38ae      	subs	r0, #174	; 0xae
2fff2e72:	2801      	cmp	r0, #1
2fff2e74:	bf8c      	ite	hi
2fff2e76:	2000      	movhi	r0, #0
2fff2e78:	2001      	movls	r0, #1
2fff2e7a:	e7f6      	b.n	2fff2e6a <stm32mp_is_single_core+0x16>
2fff2e7c:	0500002f 	.word	0x0500002f

2fff2e80 <stm32mp_plat_reset>:
2fff2e80:	b580      	push	{r7, lr}
2fff2e82:	4605      	mov	r5, r0
2fff2e84:	4c28      	ldr	r4, [pc, #160]	; (2fff2f28 <stm32mp_plat_reset+0xa8>)
2fff2e86:	260b      	movs	r6, #11
2fff2e88:	f640 47c5 	movw	r7, #3269	; 0xcc5
2fff2e8c:	f7ff ff0e 	bl	2fff2cac <stm32mp_mask_timer>
2fff2e90:	6860      	ldr	r0, [r4, #4]
2fff2e92:	f002 f95b 	bl	2fff514c <stm32mp_clk_is_enabled>
2fff2e96:	b198      	cbz	r0, 2fff2ec0 <stm32mp_plat_reset+0x40>
2fff2e98:	68a0      	ldr	r0, [r4, #8]
2fff2e9a:	2860      	cmp	r0, #96	; 0x60
2fff2e9c:	d10c      	bne.n	2fff2eb8 <stm32mp_plat_reset+0x38>
2fff2e9e:	f8d4 8000 	ldr.w	r8, [r4]
2fff2ea2:	45b8      	cmp	r8, r7
2fff2ea4:	d126      	bne.n	2fff2ef4 <stm32mp_plat_reset+0x74>
2fff2ea6:	f7ff fe93 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff2eaa:	f8d0 3198 	ldr.w	r3, [r0, #408]	; 0x198
2fff2eae:	f043 0320 	orr.w	r3, r3, #32
2fff2eb2:	f8c0 3198 	str.w	r3, [r0, #408]	; 0x198
2fff2eb6:	e003      	b.n	2fff2ec0 <stm32mp_plat_reset+0x40>
2fff2eb8:	f7fc f934 	bl	2ffef124 <etzpc_get_decprot>
2fff2ebc:	2802      	cmp	r0, #2
2fff2ebe:	d1ee      	bne.n	2fff2e9e <stm32mp_plat_reset+0x1e>
2fff2ec0:	3e01      	subs	r6, #1
2fff2ec2:	f104 040c 	add.w	r4, r4, #12
2fff2ec6:	d1e3      	bne.n	2fff2e90 <stm32mp_plat_reset+0x10>
2fff2ec8:	f7ff ffc4 	bl	2fff2e54 <stm32mp_is_single_core>
2fff2ecc:	bb20      	cbnz	r0, 2fff2f18 <stm32mp_plat_reset+0x98>
2fff2ece:	fab5 f185 	clz	r1, r5
2fff2ed2:	2009      	movs	r0, #9
2fff2ed4:	2530      	movs	r5, #48	; 0x30
2fff2ed6:	0949      	lsrs	r1, r1, #5
2fff2ed8:	f7fe fa74 	bl	2fff13c4 <gicv2_raise_sgi>
2fff2edc:	f7fe fb04 	bl	2fff14e8 <plat_ic_get_pending_interrupt_id>
2fff2ee0:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff2ee4:	4604      	mov	r4, r0
2fff2ee6:	d219      	bcs.n	2fff2f1c <stm32mp_plat_reset+0x9c>
2fff2ee8:	f7fe f990 	bl	2fff120c <gicv2_end_of_interrupt>
2fff2eec:	4620      	mov	r0, r4
2fff2eee:	f7fe fb09 	bl	2fff1504 <plat_ic_disable_interrupt>
2fff2ef2:	e7f3      	b.n	2fff2edc <stm32mp_plat_reset+0x5c>
2fff2ef4:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff2ef8:	4640      	mov	r0, r8
2fff2efa:	f004 fe49 	bl	2fff7b90 <stm32mp_reset_assert_to>
2fff2efe:	b118      	cbz	r0, 2fff2f08 <stm32mp_plat_reset+0x88>
2fff2f00:	f7ff fd54 	bl	2fff29ac <console_flush>
2fff2f04:	f005 ecb8 	blx	2fff8878 <do_panic>
2fff2f08:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff2f0c:	4640      	mov	r0, r8
2fff2f0e:	f004 fe7b 	bl	2fff7c08 <stm32mp_reset_deassert_to>
2fff2f12:	2800      	cmp	r0, #0
2fff2f14:	d0d4      	beq.n	2fff2ec0 <stm32mp_plat_reset+0x40>
2fff2f16:	e7f3      	b.n	2fff2f00 <stm32mp_plat_reset+0x80>
2fff2f18:	2510      	movs	r5, #16
2fff2f1a:	e7df      	b.n	2fff2edc <stm32mp_plat_reset+0x5c>
2fff2f1c:	f7ff fe58 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff2f20:	f8c0 5404 	str.w	r5, [r0, #1028]	; 0x404
2fff2f24:	f7ff fecf 	bl	2fff2cc6 <stm32mp_wait_cpu_reset>
2fff2f28:	2fffae88 	.word	0x2fffae88

2fff2f2c <stm32_iwdg_get_instance>:
2fff2f2c:	b508      	push	{r3, lr}
2fff2f2e:	4b07      	ldr	r3, [pc, #28]	; (2fff2f4c <stm32_iwdg_get_instance+0x20>)
2fff2f30:	4298      	cmp	r0, r3
2fff2f32:	d006      	beq.n	2fff2f42 <stm32_iwdg_get_instance+0x16>
2fff2f34:	4b06      	ldr	r3, [pc, #24]	; (2fff2f50 <stm32_iwdg_get_instance+0x24>)
2fff2f36:	4298      	cmp	r0, r3
2fff2f38:	d005      	beq.n	2fff2f46 <stm32_iwdg_get_instance+0x1a>
2fff2f3a:	f7ff fd37 	bl	2fff29ac <console_flush>
2fff2f3e:	f005 ec9c 	blx	2fff8878 <do_panic>
2fff2f42:	2001      	movs	r0, #1
2fff2f44:	bd08      	pop	{r3, pc}
2fff2f46:	2000      	movs	r0, #0
2fff2f48:	e7fc      	b.n	2fff2f44 <stm32_iwdg_get_instance+0x18>
2fff2f4a:	bf00      	nop
2fff2f4c:	5a002000 	.word	0x5a002000
2fff2f50:	5c003000 	.word	0x5c003000

2fff2f54 <stm32_iwdg_get_otp_config>:
2fff2f54:	b513      	push	{r0, r1, r4, lr}
2fff2f56:	4604      	mov	r4, r0
2fff2f58:	4812      	ldr	r0, [pc, #72]	; (2fff2fa4 <stm32_iwdg_get_otp_config+0x50>)
2fff2f5a:	a901      	add	r1, sp, #4
2fff2f5c:	f7ff ff10 	bl	2fff2d80 <stm32_get_otp_value>
2fff2f60:	b118      	cbz	r0, 2fff2f6a <stm32_iwdg_get_otp_config+0x16>
2fff2f62:	f7ff fd23 	bl	2fff29ac <console_flush>
2fff2f66:	f005 ec88 	blx	2fff8878 <do_panic>
2fff2f6a:	9a01      	ldr	r2, [sp, #4]
2fff2f6c:	2301      	movs	r3, #1
2fff2f6e:	1ce1      	adds	r1, r4, #3
2fff2f70:	fa03 f101 	lsl.w	r1, r3, r1
2fff2f74:	4211      	tst	r1, r2
2fff2f76:	f104 0105 	add.w	r1, r4, #5
2fff2f7a:	f104 0407 	add.w	r4, r4, #7
2fff2f7e:	bf18      	it	ne
2fff2f80:	4618      	movne	r0, r3
2fff2f82:	fa03 f101 	lsl.w	r1, r3, r1
2fff2f86:	bf08      	it	eq
2fff2f88:	2000      	moveq	r0, #0
2fff2f8a:	fa03 f404 	lsl.w	r4, r3, r4
2fff2f8e:	4211      	tst	r1, r2
2fff2f90:	bf18      	it	ne
2fff2f92:	f040 0002 	orrne.w	r0, r0, #2
2fff2f96:	4214      	tst	r4, r2
2fff2f98:	bf18      	it	ne
2fff2f9a:	f040 0004 	orrne.w	r0, r0, #4
2fff2f9e:	b002      	add	sp, #8
2fff2fa0:	bd10      	pop	{r4, pc}
2fff2fa2:	bf00      	nop
2fff2fa4:	2fffae02 	.word	0x2fffae02

2fff2fa8 <stm32mp_etzpc_binding2decprot>:
2fff2fa8:	2803      	cmp	r0, #3
2fff2faa:	b508      	push	{r3, lr}
2fff2fac:	d903      	bls.n	2fff2fb6 <stm32mp_etzpc_binding2decprot+0xe>
2fff2fae:	f7ff fcfd 	bl	2fff29ac <console_flush>
2fff2fb2:	f005 ec62 	blx	2fff8878 <do_panic>
2fff2fb6:	bd08      	pop	{r3, pc}

2fff2fb8 <xlat_arch_get_max_supported_pa>:
2fff2fb8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff2fbc:	21ff      	movs	r1, #255	; 0xff
2fff2fbe:	4770      	bx	lr

2fff2fc0 <xlat_get_min_virt_addr_space_size>:
2fff2fc0:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
2fff2fc4:	4770      	bx	lr

2fff2fc6 <is_dcache_enabled>:
2fff2fc6:	f3ef 8300 	mrs	r3, CPSR
2fff2fca:	f003 031f 	and.w	r3, r3, #31
2fff2fce:	2b1a      	cmp	r3, #26
2fff2fd0:	d104      	bne.n	2fff2fdc <is_dcache_enabled+0x16>
2fff2fd2:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2fff2fd6:	f3c0 0080 	ubfx	r0, r0, #2, #1
2fff2fda:	4770      	bx	lr
2fff2fdc:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff2fe0:	e7f9      	b.n	2fff2fd6 <is_dcache_enabled+0x10>
	...

2fff2fe4 <xlat_arch_regime_get_xn_desc>:
2fff2fe4:	2801      	cmp	r0, #1
2fff2fe6:	b508      	push	{r3, lr}
2fff2fe8:	d005      	beq.n	2fff2ff6 <xlat_arch_regime_get_xn_desc+0x12>
2fff2fea:	2802      	cmp	r0, #2
2fff2fec:	d007      	beq.n	2fff2ffe <xlat_arch_regime_get_xn_desc+0x1a>
2fff2fee:	4806      	ldr	r0, [pc, #24]	; (2fff3008 <xlat_arch_regime_get_xn_desc+0x24>)
2fff2ff0:	2154      	movs	r1, #84	; 0x54
2fff2ff2:	f006 fc7b 	bl	2fff98ec <__assert>
2fff2ff6:	2000      	movs	r0, #0
2fff2ff8:	f44f 01c0 	mov.w	r1, #6291456	; 0x600000
2fff2ffc:	bd08      	pop	{r3, pc}
2fff2ffe:	2000      	movs	r0, #0
2fff3000:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
2fff3004:	e7fa      	b.n	2fff2ffc <xlat_arch_regime_get_xn_desc+0x18>
2fff3006:	bf00      	nop
2fff3008:	2fffaf0c 	.word	0x2fffaf0c

2fff300c <xlat_arch_tlbi_va>:
2fff300c:	b508      	push	{r3, lr}
2fff300e:	f3bf 8f4a 	dsb	ishst
2fff3012:	f420 607f 	bic.w	r0, r0, #4080	; 0xff0
2fff3016:	2901      	cmp	r1, #1
2fff3018:	f020 000f 	bic.w	r0, r0, #15
2fff301c:	d102      	bne.n	2fff3024 <xlat_arch_tlbi_va+0x18>
2fff301e:	ee08 0f73 	mcr	15, 0, r0, cr8, cr3, {3}
2fff3022:	bd08      	pop	{r3, pc}
2fff3024:	2902      	cmp	r1, #2
2fff3026:	d003      	beq.n	2fff3030 <xlat_arch_tlbi_va+0x24>
2fff3028:	4803      	ldr	r0, [pc, #12]	; (2fff3038 <xlat_arch_tlbi_va+0x2c>)
2fff302a:	2164      	movs	r1, #100	; 0x64
2fff302c:	f006 fc5e 	bl	2fff98ec <__assert>
2fff3030:	ee88 0f33 	mcr	15, 4, r0, cr8, cr3, {1}
2fff3034:	e7f5      	b.n	2fff3022 <xlat_arch_tlbi_va+0x16>
2fff3036:	bf00      	nop
2fff3038:	2fffaf0c 	.word	0x2fffaf0c

2fff303c <xlat_arch_tlbi_va_sync>:
2fff303c:	2300      	movs	r3, #0
2fff303e:	ee07 3fd1 	mcr	15, 0, r3, cr7, cr1, {6}
2fff3042:	f3bf 8f4b 	dsb	ish
2fff3046:	f3bf 8f6f 	isb	sy
2fff304a:	4770      	bx	lr

2fff304c <xlat_arch_current_el>:
2fff304c:	b508      	push	{r3, lr}
2fff304e:	f3ef 8300 	mrs	r3, CPSR
2fff3052:	f003 031f 	and.w	r3, r3, #31
2fff3056:	2b1a      	cmp	r3, #26
2fff3058:	d00f      	beq.n	2fff307a <xlat_arch_current_el+0x2e>
2fff305a:	f3ef 8300 	mrs	r3, CPSR
2fff305e:	f003 031f 	and.w	r3, r3, #31
2fff3062:	2b13      	cmp	r3, #19
2fff3064:	d00b      	beq.n	2fff307e <xlat_arch_current_el+0x32>
2fff3066:	f3ef 8300 	mrs	r3, CPSR
2fff306a:	f003 031f 	and.w	r3, r3, #31
2fff306e:	2b16      	cmp	r3, #22
2fff3070:	d005      	beq.n	2fff307e <xlat_arch_current_el+0x32>
2fff3072:	4804      	ldr	r0, [pc, #16]	; (2fff3084 <xlat_arch_current_el+0x38>)
2fff3074:	2188      	movs	r1, #136	; 0x88
2fff3076:	f006 fc39 	bl	2fff98ec <__assert>
2fff307a:	2002      	movs	r0, #2
2fff307c:	bd08      	pop	{r3, pc}
2fff307e:	2001      	movs	r0, #1
2fff3080:	e7fc      	b.n	2fff307c <xlat_arch_current_el+0x30>
2fff3082:	bf00      	nop
2fff3084:	2fffaf0c 	.word	0x2fffaf0c

2fff3088 <is_mmu_enabled_ctx>:
2fff3088:	b508      	push	{r3, lr}
2fff308a:	6c43      	ldr	r3, [r0, #68]	; 0x44
2fff308c:	2b01      	cmp	r3, #1
2fff308e:	d10c      	bne.n	2fff30aa <is_mmu_enabled_ctx+0x22>
2fff3090:	f7ff ffdc 	bl	2fff304c <xlat_arch_current_el>
2fff3094:	2801      	cmp	r0, #1
2fff3096:	d003      	beq.n	2fff30a0 <is_mmu_enabled_ctx+0x18>
2fff3098:	213d      	movs	r1, #61	; 0x3d
2fff309a:	480a      	ldr	r0, [pc, #40]	; (2fff30c4 <is_mmu_enabled_ctx+0x3c>)
2fff309c:	f006 fc26 	bl	2fff98ec <__assert>
2fff30a0:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff30a4:	f000 0001 	and.w	r0, r0, #1
2fff30a8:	bd08      	pop	{r3, pc}
2fff30aa:	2b02      	cmp	r3, #2
2fff30ac:	d001      	beq.n	2fff30b2 <is_mmu_enabled_ctx+0x2a>
2fff30ae:	2140      	movs	r1, #64	; 0x40
2fff30b0:	e7f3      	b.n	2fff309a <is_mmu_enabled_ctx+0x12>
2fff30b2:	f7ff ffcb 	bl	2fff304c <xlat_arch_current_el>
2fff30b6:	2802      	cmp	r0, #2
2fff30b8:	d001      	beq.n	2fff30be <is_mmu_enabled_ctx+0x36>
2fff30ba:	2141      	movs	r1, #65	; 0x41
2fff30bc:	e7ed      	b.n	2fff309a <is_mmu_enabled_ctx+0x12>
2fff30be:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2fff30c2:	e7ef      	b.n	2fff30a4 <is_mmu_enabled_ctx+0x1c>
2fff30c4:	2fffaf0c 	.word	0x2fffaf0c

2fff30c8 <setup_mmu_cfg>:
2fff30c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff30ca:	460f      	mov	r7, r1
2fff30cc:	4616      	mov	r6, r2
2fff30ce:	4604      	mov	r4, r0
2fff30d0:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
2fff30d4:	2a01      	cmp	r2, #1
2fff30d6:	d10f      	bne.n	2fff30f8 <setup_mmu_cfg+0x30>
2fff30d8:	f3ef 8200 	mrs	r2, CPSR
2fff30dc:	f002 021f 	and.w	r2, r2, #31
2fff30e0:	2a13      	cmp	r2, #19
2fff30e2:	d015      	beq.n	2fff3110 <setup_mmu_cfg+0x48>
2fff30e4:	f3ef 8200 	mrs	r2, CPSR
2fff30e8:	f002 021f 	and.w	r2, r2, #31
2fff30ec:	2a16      	cmp	r2, #22
2fff30ee:	d00f      	beq.n	2fff3110 <setup_mmu_cfg+0x48>
2fff30f0:	21b1      	movs	r1, #177	; 0xb1
2fff30f2:	481c      	ldr	r0, [pc, #112]	; (2fff3164 <setup_mmu_cfg+0x9c>)
2fff30f4:	f006 fbfa 	bl	2fff98ec <__assert>
2fff30f8:	2a02      	cmp	r2, #2
2fff30fa:	d001      	beq.n	2fff3100 <setup_mmu_cfg+0x38>
2fff30fc:	21b8      	movs	r1, #184	; 0xb8
2fff30fe:	e7f8      	b.n	2fff30f2 <setup_mmu_cfg+0x2a>
2fff3100:	f3ef 8200 	mrs	r2, CPSR
2fff3104:	f002 021f 	and.w	r2, r2, #31
2fff3108:	2a1a      	cmp	r2, #26
2fff310a:	d00a      	beq.n	2fff3122 <setup_mmu_cfg+0x5a>
2fff310c:	21b9      	movs	r1, #185	; 0xb9
2fff310e:	e7f0      	b.n	2fff30f2 <setup_mmu_cfg+0x2a>
2fff3110:	4d15      	ldr	r5, [pc, #84]	; (2fff3168 <setup_mmu_cfg+0xa0>)
2fff3112:	1c4a      	adds	r2, r1, #1
2fff3114:	d010      	beq.n	2fff3138 <setup_mmu_cfg+0x70>
2fff3116:	1c48      	adds	r0, r1, #1
2fff3118:	f1b0 7f00 	cmp.w	r0, #33554432	; 0x2000000
2fff311c:	d203      	bcs.n	2fff3126 <setup_mmu_cfg+0x5e>
2fff311e:	21cc      	movs	r1, #204	; 0xcc
2fff3120:	e7e7      	b.n	2fff30f2 <setup_mmu_cfg+0x2a>
2fff3122:	4d12      	ldr	r5, [pc, #72]	; (2fff316c <setup_mmu_cfg+0xa4>)
2fff3124:	e7f5      	b.n	2fff3112 <setup_mmu_cfg+0x4a>
2fff3126:	4001      	ands	r1, r0
2fff3128:	d001      	beq.n	2fff312e <setup_mmu_cfg+0x66>
2fff312a:	21d0      	movs	r1, #208	; 0xd0
2fff312c:	e7e1      	b.n	2fff30f2 <setup_mmu_cfg+0x2a>
2fff312e:	f7ff fc71 	bl	2fff2a14 <__ctzdi2>
2fff3132:	f1c0 0020 	rsb	r0, r0, #32
2fff3136:	4305      	orrs	r5, r0
2fff3138:	07bb      	lsls	r3, r7, #30
2fff313a:	bf58      	it	pl
2fff313c:	f445 5554 	orrpl.w	r5, r5, #13568	; 0x3500
2fff3140:	ee10 3fd2 	mrc	15, 0, r3, cr0, cr2, {6}
2fff3144:	480a      	ldr	r0, [pc, #40]	; (2fff3170 <setup_mmu_cfg+0xa8>)
2fff3146:	f413 4f70 	tst.w	r3, #61440	; 0xf000
2fff314a:	bf18      	it	ne
2fff314c:	f046 0601 	orrne.w	r6, r6, #1
2fff3150:	2300      	movs	r3, #0
2fff3152:	2100      	movs	r1, #0
2fff3154:	e9c4 0100 	strd	r0, r1, [r4]
2fff3158:	e9c4 5302 	strd	r5, r3, [r4, #8]
2fff315c:	e9c4 6304 	strd	r6, r3, [r4, #16]
2fff3160:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff3162:	bf00      	nop
2fff3164:	2fffaf0c 	.word	0x2fffaf0c
2fff3168:	80800000 	.word	0x80800000
2fff316c:	80803500 	.word	0x80803500
2fff3170:	004404ff 	.word	0x004404ff

2fff3174 <mmap_add_region>:
2fff3174:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2fff3176:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff317a:	9b08      	ldr	r3, [sp, #32]
2fff317c:	e9cd 0100 	strd	r0, r1, [sp]
2fff3180:	9304      	str	r3, [sp, #16]
2fff3182:	4669      	mov	r1, sp
2fff3184:	4804      	ldr	r0, [pc, #16]	; (2fff3198 <mmap_add_region+0x24>)
2fff3186:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2fff318a:	9305      	str	r3, [sp, #20]
2fff318c:	f000 fadc 	bl	2fff3748 <mmap_add_region_ctx>
2fff3190:	b007      	add	sp, #28
2fff3192:	f85d fb04 	ldr.w	pc, [sp], #4
2fff3196:	bf00      	nop
2fff3198:	2fffd3b0 	.word	0x2fffd3b0

2fff319c <mmap_add>:
2fff319c:	4601      	mov	r1, r0
2fff319e:	4801      	ldr	r0, [pc, #4]	; (2fff31a4 <mmap_add+0x8>)
2fff31a0:	f000 bb44 	b.w	2fff382c <mmap_add_ctx>
2fff31a4:	2fffd3b0 	.word	0x2fffd3b0

2fff31a8 <mmap_add_dynamic_region>:
2fff31a8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2fff31aa:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff31ae:	9b08      	ldr	r3, [sp, #32]
2fff31b0:	e9cd 0100 	strd	r0, r1, [sp]
2fff31b4:	9304      	str	r3, [sp, #16]
2fff31b6:	4669      	mov	r1, sp
2fff31b8:	4804      	ldr	r0, [pc, #16]	; (2fff31cc <mmap_add_dynamic_region+0x24>)
2fff31ba:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2fff31be:	9305      	str	r3, [sp, #20]
2fff31c0:	f000 fb40 	bl	2fff3844 <mmap_add_dynamic_region_ctx>
2fff31c4:	b007      	add	sp, #28
2fff31c6:	f85d fb04 	ldr.w	pc, [sp], #4
2fff31ca:	bf00      	nop
2fff31cc:	2fffd3b0 	.word	0x2fffd3b0

2fff31d0 <mmap_remove_dynamic_region>:
2fff31d0:	460a      	mov	r2, r1
2fff31d2:	4601      	mov	r1, r0
2fff31d4:	4801      	ldr	r0, [pc, #4]	; (2fff31dc <mmap_remove_dynamic_region+0xc>)
2fff31d6:	f000 bbe5 	b.w	2fff39a4 <mmap_remove_dynamic_region_ctx>
2fff31da:	bf00      	nop
2fff31dc:	2fffd3b0 	.word	0x2fffd3b0

2fff31e0 <init_xlat_tables>:
2fff31e0:	b510      	push	{r4, lr}
2fff31e2:	4c0c      	ldr	r4, [pc, #48]	; (2fff3214 <init_xlat_tables+0x34>)
2fff31e4:	6c63      	ldr	r3, [r4, #68]	; 0x44
2fff31e6:	3301      	adds	r3, #1
2fff31e8:	d003      	beq.n	2fff31f2 <init_xlat_tables+0x12>
2fff31ea:	2160      	movs	r1, #96	; 0x60
2fff31ec:	480a      	ldr	r0, [pc, #40]	; (2fff3218 <init_xlat_tables+0x38>)
2fff31ee:	f006 fb7d 	bl	2fff98ec <__assert>
2fff31f2:	f7ff ff2b 	bl	2fff304c <xlat_arch_current_el>
2fff31f6:	2801      	cmp	r0, #1
2fff31f8:	d105      	bne.n	2fff3206 <init_xlat_tables+0x26>
2fff31fa:	6460      	str	r0, [r4, #68]	; 0x44
2fff31fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff3200:	4804      	ldr	r0, [pc, #16]	; (2fff3214 <init_xlat_tables+0x34>)
2fff3202:	f000 bc53 	b.w	2fff3aac <init_xlat_tables_ctx>
2fff3206:	2802      	cmp	r0, #2
2fff3208:	d0f7      	beq.n	2fff31fa <init_xlat_tables+0x1a>
2fff320a:	2803      	cmp	r0, #3
2fff320c:	d0f5      	beq.n	2fff31fa <init_xlat_tables+0x1a>
2fff320e:	2169      	movs	r1, #105	; 0x69
2fff3210:	e7ec      	b.n	2fff31ec <init_xlat_tables+0xc>
2fff3212:	bf00      	nop
2fff3214:	2fffd3b0 	.word	0x2fffd3b0
2fff3218:	2fffaf3a 	.word	0x2fffaf3a

2fff321c <enable_mmu_svc_mon>:
2fff321c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff321e:	2201      	movs	r2, #1
2fff3220:	4b09      	ldr	r3, [pc, #36]	; (2fff3248 <enable_mmu_svc_mon+0x2c>)
2fff3222:	4604      	mov	r4, r0
2fff3224:	9203      	str	r2, [sp, #12]
2fff3226:	689a      	ldr	r2, [r3, #8]
2fff3228:	9202      	str	r2, [sp, #8]
2fff322a:	e9d3 0100 	ldrd	r0, r1, [r3]
2fff322e:	e9cd 0100 	strd	r0, r1, [sp]
2fff3232:	4806      	ldr	r0, [pc, #24]	; (2fff324c <enable_mmu_svc_mon+0x30>)
2fff3234:	4621      	mov	r1, r4
2fff3236:	6a5a      	ldr	r2, [r3, #36]	; 0x24
2fff3238:	f7ff ff46 	bl	2fff30c8 <setup_mmu_cfg>
2fff323c:	4620      	mov	r0, r4
2fff323e:	b004      	add	sp, #16
2fff3240:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff3244:	f009 b9c4 	b.w	2fffc5d0 <__enable_mmu_direct_svc_mon_from_thumb>
2fff3248:	2fffd3b0 	.word	0x2fffd3b0
2fff324c:	2fffe9d8 	.word	0x2fffe9d8

2fff3250 <mmap_add_region_check>:
2fff3250:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3254:	e9d1 4e00 	ldrd	r4, lr, [r1]
2fff3258:	e9d1 3202 	ldrd	r3, r2, [r1, #8]
2fff325c:	f3c4 070b 	ubfx	r7, r4, #0, #12
2fff3260:	f114 3aff 	adds.w	sl, r4, #4294967295	; 0xffffffff
2fff3264:	f14e 3cff 	adc.w	ip, lr, #4294967295	; 0xffffffff
2fff3268:	9201      	str	r2, [sp, #4]
2fff326a:	eb1a 0a02 	adds.w	sl, sl, r2
2fff326e:	441a      	add	r2, r3
2fff3270:	694e      	ldr	r6, [r1, #20]
2fff3272:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
2fff3276:	f14c 0c00 	adc.w	ip, ip, #0
2fff327a:	2f00      	cmp	r7, #0
2fff327c:	d171      	bne.n	2fff3362 <mmap_add_region_check+0x112>
2fff327e:	9d01      	ldr	r5, [sp, #4]
2fff3280:	ea43 0705 	orr.w	r7, r3, r5
2fff3284:	f3c7 070b 	ubfx	r7, r7, #0, #12
2fff3288:	2f00      	cmp	r7, #0
2fff328a:	d16a      	bne.n	2fff3362 <mmap_add_region_check+0x112>
2fff328c:	f1b6 4f80 	cmp.w	r6, #1073741824	; 0x40000000
2fff3290:	d005      	beq.n	2fff329e <mmap_add_region_check+0x4e>
2fff3292:	f5b6 1f00 	cmp.w	r6, #2097152	; 0x200000
2fff3296:	d002      	beq.n	2fff329e <mmap_add_region_check+0x4e>
2fff3298:	f5b6 5f80 	cmp.w	r6, #4096	; 0x1000
2fff329c:	d161      	bne.n	2fff3362 <mmap_add_region_check+0x112>
2fff329e:	45a2      	cmp	sl, r4
2fff32a0:	eb7c 050e 	sbcs.w	r5, ip, lr
2fff32a4:	d360      	bcc.n	2fff3368 <mmap_add_region_check+0x118>
2fff32a6:	4293      	cmp	r3, r2
2fff32a8:	d85e      	bhi.n	2fff3368 <mmap_add_region_check+0x118>
2fff32aa:	6886      	ldr	r6, [r0, #8]
2fff32ac:	4296      	cmp	r6, r2
2fff32ae:	d35b      	bcc.n	2fff3368 <mmap_add_region_check+0x118>
2fff32b0:	e9d0 7600 	ldrd	r7, r6, [r0]
2fff32b4:	4557      	cmp	r7, sl
2fff32b6:	eb76 050c 	sbcs.w	r5, r6, ip
2fff32ba:	d355      	bcc.n	2fff3368 <mmap_add_region_check+0x118>
2fff32bc:	68c6      	ldr	r6, [r0, #12]
2fff32be:	2718      	movs	r7, #24
2fff32c0:	6900      	ldr	r0, [r0, #16]
2fff32c2:	fb07 6000 	mla	r0, r7, r0, r6
2fff32c6:	f850 0c0c 	ldr.w	r0, [r0, #-12]
2fff32ca:	2800      	cmp	r0, #0
2fff32cc:	d14f      	bne.n	2fff336e <mmap_add_region_check+0x11e>
2fff32ce:	eb06 0807 	add.w	r8, r6, r7
2fff32d2:	f858 0c0c 	ldr.w	r0, [r8, #-12]
2fff32d6:	b910      	cbnz	r0, 2fff32de <mmap_add_region_check+0x8e>
2fff32d8:	b003      	add	sp, #12
2fff32da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff32de:	f858 9c10 	ldr.w	r9, [r8, #-16]
2fff32e2:	4599      	cmp	r9, r3
2fff32e4:	eb09 0700 	add.w	r7, r9, r0
2fff32e8:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
2fff32ec:	d820      	bhi.n	2fff3330 <mmap_add_region_check+0xe0>
2fff32ee:	42ba      	cmp	r2, r7
2fff32f0:	d901      	bls.n	2fff32f6 <mmap_add_region_check+0xa6>
2fff32f2:	4599      	cmp	r9, r3
2fff32f4:	d11e      	bne.n	2fff3334 <mmap_add_region_check+0xe4>
2fff32f6:	690e      	ldr	r6, [r1, #16]
2fff32f8:	2e00      	cmp	r6, #0
2fff32fa:	db16      	blt.n	2fff332a <mmap_add_region_check+0xda>
2fff32fc:	f858 6c08 	ldr.w	r6, [r8, #-8]
2fff3300:	2e00      	cmp	r6, #0
2fff3302:	db12      	blt.n	2fff332a <mmap_add_region_check+0xda>
2fff3304:	e958 7606 	ldrd	r7, r6, [r8, #-24]
2fff3308:	ebb9 0707 	subs.w	r7, r9, r7
2fff330c:	eb66 0646 	sbc.w	r6, r6, r6, lsl #1
2fff3310:	ebb3 0b04 	subs.w	fp, r3, r4
2fff3314:	eb6e 054e 	sbc.w	r5, lr, lr, lsl #1
2fff3318:	42ae      	cmp	r6, r5
2fff331a:	bf08      	it	eq
2fff331c:	455f      	cmpeq	r7, fp
2fff331e:	d104      	bne.n	2fff332a <mmap_add_region_check+0xda>
2fff3320:	4599      	cmp	r9, r3
2fff3322:	d11b      	bne.n	2fff335c <mmap_add_region_check+0x10c>
2fff3324:	9d01      	ldr	r5, [sp, #4]
2fff3326:	42a8      	cmp	r0, r5
2fff3328:	d118      	bne.n	2fff335c <mmap_add_region_check+0x10c>
2fff332a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff332e:	e7d3      	b.n	2fff32d8 <mmap_add_region_check+0x88>
2fff3330:	42ba      	cmp	r2, r7
2fff3332:	d2e0      	bcs.n	2fff32f6 <mmap_add_region_check+0xa6>
2fff3334:	e958 6b06 	ldrd	r6, fp, [r8, #-24]
2fff3338:	45b2      	cmp	sl, r6
2fff333a:	eb7c 050b 	sbcs.w	r5, ip, fp
2fff333e:	d319      	bcc.n	2fff3374 <mmap_add_region_check+0x124>
2fff3340:	3e01      	subs	r6, #1
2fff3342:	f14b 3bff 	adc.w	fp, fp, #4294967295	; 0xffffffff
2fff3346:	1830      	adds	r0, r6, r0
2fff3348:	f14b 0b00 	adc.w	fp, fp, #0
2fff334c:	4591      	cmp	r9, r2
2fff334e:	d801      	bhi.n	2fff3354 <mmap_add_region_check+0x104>
2fff3350:	42bb      	cmp	r3, r7
2fff3352:	d9ea      	bls.n	2fff332a <mmap_add_region_check+0xda>
2fff3354:	42a0      	cmp	r0, r4
2fff3356:	eb7b 000e 	sbcs.w	r0, fp, lr
2fff335a:	d2e6      	bcs.n	2fff332a <mmap_add_region_check+0xda>
2fff335c:	f108 0818 	add.w	r8, r8, #24
2fff3360:	e7b7      	b.n	2fff32d2 <mmap_add_region_check+0x82>
2fff3362:	f06f 0015 	mvn.w	r0, #21
2fff3366:	e7b7      	b.n	2fff32d8 <mmap_add_region_check+0x88>
2fff3368:	f06f 0021 	mvn.w	r0, #33	; 0x21
2fff336c:	e7b4      	b.n	2fff32d8 <mmap_add_region_check+0x88>
2fff336e:	f06f 000b 	mvn.w	r0, #11
2fff3372:	e7b1      	b.n	2fff32d8 <mmap_add_region_check+0x88>
2fff3374:	4591      	cmp	r9, r2
2fff3376:	d8f1      	bhi.n	2fff335c <mmap_add_region_check+0x10c>
2fff3378:	42bb      	cmp	r3, r7
2fff337a:	d8ef      	bhi.n	2fff335c <mmap_add_region_check+0x10c>
2fff337c:	e7d5      	b.n	2fff332a <mmap_add_region_check+0xda>

2fff337e <xlat_clean_dcache_range>:
2fff337e:	b538      	push	{r3, r4, r5, lr}
2fff3380:	4604      	mov	r4, r0
2fff3382:	460d      	mov	r5, r1
2fff3384:	f7ff fe1f 	bl	2fff2fc6 <is_dcache_enabled>
2fff3388:	b128      	cbz	r0, 2fff3396 <xlat_clean_dcache_range+0x18>
2fff338a:	4629      	mov	r1, r5
2fff338c:	4620      	mov	r0, r4
2fff338e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff3392:	f009 b915 	b.w	2fffc5c0 <__clean_dcache_range_from_thumb>
2fff3396:	bd38      	pop	{r3, r4, r5, pc}

2fff3398 <xlat_table_get_index>:
2fff3398:	4603      	mov	r3, r0
2fff339a:	b510      	push	{r4, lr}
2fff339c:	6984      	ldr	r4, [r0, #24]
2fff339e:	2000      	movs	r0, #0
2fff33a0:	4284      	cmp	r4, r0
2fff33a2:	dc03      	bgt.n	2fff33ac <xlat_table_get_index+0x14>
2fff33a4:	4805      	ldr	r0, [pc, #20]	; (2fff33bc <xlat_table_get_index+0x24>)
2fff33a6:	2135      	movs	r1, #53	; 0x35
2fff33a8:	f006 faa0 	bl	2fff98ec <__assert>
2fff33ac:	695a      	ldr	r2, [r3, #20]
2fff33ae:	eb02 3200 	add.w	r2, r2, r0, lsl #12
2fff33b2:	4291      	cmp	r1, r2
2fff33b4:	d001      	beq.n	2fff33ba <xlat_table_get_index+0x22>
2fff33b6:	3001      	adds	r0, #1
2fff33b8:	e7f2      	b.n	2fff33a0 <xlat_table_get_index+0x8>
2fff33ba:	bd10      	pop	{r4, pc}
2fff33bc:	2fffaf63 	.word	0x2fffaf63

2fff33c0 <xlat_tables_unmap_region>:
2fff33c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff33c4:	b087      	sub	sp, #28
2fff33c6:	469a      	mov	sl, r3
2fff33c8:	460e      	mov	r6, r1
2fff33ca:	9f11      	ldr	r7, [sp, #68]	; 0x44
2fff33cc:	4605      	mov	r5, r0
2fff33ce:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
2fff33d0:	4611      	mov	r1, r2
2fff33d2:	42bb      	cmp	r3, r7
2fff33d4:	d801      	bhi.n	2fff33da <xlat_tables_unmap_region+0x1a>
2fff33d6:	2f03      	cmp	r7, #3
2fff33d8:	d904      	bls.n	2fff33e4 <xlat_tables_unmap_region+0x24>
2fff33da:	f240 115f 	movw	r1, #351	; 0x15f
2fff33de:	4846      	ldr	r0, [pc, #280]	; (2fff34f8 <xlat_tables_unmap_region+0x138>)
2fff33e0:	f006 fa84 	bl	2fff98ec <__assert>
2fff33e4:	e9d6 2302 	ldrd	r2, r3, [r6, #8]
2fff33e8:	f06f 0408 	mvn.w	r4, #8
2fff33ec:	f04f 0901 	mov.w	r9, #1
2fff33f0:	4413      	add	r3, r2
2fff33f2:	437c      	muls	r4, r7
2fff33f4:	428a      	cmp	r2, r1
2fff33f6:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff33fa:	9303      	str	r3, [sp, #12]
2fff33fc:	f104 0327 	add.w	r3, r4, #39	; 0x27
2fff3400:	bf98      	it	ls
2fff3402:	460a      	movls	r2, r1
2fff3404:	fa09 f003 	lsl.w	r0, r9, r3
2fff3408:	9002      	str	r0, [sp, #8]
2fff340a:	bf84      	itt	hi
2fff340c:	4240      	neghi	r0, r0
2fff340e:	4002      	andhi	r2, r0
2fff3410:	1a54      	subs	r4, r2, r1
2fff3412:	40dc      	lsrs	r4, r3
2fff3414:	1c7b      	adds	r3, r7, #1
2fff3416:	9304      	str	r3, [sp, #16]
2fff3418:	eb0a 08c4 	add.w	r8, sl, r4, lsl #3
2fff341c:	9b10      	ldr	r3, [sp, #64]	; 0x40
2fff341e:	429c      	cmp	r4, r3
2fff3420:	d25a      	bcs.n	2fff34d8 <xlat_tables_unmap_region+0x118>
2fff3422:	9b02      	ldr	r3, [sp, #8]
2fff3424:	e9d6 c102 	ldrd	ip, r1, [r6, #8]
2fff3428:	eb02 0b03 	add.w	fp, r2, r3
2fff342c:	4562      	cmp	r2, ip
2fff342e:	f10b 3eff 	add.w	lr, fp, #4294967295	; 0xffffffff
2fff3432:	f8d8 3000 	ldr.w	r3, [r8]
2fff3436:	4461      	add	r1, ip
2fff3438:	f003 0003 	and.w	r0, r3, #3
2fff343c:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
2fff3440:	d30f      	bcc.n	2fff3462 <xlat_tables_unmap_region+0xa2>
2fff3442:	4571      	cmp	r1, lr
2fff3444:	d30d      	bcc.n	2fff3462 <xlat_tables_unmap_region+0xa2>
2fff3446:	2f03      	cmp	r7, #3
2fff3448:	f1a0 0103 	sub.w	r1, r0, #3
2fff344c:	d103      	bne.n	2fff3456 <xlat_tables_unmap_region+0x96>
2fff344e:	b3a9      	cbz	r1, 2fff34bc <xlat_tables_unmap_region+0xfc>
2fff3450:	f44f 7196 	mov.w	r1, #300	; 0x12c
2fff3454:	e7c3      	b.n	2fff33de <xlat_tables_unmap_region+0x1e>
2fff3456:	b1a1      	cbz	r1, 2fff3482 <xlat_tables_unmap_region+0xc2>
2fff3458:	2801      	cmp	r0, #1
2fff345a:	d02f      	beq.n	2fff34bc <xlat_tables_unmap_region+0xfc>
2fff345c:	f240 113b 	movw	r1, #315	; 0x13b
2fff3460:	e7bd      	b.n	2fff33de <xlat_tables_unmap_region+0x1e>
2fff3462:	45f4      	cmp	ip, lr
2fff3464:	d901      	bls.n	2fff346a <xlat_tables_unmap_region+0xaa>
2fff3466:	428a      	cmp	r2, r1
2fff3468:	d830      	bhi.n	2fff34cc <xlat_tables_unmap_region+0x10c>
2fff346a:	2f03      	cmp	r7, #3
2fff346c:	d102      	bne.n	2fff3474 <xlat_tables_unmap_region+0xb4>
2fff346e:	f44f 71a5 	mov.w	r1, #330	; 0x14a
2fff3472:	e7b4      	b.n	2fff33de <xlat_tables_unmap_region+0x1e>
2fff3474:	2803      	cmp	r0, #3
2fff3476:	d004      	beq.n	2fff3482 <xlat_tables_unmap_region+0xc2>
2fff3478:	f240 114b 	movw	r1, #331	; 0x14b
2fff347c:	e7af      	b.n	2fff33de <xlat_tables_unmap_region+0x1e>
2fff347e:	465a      	mov	r2, fp
2fff3480:	e7cc      	b.n	2fff341c <xlat_tables_unmap_region+0x5c>
2fff3482:	f423 697f 	bic.w	r9, r3, #4080	; 0xff0
2fff3486:	f44f 7100 	mov.w	r1, #512	; 0x200
2fff348a:	9b04      	ldr	r3, [sp, #16]
2fff348c:	4628      	mov	r0, r5
2fff348e:	f029 090f 	bic.w	r9, r9, #15
2fff3492:	9301      	str	r3, [sp, #4]
2fff3494:	464b      	mov	r3, r9
2fff3496:	9100      	str	r1, [sp, #0]
2fff3498:	4631      	mov	r1, r6
2fff349a:	9205      	str	r2, [sp, #20]
2fff349c:	f7ff ff90 	bl	2fff33c0 <xlat_tables_unmap_region>
2fff34a0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff34a4:	4648      	mov	r0, r9
2fff34a6:	f7ff ff6a 	bl	2fff337e <xlat_clean_dcache_range>
2fff34aa:	4649      	mov	r1, r9
2fff34ac:	4628      	mov	r0, r5
2fff34ae:	f7ff ff73 	bl	2fff3398 <xlat_table_get_index>
2fff34b2:	69eb      	ldr	r3, [r5, #28]
2fff34b4:	9a05      	ldr	r2, [sp, #20]
2fff34b6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
2fff34ba:	b93b      	cbnz	r3, 2fff34cc <xlat_tables_unmap_region+0x10c>
2fff34bc:	2000      	movs	r0, #0
2fff34be:	2100      	movs	r1, #0
2fff34c0:	e9c8 0100 	strd	r0, r1, [r8]
2fff34c4:	6c69      	ldr	r1, [r5, #68]	; 0x44
2fff34c6:	4610      	mov	r0, r2
2fff34c8:	f7ff fda0 	bl	2fff300c <xlat_arch_tlbi_va>
2fff34cc:	9b03      	ldr	r3, [sp, #12]
2fff34ce:	3401      	adds	r4, #1
2fff34d0:	f108 0808 	add.w	r8, r8, #8
2fff34d4:	459b      	cmp	fp, r3
2fff34d6:	d3d2      	bcc.n	2fff347e <xlat_tables_unmap_region+0xbe>
2fff34d8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
2fff34da:	42bb      	cmp	r3, r7
2fff34dc:	d209      	bcs.n	2fff34f2 <xlat_tables_unmap_region+0x132>
2fff34de:	4651      	mov	r1, sl
2fff34e0:	4628      	mov	r0, r5
2fff34e2:	f7ff ff59 	bl	2fff3398 <xlat_table_get_index>
2fff34e6:	69ea      	ldr	r2, [r5, #28]
2fff34e8:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2fff34ec:	3b01      	subs	r3, #1
2fff34ee:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2fff34f2:	b007      	add	sp, #28
2fff34f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff34f8:	2fffaf63 	.word	0x2fffaf63

2fff34fc <xlat_desc>:
2fff34fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff34fe:	460e      	mov	r6, r1
2fff3500:	9906      	ldr	r1, [sp, #24]
2fff3502:	461d      	mov	r5, r3
2fff3504:	f06f 0308 	mvn.w	r3, #8
2fff3508:	434b      	muls	r3, r1
2fff350a:	f103 0427 	add.w	r4, r3, #39	; 0x27
2fff350e:	2301      	movs	r3, #1
2fff3510:	40a3      	lsls	r3, r4
2fff3512:	3b01      	subs	r3, #1
2fff3514:	4013      	ands	r3, r2
2fff3516:	d003      	beq.n	2fff3520 <xlat_desc+0x24>
2fff3518:	2172      	movs	r1, #114	; 0x72
2fff351a:	4820      	ldr	r0, [pc, #128]	; (2fff359c <xlat_desc+0xa0>)
2fff351c:	f006 f9e6 	bl	2fff98ec <__assert>
2fff3520:	6c40      	ldr	r0, [r0, #68]	; 0x44
2fff3522:	2903      	cmp	r1, #3
2fff3524:	bf0c      	ite	eq
2fff3526:	2103      	moveq	r1, #3
2fff3528:	2101      	movne	r1, #1
2fff352a:	19b4      	adds	r4, r6, r6
2fff352c:	f016 0f08 	tst.w	r6, #8
2fff3530:	f004 0420 	and.w	r4, r4, #32
2fff3534:	bf08      	it	eq
2fff3536:	2380      	moveq	r3, #128	; 0x80
2fff3538:	4314      	orrs	r4, r2
2fff353a:	2801      	cmp	r0, #1
2fff353c:	ea44 0401 	orr.w	r4, r4, r1
2fff3540:	ea44 0403 	orr.w	r4, r4, r3
2fff3544:	d10e      	bne.n	2fff3564 <xlat_desc+0x68>
2fff3546:	0673      	lsls	r3, r6, #25
2fff3548:	d411      	bmi.n	2fff356e <xlat_desc+0x72>
2fff354a:	f444 6480 	orr.w	r4, r4, #1024	; 0x400
2fff354e:	f016 0707 	ands.w	r7, r6, #7
2fff3552:	4629      	mov	r1, r5
2fff3554:	d10e      	bne.n	2fff3574 <xlat_desc+0x78>
2fff3556:	f7ff fd45 	bl	2fff2fe4 <xlat_arch_regime_get_xn_desc>
2fff355a:	4304      	orrs	r4, r0
2fff355c:	4329      	orrs	r1, r5
2fff355e:	f444 7001 	orr.w	r0, r4, #516	; 0x204
2fff3562:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff3564:	1e83      	subs	r3, r0, #2
2fff3566:	2b01      	cmp	r3, #1
2fff3568:	d901      	bls.n	2fff356e <xlat_desc+0x72>
2fff356a:	2194      	movs	r1, #148	; 0x94
2fff356c:	e7d5      	b.n	2fff351a <xlat_desc+0x1e>
2fff356e:	f444 6488 	orr.w	r4, r4, #1088	; 0x440
2fff3572:	e7ec      	b.n	2fff354e <xlat_desc+0x52>
2fff3574:	f016 0f28 	tst.w	r6, #40	; 0x28
2fff3578:	d003      	beq.n	2fff3582 <xlat_desc+0x86>
2fff357a:	f7ff fd33 	bl	2fff2fe4 <xlat_arch_regime_get_xn_desc>
2fff357e:	4304      	orrs	r4, r0
2fff3580:	4329      	orrs	r1, r5
2fff3582:	2f02      	cmp	r7, #2
2fff3584:	d102      	bne.n	2fff358c <xlat_desc+0x90>
2fff3586:	f444 7040 	orr.w	r0, r4, #768	; 0x300
2fff358a:	e7ea      	b.n	2fff3562 <xlat_desc+0x66>
2fff358c:	2f01      	cmp	r7, #1
2fff358e:	d001      	beq.n	2fff3594 <xlat_desc+0x98>
2fff3590:	21d4      	movs	r1, #212	; 0xd4
2fff3592:	e7c2      	b.n	2fff351a <xlat_desc+0x1e>
2fff3594:	f444 7002 	orr.w	r0, r4, #520	; 0x208
2fff3598:	e7e3      	b.n	2fff3562 <xlat_desc+0x66>
2fff359a:	bf00      	nop
2fff359c:	2fffaf63 	.word	0x2fffaf63

2fff35a0 <xlat_tables_map_region>:
2fff35a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff35a4:	b089      	sub	sp, #36	; 0x24
2fff35a6:	460e      	mov	r6, r1
2fff35a8:	4680      	mov	r8, r0
2fff35aa:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
2fff35ae:	461f      	mov	r7, r3
2fff35b0:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
2fff35b2:	4549      	cmp	r1, r9
2fff35b4:	d802      	bhi.n	2fff35bc <xlat_tables_map_region+0x1c>
2fff35b6:	f1b9 0f03 	cmp.w	r9, #3
2fff35ba:	d904      	bls.n	2fff35c6 <xlat_tables_map_region+0x26>
2fff35bc:	f44f 710d 	mov.w	r1, #564	; 0x234
2fff35c0:	4860      	ldr	r0, [pc, #384]	; (2fff3744 <xlat_tables_map_region+0x1a4>)
2fff35c2:	f006 f993 	bl	2fff98ec <__assert>
2fff35c6:	e9d6 0302 	ldrd	r0, r3, [r6, #8]
2fff35ca:	f04f 0b01 	mov.w	fp, #1
2fff35ce:	4403      	add	r3, r0
2fff35d0:	4290      	cmp	r0, r2
2fff35d2:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff35d6:	9305      	str	r3, [sp, #20]
2fff35d8:	f06f 0308 	mvn.w	r3, #8
2fff35dc:	fb03 f309 	mul.w	r3, r3, r9
2fff35e0:	bf98      	it	ls
2fff35e2:	4614      	movls	r4, r2
2fff35e4:	f103 0327 	add.w	r3, r3, #39	; 0x27
2fff35e8:	9303      	str	r3, [sp, #12]
2fff35ea:	fa0b fb03 	lsl.w	fp, fp, r3
2fff35ee:	9b03      	ldr	r3, [sp, #12]
2fff35f0:	bf84      	itt	hi
2fff35f2:	f1cb 0400 	rsbhi	r4, fp, #0
2fff35f6:	4004      	andhi	r4, r0
2fff35f8:	1aa2      	subs	r2, r4, r2
2fff35fa:	4549      	cmp	r1, r9
2fff35fc:	fa22 f503 	lsr.w	r5, r2, r3
2fff3600:	d20a      	bcs.n	2fff3618 <xlat_tables_map_region+0x78>
2fff3602:	4639      	mov	r1, r7
2fff3604:	4640      	mov	r0, r8
2fff3606:	f7ff fec7 	bl	2fff3398 <xlat_table_get_index>
2fff360a:	f8d8 201c 	ldr.w	r2, [r8, #28]
2fff360e:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2fff3612:	3301      	adds	r3, #1
2fff3614:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2fff3618:	eb07 07c5 	add.w	r7, r7, r5, lsl #3
2fff361c:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
2fff3620:	9306      	str	r3, [sp, #24]
2fff3622:	f109 0301 	add.w	r3, r9, #1
2fff3626:	9304      	str	r3, [sp, #16]
2fff3628:	e04f      	b.n	2fff36ca <xlat_tables_map_region+0x12a>
2fff362a:	68b3      	ldr	r3, [r6, #8]
2fff362c:	68f2      	ldr	r2, [r6, #12]
2fff362e:	6838      	ldr	r0, [r7, #0]
2fff3630:	42a3      	cmp	r3, r4
2fff3632:	441a      	add	r2, r3
2fff3634:	f000 0103 	and.w	r1, r0, #3
2fff3638:	eb04 0a0b 	add.w	sl, r4, fp
2fff363c:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
2fff3640:	f10a 3cff 	add.w	ip, sl, #4294967295	; 0xffffffff
2fff3644:	d84b      	bhi.n	2fff36de <xlat_tables_map_region+0x13e>
2fff3646:	4562      	cmp	r2, ip
2fff3648:	d349      	bcc.n	2fff36de <xlat_tables_map_region+0x13e>
2fff364a:	6832      	ldr	r2, [r6, #0]
2fff364c:	1ad2      	subs	r2, r2, r3
2fff364e:	6873      	ldr	r3, [r6, #4]
2fff3650:	f163 0300 	sbc.w	r3, r3, #0
2fff3654:	1912      	adds	r2, r2, r4
2fff3656:	f143 0300 	adc.w	r3, r3, #0
2fff365a:	f1b9 0f03 	cmp.w	r9, #3
2fff365e:	d105      	bne.n	2fff366c <xlat_tables_map_region+0xcc>
2fff3660:	2903      	cmp	r1, #3
2fff3662:	d02c      	beq.n	2fff36be <xlat_tables_map_region+0x11e>
2fff3664:	b319      	cbz	r1, 2fff36ae <xlat_tables_map_region+0x10e>
2fff3666:	f240 11cb 	movw	r1, #459	; 0x1cb
2fff366a:	e7a9      	b.n	2fff35c0 <xlat_tables_map_region+0x20>
2fff366c:	2903      	cmp	r1, #3
2fff366e:	d064      	beq.n	2fff373a <xlat_tables_map_region+0x19a>
2fff3670:	bb81      	cbnz	r1, 2fff36d4 <xlat_tables_map_region+0x134>
2fff3672:	9906      	ldr	r1, [sp, #24]
2fff3674:	420a      	tst	r2, r1
2fff3676:	d013      	beq.n	2fff36a0 <xlat_tables_map_region+0x100>
2fff3678:	f8d8 1018 	ldr.w	r1, [r8, #24]
2fff367c:	2300      	movs	r3, #0
2fff367e:	428b      	cmp	r3, r1
2fff3680:	da0a      	bge.n	2fff3698 <xlat_tables_map_region+0xf8>
2fff3682:	f8d8 201c 	ldr.w	r2, [r8, #28]
2fff3686:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
2fff368a:	2a00      	cmp	r2, #0
2fff368c:	d138      	bne.n	2fff3700 <xlat_tables_map_region+0x160>
2fff368e:	f8d8 1014 	ldr.w	r1, [r8, #20]
2fff3692:	eb11 3303 	adds.w	r3, r1, r3, lsl #12
2fff3696:	d135      	bne.n	2fff3704 <xlat_tables_map_region+0x164>
2fff3698:	4620      	mov	r0, r4
2fff369a:	b009      	add	sp, #36	; 0x24
2fff369c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff36a0:	f1b9 0f00 	cmp.w	r9, #0
2fff36a4:	d0e8      	beq.n	2fff3678 <xlat_tables_map_region+0xd8>
2fff36a6:	6971      	ldr	r1, [r6, #20]
2fff36a8:	9803      	ldr	r0, [sp, #12]
2fff36aa:	40c1      	lsrs	r1, r0
2fff36ac:	d0e4      	beq.n	2fff3678 <xlat_tables_map_region+0xd8>
2fff36ae:	6931      	ldr	r1, [r6, #16]
2fff36b0:	4640      	mov	r0, r8
2fff36b2:	f8cd 9000 	str.w	r9, [sp]
2fff36b6:	f7ff ff21 	bl	2fff34fc <xlat_desc>
2fff36ba:	e9c7 0100 	strd	r0, r1, [r7]
2fff36be:	9b05      	ldr	r3, [sp, #20]
2fff36c0:	3501      	adds	r5, #1
2fff36c2:	3708      	adds	r7, #8
2fff36c4:	4654      	mov	r4, sl
2fff36c6:	4553      	cmp	r3, sl
2fff36c8:	d902      	bls.n	2fff36d0 <xlat_tables_map_region+0x130>
2fff36ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
2fff36cc:	429d      	cmp	r5, r3
2fff36ce:	d3ac      	bcc.n	2fff362a <xlat_tables_map_region+0x8a>
2fff36d0:	3c01      	subs	r4, #1
2fff36d2:	e7e1      	b.n	2fff3698 <xlat_tables_map_region+0xf8>
2fff36d4:	2901      	cmp	r1, #1
2fff36d6:	d0f2      	beq.n	2fff36be <xlat_tables_map_region+0x11e>
2fff36d8:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
2fff36dc:	e770      	b.n	2fff35c0 <xlat_tables_map_region+0x20>
2fff36de:	4563      	cmp	r3, ip
2fff36e0:	d901      	bls.n	2fff36e6 <xlat_tables_map_region+0x146>
2fff36e2:	4294      	cmp	r4, r2
2fff36e4:	d8eb      	bhi.n	2fff36be <xlat_tables_map_region+0x11e>
2fff36e6:	f1b9 0f03 	cmp.w	r9, #3
2fff36ea:	d102      	bne.n	2fff36f2 <xlat_tables_map_region+0x152>
2fff36ec:	f240 2107 	movw	r1, #519	; 0x207
2fff36f0:	e766      	b.n	2fff35c0 <xlat_tables_map_region+0x20>
2fff36f2:	2900      	cmp	r1, #0
2fff36f4:	d0c0      	beq.n	2fff3678 <xlat_tables_map_region+0xd8>
2fff36f6:	2903      	cmp	r1, #3
2fff36f8:	d01f      	beq.n	2fff373a <xlat_tables_map_region+0x19a>
2fff36fa:	f240 2112 	movw	r1, #530	; 0x212
2fff36fe:	e75f      	b.n	2fff35c0 <xlat_tables_map_region+0x20>
2fff3700:	3301      	adds	r3, #1
2fff3702:	e7bc      	b.n	2fff367e <xlat_tables_map_region+0xde>
2fff3704:	f043 0103 	orr.w	r1, r3, #3
2fff3708:	e9c7 1200 	strd	r1, r2, [r7]
2fff370c:	9a04      	ldr	r2, [sp, #16]
2fff370e:	4631      	mov	r1, r6
2fff3710:	9307      	str	r3, [sp, #28]
2fff3712:	4640      	mov	r0, r8
2fff3714:	9201      	str	r2, [sp, #4]
2fff3716:	f44f 7200 	mov.w	r2, #512	; 0x200
2fff371a:	9200      	str	r2, [sp, #0]
2fff371c:	4622      	mov	r2, r4
2fff371e:	f7ff ff3f 	bl	2fff35a0 <xlat_tables_map_region>
2fff3722:	9b07      	ldr	r3, [sp, #28]
2fff3724:	4604      	mov	r4, r0
2fff3726:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff372a:	4618      	mov	r0, r3
2fff372c:	f7ff fe27 	bl	2fff337e <xlat_clean_dcache_range>
2fff3730:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
2fff3734:	429c      	cmp	r4, r3
2fff3736:	d0c2      	beq.n	2fff36be <xlat_tables_map_region+0x11e>
2fff3738:	e7ae      	b.n	2fff3698 <xlat_tables_map_region+0xf8>
2fff373a:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
2fff373e:	f023 030f 	bic.w	r3, r3, #15
2fff3742:	e7e3      	b.n	2fff370c <xlat_tables_map_region+0x16c>
2fff3744:	2fffaf63 	.word	0x2fffaf63

2fff3748 <mmap_add_region_ctx>:
2fff3748:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff374c:	4607      	mov	r7, r0
2fff374e:	f8d1 a00c 	ldr.w	sl, [r1, #12]
2fff3752:	460e      	mov	r6, r1
2fff3754:	f1ba 0f00 	cmp.w	sl, #0
2fff3758:	d052      	beq.n	2fff3800 <mmap_add_region_ctx+0xb8>
2fff375a:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
2fff375e:	b123      	cbz	r3, 2fff376a <mmap_add_region_ctx+0x22>
2fff3760:	f240 3107 	movw	r1, #775	; 0x307
2fff3764:	482f      	ldr	r0, [pc, #188]	; (2fff3824 <mmap_add_region_ctx+0xdc>)
2fff3766:	f006 f8c1 	bl	2fff98ec <__assert>
2fff376a:	f7ff fd71 	bl	2fff3250 <mmap_add_region_check>
2fff376e:	4601      	mov	r1, r0
2fff3770:	b9e8      	cbnz	r0, 2fff37ae <mmap_add_region_ctx+0x66>
2fff3772:	68b1      	ldr	r1, [r6, #8]
2fff3774:	68fa      	ldr	r2, [r7, #12]
2fff3776:	4451      	add	r1, sl
2fff3778:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
2fff377c:	4614      	mov	r4, r2
2fff377e:	e9d4 3002 	ldrd	r3, r0, [r4, #8]
2fff3782:	4403      	add	r3, r0
2fff3784:	3b01      	subs	r3, #1
2fff3786:	4543      	cmp	r3, r8
2fff3788:	d200      	bcs.n	2fff378c <mmap_add_region_ctx+0x44>
2fff378a:	b9b0      	cbnz	r0, 2fff37ba <mmap_add_region_ctx+0x72>
2fff378c:	e9d4 3002 	ldrd	r3, r0, [r4, #8]
2fff3790:	4403      	add	r3, r0
2fff3792:	4299      	cmp	r1, r3
2fff3794:	d013      	beq.n	2fff37be <mmap_add_region_ctx+0x76>
2fff3796:	693b      	ldr	r3, [r7, #16]
2fff3798:	f04f 0918 	mov.w	r9, #24
2fff379c:	fb09 2903 	mla	r9, r9, r3, r2
2fff37a0:	68d3      	ldr	r3, [r2, #12]
2fff37a2:	b37b      	cbz	r3, 2fff3804 <mmap_add_region_ctx+0xbc>
2fff37a4:	454a      	cmp	r2, r9
2fff37a6:	d310      	bcc.n	2fff37ca <mmap_add_region_ctx+0x82>
2fff37a8:	f240 313f 	movw	r1, #831	; 0x33f
2fff37ac:	e7da      	b.n	2fff3764 <mmap_add_region_ctx+0x1c>
2fff37ae:	481e      	ldr	r0, [pc, #120]	; (2fff3828 <mmap_add_region_ctx+0xe0>)
2fff37b0:	f7ff f858 	bl	2fff2864 <tf_log>
2fff37b4:	f44f 7143 	mov.w	r1, #780	; 0x30c
2fff37b8:	e7d4      	b.n	2fff3764 <mmap_add_region_ctx+0x1c>
2fff37ba:	3418      	adds	r4, #24
2fff37bc:	e7df      	b.n	2fff377e <mmap_add_region_ctx+0x36>
2fff37be:	2800      	cmp	r0, #0
2fff37c0:	d0e9      	beq.n	2fff3796 <mmap_add_region_ctx+0x4e>
2fff37c2:	4582      	cmp	sl, r0
2fff37c4:	d9e7      	bls.n	2fff3796 <mmap_add_region_ctx+0x4e>
2fff37c6:	3418      	adds	r4, #24
2fff37c8:	e7e0      	b.n	2fff378c <mmap_add_region_ctx+0x44>
2fff37ca:	3218      	adds	r2, #24
2fff37cc:	e7e8      	b.n	2fff37a0 <mmap_add_region_ctx+0x58>
2fff37ce:	1e6a      	subs	r2, r5, #1
2fff37d0:	f14b 33ff 	adc.w	r3, fp, #4294967295	; 0xffffffff
2fff37d4:	eb12 0a0a 	adds.w	sl, r2, sl
2fff37d8:	f143 0500 	adc.w	r5, r3, #0
2fff37dc:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
2fff37de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2fff37e0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
2fff37e4:	e896 0003 	ldmia.w	r6, {r0, r1}
2fff37e8:	4552      	cmp	r2, sl
2fff37ea:	41ab      	sbcs	r3, r5
2fff37ec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
2fff37ee:	e884 0003 	stmia.w	r4, {r0, r1}
2fff37f2:	bf38      	it	cc
2fff37f4:	e9c7 a50c 	strdcc	sl, r5, [r7, #48]	; 0x30
2fff37f8:	4543      	cmp	r3, r8
2fff37fa:	d201      	bcs.n	2fff3800 <mmap_add_region_ctx+0xb8>
2fff37fc:	f8c7 8038 	str.w	r8, [r7, #56]	; 0x38
2fff3800:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3804:	1b12      	subs	r2, r2, r4
2fff3806:	4621      	mov	r1, r4
2fff3808:	f104 0018 	add.w	r0, r4, #24
2fff380c:	e9d6 5b00 	ldrd	r5, fp, [r6]
2fff3810:	f006 f89f 	bl	2fff9952 <memmove>
2fff3814:	f8d9 300c 	ldr.w	r3, [r9, #12]
2fff3818:	2b00      	cmp	r3, #0
2fff381a:	d0d8      	beq.n	2fff37ce <mmap_add_region_ctx+0x86>
2fff381c:	f240 314b 	movw	r1, #843	; 0x34b
2fff3820:	e7a0      	b.n	2fff3764 <mmap_add_region_ctx+0x1c>
2fff3822:	bf00      	nop
2fff3824:	2fffaf63 	.word	0x2fffaf63
2fff3828:	2fffaf89 	.word	0x2fffaf89

2fff382c <mmap_add_ctx>:
2fff382c:	b538      	push	{r3, r4, r5, lr}
2fff382e:	4605      	mov	r5, r0
2fff3830:	460c      	mov	r4, r1
2fff3832:	6963      	ldr	r3, [r4, #20]
2fff3834:	b903      	cbnz	r3, 2fff3838 <mmap_add_ctx+0xc>
2fff3836:	bd38      	pop	{r3, r4, r5, pc}
2fff3838:	4621      	mov	r1, r4
2fff383a:	4628      	mov	r0, r5
2fff383c:	3418      	adds	r4, #24
2fff383e:	f7ff ff83 	bl	2fff3748 <mmap_add_region_ctx>
2fff3842:	e7f6      	b.n	2fff3832 <mmap_add_ctx+0x6>

2fff3844 <mmap_add_dynamic_region_ctx>:
2fff3844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3848:	b08d      	sub	sp, #52	; 0x34
2fff384a:	68cb      	ldr	r3, [r1, #12]
2fff384c:	4604      	mov	r4, r0
2fff384e:	460d      	mov	r5, r1
2fff3850:	9303      	str	r3, [sp, #12]
2fff3852:	b92b      	cbnz	r3, 2fff3860 <mmap_add_dynamic_region_ctx+0x1c>
2fff3854:	f04f 0900 	mov.w	r9, #0
2fff3858:	4648      	mov	r0, r9
2fff385a:	b00d      	add	sp, #52	; 0x34
2fff385c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3860:	680b      	ldr	r3, [r1, #0]
2fff3862:	f8d0 a00c 	ldr.w	sl, [r0, #12]
2fff3866:	9304      	str	r3, [sp, #16]
2fff3868:	684b      	ldr	r3, [r1, #4]
2fff386a:	f8d0 b010 	ldr.w	fp, [r0, #16]
2fff386e:	9305      	str	r3, [sp, #20]
2fff3870:	690b      	ldr	r3, [r1, #16]
2fff3872:	688e      	ldr	r6, [r1, #8]
2fff3874:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff3878:	610b      	str	r3, [r1, #16]
2fff387a:	f7ff fce9 	bl	2fff3250 <mmap_add_region_check>
2fff387e:	4681      	mov	r9, r0
2fff3880:	2800      	cmp	r0, #0
2fff3882:	d1e9      	bne.n	2fff3858 <mmap_add_dynamic_region_ctx+0x14>
2fff3884:	9b03      	ldr	r3, [sp, #12]
2fff3886:	1999      	adds	r1, r3, r6
2fff3888:	4653      	mov	r3, sl
2fff388a:	1e4e      	subs	r6, r1, #1
2fff388c:	e9d3 2002 	ldrd	r2, r0, [r3, #8]
2fff3890:	4698      	mov	r8, r3
2fff3892:	3318      	adds	r3, #24
2fff3894:	4402      	add	r2, r0
2fff3896:	3a01      	subs	r2, #1
2fff3898:	42b2      	cmp	r2, r6
2fff389a:	d201      	bcs.n	2fff38a0 <mmap_add_dynamic_region_ctx+0x5c>
2fff389c:	2800      	cmp	r0, #0
2fff389e:	d1f5      	bne.n	2fff388c <mmap_add_dynamic_region_ctx+0x48>
2fff38a0:	e9d8 3202 	ldrd	r3, r2, [r8, #8]
2fff38a4:	4647      	mov	r7, r8
2fff38a6:	f108 0818 	add.w	r8, r8, #24
2fff38aa:	4413      	add	r3, r2
2fff38ac:	4299      	cmp	r1, r3
2fff38ae:	d103      	bne.n	2fff38b8 <mmap_add_dynamic_region_ctx+0x74>
2fff38b0:	b112      	cbz	r2, 2fff38b8 <mmap_add_dynamic_region_ctx+0x74>
2fff38b2:	9b03      	ldr	r3, [sp, #12]
2fff38b4:	4293      	cmp	r3, r2
2fff38b6:	d8f3      	bhi.n	2fff38a0 <mmap_add_dynamic_region_ctx+0x5c>
2fff38b8:	2318      	movs	r3, #24
2fff38ba:	4639      	mov	r1, r7
2fff38bc:	fb03 aa0b 	mla	sl, r3, fp, sl
2fff38c0:	4640      	mov	r0, r8
2fff38c2:	ebaa 0b07 	sub.w	fp, sl, r7
2fff38c6:	465a      	mov	r2, fp
2fff38c8:	f006 f843 	bl	2fff9952 <memmove>
2fff38cc:	f8da a00c 	ldr.w	sl, [sl, #12]
2fff38d0:	f1ba 0f00 	cmp.w	sl, #0
2fff38d4:	d004      	beq.n	2fff38e0 <mmap_add_dynamic_region_ctx+0x9c>
2fff38d6:	4832      	ldr	r0, [pc, #200]	; (2fff39a0 <mmap_add_dynamic_region_ctx+0x15c>)
2fff38d8:	f240 31d6 	movw	r1, #982	; 0x3d6
2fff38dc:	f006 f806 	bl	2fff98ec <__assert>
2fff38e0:	46ae      	mov	lr, r5
2fff38e2:	46bc      	mov	ip, r7
2fff38e4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
2fff38e8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
2fff38ec:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
2fff38f0:	e89e 0003 	ldmia.w	lr, {r0, r1}
2fff38f4:	e88c 0003 	stmia.w	ip, {r0, r1}
2fff38f8:	2b00      	cmp	r3, #0
2fff38fa:	d03a      	beq.n	2fff3972 <mmap_add_dynamic_region_ctx+0x12e>
2fff38fc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff38fe:	4652      	mov	r2, sl
2fff3900:	4639      	mov	r1, r7
2fff3902:	4620      	mov	r0, r4
2fff3904:	9301      	str	r3, [sp, #4]
2fff3906:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3908:	9300      	str	r3, [sp, #0]
2fff390a:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff390c:	f7ff fe48 	bl	2fff35a0 <xlat_tables_map_region>
2fff3910:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3912:	4606      	mov	r6, r0
2fff3914:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3916:	00c9      	lsls	r1, r1, #3
2fff3918:	f7ff fd31 	bl	2fff337e <xlat_clean_dcache_range>
2fff391c:	e9d7 3202 	ldrd	r3, r2, [r7, #8]
2fff3920:	4413      	add	r3, r2
2fff3922:	3b01      	subs	r3, #1
2fff3924:	42b3      	cmp	r3, r6
2fff3926:	d022      	beq.n	2fff396e <mmap_add_dynamic_region_ctx+0x12a>
2fff3928:	465a      	mov	r2, fp
2fff392a:	4641      	mov	r1, r8
2fff392c:	4638      	mov	r0, r7
2fff392e:	f006 f810 	bl	2fff9952 <memmove>
2fff3932:	68ad      	ldr	r5, [r5, #8]
2fff3934:	42b5      	cmp	r5, r6
2fff3936:	d217      	bcs.n	2fff3968 <mmap_add_dynamic_region_ctx+0x124>
2fff3938:	2218      	movs	r2, #24
2fff393a:	4651      	mov	r1, sl
2fff393c:	eb0d 0002 	add.w	r0, sp, r2
2fff3940:	f006 f81d 	bl	2fff997e <memset>
2fff3944:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff3946:	a906      	add	r1, sp, #24
2fff3948:	9508      	str	r5, [sp, #32]
2fff394a:	4620      	mov	r0, r4
2fff394c:	9301      	str	r3, [sp, #4]
2fff394e:	4652      	mov	r2, sl
2fff3950:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3952:	1b75      	subs	r5, r6, r5
2fff3954:	9300      	str	r3, [sp, #0]
2fff3956:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3958:	9509      	str	r5, [sp, #36]	; 0x24
2fff395a:	f7ff fd31 	bl	2fff33c0 <xlat_tables_unmap_region>
2fff395e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3960:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3962:	00c9      	lsls	r1, r1, #3
2fff3964:	f7ff fd0b 	bl	2fff337e <xlat_clean_dcache_range>
2fff3968:	f06f 090b 	mvn.w	r9, #11
2fff396c:	e774      	b.n	2fff3858 <mmap_add_dynamic_region_ctx+0x14>
2fff396e:	f3bf 8f4a 	dsb	ishst
2fff3972:	9b04      	ldr	r3, [sp, #16]
2fff3974:	9903      	ldr	r1, [sp, #12]
2fff3976:	9a05      	ldr	r2, [sp, #20]
2fff3978:	3b01      	subs	r3, #1
2fff397a:	f142 32ff 	adc.w	r2, r2, #4294967295	; 0xffffffff
2fff397e:	185b      	adds	r3, r3, r1
2fff3980:	e9d4 010c 	ldrd	r0, r1, [r4, #48]	; 0x30
2fff3984:	f142 0200 	adc.w	r2, r2, #0
2fff3988:	4298      	cmp	r0, r3
2fff398a:	4191      	sbcs	r1, r2
2fff398c:	bf38      	it	cc
2fff398e:	e9c4 320c 	strdcc	r3, r2, [r4, #48]	; 0x30
2fff3992:	6ba3      	ldr	r3, [r4, #56]	; 0x38
2fff3994:	42b3      	cmp	r3, r6
2fff3996:	f4bf af5d 	bcs.w	2fff3854 <mmap_add_dynamic_region_ctx+0x10>
2fff399a:	63a6      	str	r6, [r4, #56]	; 0x38
2fff399c:	e75c      	b.n	2fff3858 <mmap_add_dynamic_region_ctx+0x14>
2fff399e:	bf00      	nop
2fff39a0:	2fffaf63 	.word	0x2fffaf63

2fff39a4 <mmap_remove_dynamic_region_ctx>:
2fff39a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff39a8:	f04f 0818 	mov.w	r8, #24
2fff39ac:	6903      	ldr	r3, [r0, #16]
2fff39ae:	b085      	sub	sp, #20
2fff39b0:	68c5      	ldr	r5, [r0, #12]
2fff39b2:	4604      	mov	r4, r0
2fff39b4:	fb08 5803 	mla	r8, r8, r3, r5
2fff39b8:	f8d8 300c 	ldr.w	r3, [r8, #12]
2fff39bc:	b153      	cbz	r3, 2fff39d4 <mmap_remove_dynamic_region_ctx+0x30>
2fff39be:	483a      	ldr	r0, [pc, #232]	; (2fff3aa8 <mmap_remove_dynamic_region_ctx+0x104>)
2fff39c0:	f240 413a 	movw	r1, #1082	; 0x43a
2fff39c4:	f005 ff92 	bl	2fff98ec <__assert>
2fff39c8:	68a8      	ldr	r0, [r5, #8]
2fff39ca:	4288      	cmp	r0, r1
2fff39cc:	d101      	bne.n	2fff39d2 <mmap_remove_dynamic_region_ctx+0x2e>
2fff39ce:	4293      	cmp	r3, r2
2fff39d0:	d064      	beq.n	2fff3a9c <mmap_remove_dynamic_region_ctx+0xf8>
2fff39d2:	3518      	adds	r5, #24
2fff39d4:	68eb      	ldr	r3, [r5, #12]
2fff39d6:	2b00      	cmp	r3, #0
2fff39d8:	d1f6      	bne.n	2fff39c8 <mmap_remove_dynamic_region_ctx+0x24>
2fff39da:	f06f 0015 	mvn.w	r0, #21
2fff39de:	b005      	add	sp, #20
2fff39e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff39e4:	e9d5 3700 	ldrd	r3, r7, [r5]
2fff39e8:	f8d4 b038 	ldr.w	fp, [r4, #56]	; 0x38
2fff39ec:	3901      	subs	r1, #1
2fff39ee:	188e      	adds	r6, r1, r2
2fff39f0:	18d2      	adds	r2, r2, r3
2fff39f2:	6b23      	ldr	r3, [r4, #48]	; 0x30
2fff39f4:	f147 0700 	adc.w	r7, r7, #0
2fff39f8:	f112 39ff 	adds.w	r9, r2, #4294967295	; 0xffffffff
2fff39fc:	9303      	str	r3, [sp, #12]
2fff39fe:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
2fff3a02:	f147 37ff 	adc.w	r7, r7, #4294967295	; 0xffffffff
2fff3a06:	f8d4 a034 	ldr.w	sl, [r4, #52]	; 0x34
2fff3a0a:	b183      	cbz	r3, 2fff3a2e <mmap_remove_dynamic_region_ctx+0x8a>
2fff3a0c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff3a0e:	2200      	movs	r2, #0
2fff3a10:	4629      	mov	r1, r5
2fff3a12:	4620      	mov	r0, r4
2fff3a14:	9301      	str	r3, [sp, #4]
2fff3a16:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3a18:	9300      	str	r3, [sp, #0]
2fff3a1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3a1c:	f7ff fcd0 	bl	2fff33c0 <xlat_tables_unmap_region>
2fff3a20:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3a22:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3a24:	00c9      	lsls	r1, r1, #3
2fff3a26:	f7ff fcaa 	bl	2fff337e <xlat_clean_dcache_range>
2fff3a2a:	f7ff fb07 	bl	2fff303c <xlat_arch_tlbi_va_sync>
2fff3a2e:	eba8 0205 	sub.w	r2, r8, r5
2fff3a32:	f105 0118 	add.w	r1, r5, #24
2fff3a36:	4628      	mov	r0, r5
2fff3a38:	f005 ff8b 	bl	2fff9952 <memmove>
2fff3a3c:	455e      	cmp	r6, fp
2fff3a3e:	d00e      	beq.n	2fff3a5e <mmap_remove_dynamic_region_ctx+0xba>
2fff3a40:	9b03      	ldr	r3, [sp, #12]
2fff3a42:	4557      	cmp	r7, sl
2fff3a44:	bf08      	it	eq
2fff3a46:	4599      	cmpeq	r9, r3
2fff3a48:	d107      	bne.n	2fff3a5a <mmap_remove_dynamic_region_ctx+0xb6>
2fff3a4a:	2200      	movs	r2, #0
2fff3a4c:	2300      	movs	r3, #0
2fff3a4e:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
2fff3a52:	68e2      	ldr	r2, [r4, #12]
2fff3a54:	68d0      	ldr	r0, [r2, #12]
2fff3a56:	3218      	adds	r2, #24
2fff3a58:	b980      	cbnz	r0, 2fff3a7c <mmap_remove_dynamic_region_ctx+0xd8>
2fff3a5a:	2000      	movs	r0, #0
2fff3a5c:	e7bf      	b.n	2fff39de <mmap_remove_dynamic_region_ctx+0x3a>
2fff3a5e:	68e2      	ldr	r2, [r4, #12]
2fff3a60:	2300      	movs	r3, #0
2fff3a62:	63a3      	str	r3, [r4, #56]	; 0x38
2fff3a64:	68d3      	ldr	r3, [r2, #12]
2fff3a66:	2b00      	cmp	r3, #0
2fff3a68:	d0ea      	beq.n	2fff3a40 <mmap_remove_dynamic_region_ctx+0x9c>
2fff3a6a:	6891      	ldr	r1, [r2, #8]
2fff3a6c:	3218      	adds	r2, #24
2fff3a6e:	440b      	add	r3, r1
2fff3a70:	6ba1      	ldr	r1, [r4, #56]	; 0x38
2fff3a72:	3b01      	subs	r3, #1
2fff3a74:	428b      	cmp	r3, r1
2fff3a76:	bf88      	it	hi
2fff3a78:	63a3      	strhi	r3, [r4, #56]	; 0x38
2fff3a7a:	e7f3      	b.n	2fff3a64 <mmap_remove_dynamic_region_ctx+0xc0>
2fff3a7c:	e952 3106 	ldrd	r3, r1, [r2, #-24]
2fff3a80:	3b01      	subs	r3, #1
2fff3a82:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
2fff3a86:	181b      	adds	r3, r3, r0
2fff3a88:	e9d4 500c 	ldrd	r5, r0, [r4, #48]	; 0x30
2fff3a8c:	f141 0100 	adc.w	r1, r1, #0
2fff3a90:	429d      	cmp	r5, r3
2fff3a92:	4188      	sbcs	r0, r1
2fff3a94:	bf38      	it	cc
2fff3a96:	e9c4 310c 	strdcc	r3, r1, [r4, #48]	; 0x30
2fff3a9a:	e7db      	b.n	2fff3a54 <mmap_remove_dynamic_region_ctx+0xb0>
2fff3a9c:	692b      	ldr	r3, [r5, #16]
2fff3a9e:	2b00      	cmp	r3, #0
2fff3aa0:	dba0      	blt.n	2fff39e4 <mmap_remove_dynamic_region_ctx+0x40>
2fff3aa2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff3aa6:	e79a      	b.n	2fff39de <mmap_remove_dynamic_region_ctx+0x3a>
2fff3aa8:	2fffaf63 	.word	0x2fffaf63

2fff3aac <init_xlat_tables_ctx>:
2fff3aac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff3aae:	4604      	mov	r4, r0
2fff3ab0:	b920      	cbnz	r0, 2fff3abc <init_xlat_tables_ctx+0x10>
2fff3ab2:	f240 4199 	movw	r1, #1177	; 0x499
2fff3ab6:	484f      	ldr	r0, [pc, #316]	; (2fff3bf4 <init_xlat_tables_ctx+0x148>)
2fff3ab8:	f005 ff18 	bl	2fff98ec <__assert>
2fff3abc:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
2fff3ac0:	b113      	cbz	r3, 2fff3ac8 <init_xlat_tables_ctx+0x1c>
2fff3ac2:	f240 419a 	movw	r1, #1178	; 0x49a
2fff3ac6:	e7f6      	b.n	2fff3ab6 <init_xlat_tables_ctx+0xa>
2fff3ac8:	6c43      	ldr	r3, [r0, #68]	; 0x44
2fff3aca:	3b01      	subs	r3, #1
2fff3acc:	2b02      	cmp	r3, #2
2fff3ace:	d902      	bls.n	2fff3ad6 <init_xlat_tables_ctx+0x2a>
2fff3ad0:	f240 419b 	movw	r1, #1179	; 0x49b
2fff3ad4:	e7ef      	b.n	2fff3ab6 <init_xlat_tables_ctx+0xa>
2fff3ad6:	f7ff fad7 	bl	2fff3088 <is_mmu_enabled_ctx>
2fff3ada:	b110      	cbz	r0, 2fff3ae2 <init_xlat_tables_ctx+0x36>
2fff3adc:	f240 419e 	movw	r1, #1182	; 0x49e
2fff3ae0:	e7e9      	b.n	2fff3ab6 <init_xlat_tables_ctx+0xa>
2fff3ae2:	e9d4 6502 	ldrd	r6, r5, [r4, #8]
2fff3ae6:	f7ff fa6b 	bl	2fff2fc0 <xlat_get_min_virt_addr_space_size>
2fff3aea:	3801      	subs	r0, #1
2fff3aec:	4286      	cmp	r6, r0
2fff3aee:	d202      	bcs.n	2fff3af6 <init_xlat_tables_ctx+0x4a>
2fff3af0:	f240 41a2 	movw	r1, #1186	; 0x4a2
2fff3af4:	e7df      	b.n	2fff3ab6 <init_xlat_tables_ctx+0xa>
2fff3af6:	68a3      	ldr	r3, [r4, #8]
2fff3af8:	1c5e      	adds	r6, r3, #1
2fff3afa:	401e      	ands	r6, r3
2fff3afc:	d002      	beq.n	2fff3b04 <init_xlat_tables_ctx+0x58>
2fff3afe:	f240 41a5 	movw	r1, #1189	; 0x4a5
2fff3b02:	e7d8      	b.n	2fff3ab6 <init_xlat_tables_ctx+0xa>
2fff3b04:	4628      	mov	r0, r5
2fff3b06:	f000 f87b 	bl	2fff3c00 <xlat_mmap_print>
2fff3b0a:	483b      	ldr	r0, [pc, #236]	; (2fff3bf8 <init_xlat_tables_ctx+0x14c>)
2fff3b0c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
2fff3b10:	f004 ef8a 	blx	2fff8a28 <inv_dcache_range>
2fff3b14:	6aa2      	ldr	r2, [r4, #40]	; 0x28
2fff3b16:	2000      	movs	r0, #0
2fff3b18:	2100      	movs	r1, #0
2fff3b1a:	42b2      	cmp	r2, r6
2fff3b1c:	d113      	bne.n	2fff3b46 <init_xlat_tables_ctx+0x9a>
2fff3b1e:	2300      	movs	r3, #0
2fff3b20:	2000      	movs	r0, #0
2fff3b22:	461f      	mov	r7, r3
2fff3b24:	2100      	movs	r1, #0
2fff3b26:	69a2      	ldr	r2, [r4, #24]
2fff3b28:	429a      	cmp	r2, r3
2fff3b2a:	dc13      	bgt.n	2fff3b54 <init_xlat_tables_ctx+0xa8>
2fff3b2c:	68eb      	ldr	r3, [r5, #12]
2fff3b2e:	bb0b      	cbnz	r3, 2fff3b74 <init_xlat_tables_ctx+0xc8>
2fff3b30:	e9d4 6500 	ldrd	r6, r5, [r4]
2fff3b34:	f7ff fa40 	bl	2fff2fb8 <xlat_arch_get_max_supported_pa>
2fff3b38:	42b0      	cmp	r0, r6
2fff3b3a:	eb71 0305 	sbcs.w	r3, r1, r5
2fff3b3e:	d23d      	bcs.n	2fff3bbc <init_xlat_tables_ctx+0x110>
2fff3b40:	f240 41cd 	movw	r1, #1229	; 0x4cd
2fff3b44:	e7b7      	b.n	2fff3ab6 <init_xlat_tables_ctx+0xa>
2fff3b46:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3b48:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
2fff3b4c:	3601      	adds	r6, #1
2fff3b4e:	e9c3 0100 	strd	r0, r1, [r3]
2fff3b52:	e7e2      	b.n	2fff3b1a <init_xlat_tables_ctx+0x6e>
2fff3b54:	69e2      	ldr	r2, [r4, #28]
2fff3b56:	f842 7023 	str.w	r7, [r2, r3, lsl #2]
2fff3b5a:	6962      	ldr	r2, [r4, #20]
2fff3b5c:	eb02 3203 	add.w	r2, r2, r3, lsl #12
2fff3b60:	f1a2 0608 	sub.w	r6, r2, #8
2fff3b64:	f602 72f8 	addw	r2, r2, #4088	; 0xff8
2fff3b68:	e9e6 0102 	strd	r0, r1, [r6, #8]!
2fff3b6c:	42b2      	cmp	r2, r6
2fff3b6e:	d1fb      	bne.n	2fff3b68 <init_xlat_tables_ctx+0xbc>
2fff3b70:	3301      	adds	r3, #1
2fff3b72:	e7d8      	b.n	2fff3b26 <init_xlat_tables_ctx+0x7a>
2fff3b74:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff3b76:	2200      	movs	r2, #0
2fff3b78:	4629      	mov	r1, r5
2fff3b7a:	4620      	mov	r0, r4
2fff3b7c:	9301      	str	r3, [sp, #4]
2fff3b7e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3b80:	9300      	str	r3, [sp, #0]
2fff3b82:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3b84:	f7ff fd0c 	bl	2fff35a0 <xlat_tables_map_region>
2fff3b88:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3b8a:	4606      	mov	r6, r0
2fff3b8c:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3b8e:	00c9      	lsls	r1, r1, #3
2fff3b90:	f7ff fbf5 	bl	2fff337e <xlat_clean_dcache_range>
2fff3b94:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
2fff3b98:	188b      	adds	r3, r1, r2
2fff3b9a:	3b01      	subs	r3, #1
2fff3b9c:	42b3      	cmp	r3, r6
2fff3b9e:	d00b      	beq.n	2fff3bb8 <init_xlat_tables_ctx+0x10c>
2fff3ba0:	692b      	ldr	r3, [r5, #16]
2fff3ba2:	4816      	ldr	r0, [pc, #88]	; (2fff3bfc <init_xlat_tables_ctx+0x150>)
2fff3ba4:	e9cd 2300 	strd	r2, r3, [sp]
2fff3ba8:	e9d5 2300 	ldrd	r2, r3, [r5]
2fff3bac:	f7fe fe5a 	bl	2fff2864 <tf_log>
2fff3bb0:	f7fe fefc 	bl	2fff29ac <console_flush>
2fff3bb4:	f004 ee60 	blx	2fff8878 <do_panic>
2fff3bb8:	3518      	adds	r5, #24
2fff3bba:	e7b7      	b.n	2fff3b2c <init_xlat_tables_ctx+0x80>
2fff3bbc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
2fff3bbe:	68a3      	ldr	r3, [r4, #8]
2fff3bc0:	429a      	cmp	r2, r3
2fff3bc2:	d902      	bls.n	2fff3bca <init_xlat_tables_ctx+0x11e>
2fff3bc4:	f240 41ce 	movw	r1, #1230	; 0x4ce
2fff3bc8:	e775      	b.n	2fff3ab6 <init_xlat_tables_ctx+0xa>
2fff3bca:	e9d4 130c 	ldrd	r1, r3, [r4, #48]	; 0x30
2fff3bce:	e9d4 0200 	ldrd	r0, r2, [r4]
2fff3bd2:	4288      	cmp	r0, r1
2fff3bd4:	eb72 0303 	sbcs.w	r3, r2, r3
2fff3bd8:	d202      	bcs.n	2fff3be0 <init_xlat_tables_ctx+0x134>
2fff3bda:	f240 41cf 	movw	r1, #1231	; 0x4cf
2fff3bde:	e76a      	b.n	2fff3ab6 <init_xlat_tables_ctx+0xa>
2fff3be0:	2301      	movs	r3, #1
2fff3be2:	4620      	mov	r0, r4
2fff3be4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
2fff3be8:	b003      	add	sp, #12
2fff3bea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
2fff3bee:	f000 b808 	b.w	2fff3c02 <xlat_tables_print>
2fff3bf2:	bf00      	nop
2fff3bf4:	2fffaf63 	.word	0x2fffaf63
2fff3bf8:	2ffd2000 	.word	0x2ffd2000
2fff3bfc:	2fffafb4 	.word	0x2fffafb4

2fff3c00 <xlat_mmap_print>:
2fff3c00:	4770      	bx	lr

2fff3c02 <xlat_tables_print>:
2fff3c02:	4770      	bx	lr

2fff3c04 <tzc400_set_action>:
2fff3c04:	b508      	push	{r3, lr}
2fff3c06:	4b06      	ldr	r3, [pc, #24]	; (2fff3c20 <tzc400_set_action+0x1c>)
2fff3c08:	681b      	ldr	r3, [r3, #0]
2fff3c0a:	b91b      	cbnz	r3, 2fff3c14 <tzc400_set_action+0x10>
2fff3c0c:	2194      	movs	r1, #148	; 0x94
2fff3c0e:	4805      	ldr	r0, [pc, #20]	; (2fff3c24 <tzc400_set_action+0x20>)
2fff3c10:	f005 fe6c 	bl	2fff98ec <__assert>
2fff3c14:	2803      	cmp	r0, #3
2fff3c16:	d901      	bls.n	2fff3c1c <tzc400_set_action+0x18>
2fff3c18:	2195      	movs	r1, #149	; 0x95
2fff3c1a:	e7f8      	b.n	2fff3c0e <tzc400_set_action+0xa>
2fff3c1c:	6058      	str	r0, [r3, #4]
2fff3c1e:	bd08      	pop	{r3, pc}
2fff3c20:	2fffead8 	.word	0x2fffead8
2fff3c24:	2fffb003 	.word	0x2fffb003

2fff3c28 <tzc400_init>:
2fff3c28:	b508      	push	{r3, lr}
2fff3c2a:	b918      	cbnz	r0, 2fff3c34 <tzc400_init+0xc>
2fff3c2c:	4812      	ldr	r0, [pc, #72]	; (2fff3c78 <tzc400_init+0x50>)
2fff3c2e:	21a6      	movs	r1, #166	; 0xa6
2fff3c30:	f005 fe5c 	bl	2fff98ec <__assert>
2fff3c34:	f8d0 3fe0 	ldr.w	r3, [r0, #4064]	; 0xfe0
2fff3c38:	f8d0 1fe4 	ldr.w	r1, [r0, #4068]	; 0xfe4
2fff3c3c:	4a0f      	ldr	r2, [pc, #60]	; (2fff3c7c <tzc400_init+0x54>)
2fff3c3e:	0209      	lsls	r1, r1, #8
2fff3c40:	6010      	str	r0, [r2, #0]
2fff3c42:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
2fff3c46:	4319      	orrs	r1, r3
2fff3c48:	f5b1 6f8c 	cmp.w	r1, #1120	; 0x460
2fff3c4c:	d006      	beq.n	2fff3c5c <tzc400_init+0x34>
2fff3c4e:	480c      	ldr	r0, [pc, #48]	; (2fff3c80 <tzc400_init+0x58>)
2fff3c50:	f7fe fe08 	bl	2fff2864 <tf_log>
2fff3c54:	f7fe feaa 	bl	2fff29ac <console_flush>
2fff3c58:	f004 ee0e 	blx	2fff8878 <do_panic>
2fff3c5c:	6803      	ldr	r3, [r0, #0]
2fff3c5e:	f3c3 6101 	ubfx	r1, r3, #24, #2
2fff3c62:	3101      	adds	r1, #1
2fff3c64:	7151      	strb	r1, [r2, #5]
2fff3c66:	f3c3 2105 	ubfx	r1, r3, #8, #6
2fff3c6a:	f003 031f 	and.w	r3, r3, #31
2fff3c6e:	3101      	adds	r1, #1
2fff3c70:	3301      	adds	r3, #1
2fff3c72:	7111      	strb	r1, [r2, #4]
2fff3c74:	7193      	strb	r3, [r2, #6]
2fff3c76:	bd08      	pop	{r3, pc}
2fff3c78:	2fffb003 	.word	0x2fffb003
2fff3c7c:	2fffead8 	.word	0x2fffead8
2fff3c80:	2fffb01c 	.word	0x2fffb01c

2fff3c84 <tzc400_configure_region>:
2fff3c84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff3c88:	4d28      	ldr	r5, [pc, #160]	; (2fff3d2c <tzc400_configure_region+0xa8>)
2fff3c8a:	e9dd 6c08 	ldrd	r6, ip, [sp, #32]
2fff3c8e:	682c      	ldr	r4, [r5, #0]
2fff3c90:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
2fff3c94:	b91c      	cbnz	r4, 2fff3c9e <tzc400_configure_region+0x1a>
2fff3c96:	21d9      	movs	r1, #217	; 0xd9
2fff3c98:	4825      	ldr	r0, [pc, #148]	; (2fff3d30 <tzc400_configure_region+0xac>)
2fff3c9a:	f005 fe27 	bl	2fff98ec <__assert>
2fff3c9e:	796f      	ldrb	r7, [r5, #5]
2fff3ca0:	fa30 f707 	lsrs.w	r7, r0, r7
2fff3ca4:	d102      	bne.n	2fff3cac <tzc400_configure_region+0x28>
2fff3ca6:	79af      	ldrb	r7, [r5, #6]
2fff3ca8:	428f      	cmp	r7, r1
2fff3caa:	d801      	bhi.n	2fff3cb0 <tzc400_configure_region+0x2c>
2fff3cac:	21dc      	movs	r1, #220	; 0xdc
2fff3cae:	e7f3      	b.n	2fff3c98 <tzc400_configure_region+0x14>
2fff3cb0:	792d      	ldrb	r5, [r5, #4]
2fff3cb2:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
2fff3cb6:	f1c5 0a40 	rsb	sl, r5, #64	; 0x40
2fff3cba:	f1a5 0920 	sub.w	r9, r5, #32
2fff3cbe:	f1c5 0520 	rsb	r5, r5, #32
2fff3cc2:	fa27 f80a 	lsr.w	r8, r7, sl
2fff3cc6:	fa07 f909 	lsl.w	r9, r7, r9
2fff3cca:	fa27 f505 	lsr.w	r5, r7, r5
2fff3cce:	ea48 0809 	orr.w	r8, r8, r9
2fff3cd2:	ea48 0805 	orr.w	r8, r8, r5
2fff3cd6:	fa27 f70a 	lsr.w	r7, r7, sl
2fff3cda:	45b0      	cmp	r8, r6
2fff3cdc:	eb77 050c 	sbcs.w	r5, r7, ip
2fff3ce0:	d303      	bcc.n	2fff3cea <tzc400_configure_region+0x66>
2fff3ce2:	42b2      	cmp	r2, r6
2fff3ce4:	eb73 050c 	sbcs.w	r5, r3, ip
2fff3ce8:	d301      	bcc.n	2fff3cee <tzc400_configure_region+0x6a>
2fff3cea:	21e3      	movs	r1, #227	; 0xe3
2fff3cec:	e7d4      	b.n	2fff3c98 <tzc400_configure_region+0x14>
2fff3cee:	1c75      	adds	r5, r6, #1
2fff3cf0:	4315      	orrs	r5, r2
2fff3cf2:	f3c5 050b 	ubfx	r5, r5, #0, #12
2fff3cf6:	b10d      	cbz	r5, 2fff3cfc <tzc400_configure_region+0x78>
2fff3cf8:	21e7      	movs	r1, #231	; 0xe7
2fff3cfa:	e7cd      	b.n	2fff3c98 <tzc400_configure_region+0x14>
2fff3cfc:	f1be 0f03 	cmp.w	lr, #3
2fff3d00:	d901      	bls.n	2fff3d06 <tzc400_configure_region+0x82>
2fff3d02:	21e9      	movs	r1, #233	; 0xe9
2fff3d04:	e7c8      	b.n	2fff3c98 <tzc400_configure_region+0x14>
2fff3d06:	eb04 1141 	add.w	r1, r4, r1, lsl #5
2fff3d0a:	ea40 708e 	orr.w	r0, r0, lr, lsl #30
2fff3d0e:	f8c1 2100 	str.w	r2, [r1, #256]	; 0x100
2fff3d12:	f8c1 3104 	str.w	r3, [r1, #260]	; 0x104
2fff3d16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2fff3d18:	f8c1 6108 	str.w	r6, [r1, #264]	; 0x108
2fff3d1c:	f8c1 c10c 	str.w	ip, [r1, #268]	; 0x10c
2fff3d20:	f8c1 0110 	str.w	r0, [r1, #272]	; 0x110
2fff3d24:	f8c1 3114 	str.w	r3, [r1, #276]	; 0x114
2fff3d28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff3d2c:	2fffead8 	.word	0x2fffead8
2fff3d30:	2fffb003 	.word	0x2fffb003

2fff3d34 <tzc400_enable_filters>:
2fff3d34:	4a16      	ldr	r2, [pc, #88]	; (2fff3d90 <tzc400_enable_filters+0x5c>)
2fff3d36:	b570      	push	{r4, r5, r6, lr}
2fff3d38:	6813      	ldr	r3, [r2, #0]
2fff3d3a:	b12b      	cbz	r3, 2fff3d48 <tzc400_enable_filters+0x14>
2fff3d3c:	7954      	ldrb	r4, [r2, #5]
2fff3d3e:	2100      	movs	r1, #0
2fff3d40:	2501      	movs	r5, #1
2fff3d42:	428c      	cmp	r4, r1
2fff3d44:	d804      	bhi.n	2fff3d50 <tzc400_enable_filters+0x1c>
2fff3d46:	bd70      	pop	{r4, r5, r6, pc}
2fff3d48:	4812      	ldr	r0, [pc, #72]	; (2fff3d94 <tzc400_enable_filters+0x60>)
2fff3d4a:	21f4      	movs	r1, #244	; 0xf4
2fff3d4c:	f005 fdce 	bl	2fff98ec <__assert>
2fff3d50:	689a      	ldr	r2, [r3, #8]
2fff3d52:	f103 0608 	add.w	r6, r3, #8
2fff3d56:	f3c2 4203 	ubfx	r2, r2, #16, #4
2fff3d5a:	40ca      	lsrs	r2, r1
2fff3d5c:	07d2      	lsls	r2, r2, #31
2fff3d5e:	d506      	bpl.n	2fff3d6e <tzc400_enable_filters+0x3a>
2fff3d60:	480d      	ldr	r0, [pc, #52]	; (2fff3d98 <tzc400_enable_filters+0x64>)
2fff3d62:	f7fe fd7f 	bl	2fff2864 <tf_log>
2fff3d66:	f7fe fe21 	bl	2fff29ac <console_flush>
2fff3d6a:	f004 ed86 	blx	2fff8878 <do_panic>
2fff3d6e:	6898      	ldr	r0, [r3, #8]
2fff3d70:	fa05 f201 	lsl.w	r2, r5, r1
2fff3d74:	f3c0 4003 	ubfx	r0, r0, #16, #4
2fff3d78:	4302      	orrs	r2, r0
2fff3d7a:	f002 000f 	and.w	r0, r2, #15
2fff3d7e:	6098      	str	r0, [r3, #8]
2fff3d80:	6830      	ldr	r0, [r6, #0]
2fff3d82:	f3c0 4003 	ubfx	r0, r0, #16, #4
2fff3d86:	4282      	cmp	r2, r0
2fff3d88:	d1fa      	bne.n	2fff3d80 <tzc400_enable_filters+0x4c>
2fff3d8a:	3101      	adds	r1, #1
2fff3d8c:	e7d9      	b.n	2fff3d42 <tzc400_enable_filters+0xe>
2fff3d8e:	bf00      	nop
2fff3d90:	2fffead8 	.word	0x2fffead8
2fff3d94:	2fffb003 	.word	0x2fffb003
2fff3d98:	2fffb040 	.word	0x2fffb040

2fff3d9c <tzc400_disable_filters>:
2fff3d9c:	4b10      	ldr	r3, [pc, #64]	; (2fff3de0 <tzc400_disable_filters+0x44>)
2fff3d9e:	b570      	push	{r4, r5, r6, lr}
2fff3da0:	6818      	ldr	r0, [r3, #0]
2fff3da2:	b128      	cbz	r0, 2fff3db0 <tzc400_disable_filters+0x14>
2fff3da4:	795c      	ldrb	r4, [r3, #5]
2fff3da6:	2100      	movs	r1, #0
2fff3da8:	2501      	movs	r5, #1
2fff3daa:	428c      	cmp	r4, r1
2fff3dac:	d805      	bhi.n	2fff3dba <tzc400_disable_filters+0x1e>
2fff3dae:	bd70      	pop	{r4, r5, r6, pc}
2fff3db0:	480c      	ldr	r0, [pc, #48]	; (2fff3de4 <tzc400_disable_filters+0x48>)
2fff3db2:	f240 110f 	movw	r1, #271	; 0x10f
2fff3db6:	f005 fd99 	bl	2fff98ec <__assert>
2fff3dba:	6882      	ldr	r2, [r0, #8]
2fff3dbc:	f100 0608 	add.w	r6, r0, #8
2fff3dc0:	fa05 f301 	lsl.w	r3, r5, r1
2fff3dc4:	0c12      	lsrs	r2, r2, #16
2fff3dc6:	ea22 0303 	bic.w	r3, r2, r3
2fff3dca:	f003 030f 	and.w	r3, r3, #15
2fff3dce:	6083      	str	r3, [r0, #8]
2fff3dd0:	6832      	ldr	r2, [r6, #0]
2fff3dd2:	f3c2 4203 	ubfx	r2, r2, #16, #4
2fff3dd6:	4293      	cmp	r3, r2
2fff3dd8:	d1fa      	bne.n	2fff3dd0 <tzc400_disable_filters+0x34>
2fff3dda:	3101      	adds	r1, #1
2fff3ddc:	e7e5      	b.n	2fff3daa <tzc400_disable_filters+0xe>
2fff3dde:	bf00      	nop
2fff3de0:	2fffead8 	.word	0x2fffead8
2fff3de4:	2fffb003 	.word	0x2fffb003

2fff3de8 <tzc400_is_pending_interrupt>:
2fff3de8:	b538      	push	{r3, r4, r5, lr}
2fff3dea:	4b0c      	ldr	r3, [pc, #48]	; (2fff3e1c <tzc400_is_pending_interrupt+0x34>)
2fff3dec:	681a      	ldr	r2, [r3, #0]
2fff3dee:	b132      	cbz	r2, 2fff3dfe <tzc400_is_pending_interrupt+0x16>
2fff3df0:	7959      	ldrb	r1, [r3, #5]
2fff3df2:	2001      	movs	r0, #1
2fff3df4:	2300      	movs	r3, #0
2fff3df6:	4299      	cmp	r1, r3
2fff3df8:	d806      	bhi.n	2fff3e08 <tzc400_is_pending_interrupt+0x20>
2fff3dfa:	2000      	movs	r0, #0
2fff3dfc:	bd38      	pop	{r3, r4, r5, pc}
2fff3dfe:	4808      	ldr	r0, [pc, #32]	; (2fff3e20 <tzc400_is_pending_interrupt+0x38>)
2fff3e00:	f240 1127 	movw	r1, #295	; 0x127
2fff3e04:	f005 fd72 	bl	2fff98ec <__assert>
2fff3e08:	6914      	ldr	r4, [r2, #16]
2fff3e0a:	fa00 f503 	lsl.w	r5, r0, r3
2fff3e0e:	4225      	tst	r5, r4
2fff3e10:	d101      	bne.n	2fff3e16 <tzc400_is_pending_interrupt+0x2e>
2fff3e12:	3301      	adds	r3, #1
2fff3e14:	e7ef      	b.n	2fff3df6 <tzc400_is_pending_interrupt+0xe>
2fff3e16:	2001      	movs	r0, #1
2fff3e18:	e7f0      	b.n	2fff3dfc <tzc400_is_pending_interrupt+0x14>
2fff3e1a:	bf00      	nop
2fff3e1c:	2fffead8 	.word	0x2fffead8
2fff3e20:	2fffb003 	.word	0x2fffb003

2fff3e24 <tzc400_it_handler>:
2fff3e24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff3e26:	4d24      	ldr	r5, [pc, #144]	; (2fff3eb8 <tzc400_it_handler+0x94>)
2fff3e28:	682a      	ldr	r2, [r5, #0]
2fff3e2a:	7969      	ldrb	r1, [r5, #5]
2fff3e2c:	2a00      	cmp	r2, #0
2fff3e2e:	d132      	bne.n	2fff3e96 <tzc400_it_handler+0x72>
2fff3e30:	4822      	ldr	r0, [pc, #136]	; (2fff3ebc <tzc400_it_handler+0x98>)
2fff3e32:	f240 1139 	movw	r1, #313	; 0x139
2fff3e36:	f005 fd59 	bl	2fff98ec <__assert>
2fff3e3a:	6916      	ldr	r6, [r2, #16]
2fff3e3c:	fa00 f703 	lsl.w	r7, r0, r3
2fff3e40:	4237      	tst	r7, r6
2fff3e42:	bf18      	it	ne
2fff3e44:	461c      	movne	r4, r3
2fff3e46:	3301      	adds	r3, #1
2fff3e48:	428b      	cmp	r3, r1
2fff3e4a:	d228      	bcs.n	2fff3e9e <tzc400_it_handler+0x7a>
2fff3e4c:	428c      	cmp	r4, r1
2fff3e4e:	d0f4      	beq.n	2fff3e3a <tzc400_it_handler+0x16>
2fff3e50:	b374      	cbz	r4, 2fff3eb0 <tzc400_it_handler+0x8c>
2fff3e52:	6b11      	ldr	r1, [r2, #48]	; 0x30
2fff3e54:	481a      	ldr	r0, [pc, #104]	; (2fff3ec0 <tzc400_it_handler+0x9c>)
2fff3e56:	f7fe fd05 	bl	2fff2864 <tf_log>
2fff3e5a:	682b      	ldr	r3, [r5, #0]
2fff3e5c:	b354      	cbz	r4, 2fff3eb4 <tzc400_it_handler+0x90>
2fff3e5e:	6b9e      	ldr	r6, [r3, #56]	; 0x38
2fff3e60:	f016 0f15 	tst.w	r6, #21
2fff3e64:	bf0c      	ite	eq
2fff3e66:	4817      	ldreq	r0, [pc, #92]	; (2fff3ec4 <tzc400_it_handler+0xa0>)
2fff3e68:	4817      	ldrne	r0, [pc, #92]	; (2fff3ec8 <tzc400_it_handler+0xa4>)
2fff3e6a:	f7fe fcfb 	bl	2fff2864 <tf_log>
2fff3e6e:	f016 0f14 	tst.w	r6, #20
2fff3e72:	bf0c      	ite	eq
2fff3e74:	4815      	ldreq	r0, [pc, #84]	; (2fff3ecc <tzc400_it_handler+0xa8>)
2fff3e76:	4816      	ldrne	r0, [pc, #88]	; (2fff3ed0 <tzc400_it_handler+0xac>)
2fff3e78:	f7fe fcf4 	bl	2fff2864 <tf_log>
2fff3e7c:	f016 0f18 	tst.w	r6, #24
2fff3e80:	bf0c      	ite	eq
2fff3e82:	4814      	ldreq	r0, [pc, #80]	; (2fff3ed4 <tzc400_it_handler+0xb0>)
2fff3e84:	4814      	ldrne	r0, [pc, #80]	; (2fff3ed8 <tzc400_it_handler+0xb4>)
2fff3e86:	f7fe fced 	bl	2fff2864 <tf_log>
2fff3e8a:	2301      	movs	r3, #1
2fff3e8c:	fa03 f404 	lsl.w	r4, r3, r4
2fff3e90:	682b      	ldr	r3, [r5, #0]
2fff3e92:	615c      	str	r4, [r3, #20]
2fff3e94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff3e96:	460c      	mov	r4, r1
2fff3e98:	2300      	movs	r3, #0
2fff3e9a:	2001      	movs	r0, #1
2fff3e9c:	e7d4      	b.n	2fff3e48 <tzc400_it_handler+0x24>
2fff3e9e:	428c      	cmp	r4, r1
2fff3ea0:	d1d6      	bne.n	2fff3e50 <tzc400_it_handler+0x2c>
2fff3ea2:	480e      	ldr	r0, [pc, #56]	; (2fff3edc <tzc400_it_handler+0xb8>)
2fff3ea4:	f7fe fcde 	bl	2fff2864 <tf_log>
2fff3ea8:	f7fe fd80 	bl	2fff29ac <console_flush>
2fff3eac:	f004 ece4 	blx	2fff8878 <do_panic>
2fff3eb0:	6a11      	ldr	r1, [r2, #32]
2fff3eb2:	e7cf      	b.n	2fff3e54 <tzc400_it_handler+0x30>
2fff3eb4:	6a9e      	ldr	r6, [r3, #40]	; 0x28
2fff3eb6:	e7d3      	b.n	2fff3e60 <tzc400_it_handler+0x3c>
2fff3eb8:	2fffead8 	.word	0x2fffead8
2fff3ebc:	2fffb003 	.word	0x2fffb003
2fff3ec0:	2fffb086 	.word	0x2fffb086
2fff3ec4:	2fffb0a5 	.word	0x2fffb0a5
2fff3ec8:	2fffb0b3 	.word	0x2fffb0b3
2fff3ecc:	2fffb0bd 	.word	0x2fffb0bd
2fff3ed0:	2fffb0ca 	.word	0x2fffb0ca
2fff3ed4:	2fffb0d9 	.word	0x2fffb0d9
2fff3ed8:	2fffb0e1 	.word	0x2fffb0e1
2fff3edc:	2fffb070 	.word	0x2fffb070

2fff3ee0 <udelay>:
2fff3ee0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff3ee2:	4605      	mov	r5, r0
2fff3ee4:	4f13      	ldr	r7, [pc, #76]	; (2fff3f34 <udelay+0x54>)
2fff3ee6:	683b      	ldr	r3, [r7, #0]
2fff3ee8:	b12b      	cbz	r3, 2fff3ef6 <udelay+0x16>
2fff3eea:	685a      	ldr	r2, [r3, #4]
2fff3eec:	b11a      	cbz	r2, 2fff3ef6 <udelay+0x16>
2fff3eee:	6899      	ldr	r1, [r3, #8]
2fff3ef0:	b109      	cbz	r1, 2fff3ef6 <udelay+0x16>
2fff3ef2:	681a      	ldr	r2, [r3, #0]
2fff3ef4:	b91a      	cbnz	r2, 2fff3efe <udelay+0x1e>
2fff3ef6:	2119      	movs	r1, #25
2fff3ef8:	480f      	ldr	r0, [pc, #60]	; (2fff3f38 <udelay+0x58>)
2fff3efa:	f005 fcf7 	bl	2fff98ec <__assert>
2fff3efe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff3f02:	fbb3 f3f1 	udiv	r3, r3, r1
2fff3f06:	4283      	cmp	r3, r0
2fff3f08:	d801      	bhi.n	2fff3f0e <udelay+0x2e>
2fff3f0a:	2120      	movs	r1, #32
2fff3f0c:	e7f4      	b.n	2fff3ef8 <udelay+0x18>
2fff3f0e:	4790      	blx	r2
2fff3f10:	683a      	ldr	r2, [r7, #0]
2fff3f12:	4606      	mov	r6, r0
2fff3f14:	6853      	ldr	r3, [r2, #4]
2fff3f16:	6890      	ldr	r0, [r2, #8]
2fff3f18:	1e5c      	subs	r4, r3, #1
2fff3f1a:	fb00 4405 	mla	r4, r0, r5, r4
2fff3f1e:	fbb4 f4f3 	udiv	r4, r4, r3
2fff3f22:	3401      	adds	r4, #1
2fff3f24:	683b      	ldr	r3, [r7, #0]
2fff3f26:	681b      	ldr	r3, [r3, #0]
2fff3f28:	4798      	blx	r3
2fff3f2a:	1a33      	subs	r3, r6, r0
2fff3f2c:	429c      	cmp	r4, r3
2fff3f2e:	d8f9      	bhi.n	2fff3f24 <udelay+0x44>
2fff3f30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff3f32:	bf00      	nop
2fff3f34:	2fffeae0 	.word	0x2fffeae0
2fff3f38:	2fffb0ea 	.word	0x2fffb0ea

2fff3f3c <mdelay>:
2fff3f3c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff3f40:	4358      	muls	r0, r3
2fff3f42:	f7ff bfcd 	b.w	2fff3ee0 <udelay>
	...

2fff3f48 <timer_init>:
2fff3f48:	b508      	push	{r3, lr}
2fff3f4a:	b128      	cbz	r0, 2fff3f58 <timer_init+0x10>
2fff3f4c:	6843      	ldr	r3, [r0, #4]
2fff3f4e:	b11b      	cbz	r3, 2fff3f58 <timer_init+0x10>
2fff3f50:	6883      	ldr	r3, [r0, #8]
2fff3f52:	b10b      	cbz	r3, 2fff3f58 <timer_init+0x10>
2fff3f54:	6803      	ldr	r3, [r0, #0]
2fff3f56:	b91b      	cbnz	r3, 2fff3f60 <timer_init+0x18>
2fff3f58:	4803      	ldr	r0, [pc, #12]	; (2fff3f68 <timer_init+0x20>)
2fff3f5a:	2142      	movs	r1, #66	; 0x42
2fff3f5c:	f005 fcc6 	bl	2fff98ec <__assert>
2fff3f60:	4b02      	ldr	r3, [pc, #8]	; (2fff3f6c <timer_init+0x24>)
2fff3f62:	6018      	str	r0, [r3, #0]
2fff3f64:	bd08      	pop	{r3, pc}
2fff3f66:	bf00      	nop
2fff3f68:	2fffb0ea 	.word	0x2fffb0ea
2fff3f6c:	2fffeae0 	.word	0x2fffeae0

2fff3f70 <get_timer_value>:
2fff3f70:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff3f74:	43c0      	mvns	r0, r0
2fff3f76:	4770      	bx	lr

2fff3f78 <generic_delay_timer_init_args>:
2fff3f78:	4b03      	ldr	r3, [pc, #12]	; (2fff3f88 <generic_delay_timer_init_args+0x10>)
2fff3f7a:	4a04      	ldr	r2, [pc, #16]	; (2fff3f8c <generic_delay_timer_init_args+0x14>)
2fff3f7c:	6058      	str	r0, [r3, #4]
2fff3f7e:	4618      	mov	r0, r3
2fff3f80:	601a      	str	r2, [r3, #0]
2fff3f82:	6099      	str	r1, [r3, #8]
2fff3f84:	f7ff bfe0 	b.w	2fff3f48 <timer_init>
2fff3f88:	2fffeae4 	.word	0x2fffeae4
2fff3f8c:	2fff3f71 	.word	0x2fff3f71

2fff3f90 <generic_delay_timer_init>:
2fff3f90:	b538      	push	{r3, r4, r5, lr}
2fff3f92:	ee10 3f31 	mrc	15, 0, r3, cr0, cr1, {1}
2fff3f96:	f413 2f70 	tst.w	r3, #983040	; 0xf0000
2fff3f9a:	d103      	bne.n	2fff3fa4 <generic_delay_timer_init+0x14>
2fff3f9c:	480b      	ldr	r0, [pc, #44]	; (2fff3fcc <generic_delay_timer_init+0x3c>)
2fff3f9e:	212f      	movs	r1, #47	; 0x2f
2fff3fa0:	f005 fca4 	bl	2fff98ec <__assert>
2fff3fa4:	f7fe fe05 	bl	2fff2bb2 <plat_get_syscnt_freq2>
2fff3fa8:	4601      	mov	r1, r0
2fff3faa:	2206      	movs	r2, #6
2fff3fac:	4808      	ldr	r0, [pc, #32]	; (2fff3fd0 <generic_delay_timer_init+0x40>)
2fff3fae:	230a      	movs	r3, #10
2fff3fb0:	fbb1 f4f3 	udiv	r4, r1, r3
2fff3fb4:	fb03 1514 	mls	r5, r3, r4, r1
2fff3fb8:	b925      	cbnz	r5, 2fff3fc4 <generic_delay_timer_init+0x34>
2fff3fba:	3a01      	subs	r2, #1
2fff3fbc:	4621      	mov	r1, r4
2fff3fbe:	fbb0 f0f3 	udiv	r0, r0, r3
2fff3fc2:	d1f5      	bne.n	2fff3fb0 <generic_delay_timer_init+0x20>
2fff3fc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff3fc8:	f7ff bfd6 	b.w	2fff3f78 <generic_delay_timer_init_args>
2fff3fcc:	2fffb10c 	.word	0x2fffb10c
2fff3fd0:	000f4240 	.word	0x000f4240

2fff3fd4 <fdt32_to_cpu>:
2fff3fd4:	ba00      	rev	r0, r0
2fff3fd6:	4770      	bx	lr

2fff3fd8 <bsec_lock>:
2fff3fd8:	b508      	push	{r3, lr}
2fff3fda:	f7fe fdfc 	bl	2fff2bd6 <stm32mp_lock_available>
2fff3fde:	b120      	cbz	r0, 2fff3fea <bsec_lock+0x12>
2fff3fe0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff3fe4:	4801      	ldr	r0, [pc, #4]	; (2fff3fec <bsec_lock+0x14>)
2fff3fe6:	f008 badb 	b.w	2fffc5a0 <__spin_lock_from_thumb>
2fff3fea:	bd08      	pop	{r3, pc}
2fff3fec:	2fffeaf4 	.word	0x2fffeaf4

2fff3ff0 <bsec_unlock>:
2fff3ff0:	b508      	push	{r3, lr}
2fff3ff2:	f7fe fdf0 	bl	2fff2bd6 <stm32mp_lock_available>
2fff3ff6:	b120      	cbz	r0, 2fff4002 <bsec_unlock+0x12>
2fff3ff8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff3ffc:	4801      	ldr	r0, [pc, #4]	; (2fff4004 <bsec_unlock+0x14>)
2fff3ffe:	f008 badb 	b.w	2fffc5b8 <__spin_unlock_from_thumb>
2fff4002:	bd08      	pop	{r3, pc}
2fff4004:	2fffeaf4 	.word	0x2fffeaf4

2fff4008 <otp_bank_offset>:
2fff4008:	285f      	cmp	r0, #95	; 0x5f
2fff400a:	b508      	push	{r3, lr}
2fff400c:	d903      	bls.n	2fff4016 <otp_bank_offset+0xe>
2fff400e:	4803      	ldr	r0, [pc, #12]	; (2fff401c <otp_bank_offset+0x14>)
2fff4010:	2191      	movs	r1, #145	; 0x91
2fff4012:	f005 fc6b 	bl	2fff98ec <__assert>
2fff4016:	0940      	lsrs	r0, r0, #5
2fff4018:	0080      	lsls	r0, r0, #2
2fff401a:	bd08      	pop	{r3, pc}
2fff401c:	2fffb136 	.word	0x2fffb136

2fff4020 <bsec_check_error>:
2fff4020:	b538      	push	{r3, r4, r5, lr}
2fff4022:	f000 031f 	and.w	r3, r0, #31
2fff4026:	2401      	movs	r4, #1
2fff4028:	460d      	mov	r5, r1
2fff402a:	409c      	lsls	r4, r3
2fff402c:	f7ff ffec 	bl	2fff4008 <otp_bank_offset>
2fff4030:	4b07      	ldr	r3, [pc, #28]	; (2fff4050 <bsec_check_error+0x30>)
2fff4032:	681b      	ldr	r3, [r3, #0]
2fff4034:	4403      	add	r3, r0
2fff4036:	6b58      	ldr	r0, [r3, #52]	; 0x34
2fff4038:	4020      	ands	r0, r4
2fff403a:	d106      	bne.n	2fff404a <bsec_check_error+0x2a>
2fff403c:	b125      	cbz	r5, 2fff4048 <bsec_check_error+0x28>
2fff403e:	69d8      	ldr	r0, [r3, #28]
2fff4040:	4020      	ands	r0, r4
2fff4042:	bf18      	it	ne
2fff4044:	f06f 0001 	mvnne.w	r0, #1
2fff4048:	bd38      	pop	{r3, r4, r5, pc}
2fff404a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff404e:	e7fb      	b.n	2fff4048 <bsec_check_error+0x28>
2fff4050:	2fffeaf0 	.word	0x2fffeaf0

2fff4054 <bsec_find_otp_name_in_dt>:
2fff4054:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff4056:	460f      	mov	r7, r1
2fff4058:	4616      	mov	r6, r2
2fff405a:	4604      	mov	r4, r0
2fff405c:	2800      	cmp	r0, #0
2fff405e:	d052      	beq.n	2fff4106 <bsec_find_otp_name_in_dt+0xb2>
2fff4060:	2900      	cmp	r1, #0
2fff4062:	d050      	beq.n	2fff4106 <bsec_find_otp_name_in_dt+0xb2>
2fff4064:	4668      	mov	r0, sp
2fff4066:	f003 fecf 	bl	2fff7e08 <fdt_get_address>
2fff406a:	b918      	cbnz	r0, 2fff4074 <bsec_find_otp_name_in_dt+0x20>
2fff406c:	f7fe fc9e 	bl	2fff29ac <console_flush>
2fff4070:	f004 ec02 	blx	2fff8878 <do_panic>
2fff4074:	4825      	ldr	r0, [pc, #148]	; (2fff410c <bsec_find_otp_name_in_dt+0xb8>)
2fff4076:	f003 ffd3 	bl	2fff8020 <dt_get_node_by_compatible>
2fff407a:	1e05      	subs	r5, r0, #0
2fff407c:	da04      	bge.n	2fff4088 <bsec_find_otp_name_in_dt+0x34>
2fff407e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff4082:	4620      	mov	r0, r4
2fff4084:	b003      	add	sp, #12
2fff4086:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff4088:	4a21      	ldr	r2, [pc, #132]	; (2fff4110 <bsec_find_otp_name_in_dt+0xbc>)
2fff408a:	4623      	mov	r3, r4
2fff408c:	9800      	ldr	r0, [sp, #0]
2fff408e:	4629      	mov	r1, r5
2fff4090:	f005 fbc4 	bl	2fff981c <fdt_stringlist_search>
2fff4094:	1e04      	subs	r4, r0, #0
2fff4096:	dbf2      	blt.n	2fff407e <bsec_find_otp_name_in_dt+0x2a>
2fff4098:	4a1e      	ldr	r2, [pc, #120]	; (2fff4114 <bsec_find_otp_name_in_dt+0xc0>)
2fff409a:	ab01      	add	r3, sp, #4
2fff409c:	9800      	ldr	r0, [sp, #0]
2fff409e:	4629      	mov	r1, r5
2fff40a0:	f005 fa86 	bl	2fff95b0 <fdt_getprop>
2fff40a4:	2800      	cmp	r0, #0
2fff40a6:	d0ea      	beq.n	2fff407e <bsec_find_otp_name_in_dt+0x2a>
2fff40a8:	9b01      	ldr	r3, [sp, #4]
2fff40aa:	ebb3 0f84 	cmp.w	r3, r4, lsl #2
2fff40ae:	dbe6      	blt.n	2fff407e <bsec_find_otp_name_in_dt+0x2a>
2fff40b0:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
2fff40b4:	f7ff ff8e 	bl	2fff3fd4 <fdt32_to_cpu>
2fff40b8:	4601      	mov	r1, r0
2fff40ba:	9800      	ldr	r0, [sp, #0]
2fff40bc:	f005 fb6a 	bl	2fff9794 <fdt_node_offset_by_phandle>
2fff40c0:	1e01      	subs	r1, r0, #0
2fff40c2:	da03      	bge.n	2fff40cc <bsec_find_otp_name_in_dt+0x78>
2fff40c4:	4814      	ldr	r0, [pc, #80]	; (2fff4118 <bsec_find_otp_name_in_dt+0xc4>)
2fff40c6:	f7fe fbcd 	bl	2fff2864 <tf_log>
2fff40ca:	e7d8      	b.n	2fff407e <bsec_find_otp_name_in_dt+0x2a>
2fff40cc:	4a13      	ldr	r2, [pc, #76]	; (2fff411c <bsec_find_otp_name_in_dt+0xc8>)
2fff40ce:	ab01      	add	r3, sp, #4
2fff40d0:	9800      	ldr	r0, [sp, #0]
2fff40d2:	f005 fa6d 	bl	2fff95b0 <fdt_getprop>
2fff40d6:	4605      	mov	r5, r0
2fff40d8:	2800      	cmp	r0, #0
2fff40da:	d0f3      	beq.n	2fff40c4 <bsec_find_otp_name_in_dt+0x70>
2fff40dc:	9b01      	ldr	r3, [sp, #4]
2fff40de:	2b08      	cmp	r3, #8
2fff40e0:	d1f0      	bne.n	2fff40c4 <bsec_find_otp_name_in_dt+0x70>
2fff40e2:	6800      	ldr	r0, [r0, #0]
2fff40e4:	f7ff ff76 	bl	2fff3fd4 <fdt32_to_cpu>
2fff40e8:	f010 0403 	ands.w	r4, r0, #3
2fff40ec:	d001      	beq.n	2fff40f2 <bsec_find_otp_name_in_dt+0x9e>
2fff40ee:	480c      	ldr	r0, [pc, #48]	; (2fff4120 <bsec_find_otp_name_in_dt+0xcc>)
2fff40f0:	e7e9      	b.n	2fff40c6 <bsec_find_otp_name_in_dt+0x72>
2fff40f2:	0880      	lsrs	r0, r0, #2
2fff40f4:	6038      	str	r0, [r7, #0]
2fff40f6:	2e00      	cmp	r6, #0
2fff40f8:	d0c3      	beq.n	2fff4082 <bsec_find_otp_name_in_dt+0x2e>
2fff40fa:	6868      	ldr	r0, [r5, #4]
2fff40fc:	f7ff ff6a 	bl	2fff3fd4 <fdt32_to_cpu>
2fff4100:	00c0      	lsls	r0, r0, #3
2fff4102:	6030      	str	r0, [r6, #0]
2fff4104:	e7bd      	b.n	2fff4082 <bsec_find_otp_name_in_dt+0x2e>
2fff4106:	f06f 0403 	mvn.w	r4, #3
2fff410a:	e7ba      	b.n	2fff4082 <bsec_find_otp_name_in_dt+0x2e>
2fff410c:	2fffb14e 	.word	0x2fffb14e
2fff4110:	2fffb164 	.word	0x2fffb164
2fff4114:	2fffb175 	.word	0x2fffb175
2fff4118:	2fffb181 	.word	0x2fffb181
2fff411c:	2fffa630 	.word	0x2fffa630
2fff4120:	2fffb1a8 	.word	0x2fffb1a8

2fff4124 <bsec_read_otp>:
2fff4124:	295f      	cmp	r1, #95	; 0x5f
2fff4126:	bf9f      	itttt	ls
2fff4128:	4b05      	ldrls	r3, [pc, #20]	; (2fff4140 <bsec_read_otp+0x1c>)
2fff412a:	681b      	ldrls	r3, [r3, #0]
2fff412c:	f503 7300 	addls.w	r3, r3, #512	; 0x200
2fff4130:	f853 3021 	ldrls.w	r3, [r3, r1, lsl #2]
2fff4134:	bf9a      	itte	ls
2fff4136:	6003      	strls	r3, [r0, #0]
2fff4138:	2000      	movls	r0, #0
2fff413a:	f06f 0003 	mvnhi.w	r0, #3
2fff413e:	4770      	bx	lr
2fff4140:	2fffeaf0 	.word	0x2fffeaf0

2fff4144 <bsec_read_debug_conf>:
2fff4144:	4b01      	ldr	r3, [pc, #4]	; (2fff414c <bsec_read_debug_conf+0x8>)
2fff4146:	681b      	ldr	r3, [r3, #0]
2fff4148:	6958      	ldr	r0, [r3, #20]
2fff414a:	4770      	bx	lr
2fff414c:	2fffeaf0 	.word	0x2fffeaf0

2fff4150 <bsec_get_status>:
2fff4150:	4b01      	ldr	r3, [pc, #4]	; (2fff4158 <bsec_get_status+0x8>)
2fff4152:	681b      	ldr	r3, [r3, #0]
2fff4154:	68d8      	ldr	r0, [r3, #12]
2fff4156:	4770      	bx	lr
2fff4158:	2fffeaf0 	.word	0x2fffeaf0

2fff415c <bsec_power_safmem>:
2fff415c:	b510      	push	{r4, lr}
2fff415e:	4604      	mov	r4, r0
2fff4160:	f7ff ff3a 	bl	2fff3fd8 <bsec_lock>
2fff4164:	4b15      	ldr	r3, [pc, #84]	; (2fff41bc <bsec_power_safmem+0x60>)
2fff4166:	681a      	ldr	r2, [r3, #0]
2fff4168:	6813      	ldr	r3, [r2, #0]
2fff416a:	b164      	cbz	r4, 2fff4186 <bsec_power_safmem+0x2a>
2fff416c:	f043 0301 	orr.w	r3, r3, #1
2fff4170:	6013      	str	r3, [r2, #0]
2fff4172:	b9bc      	cbnz	r4, 2fff41a4 <bsec_power_safmem+0x48>
2fff4174:	f64f 74ff 	movw	r4, #65535	; 0xffff
2fff4178:	f7ff ffea 	bl	2fff4150 <bsec_get_status>
2fff417c:	0683      	lsls	r3, r0, #26
2fff417e:	d514      	bpl.n	2fff41aa <bsec_power_safmem+0x4e>
2fff4180:	b15c      	cbz	r4, 2fff419a <bsec_power_safmem+0x3e>
2fff4182:	3c01      	subs	r4, #1
2fff4184:	e7f8      	b.n	2fff4178 <bsec_power_safmem+0x1c>
2fff4186:	f023 0301 	bic.w	r3, r3, #1
2fff418a:	e7f1      	b.n	2fff4170 <bsec_power_safmem+0x14>
2fff418c:	3c01      	subs	r4, #1
2fff418e:	f7ff ffdf 	bl	2fff4150 <bsec_get_status>
2fff4192:	0682      	lsls	r2, r0, #26
2fff4194:	d409      	bmi.n	2fff41aa <bsec_power_safmem+0x4e>
2fff4196:	2c00      	cmp	r4, #0
2fff4198:	d1f8      	bne.n	2fff418c <bsec_power_safmem+0x30>
2fff419a:	f7ff ff29 	bl	2fff3ff0 <bsec_unlock>
2fff419e:	f06f 0006 	mvn.w	r0, #6
2fff41a2:	bd10      	pop	{r4, pc}
2fff41a4:	f64f 74ff 	movw	r4, #65535	; 0xffff
2fff41a8:	e7f1      	b.n	2fff418e <bsec_power_safmem+0x32>
2fff41aa:	f7ff ff21 	bl	2fff3ff0 <bsec_unlock>
2fff41ae:	2c00      	cmp	r4, #0
2fff41b0:	bf14      	ite	ne
2fff41b2:	2000      	movne	r0, #0
2fff41b4:	f06f 0006 	mvneq.w	r0, #6
2fff41b8:	e7f3      	b.n	2fff41a2 <bsec_power_safmem+0x46>
2fff41ba:	bf00      	nop
2fff41bc:	2fffeaf0 	.word	0x2fffeaf0

2fff41c0 <bsec_permanent_lock_otp>:
2fff41c0:	285f      	cmp	r0, #95	; 0x5f
2fff41c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff41c4:	4605      	mov	r5, r0
2fff41c6:	d83d      	bhi.n	2fff4244 <bsec_permanent_lock_otp+0x84>
2fff41c8:	f7ff ffc2 	bl	2fff4150 <bsec_get_status>
2fff41cc:	0682      	lsls	r2, r0, #26
2fff41ce:	d434      	bmi.n	2fff423a <bsec_permanent_lock_otp+0x7a>
2fff41d0:	2001      	movs	r0, #1
2fff41d2:	f7ff ffc3 	bl	2fff415c <bsec_power_safmem>
2fff41d6:	4604      	mov	r4, r0
2fff41d8:	2800      	cmp	r0, #0
2fff41da:	d135      	bne.n	2fff4248 <bsec_permanent_lock_otp+0x88>
2fff41dc:	2701      	movs	r7, #1
2fff41de:	2d1f      	cmp	r5, #31
2fff41e0:	bf95      	itete	ls
2fff41e2:	006e      	lslls	r6, r5, #1
2fff41e4:	f005 030f 	andhi.w	r3, r5, #15
2fff41e8:	f006 030e 	andls.w	r3, r6, #14
2fff41ec:	2601      	movhi	r6, #1
2fff41ee:	bf8d      	iteet	hi
2fff41f0:	092c      	lsrhi	r4, r5, #4
2fff41f2:	2603      	movls	r6, #3
2fff41f4:	08ec      	lsrls	r4, r5, #3
2fff41f6:	3402      	addhi	r4, #2
2fff41f8:	409e      	lsls	r6, r3
2fff41fa:	f7ff feed 	bl	2fff3fd8 <bsec_lock>
2fff41fe:	4b13      	ldr	r3, [pc, #76]	; (2fff424c <bsec_permanent_lock_otp+0x8c>)
2fff4200:	f444 7440 	orr.w	r4, r4, #768	; 0x300
2fff4204:	681b      	ldr	r3, [r3, #0]
2fff4206:	609e      	str	r6, [r3, #8]
2fff4208:	605c      	str	r4, [r3, #4]
2fff420a:	f7ff ffa1 	bl	2fff4150 <bsec_get_status>
2fff420e:	0703      	lsls	r3, r0, #28
2fff4210:	d4fb      	bmi.n	2fff420a <bsec_permanent_lock_otp+0x4a>
2fff4212:	f7ff ff9d 	bl	2fff4150 <bsec_get_status>
2fff4216:	f010 0110 	ands.w	r1, r0, #16
2fff421a:	d110      	bne.n	2fff423e <bsec_permanent_lock_otp+0x7e>
2fff421c:	4628      	mov	r0, r5
2fff421e:	f7ff feff 	bl	2fff4020 <bsec_check_error>
2fff4222:	4604      	mov	r4, r0
2fff4224:	f7ff fee4 	bl	2fff3ff0 <bsec_unlock>
2fff4228:	b177      	cbz	r7, 2fff4248 <bsec_permanent_lock_otp+0x88>
2fff422a:	2000      	movs	r0, #0
2fff422c:	f7ff ff96 	bl	2fff415c <bsec_power_safmem>
2fff4230:	b150      	cbz	r0, 2fff4248 <bsec_permanent_lock_otp+0x88>
2fff4232:	f7fe fbbb 	bl	2fff29ac <console_flush>
2fff4236:	f004 eb20 	blx	2fff8878 <do_panic>
2fff423a:	2700      	movs	r7, #0
2fff423c:	e7cf      	b.n	2fff41de <bsec_permanent_lock_otp+0x1e>
2fff423e:	f06f 0404 	mvn.w	r4, #4
2fff4242:	e7ef      	b.n	2fff4224 <bsec_permanent_lock_otp+0x64>
2fff4244:	f06f 0403 	mvn.w	r4, #3
2fff4248:	4620      	mov	r0, r4
2fff424a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff424c:	2fffeaf0 	.word	0x2fffeaf0

2fff4250 <bsec_get_version>:
2fff4250:	4b02      	ldr	r3, [pc, #8]	; (2fff425c <bsec_get_version+0xc>)
2fff4252:	681b      	ldr	r3, [r3, #0]
2fff4254:	f8d3 0ff4 	ldr.w	r0, [r3, #4084]	; 0xff4
2fff4258:	4770      	bx	lr
2fff425a:	bf00      	nop
2fff425c:	2fffeaf0 	.word	0x2fffeaf0

2fff4260 <bsec_get_id>:
2fff4260:	4b02      	ldr	r3, [pc, #8]	; (2fff426c <bsec_get_id+0xc>)
2fff4262:	681b      	ldr	r3, [r3, #0]
2fff4264:	f8d3 0ff8 	ldr.w	r0, [r3, #4088]	; 0xff8
2fff4268:	4770      	bx	lr
2fff426a:	bf00      	nop
2fff426c:	2fffeaf0 	.word	0x2fffeaf0

2fff4270 <bsec_read_sr_lock>:
2fff4270:	b538      	push	{r3, r4, r5, lr}
2fff4272:	4604      	mov	r4, r0
2fff4274:	460d      	mov	r5, r1
2fff4276:	f7ff fec7 	bl	2fff4008 <otp_bank_offset>
2fff427a:	f004 021f 	and.w	r2, r4, #31
2fff427e:	2301      	movs	r3, #1
2fff4280:	2c5f      	cmp	r4, #95	; 0x5f
2fff4282:	fa03 f302 	lsl.w	r3, r3, r2
2fff4286:	d80a      	bhi.n	2fff429e <bsec_read_sr_lock+0x2e>
2fff4288:	4a06      	ldr	r2, [pc, #24]	; (2fff42a4 <bsec_read_sr_lock+0x34>)
2fff428a:	6812      	ldr	r2, [r2, #0]
2fff428c:	3294      	adds	r2, #148	; 0x94
2fff428e:	5812      	ldr	r2, [r2, r0]
2fff4290:	2000      	movs	r0, #0
2fff4292:	4213      	tst	r3, r2
2fff4294:	bf14      	ite	ne
2fff4296:	2301      	movne	r3, #1
2fff4298:	2300      	moveq	r3, #0
2fff429a:	702b      	strb	r3, [r5, #0]
2fff429c:	bd38      	pop	{r3, r4, r5, pc}
2fff429e:	f06f 0003 	mvn.w	r0, #3
2fff42a2:	e7fb      	b.n	2fff429c <bsec_read_sr_lock+0x2c>
2fff42a4:	2fffeaf0 	.word	0x2fffeaf0

2fff42a8 <bsec_shadow_register>:
2fff42a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff42aa:	f10d 0107 	add.w	r1, sp, #7
2fff42ae:	4605      	mov	r5, r0
2fff42b0:	f7ff ffde 	bl	2fff4270 <bsec_read_sr_lock>
2fff42b4:	4604      	mov	r4, r0
2fff42b6:	b138      	cbz	r0, 2fff42c8 <bsec_shadow_register+0x20>
2fff42b8:	4602      	mov	r2, r0
2fff42ba:	4629      	mov	r1, r5
2fff42bc:	4817      	ldr	r0, [pc, #92]	; (2fff431c <bsec_shadow_register+0x74>)
2fff42be:	f7fe fad1 	bl	2fff2864 <tf_log>
2fff42c2:	4620      	mov	r0, r4
2fff42c4:	b003      	add	sp, #12
2fff42c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff42c8:	f7ff ff42 	bl	2fff4150 <bsec_get_status>
2fff42cc:	0683      	lsls	r3, r0, #26
2fff42ce:	d422      	bmi.n	2fff4316 <bsec_shadow_register+0x6e>
2fff42d0:	2001      	movs	r0, #1
2fff42d2:	f7ff ff43 	bl	2fff415c <bsec_power_safmem>
2fff42d6:	4604      	mov	r4, r0
2fff42d8:	2800      	cmp	r0, #0
2fff42da:	d1f2      	bne.n	2fff42c2 <bsec_shadow_register+0x1a>
2fff42dc:	2701      	movs	r7, #1
2fff42de:	f7ff fe7b 	bl	2fff3fd8 <bsec_lock>
2fff42e2:	4b0f      	ldr	r3, [pc, #60]	; (2fff4320 <bsec_shadow_register+0x78>)
2fff42e4:	681b      	ldr	r3, [r3, #0]
2fff42e6:	605d      	str	r5, [r3, #4]
2fff42e8:	f7ff ff32 	bl	2fff4150 <bsec_get_status>
2fff42ec:	f010 0608 	ands.w	r6, r0, #8
2fff42f0:	d1fa      	bne.n	2fff42e8 <bsec_shadow_register+0x40>
2fff42f2:	2101      	movs	r1, #1
2fff42f4:	4628      	mov	r0, r5
2fff42f6:	f7ff fe93 	bl	2fff4020 <bsec_check_error>
2fff42fa:	4604      	mov	r4, r0
2fff42fc:	f7ff fe78 	bl	2fff3ff0 <bsec_unlock>
2fff4300:	2f00      	cmp	r7, #0
2fff4302:	d0de      	beq.n	2fff42c2 <bsec_shadow_register+0x1a>
2fff4304:	4630      	mov	r0, r6
2fff4306:	f7ff ff29 	bl	2fff415c <bsec_power_safmem>
2fff430a:	2800      	cmp	r0, #0
2fff430c:	d0d9      	beq.n	2fff42c2 <bsec_shadow_register+0x1a>
2fff430e:	f7fe fb4d 	bl	2fff29ac <console_flush>
2fff4312:	f004 eab2 	blx	2fff8878 <do_panic>
2fff4316:	4627      	mov	r7, r4
2fff4318:	e7e1      	b.n	2fff42de <bsec_shadow_register+0x36>
2fff431a:	bf00      	nop
2fff431c:	2fffb1d3 	.word	0x2fffb1d3
2fff4320:	2fffeaf0 	.word	0x2fffeaf0

2fff4324 <bsec_probe>:
2fff4324:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff4328:	b086      	sub	sp, #24
2fff432a:	a801      	add	r0, sp, #4
2fff432c:	f003 fd6c 	bl	2fff7e08 <fdt_get_address>
2fff4330:	b918      	cbnz	r0, 2fff433a <bsec_probe+0x16>
2fff4332:	f7fe fb3b 	bl	2fff29ac <console_flush>
2fff4336:	f004 eaa0 	blx	2fff8878 <do_panic>
2fff433a:	4a39      	ldr	r2, [pc, #228]	; (2fff4420 <bsec_probe+0xfc>)
2fff433c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff4340:	a802      	add	r0, sp, #8
2fff4342:	f003 fe4b 	bl	2fff7fdc <dt_get_node>
2fff4346:	ea40 71e0 	orr.w	r1, r0, r0, asr #31
2fff434a:	2800      	cmp	r0, #0
2fff434c:	dbf1      	blt.n	2fff4332 <bsec_probe+0xe>
2fff434e:	4b35      	ldr	r3, [pc, #212]	; (2fff4424 <bsec_probe+0x100>)
2fff4350:	9a02      	ldr	r2, [sp, #8]
2fff4352:	601a      	str	r2, [r3, #0]
2fff4354:	f7ff ff7c 	bl	2fff4250 <bsec_get_version>
2fff4358:	b2c0      	uxtb	r0, r0
2fff435a:	2811      	cmp	r0, #17
2fff435c:	d1e9      	bne.n	2fff4332 <bsec_probe+0xe>
2fff435e:	f7ff ff7f 	bl	2fff4260 <bsec_get_id>
2fff4362:	4b31      	ldr	r3, [pc, #196]	; (2fff4428 <bsec_probe+0x104>)
2fff4364:	4298      	cmp	r0, r3
2fff4366:	d1e4      	bne.n	2fff4332 <bsec_probe+0xe>
2fff4368:	f8dd 8004 	ldr.w	r8, [sp, #4]
2fff436c:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 2fff442c <bsec_probe+0x108>
2fff4370:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 2fff4430 <bsec_probe+0x10c>
2fff4374:	4640      	mov	r0, r8
2fff4376:	f004 ffa0 	bl	2fff92ba <fdt_first_subnode>
2fff437a:	4606      	mov	r6, r0
2fff437c:	2e00      	cmp	r6, #0
2fff437e:	da03      	bge.n	2fff4388 <bsec_probe+0x64>
2fff4380:	2000      	movs	r0, #0
2fff4382:	b006      	add	sp, #24
2fff4384:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff4388:	2300      	movs	r3, #0
2fff438a:	4652      	mov	r2, sl
2fff438c:	4631      	mov	r1, r6
2fff438e:	4640      	mov	r0, r8
2fff4390:	f005 f90e 	bl	2fff95b0 <fdt_getprop>
2fff4394:	4603      	mov	r3, r0
2fff4396:	2800      	cmp	r0, #0
2fff4398:	d0cb      	beq.n	2fff4332 <bsec_probe+0xe>
2fff439a:	6800      	ldr	r0, [r0, #0]
2fff439c:	f7ff fe1a 	bl	2fff3fd4 <fdt32_to_cpu>
2fff43a0:	4604      	mov	r4, r0
2fff43a2:	6858      	ldr	r0, [r3, #4]
2fff43a4:	f7ff fe16 	bl	2fff3fd4 <fdt32_to_cpu>
2fff43a8:	2c7f      	cmp	r4, #127	; 0x7f
2fff43aa:	4607      	mov	r7, r0
2fff43ac:	d90e      	bls.n	2fff43cc <bsec_probe+0xa8>
2fff43ae:	08a5      	lsrs	r5, r4, #2
2fff43b0:	4a20      	ldr	r2, [pc, #128]	; (2fff4434 <bsec_probe+0x110>)
2fff43b2:	2300      	movs	r3, #0
2fff43b4:	4631      	mov	r1, r6
2fff43b6:	4640      	mov	r0, r8
2fff43b8:	f005 f8fa 	bl	2fff95b0 <fdt_getprop>
2fff43bc:	b168      	cbz	r0, 2fff43da <bsec_probe+0xb6>
2fff43be:	433c      	orrs	r4, r7
2fff43c0:	07a3      	lsls	r3, r4, #30
2fff43c2:	d017      	beq.n	2fff43f4 <bsec_probe+0xd0>
2fff43c4:	481c      	ldr	r0, [pc, #112]	; (2fff4438 <bsec_probe+0x114>)
2fff43c6:	f7fe fa4d 	bl	2fff2864 <tf_log>
2fff43ca:	e7b2      	b.n	2fff4332 <bsec_probe+0xe>
2fff43cc:	4427      	add	r7, r4
2fff43ce:	1e7b      	subs	r3, r7, #1
2fff43d0:	f043 0303 	orr.w	r3, r3, #3
2fff43d4:	3301      	adds	r3, #1
2fff43d6:	2b83      	cmp	r3, #131	; 0x83
2fff43d8:	d805      	bhi.n	2fff43e6 <bsec_probe+0xc2>
2fff43da:	4631      	mov	r1, r6
2fff43dc:	4640      	mov	r0, r8
2fff43de:	f004 ff7f 	bl	2fff92e0 <fdt_next_subnode>
2fff43e2:	4606      	mov	r6, r0
2fff43e4:	e7ca      	b.n	2fff437c <bsec_probe+0x58>
2fff43e6:	4815      	ldr	r0, [pc, #84]	; (2fff443c <bsec_probe+0x118>)
2fff43e8:	3f80      	subs	r7, #128	; 0x80
2fff43ea:	2480      	movs	r4, #128	; 0x80
2fff43ec:	2520      	movs	r5, #32
2fff43ee:	f7fe fa39 	bl	2fff2864 <tf_log>
2fff43f2:	e7dd      	b.n	2fff43b0 <bsec_probe+0x8c>
2fff43f4:	eb05 0797 	add.w	r7, r5, r7, lsr #2
2fff43f8:	2401      	movs	r4, #1
2fff43fa:	42bd      	cmp	r5, r7
2fff43fc:	d2ed      	bcs.n	2fff43da <bsec_probe+0xb6>
2fff43fe:	0969      	lsrs	r1, r5, #5
2fff4400:	f005 031f 	and.w	r3, r5, #31
2fff4404:	4628      	mov	r0, r5
2fff4406:	f859 2021 	ldr.w	r2, [r9, r1, lsl #2]
2fff440a:	fa04 f303 	lsl.w	r3, r4, r3
2fff440e:	4313      	orrs	r3, r2
2fff4410:	f849 3021 	str.w	r3, [r9, r1, lsl #2]
2fff4414:	f7ff ff48 	bl	2fff42a8 <bsec_shadow_register>
2fff4418:	2800      	cmp	r0, #0
2fff441a:	d18a      	bne.n	2fff4332 <bsec_probe+0xe>
2fff441c:	3501      	adds	r5, #1
2fff441e:	e7ec      	b.n	2fff43fa <bsec_probe+0xd6>
2fff4420:	2fffb1fc 	.word	0x2fffb1fc
2fff4424:	2fffeaf0 	.word	0x2fffeaf0
2fff4428:	00100032 	.word	0x00100032
2fff442c:	2fffa630 	.word	0x2fffa630
2fff4430:	2fffeaf8 	.word	0x2fffeaf8
2fff4434:	2fffb231 	.word	0x2fffb231
2fff4438:	2fffb243 	.word	0x2fffb243
2fff443c:	2fffb20e 	.word	0x2fffb20e

2fff4440 <bsec_read_sw_lock>:
2fff4440:	b538      	push	{r3, r4, r5, lr}
2fff4442:	4604      	mov	r4, r0
2fff4444:	460d      	mov	r5, r1
2fff4446:	f7ff fddf 	bl	2fff4008 <otp_bank_offset>
2fff444a:	f004 021f 	and.w	r2, r4, #31
2fff444e:	2301      	movs	r3, #1
2fff4450:	2c5f      	cmp	r4, #95	; 0x5f
2fff4452:	fa03 f302 	lsl.w	r3, r3, r2
2fff4456:	d80a      	bhi.n	2fff446e <bsec_read_sw_lock+0x2e>
2fff4458:	4a06      	ldr	r2, [pc, #24]	; (2fff4474 <bsec_read_sw_lock+0x34>)
2fff445a:	6812      	ldr	r2, [r2, #0]
2fff445c:	327c      	adds	r2, #124	; 0x7c
2fff445e:	5812      	ldr	r2, [r2, r0]
2fff4460:	2000      	movs	r0, #0
2fff4462:	4213      	tst	r3, r2
2fff4464:	bf14      	ite	ne
2fff4466:	2301      	movne	r3, #1
2fff4468:	2300      	moveq	r3, #0
2fff446a:	702b      	strb	r3, [r5, #0]
2fff446c:	bd38      	pop	{r3, r4, r5, pc}
2fff446e:	f06f 0003 	mvn.w	r0, #3
2fff4472:	e7fb      	b.n	2fff446c <bsec_read_sw_lock+0x2c>
2fff4474:	2fffeaf0 	.word	0x2fffeaf0

2fff4478 <bsec_write_otp>:
2fff4478:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff447a:	460d      	mov	r5, r1
2fff447c:	4606      	mov	r6, r0
2fff447e:	f10d 0107 	add.w	r1, sp, #7
2fff4482:	4628      	mov	r0, r5
2fff4484:	f7ff ffdc 	bl	2fff4440 <bsec_read_sw_lock>
2fff4488:	4604      	mov	r4, r0
2fff448a:	b138      	cbz	r0, 2fff449c <bsec_write_otp+0x24>
2fff448c:	4602      	mov	r2, r0
2fff448e:	4629      	mov	r1, r5
2fff4490:	4808      	ldr	r0, [pc, #32]	; (2fff44b4 <bsec_write_otp+0x3c>)
2fff4492:	f7fe f9e7 	bl	2fff2864 <tf_log>
2fff4496:	4620      	mov	r0, r4
2fff4498:	b002      	add	sp, #8
2fff449a:	bd70      	pop	{r4, r5, r6, pc}
2fff449c:	f7ff fd9c 	bl	2fff3fd8 <bsec_lock>
2fff44a0:	4b05      	ldr	r3, [pc, #20]	; (2fff44b8 <bsec_write_otp+0x40>)
2fff44a2:	681b      	ldr	r3, [r3, #0]
2fff44a4:	f503 7300 	add.w	r3, r3, #512	; 0x200
2fff44a8:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
2fff44ac:	f7ff fda0 	bl	2fff3ff0 <bsec_unlock>
2fff44b0:	e7f1      	b.n	2fff4496 <bsec_write_otp+0x1e>
2fff44b2:	bf00      	nop
2fff44b4:	2fffb25e 	.word	0x2fffb25e
2fff44b8:	2fffeaf0 	.word	0x2fffeaf0

2fff44bc <bsec_read_sp_lock>:
2fff44bc:	b538      	push	{r3, r4, r5, lr}
2fff44be:	4604      	mov	r4, r0
2fff44c0:	460d      	mov	r5, r1
2fff44c2:	f7ff fda1 	bl	2fff4008 <otp_bank_offset>
2fff44c6:	f004 021f 	and.w	r2, r4, #31
2fff44ca:	2301      	movs	r3, #1
2fff44cc:	2c5f      	cmp	r4, #95	; 0x5f
2fff44ce:	fa03 f302 	lsl.w	r3, r3, r2
2fff44d2:	d80a      	bhi.n	2fff44ea <bsec_read_sp_lock+0x2e>
2fff44d4:	4a06      	ldr	r2, [pc, #24]	; (2fff44f0 <bsec_read_sp_lock+0x34>)
2fff44d6:	6812      	ldr	r2, [r2, #0]
2fff44d8:	3264      	adds	r2, #100	; 0x64
2fff44da:	5812      	ldr	r2, [r2, r0]
2fff44dc:	2000      	movs	r0, #0
2fff44de:	4213      	tst	r3, r2
2fff44e0:	bf14      	ite	ne
2fff44e2:	2301      	movne	r3, #1
2fff44e4:	2300      	moveq	r3, #0
2fff44e6:	702b      	strb	r3, [r5, #0]
2fff44e8:	bd38      	pop	{r3, r4, r5, pc}
2fff44ea:	f06f 0003 	mvn.w	r0, #3
2fff44ee:	e7fb      	b.n	2fff44e8 <bsec_read_sp_lock+0x2c>
2fff44f0:	2fffeaf0 	.word	0x2fffeaf0

2fff44f4 <bsec_read_permanent_lock>:
2fff44f4:	b538      	push	{r3, r4, r5, lr}
2fff44f6:	4604      	mov	r4, r0
2fff44f8:	460d      	mov	r5, r1
2fff44fa:	f7ff fd85 	bl	2fff4008 <otp_bank_offset>
2fff44fe:	f004 021f 	and.w	r2, r4, #31
2fff4502:	2301      	movs	r3, #1
2fff4504:	2c5f      	cmp	r4, #95	; 0x5f
2fff4506:	fa03 f302 	lsl.w	r3, r3, r2
2fff450a:	d80a      	bhi.n	2fff4522 <bsec_read_permanent_lock+0x2e>
2fff450c:	4a06      	ldr	r2, [pc, #24]	; (2fff4528 <bsec_read_permanent_lock+0x34>)
2fff450e:	6812      	ldr	r2, [r2, #0]
2fff4510:	324c      	adds	r2, #76	; 0x4c
2fff4512:	5812      	ldr	r2, [r2, r0]
2fff4514:	2000      	movs	r0, #0
2fff4516:	4213      	tst	r3, r2
2fff4518:	bf14      	ite	ne
2fff451a:	2301      	movne	r3, #1
2fff451c:	2300      	moveq	r3, #0
2fff451e:	702b      	strb	r3, [r5, #0]
2fff4520:	bd38      	pop	{r3, r4, r5, pc}
2fff4522:	f06f 0003 	mvn.w	r0, #3
2fff4526:	e7fb      	b.n	2fff4520 <bsec_read_permanent_lock+0x2c>
2fff4528:	2fffeaf0 	.word	0x2fffeaf0

2fff452c <bsec_program_otp>:
2fff452c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff4530:	460d      	mov	r5, r1
2fff4532:	4607      	mov	r7, r0
2fff4534:	f10d 0106 	add.w	r1, sp, #6
2fff4538:	4628      	mov	r0, r5
2fff453a:	f7ff ffbf 	bl	2fff44bc <bsec_read_sp_lock>
2fff453e:	4604      	mov	r4, r0
2fff4540:	b140      	cbz	r0, 2fff4554 <bsec_program_otp+0x28>
2fff4542:	4602      	mov	r2, r0
2fff4544:	4629      	mov	r1, r5
2fff4546:	482c      	ldr	r0, [pc, #176]	; (2fff45f8 <bsec_program_otp+0xcc>)
2fff4548:	f7fe f98c 	bl	2fff2864 <tf_log>
2fff454c:	4620      	mov	r0, r4
2fff454e:	b002      	add	sp, #8
2fff4550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff4554:	f10d 0107 	add.w	r1, sp, #7
2fff4558:	4628      	mov	r0, r5
2fff455a:	f7ff ffcb 	bl	2fff44f4 <bsec_read_permanent_lock>
2fff455e:	4604      	mov	r4, r0
2fff4560:	b118      	cbz	r0, 2fff456a <bsec_program_otp+0x3e>
2fff4562:	4602      	mov	r2, r0
2fff4564:	4629      	mov	r1, r5
2fff4566:	4825      	ldr	r0, [pc, #148]	; (2fff45fc <bsec_program_otp+0xd0>)
2fff4568:	e7ee      	b.n	2fff4548 <bsec_program_otp+0x1c>
2fff456a:	f89d 3006 	ldrb.w	r3, [sp, #6]
2fff456e:	b913      	cbnz	r3, 2fff4576 <bsec_program_otp+0x4a>
2fff4570:	f89d 6007 	ldrb.w	r6, [sp, #7]
2fff4574:	b12e      	cbz	r6, 2fff4582 <bsec_program_otp+0x56>
2fff4576:	4822      	ldr	r0, [pc, #136]	; (2fff4600 <bsec_program_otp+0xd4>)
2fff4578:	f06f 0404 	mvn.w	r4, #4
2fff457c:	f7fe f972 	bl	2fff2864 <tf_log>
2fff4580:	e7e4      	b.n	2fff454c <bsec_program_otp+0x20>
2fff4582:	f8df 8080 	ldr.w	r8, [pc, #128]	; 2fff4604 <bsec_program_otp+0xd8>
2fff4586:	f8d8 3000 	ldr.w	r3, [r8]
2fff458a:	691b      	ldr	r3, [r3, #16]
2fff458c:	0718      	lsls	r0, r3, #28
2fff458e:	d502      	bpl.n	2fff4596 <bsec_program_otp+0x6a>
2fff4590:	481d      	ldr	r0, [pc, #116]	; (2fff4608 <bsec_program_otp+0xdc>)
2fff4592:	f7fe f967 	bl	2fff2864 <tf_log>
2fff4596:	f7ff fddb 	bl	2fff4150 <bsec_get_status>
2fff459a:	0681      	lsls	r1, r0, #26
2fff459c:	d406      	bmi.n	2fff45ac <bsec_program_otp+0x80>
2fff459e:	2001      	movs	r0, #1
2fff45a0:	f7ff fddc 	bl	2fff415c <bsec_power_safmem>
2fff45a4:	4604      	mov	r4, r0
2fff45a6:	2800      	cmp	r0, #0
2fff45a8:	d1d0      	bne.n	2fff454c <bsec_program_otp+0x20>
2fff45aa:	2601      	movs	r6, #1
2fff45ac:	f7ff fd14 	bl	2fff3fd8 <bsec_lock>
2fff45b0:	f8d8 3000 	ldr.w	r3, [r8]
2fff45b4:	f445 7280 	orr.w	r2, r5, #256	; 0x100
2fff45b8:	609f      	str	r7, [r3, #8]
2fff45ba:	605a      	str	r2, [r3, #4]
2fff45bc:	f7ff fdc8 	bl	2fff4150 <bsec_get_status>
2fff45c0:	0702      	lsls	r2, r0, #28
2fff45c2:	d4fb      	bmi.n	2fff45bc <bsec_program_otp+0x90>
2fff45c4:	f7ff fdc4 	bl	2fff4150 <bsec_get_status>
2fff45c8:	06c3      	lsls	r3, r0, #27
2fff45ca:	d411      	bmi.n	2fff45f0 <bsec_program_otp+0xc4>
2fff45cc:	2101      	movs	r1, #1
2fff45ce:	4628      	mov	r0, r5
2fff45d0:	f7ff fd26 	bl	2fff4020 <bsec_check_error>
2fff45d4:	4604      	mov	r4, r0
2fff45d6:	f7ff fd0b 	bl	2fff3ff0 <bsec_unlock>
2fff45da:	2e00      	cmp	r6, #0
2fff45dc:	d0b6      	beq.n	2fff454c <bsec_program_otp+0x20>
2fff45de:	2000      	movs	r0, #0
2fff45e0:	f7ff fdbc 	bl	2fff415c <bsec_power_safmem>
2fff45e4:	2800      	cmp	r0, #0
2fff45e6:	d0b1      	beq.n	2fff454c <bsec_program_otp+0x20>
2fff45e8:	f7fe f9e0 	bl	2fff29ac <console_flush>
2fff45ec:	f004 e944 	blx	2fff8878 <do_panic>
2fff45f0:	f06f 0404 	mvn.w	r4, #4
2fff45f4:	e7ef      	b.n	2fff45d6 <bsec_program_otp+0xaa>
2fff45f6:	bf00      	nop
2fff45f8:	2fffb288 	.word	0x2fffb288
2fff45fc:	2fffb2b1 	.word	0x2fffb2b1
2fff4600:	2fffb2d8 	.word	0x2fffb2d8
2fff4604:	2fffeaf0 	.word	0x2fffeaf0
2fff4608:	2fffb301 	.word	0x2fffb301

2fff460c <bsec_check_nsec_access_rights>:
2fff460c:	285f      	cmp	r0, #95	; 0x5f
2fff460e:	d810      	bhi.n	2fff4632 <bsec_check_nsec_access_rights+0x26>
2fff4610:	281f      	cmp	r0, #31
2fff4612:	d911      	bls.n	2fff4638 <bsec_check_nsec_access_rights+0x2c>
2fff4614:	0942      	lsrs	r2, r0, #5
2fff4616:	2301      	movs	r3, #1
2fff4618:	f000 001f 	and.w	r0, r0, #31
2fff461c:	fa03 f000 	lsl.w	r0, r3, r0
2fff4620:	4b06      	ldr	r3, [pc, #24]	; (2fff463c <bsec_check_nsec_access_rights+0x30>)
2fff4622:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
2fff4626:	4218      	tst	r0, r3
2fff4628:	bf0c      	ite	eq
2fff462a:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2fff462e:	2000      	movne	r0, #0
2fff4630:	4770      	bx	lr
2fff4632:	f06f 0003 	mvn.w	r0, #3
2fff4636:	4770      	bx	lr
2fff4638:	2000      	movs	r0, #0
2fff463a:	4770      	bx	lr
2fff463c:	2fffeaf8 	.word	0x2fffeaf8

2fff4640 <fdt32_to_cpu>:
2fff4640:	ba00      	rev	r0, r0
2fff4642:	4770      	bx	lr

2fff4644 <fdt_osc_read_freq>:
2fff4644:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff4646:	4607      	mov	r7, r0
2fff4648:	4668      	mov	r0, sp
2fff464a:	460e      	mov	r6, r1
2fff464c:	f003 fbdc 	bl	2fff7e08 <fdt_get_address>
2fff4650:	2800      	cmp	r0, #0
2fff4652:	d034      	beq.n	2fff46be <fdt_osc_read_freq+0x7a>
2fff4654:	491d      	ldr	r1, [pc, #116]	; (2fff46cc <fdt_osc_read_freq+0x88>)
2fff4656:	9800      	ldr	r0, [sp, #0]
2fff4658:	f005 f83c 	bl	2fff96d4 <fdt_path_offset>
2fff465c:	1e01      	subs	r1, r0, #0
2fff465e:	db31      	blt.n	2fff46c4 <fdt_osc_read_freq+0x80>
2fff4660:	9800      	ldr	r0, [sp, #0]
2fff4662:	f004 fe2a 	bl	2fff92ba <fdt_first_subnode>
2fff4666:	2800      	cmp	r0, #0
2fff4668:	4605      	mov	r5, r0
2fff466a:	da02      	bge.n	2fff4672 <fdt_osc_read_freq+0x2e>
2fff466c:	2400      	movs	r4, #0
2fff466e:	6034      	str	r4, [r6, #0]
2fff4670:	e006      	b.n	2fff4680 <fdt_osc_read_freq+0x3c>
2fff4672:	9800      	ldr	r0, [sp, #0]
2fff4674:	aa01      	add	r2, sp, #4
2fff4676:	4629      	mov	r1, r5
2fff4678:	f004 feaa 	bl	2fff93d0 <fdt_get_name>
2fff467c:	b918      	cbnz	r0, 2fff4686 <fdt_osc_read_freq+0x42>
2fff467e:	9c01      	ldr	r4, [sp, #4]
2fff4680:	4620      	mov	r0, r4
2fff4682:	b003      	add	sp, #12
2fff4684:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff4686:	9a01      	ldr	r2, [sp, #4]
2fff4688:	4639      	mov	r1, r7
2fff468a:	f005 fade 	bl	2fff9c4a <strncmp>
2fff468e:	4604      	mov	r4, r0
2fff4690:	b980      	cbnz	r0, 2fff46b4 <fdt_osc_read_freq+0x70>
2fff4692:	4628      	mov	r0, r5
2fff4694:	f003 fbc4 	bl	2fff7e20 <fdt_get_status>
2fff4698:	b160      	cbz	r0, 2fff46b4 <fdt_osc_read_freq+0x70>
2fff469a:	4a0d      	ldr	r2, [pc, #52]	; (2fff46d0 <fdt_osc_read_freq+0x8c>)
2fff469c:	ab01      	add	r3, sp, #4
2fff469e:	9800      	ldr	r0, [sp, #0]
2fff46a0:	4629      	mov	r1, r5
2fff46a2:	f004 ff85 	bl	2fff95b0 <fdt_getprop>
2fff46a6:	2800      	cmp	r0, #0
2fff46a8:	d0e9      	beq.n	2fff467e <fdt_osc_read_freq+0x3a>
2fff46aa:	6800      	ldr	r0, [r0, #0]
2fff46ac:	f7ff ffc8 	bl	2fff4640 <fdt32_to_cpu>
2fff46b0:	6030      	str	r0, [r6, #0]
2fff46b2:	e7e5      	b.n	2fff4680 <fdt_osc_read_freq+0x3c>
2fff46b4:	9800      	ldr	r0, [sp, #0]
2fff46b6:	4629      	mov	r1, r5
2fff46b8:	f004 fe12 	bl	2fff92e0 <fdt_next_subnode>
2fff46bc:	e7d3      	b.n	2fff4666 <fdt_osc_read_freq+0x22>
2fff46be:	f06f 0401 	mvn.w	r4, #1
2fff46c2:	e7dd      	b.n	2fff4680 <fdt_osc_read_freq+0x3c>
2fff46c4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff46c8:	e7da      	b.n	2fff4680 <fdt_osc_read_freq+0x3c>
2fff46ca:	bf00      	nop
2fff46cc:	2fffb330 	.word	0x2fffb330
2fff46d0:	2fffb338 	.word	0x2fffb338

2fff46d4 <fdt_get_rcc_node>:
2fff46d4:	4801      	ldr	r0, [pc, #4]	; (2fff46dc <fdt_get_rcc_node+0x8>)
2fff46d6:	f003 bca3 	b.w	2fff8020 <dt_get_node_by_compatible>
2fff46da:	bf00      	nop
2fff46dc:	2fffb348 	.word	0x2fffb348

2fff46e0 <fdt_rcc_read_uint32_default>:
2fff46e0:	b538      	push	{r3, r4, r5, lr}
2fff46e2:	4605      	mov	r5, r0
2fff46e4:	460c      	mov	r4, r1
2fff46e6:	f7ff fff5 	bl	2fff46d4 <fdt_get_rcc_node>
2fff46ea:	2800      	cmp	r0, #0
2fff46ec:	db05      	blt.n	2fff46fa <fdt_rcc_read_uint32_default+0x1a>
2fff46ee:	4622      	mov	r2, r4
2fff46f0:	4629      	mov	r1, r5
2fff46f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff46f6:	f003 bbf3 	b.w	2fff7ee0 <fdt_read_uint32_default>
2fff46fa:	4620      	mov	r0, r4
2fff46fc:	bd38      	pop	{r3, r4, r5, pc}

2fff46fe <fdt_rcc_read_prop>:
2fff46fe:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff4700:	4605      	mov	r5, r0
2fff4702:	a801      	add	r0, sp, #4
2fff4704:	460c      	mov	r4, r1
2fff4706:	f003 fb7f 	bl	2fff7e08 <fdt_get_address>
2fff470a:	b910      	cbnz	r0, 2fff4712 <fdt_rcc_read_prop+0x14>
2fff470c:	2000      	movs	r0, #0
2fff470e:	b003      	add	sp, #12
2fff4710:	bd30      	pop	{r4, r5, pc}
2fff4712:	f7ff ffdf 	bl	2fff46d4 <fdt_get_rcc_node>
2fff4716:	1e01      	subs	r1, r0, #0
2fff4718:	dbf8      	blt.n	2fff470c <fdt_rcc_read_prop+0xe>
2fff471a:	9801      	ldr	r0, [sp, #4]
2fff471c:	466b      	mov	r3, sp
2fff471e:	462a      	mov	r2, r5
2fff4720:	f004 ff46 	bl	2fff95b0 <fdt_getprop>
2fff4724:	2800      	cmp	r0, #0
2fff4726:	d0f2      	beq.n	2fff470e <fdt_rcc_read_prop+0x10>
2fff4728:	9b00      	ldr	r3, [sp, #0]
2fff472a:	6023      	str	r3, [r4, #0]
2fff472c:	e7ef      	b.n	2fff470e <fdt_rcc_read_prop+0x10>

2fff472e <fdt_rcc_enable_it>:
2fff472e:	b510      	push	{r4, lr}
2fff4730:	4604      	mov	r4, r0
2fff4732:	f7ff ffcf 	bl	2fff46d4 <fdt_get_rcc_node>
2fff4736:	2800      	cmp	r0, #0
2fff4738:	db04      	blt.n	2fff4744 <fdt_rcc_enable_it+0x16>
2fff473a:	4621      	mov	r1, r4
2fff473c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff4740:	f7fc bf6c 	b.w	2fff161c <stm32_gic_enable_spi>
2fff4744:	f06f 0012 	mvn.w	r0, #18
2fff4748:	bd10      	pop	{r4, pc}
	...

2fff474c <fdt_get_clock_id>:
2fff474c:	b513      	push	{r0, r1, r4, lr}
2fff474e:	4604      	mov	r4, r0
2fff4750:	a801      	add	r0, sp, #4
2fff4752:	f003 fb59 	bl	2fff7e08 <fdt_get_address>
2fff4756:	b160      	cbz	r0, 2fff4772 <fdt_get_clock_id+0x26>
2fff4758:	4a09      	ldr	r2, [pc, #36]	; (2fff4780 <fdt_get_clock_id+0x34>)
2fff475a:	2300      	movs	r3, #0
2fff475c:	9801      	ldr	r0, [sp, #4]
2fff475e:	4621      	mov	r1, r4
2fff4760:	f004 ff26 	bl	2fff95b0 <fdt_getprop>
2fff4764:	b148      	cbz	r0, 2fff477a <fdt_get_clock_id+0x2e>
2fff4766:	6840      	ldr	r0, [r0, #4]
2fff4768:	b002      	add	sp, #8
2fff476a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff476e:	f7ff bf67 	b.w	2fff4640 <fdt32_to_cpu>
2fff4772:	f06f 0001 	mvn.w	r0, #1
2fff4776:	b002      	add	sp, #8
2fff4778:	bd10      	pop	{r4, pc}
2fff477a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff477e:	e7fa      	b.n	2fff4776 <fdt_get_clock_id+0x2a>
2fff4780:	2fffb331 	.word	0x2fffb331

2fff4784 <fdt_get_clock_id_by_name>:
2fff4784:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff4786:	4605      	mov	r5, r0
2fff4788:	4668      	mov	r0, sp
2fff478a:	460c      	mov	r4, r1
2fff478c:	f003 fb3c 	bl	2fff7e08 <fdt_get_address>
2fff4790:	b1d0      	cbz	r0, 2fff47c8 <fdt_get_clock_id_by_name+0x44>
2fff4792:	4a13      	ldr	r2, [pc, #76]	; (2fff47e0 <fdt_get_clock_id_by_name+0x5c>)
2fff4794:	4623      	mov	r3, r4
2fff4796:	9800      	ldr	r0, [sp, #0]
2fff4798:	4629      	mov	r1, r5
2fff479a:	f005 f83f 	bl	2fff981c <fdt_stringlist_search>
2fff479e:	1e04      	subs	r4, r0, #0
2fff47a0:	db14      	blt.n	2fff47cc <fdt_get_clock_id_by_name+0x48>
2fff47a2:	4a10      	ldr	r2, [pc, #64]	; (2fff47e4 <fdt_get_clock_id_by_name+0x60>)
2fff47a4:	ab01      	add	r3, sp, #4
2fff47a6:	9800      	ldr	r0, [sp, #0]
2fff47a8:	4629      	mov	r1, r5
2fff47aa:	f004 ff01 	bl	2fff95b0 <fdt_getprop>
2fff47ae:	b180      	cbz	r0, 2fff47d2 <fdt_get_clock_id_by_name+0x4e>
2fff47b0:	9b01      	ldr	r3, [sp, #4]
2fff47b2:	ebb3 0f84 	cmp.w	r3, r4, lsl #2
2fff47b6:	db0f      	blt.n	2fff47d8 <fdt_get_clock_id_by_name+0x54>
2fff47b8:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
2fff47bc:	6840      	ldr	r0, [r0, #4]
2fff47be:	b003      	add	sp, #12
2fff47c0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff47c4:	f7ff bf3c 	b.w	2fff4640 <fdt32_to_cpu>
2fff47c8:	f06f 0401 	mvn.w	r4, #1
2fff47cc:	4620      	mov	r0, r4
2fff47ce:	b003      	add	sp, #12
2fff47d0:	bd30      	pop	{r4, r5, pc}
2fff47d2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff47d6:	e7f9      	b.n	2fff47cc <fdt_get_clock_id_by_name+0x48>
2fff47d8:	f06f 040e 	mvn.w	r4, #14
2fff47dc:	e7f6      	b.n	2fff47cc <fdt_get_clock_id_by_name+0x48>
2fff47de:	bf00      	nop
2fff47e0:	2fffb358 	.word	0x2fffb358
2fff47e4:	2fffb331 	.word	0x2fffb331

2fff47e8 <stm32mp_stgen_get_counter>:
2fff47e8:	4b01      	ldr	r3, [pc, #4]	; (2fff47f0 <stm32mp_stgen_get_counter+0x8>)
2fff47ea:	68d9      	ldr	r1, [r3, #12]
2fff47ec:	6898      	ldr	r0, [r3, #8]
2fff47ee:	4770      	bx	lr
2fff47f0:	5c008000 	.word	0x5c008000

2fff47f4 <stm32mp_stgen_restore_counter>:
2fff47f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff47f6:	4606      	mov	r6, r0
2fff47f8:	4c0d      	ldr	r4, [pc, #52]	; (2fff4830 <stm32mp_stgen_restore_counter+0x3c>)
2fff47fa:	460d      	mov	r5, r1
2fff47fc:	469c      	mov	ip, r3
2fff47fe:	2300      	movs	r3, #0
2fff4800:	6a27      	ldr	r7, [r4, #32]
2fff4802:	fba7 0102 	umull	r0, r1, r7, r2
2fff4806:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2fff480a:	fb07 110c 	mla	r1, r7, ip, r1
2fff480e:	f004 e9d2 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff4812:	6823      	ldr	r3, [r4, #0]
2fff4814:	1980      	adds	r0, r0, r6
2fff4816:	f023 0301 	bic.w	r3, r3, #1
2fff481a:	eb45 0501 	adc.w	r5, r5, r1
2fff481e:	6023      	str	r3, [r4, #0]
2fff4820:	60a0      	str	r0, [r4, #8]
2fff4822:	60e5      	str	r5, [r4, #12]
2fff4824:	6823      	ldr	r3, [r4, #0]
2fff4826:	f043 0301 	orr.w	r3, r3, #1
2fff482a:	6023      	str	r3, [r4, #0]
2fff482c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff482e:	bf00      	nop
2fff4830:	5c008000 	.word	0x5c008000

2fff4834 <clock_is_always_on>:
2fff4834:	2805      	cmp	r0, #5
2fff4836:	d909      	bls.n	2fff484c <clock_is_always_on+0x18>
2fff4838:	f1a0 03b4 	sub.w	r3, r0, #180	; 0xb4
2fff483c:	2b08      	cmp	r3, #8
2fff483e:	d905      	bls.n	2fff484c <clock_is_always_on+0x18>
2fff4840:	38c2      	subs	r0, #194	; 0xc2
2fff4842:	2802      	cmp	r0, #2
2fff4844:	bf8c      	ite	hi
2fff4846:	2000      	movhi	r0, #0
2fff4848:	2001      	movls	r0, #1
2fff484a:	4770      	bx	lr
2fff484c:	2001      	movs	r0, #1
2fff484e:	4770      	bx	lr

2fff4850 <stm32mp1_pll_compute_pllxcfgr2>:
2fff4850:	6883      	ldr	r3, [r0, #8]
2fff4852:	6902      	ldr	r2, [r0, #16]
2fff4854:	f003 017f 	and.w	r1, r3, #127	; 0x7f
2fff4858:	68c3      	ldr	r3, [r0, #12]
2fff485a:	0412      	lsls	r2, r2, #16
2fff485c:	021b      	lsls	r3, r3, #8
2fff485e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
2fff4862:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
2fff4866:	4313      	orrs	r3, r2
2fff4868:	ea43 0001 	orr.w	r0, r3, r1
2fff486c:	4770      	bx	lr
	...

2fff4870 <stm32mp1_read_pll_freq>:
2fff4870:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff4874:	4607      	mov	r7, r0
2fff4876:	f8df 9094 	ldr.w	r9, [pc, #148]	; 2fff490c <stm32mp1_read_pll_freq+0x9c>
2fff487a:	460c      	mov	r4, r1
2fff487c:	f7fe f9a8 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4880:	eb09 1847 	add.w	r8, r9, r7, lsl #5
2fff4884:	f8b8 3008 	ldrh.w	r3, [r8, #8]
2fff4888:	581d      	ldr	r5, [r3, r0]
2fff488a:	4b21      	ldr	r3, [pc, #132]	; (2fff4910 <stm32mp1_read_pll_freq+0xa0>)
2fff488c:	5d18      	ldrb	r0, [r3, r4]
2fff488e:	40c5      	lsrs	r5, r0
2fff4890:	f7fe f99e 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4894:	f8b8 3006 	ldrh.w	r3, [r8, #6]
2fff4898:	f005 057f 	and.w	r5, r5, #127	; 0x7f
2fff489c:	581e      	ldr	r6, [r3, r0]
2fff489e:	f8b8 300a 	ldrh.w	r3, [r8, #10]
2fff48a2:	581c      	ldr	r4, [r3, r0]
2fff48a4:	f7fe f994 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff48a8:	f8b8 3004 	ldrh.w	r3, [r8, #4]
2fff48ac:	581b      	ldr	r3, [r3, r0]
2fff48ae:	f003 0303 	and.w	r3, r3, #3
2fff48b2:	eb03 00c7 	add.w	r0, r3, r7, lsl #3
2fff48b6:	3004      	adds	r0, #4
2fff48b8:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
2fff48bc:	f3c6 4005 	ubfx	r0, r6, #16, #6
2fff48c0:	2b05      	cmp	r3, #5
2fff48c2:	bf8e      	itee	hi
2fff48c4:	2700      	movhi	r7, #0
2fff48c6:	4a13      	ldrls	r2, [pc, #76]	; (2fff4914 <stm32mp1_read_pll_freq+0xa4>)
2fff48c8:	f852 7023 	ldrls.w	r7, [r2, r3, lsl #2]
2fff48cc:	1c43      	adds	r3, r0, #1
2fff48ce:	03e1      	lsls	r1, r4, #15
2fff48d0:	f3c6 0208 	ubfx	r2, r6, #0, #9
2fff48d4:	f102 0201 	add.w	r2, r2, #1
2fff48d8:	d513      	bpl.n	2fff4902 <stm32mp1_read_pll_freq+0x92>
2fff48da:	0cd6      	lsrs	r6, r2, #19
2fff48dc:	f3c4 04cc 	ubfx	r4, r4, #3, #13
2fff48e0:	0352      	lsls	r2, r2, #13
2fff48e2:	18a2      	adds	r2, r4, r2
2fff48e4:	fba7 0102 	umull	r0, r1, r7, r2
2fff48e8:	f146 0600 	adc.w	r6, r6, #0
2fff48ec:	035a      	lsls	r2, r3, #13
2fff48ee:	fb07 1106 	mla	r1, r7, r6, r1
2fff48f2:	0cdb      	lsrs	r3, r3, #19
2fff48f4:	f004 e95e 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff48f8:	3501      	adds	r5, #1
2fff48fa:	fbb0 f0f5 	udiv	r0, r0, r5
2fff48fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff4902:	fb07 f002 	mul.w	r0, r7, r2
2fff4906:	fbb0 f0f3 	udiv	r0, r0, r3
2fff490a:	e7f5      	b.n	2fff48f8 <stm32mp1_read_pll_freq+0x88>
2fff490c:	2fffb6f8 	.word	0x2fffb6f8
2fff4910:	2fffb55e 	.word	0x2fffb55e
2fff4914:	2fffec24 	.word	0x2fffec24

2fff4918 <get_clock_rate>:
2fff4918:	b538      	push	{r3, r4, r5, lr}
2fff491a:	4605      	mov	r5, r0
2fff491c:	f7fe f958 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4920:	4604      	mov	r4, r0
2fff4922:	2d21      	cmp	r5, #33	; 0x21
2fff4924:	f200 8091 	bhi.w	2fff4a4a <get_clock_rate+0x132>
2fff4928:	e8df f005 	tbb	[pc, r5]
2fff492c:	98911f1c 	.word	0x98911f1c
2fff4930:	1f1c8f9b 	.word	0x1f1c8f9b
2fff4934:	9e229194 	.word	0x9e229194
2fff4938:	a8a5a2a0 	.word	0xa8a5a2a0
2fff493c:	b1afadaa 	.word	0xb1afadaa
2fff4940:	5633b6b4 	.word	0x5633b6b4
2fff4944:	33335656 	.word	0x33335656
2fff4948:	13853333 	.word	0x13853333
2fff494c:	1156      	.short	0x1156
2fff494e:	4853      	ldr	r0, [pc, #332]	; (2fff4a9c <get_clock_rate+0x184>)
2fff4950:	bd38      	pop	{r3, r4, r5, pc}
2fff4952:	6a03      	ldr	r3, [r0, #32]
2fff4954:	f003 0307 	and.w	r3, r3, #7
2fff4958:	2b03      	cmp	r3, #3
2fff495a:	d876      	bhi.n	2fff4a4a <get_clock_rate+0x132>
2fff495c:	e8df f003 	tbb	[pc, r3]
2fff4960:	0e080502 	.word	0x0e080502
2fff4964:	4b4e      	ldr	r3, [pc, #312]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff4966:	6818      	ldr	r0, [r3, #0]
2fff4968:	e7f2      	b.n	2fff4950 <get_clock_rate+0x38>
2fff496a:	4b4d      	ldr	r3, [pc, #308]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff496c:	6858      	ldr	r0, [r3, #4]
2fff496e:	e7ef      	b.n	2fff4950 <get_clock_rate+0x38>
2fff4970:	2100      	movs	r1, #0
2fff4972:	2000      	movs	r0, #0
2fff4974:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff4978:	f7ff bf7a 	b.w	2fff4870 <stm32mp1_read_pll_freq>
2fff497c:	2100      	movs	r1, #0
2fff497e:	4608      	mov	r0, r1
2fff4980:	f7ff ff76 	bl	2fff4870 <stm32mp1_read_pll_freq>
2fff4984:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff4986:	4a47      	ldr	r2, [pc, #284]	; (2fff4aa4 <get_clock_rate+0x18c>)
2fff4988:	f003 0307 	and.w	r3, r3, #7
2fff498c:	5cd3      	ldrb	r3, [r2, r3]
2fff498e:	40d8      	lsrs	r0, r3
2fff4990:	e7de      	b.n	2fff4950 <get_clock_rate+0x38>
2fff4992:	6a43      	ldr	r3, [r0, #36]	; 0x24
2fff4994:	f003 0307 	and.w	r3, r3, #7
2fff4998:	2b01      	cmp	r3, #1
2fff499a:	d011      	beq.n	2fff49c0 <get_clock_rate+0xa8>
2fff499c:	2b02      	cmp	r3, #2
2fff499e:	d012      	beq.n	2fff49c6 <get_clock_rate+0xae>
2fff49a0:	b9b3      	cbnz	r3, 2fff49d0 <get_clock_rate+0xb8>
2fff49a2:	4b3f      	ldr	r3, [pc, #252]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff49a4:	6818      	ldr	r0, [r3, #0]
2fff49a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
2fff49a8:	2d1a      	cmp	r5, #26
2fff49aa:	4a3f      	ldr	r2, [pc, #252]	; (2fff4aa8 <get_clock_rate+0x190>)
2fff49ac:	f003 0307 	and.w	r3, r3, #7
2fff49b0:	5cd3      	ldrb	r3, [r2, r3]
2fff49b2:	fbb0 f0f3 	udiv	r0, r0, r3
2fff49b6:	d00d      	beq.n	2fff49d4 <get_clock_rate+0xbc>
2fff49b8:	2d1b      	cmp	r5, #27
2fff49ba:	d1c9      	bne.n	2fff4950 <get_clock_rate+0x38>
2fff49bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
2fff49be:	e7e2      	b.n	2fff4986 <get_clock_rate+0x6e>
2fff49c0:	4b37      	ldr	r3, [pc, #220]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff49c2:	6858      	ldr	r0, [r3, #4]
2fff49c4:	e7ef      	b.n	2fff49a6 <get_clock_rate+0x8e>
2fff49c6:	2100      	movs	r1, #0
2fff49c8:	2001      	movs	r0, #1
2fff49ca:	f7ff ff51 	bl	2fff4870 <stm32mp1_read_pll_freq>
2fff49ce:	e7ea      	b.n	2fff49a6 <get_clock_rate+0x8e>
2fff49d0:	2000      	movs	r0, #0
2fff49d2:	e7e8      	b.n	2fff49a6 <get_clock_rate+0x8e>
2fff49d4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff49d6:	e7d6      	b.n	2fff4986 <get_clock_rate+0x6e>
2fff49d8:	6c83      	ldr	r3, [r0, #72]	; 0x48
2fff49da:	f003 0307 	and.w	r3, r3, #7
2fff49de:	2b03      	cmp	r3, #3
2fff49e0:	d821      	bhi.n	2fff4a26 <get_clock_rate+0x10e>
2fff49e2:	e8df f003 	tbb	[pc, r3]
2fff49e6:	1502      	.short	0x1502
2fff49e8:	1b18      	.short	0x1b18
2fff49ea:	4b2d      	ldr	r3, [pc, #180]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff49ec:	6818      	ldr	r0, [r3, #0]
2fff49ee:	f8d4 3830 	ldr.w	r3, [r4, #2096]	; 0x830
2fff49f2:	2d18      	cmp	r5, #24
2fff49f4:	4a2d      	ldr	r2, [pc, #180]	; (2fff4aac <get_clock_rate+0x194>)
2fff49f6:	f003 030f 	and.w	r3, r3, #15
2fff49fa:	5cd3      	ldrb	r3, [r2, r3]
2fff49fc:	fa20 f003 	lsr.w	r0, r0, r3
2fff4a00:	d013      	beq.n	2fff4a2a <get_clock_rate+0x112>
2fff4a02:	2d19      	cmp	r5, #25
2fff4a04:	d014      	beq.n	2fff4a30 <get_clock_rate+0x118>
2fff4a06:	2d17      	cmp	r5, #23
2fff4a08:	d1a2      	bne.n	2fff4950 <get_clock_rate+0x38>
2fff4a0a:	f8d4 3834 	ldr.w	r3, [r4, #2100]	; 0x834
2fff4a0e:	e7ba      	b.n	2fff4986 <get_clock_rate+0x6e>
2fff4a10:	4b23      	ldr	r3, [pc, #140]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff4a12:	6858      	ldr	r0, [r3, #4]
2fff4a14:	e7eb      	b.n	2fff49ee <get_clock_rate+0xd6>
2fff4a16:	4b22      	ldr	r3, [pc, #136]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff4a18:	6898      	ldr	r0, [r3, #8]
2fff4a1a:	e7e8      	b.n	2fff49ee <get_clock_rate+0xd6>
2fff4a1c:	2100      	movs	r1, #0
2fff4a1e:	2002      	movs	r0, #2
2fff4a20:	f7ff ff26 	bl	2fff4870 <stm32mp1_read_pll_freq>
2fff4a24:	e7e3      	b.n	2fff49ee <get_clock_rate+0xd6>
2fff4a26:	2000      	movs	r0, #0
2fff4a28:	e7e1      	b.n	2fff49ee <get_clock_rate+0xd6>
2fff4a2a:	f8d4 3838 	ldr.w	r3, [r4, #2104]	; 0x838
2fff4a2e:	e7aa      	b.n	2fff4986 <get_clock_rate+0x6e>
2fff4a30:	f8d4 383c 	ldr.w	r3, [r4, #2108]	; 0x83c
2fff4a34:	e7a7      	b.n	2fff4986 <get_clock_rate+0x6e>
2fff4a36:	f8d0 30d0 	ldr.w	r3, [r0, #208]	; 0xd0
2fff4a3a:	f003 0307 	and.w	r3, r3, #7
2fff4a3e:	2b01      	cmp	r3, #1
2fff4a40:	d005      	beq.n	2fff4a4e <get_clock_rate+0x136>
2fff4a42:	2b02      	cmp	r3, #2
2fff4a44:	d091      	beq.n	2fff496a <get_clock_rate+0x52>
2fff4a46:	2b00      	cmp	r3, #0
2fff4a48:	d08c      	beq.n	2fff4964 <get_clock_rate+0x4c>
2fff4a4a:	2000      	movs	r0, #0
2fff4a4c:	e780      	b.n	2fff4950 <get_clock_rate+0x38>
2fff4a4e:	4b14      	ldr	r3, [pc, #80]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff4a50:	6898      	ldr	r0, [r3, #8]
2fff4a52:	e77d      	b.n	2fff4950 <get_clock_rate+0x38>
2fff4a54:	4b12      	ldr	r3, [pc, #72]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff4a56:	6858      	ldr	r0, [r3, #4]
2fff4a58:	0840      	lsrs	r0, r0, #1
2fff4a5a:	e779      	b.n	2fff4950 <get_clock_rate+0x38>
2fff4a5c:	4b10      	ldr	r3, [pc, #64]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff4a5e:	68d8      	ldr	r0, [r3, #12]
2fff4a60:	e776      	b.n	2fff4950 <get_clock_rate+0x38>
2fff4a62:	4b0f      	ldr	r3, [pc, #60]	; (2fff4aa0 <get_clock_rate+0x188>)
2fff4a64:	6918      	ldr	r0, [r3, #16]
2fff4a66:	e773      	b.n	2fff4950 <get_clock_rate+0x38>
2fff4a68:	2101      	movs	r1, #1
2fff4a6a:	e782      	b.n	2fff4972 <get_clock_rate+0x5a>
2fff4a6c:	2102      	movs	r1, #2
2fff4a6e:	e780      	b.n	2fff4972 <get_clock_rate+0x5a>
2fff4a70:	2100      	movs	r1, #0
2fff4a72:	2001      	movs	r0, #1
2fff4a74:	e77e      	b.n	2fff4974 <get_clock_rate+0x5c>
2fff4a76:	2101      	movs	r1, #1
2fff4a78:	4608      	mov	r0, r1
2fff4a7a:	e77b      	b.n	2fff4974 <get_clock_rate+0x5c>
2fff4a7c:	2102      	movs	r1, #2
2fff4a7e:	e7f8      	b.n	2fff4a72 <get_clock_rate+0x15a>
2fff4a80:	2100      	movs	r1, #0
2fff4a82:	2002      	movs	r0, #2
2fff4a84:	e776      	b.n	2fff4974 <get_clock_rate+0x5c>
2fff4a86:	2101      	movs	r1, #1
2fff4a88:	e7fb      	b.n	2fff4a82 <get_clock_rate+0x16a>
2fff4a8a:	2102      	movs	r1, #2
2fff4a8c:	e7f4      	b.n	2fff4a78 <get_clock_rate+0x160>
2fff4a8e:	2100      	movs	r1, #0
2fff4a90:	2003      	movs	r0, #3
2fff4a92:	e76f      	b.n	2fff4974 <get_clock_rate+0x5c>
2fff4a94:	2101      	movs	r1, #1
2fff4a96:	e7fb      	b.n	2fff4a90 <get_clock_rate+0x178>
2fff4a98:	2102      	movs	r1, #2
2fff4a9a:	e7f9      	b.n	2fff4a90 <get_clock_rate+0x178>
2fff4a9c:	02dc6c00 	.word	0x02dc6c00
2fff4aa0:	2fffec24 	.word	0x2fffec24
2fff4aa4:	2fffb890 	.word	0x2fffb890
2fff4aa8:	2fffb57d 	.word	0x2fffb57d
2fff4aac:	2fffb880 	.word	0x2fffb880

2fff4ab0 <stm32mp1_pll_start>:
2fff4ab0:	b510      	push	{r4, lr}
2fff4ab2:	4604      	mov	r4, r0
2fff4ab4:	f7fe f88c 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4ab8:	4b05      	ldr	r3, [pc, #20]	; (2fff4ad0 <stm32mp1_pll_start+0x20>)
2fff4aba:	eb03 1344 	add.w	r3, r3, r4, lsl #5
2fff4abe:	899a      	ldrh	r2, [r3, #12]
2fff4ac0:	5813      	ldr	r3, [r2, r0]
2fff4ac2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
2fff4ac6:	f043 0301 	orr.w	r3, r3, #1
2fff4aca:	5013      	str	r3, [r2, r0]
2fff4acc:	bd10      	pop	{r4, pc}
2fff4ace:	bf00      	nop
2fff4ad0:	2fffb6f8 	.word	0x2fffb6f8

2fff4ad4 <stm32mp1_clk_lock>:
2fff4ad4:	b510      	push	{r4, lr}
2fff4ad6:	4604      	mov	r4, r0
2fff4ad8:	f7fe f87d 	bl	2fff2bd6 <stm32mp_lock_available>
2fff4adc:	b120      	cbz	r0, 2fff4ae8 <stm32mp1_clk_lock+0x14>
2fff4ade:	4620      	mov	r0, r4
2fff4ae0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff4ae4:	f007 bd5c 	b.w	2fffc5a0 <__spin_lock_from_thumb>
2fff4ae8:	bd10      	pop	{r4, pc}

2fff4aea <stm32mp1_clk_unlock>:
2fff4aea:	b510      	push	{r4, lr}
2fff4aec:	4604      	mov	r4, r0
2fff4aee:	f7fe f872 	bl	2fff2bd6 <stm32mp_lock_available>
2fff4af2:	b120      	cbz	r0, 2fff4afe <stm32mp1_clk_unlock+0x14>
2fff4af4:	4620      	mov	r0, r4
2fff4af6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff4afa:	f007 bd5d 	b.w	2fffc5b8 <__spin_unlock_from_thumb>
2fff4afe:	bd10      	pop	{r4, pc}

2fff4b00 <stm32mp1_set_clkdiv>:
2fff4b00:	680a      	ldr	r2, [r1, #0]
2fff4b02:	f000 033f 	and.w	r3, r0, #63	; 0x3f
2fff4b06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff4b0a:	4605      	mov	r5, r0
2fff4b0c:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
2fff4b10:	460c      	mov	r4, r1
2fff4b12:	4313      	orrs	r3, r2
2fff4b14:	600b      	str	r3, [r1, #0]
2fff4b16:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff4b1a:	ec58 7f0e 	mrrc	15, 0, r7, r8, cr14
2fff4b1e:	480f      	ldr	r0, [pc, #60]	; (2fff4b5c <stm32mp1_set_clkdiv+0x5c>)
2fff4b20:	2300      	movs	r3, #0
2fff4b22:	4a0f      	ldr	r2, [pc, #60]	; (2fff4b60 <stm32mp1_set_clkdiv+0x60>)
2fff4b24:	fba1 0100 	umull	r0, r1, r1, r0
2fff4b28:	f004 e844 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff4b2c:	19c3      	adds	r3, r0, r7
2fff4b2e:	eb41 0108 	adc.w	r1, r1, r8
2fff4b32:	6822      	ldr	r2, [r4, #0]
2fff4b34:	2a00      	cmp	r2, #0
2fff4b36:	da01      	bge.n	2fff4b3c <stm32mp1_set_clkdiv+0x3c>
2fff4b38:	2000      	movs	r0, #0
2fff4b3a:	e00d      	b.n	2fff4b58 <stm32mp1_set_clkdiv+0x58>
2fff4b3c:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff4b40:	42b3      	cmp	r3, r6
2fff4b42:	eb71 0207 	sbcs.w	r2, r1, r7
2fff4b46:	d2f4      	bcs.n	2fff4b32 <stm32mp1_set_clkdiv+0x32>
2fff4b48:	4806      	ldr	r0, [pc, #24]	; (2fff4b64 <stm32mp1_set_clkdiv+0x64>)
2fff4b4a:	4622      	mov	r2, r4
2fff4b4c:	6823      	ldr	r3, [r4, #0]
2fff4b4e:	4629      	mov	r1, r5
2fff4b50:	f7fd fe88 	bl	2fff2864 <tf_log>
2fff4b54:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff4b58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff4b5c:	00030d40 	.word	0x00030d40
2fff4b60:	000f4240 	.word	0x000f4240
2fff4b64:	2fffb364 	.word	0x2fffb364

2fff4b68 <__clk_enable>:
2fff4b68:	b538      	push	{r3, r4, r5, lr}
2fff4b6a:	4604      	mov	r4, r0
2fff4b6c:	f7fe f830 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4b70:	7925      	ldrb	r5, [r4, #4]
2fff4b72:	2301      	movs	r3, #1
2fff4b74:	78a1      	ldrb	r1, [r4, #2]
2fff4b76:	8822      	ldrh	r2, [r4, #0]
2fff4b78:	b115      	cbz	r5, 2fff4b80 <__clk_enable+0x18>
2fff4b7a:	408b      	lsls	r3, r1
2fff4b7c:	5013      	str	r3, [r2, r0]
2fff4b7e:	bd38      	pop	{r3, r4, r5, pc}
2fff4b80:	fa03 f101 	lsl.w	r1, r3, r1
2fff4b84:	4410      	add	r0, r2
2fff4b86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff4b8a:	f003 bb7b 	b.w	2fff8284 <stm32mp_mmio_setbits_32_shregs>

2fff4b8e <__clk_disable>:
2fff4b8e:	b538      	push	{r3, r4, r5, lr}
2fff4b90:	4604      	mov	r4, r0
2fff4b92:	f7fe f81d 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4b96:	7925      	ldrb	r5, [r4, #4]
2fff4b98:	2201      	movs	r2, #1
2fff4b9a:	78a1      	ldrb	r1, [r4, #2]
2fff4b9c:	8823      	ldrh	r3, [r4, #0]
2fff4b9e:	b11d      	cbz	r5, 2fff4ba8 <__clk_disable+0x1a>
2fff4ba0:	408a      	lsls	r2, r1
2fff4ba2:	3304      	adds	r3, #4
2fff4ba4:	501a      	str	r2, [r3, r0]
2fff4ba6:	bd38      	pop	{r3, r4, r5, pc}
2fff4ba8:	4418      	add	r0, r3
2fff4baa:	fa02 f101 	lsl.w	r1, r2, r1
2fff4bae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff4bb2:	f003 bb5a 	b.w	2fff826a <stm32mp_mmio_clrbits_32_shregs>
	...

2fff4bb8 <stm32mp1_clk_get_gated_id>:
2fff4bb8:	4602      	mov	r2, r0
2fff4bba:	2000      	movs	r0, #0
2fff4bbc:	b508      	push	{r3, lr}
2fff4bbe:	4b08      	ldr	r3, [pc, #32]	; (2fff4be0 <stm32mp1_clk_get_gated_id+0x28>)
2fff4bc0:	eb03 01c0 	add.w	r1, r3, r0, lsl #3
2fff4bc4:	78c9      	ldrb	r1, [r1, #3]
2fff4bc6:	4291      	cmp	r1, r2
2fff4bc8:	d008      	beq.n	2fff4bdc <stm32mp1_clk_get_gated_id+0x24>
2fff4bca:	3001      	adds	r0, #1
2fff4bcc:	282e      	cmp	r0, #46	; 0x2e
2fff4bce:	d1f7      	bne.n	2fff4bc0 <stm32mp1_clk_get_gated_id+0x8>
2fff4bd0:	4804      	ldr	r0, [pc, #16]	; (2fff4be4 <stm32mp1_clk_get_gated_id+0x2c>)
2fff4bd2:	4905      	ldr	r1, [pc, #20]	; (2fff4be8 <stm32mp1_clk_get_gated_id+0x30>)
2fff4bd4:	f7fd fe46 	bl	2fff2864 <tf_log>
2fff4bd8:	f06f 0015 	mvn.w	r0, #21
2fff4bdc:	bd08      	pop	{r3, pc}
2fff4bde:	bf00      	nop
2fff4be0:	2fffb586 	.word	0x2fffb586
2fff4be4:	2fffb38b 	.word	0x2fffb38b
2fff4be8:	2fffb504 	.word	0x2fffb504

2fff4bec <stm32mp1_clk_get_parent>:
2fff4bec:	b538      	push	{r3, r4, r5, lr}
2fff4bee:	4604      	mov	r4, r0
2fff4bf0:	f7fd ffee 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4bf4:	4b18      	ldr	r3, [pc, #96]	; (2fff4c58 <stm32mp1_clk_get_parent+0x6c>)
2fff4bf6:	4605      	mov	r5, r0
2fff4bf8:	2000      	movs	r0, #0
2fff4bfa:	f813 2b01 	ldrb.w	r2, [r3], #1
2fff4bfe:	4294      	cmp	r4, r2
2fff4c00:	d026      	beq.n	2fff4c50 <stm32mp1_clk_get_parent+0x64>
2fff4c02:	3001      	adds	r0, #1
2fff4c04:	2822      	cmp	r0, #34	; 0x22
2fff4c06:	d1f8      	bne.n	2fff4bfa <stm32mp1_clk_get_parent+0xe>
2fff4c08:	4620      	mov	r0, r4
2fff4c0a:	f7ff ffd5 	bl	2fff4bb8 <stm32mp1_clk_get_gated_id>
2fff4c0e:	1e03      	subs	r3, r0, #0
2fff4c10:	da03      	bge.n	2fff4c1a <stm32mp1_clk_get_parent+0x2e>
2fff4c12:	f7fd fecb 	bl	2fff29ac <console_flush>
2fff4c16:	f003 ee30 	blx	2fff8878 <do_panic>
2fff4c1a:	4a10      	ldr	r2, [pc, #64]	; (2fff4c5c <stm32mp1_clk_get_parent+0x70>)
2fff4c1c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
2fff4c20:	79d8      	ldrb	r0, [r3, #7]
2fff4c22:	2821      	cmp	r0, #33	; 0x21
2fff4c24:	d914      	bls.n	2fff4c50 <stm32mp1_clk_get_parent+0x64>
2fff4c26:	799b      	ldrb	r3, [r3, #6]
2fff4c28:	2bff      	cmp	r3, #255	; 0xff
2fff4c2a:	d012      	beq.n	2fff4c52 <stm32mp1_clk_get_parent+0x66>
2fff4c2c:	2b15      	cmp	r3, #21
2fff4c2e:	d8f0      	bhi.n	2fff4c12 <stm32mp1_clk_get_parent+0x26>
2fff4c30:	490b      	ldr	r1, [pc, #44]	; (2fff4c60 <stm32mp1_clk_get_parent+0x74>)
2fff4c32:	220c      	movs	r2, #12
2fff4c34:	4353      	muls	r3, r2
2fff4c36:	18ca      	adds	r2, r1, r3
2fff4c38:	5acb      	ldrh	r3, [r1, r3]
2fff4c3a:	7891      	ldrb	r1, [r2, #2]
2fff4c3c:	5958      	ldr	r0, [r3, r5]
2fff4c3e:	78d3      	ldrb	r3, [r2, #3]
2fff4c40:	408b      	lsls	r3, r1
2fff4c42:	4003      	ands	r3, r0
2fff4c44:	40cb      	lsrs	r3, r1
2fff4c46:	7911      	ldrb	r1, [r2, #4]
2fff4c48:	4299      	cmp	r1, r3
2fff4c4a:	d902      	bls.n	2fff4c52 <stm32mp1_clk_get_parent+0x66>
2fff4c4c:	6892      	ldr	r2, [r2, #8]
2fff4c4e:	5cd0      	ldrb	r0, [r2, r3]
2fff4c50:	bd38      	pop	{r3, r4, r5, pc}
2fff4c52:	f06f 0015 	mvn.w	r0, #21
2fff4c56:	e7fb      	b.n	2fff4c50 <stm32mp1_clk_get_parent+0x64>
2fff4c58:	2fffb539 	.word	0x2fffb539
2fff4c5c:	2fffb586 	.word	0x2fffb586
2fff4c60:	2fffb778 	.word	0x2fffb778

2fff4c64 <__stm32mp1_clk_enable>:
2fff4c64:	b570      	push	{r4, r5, r6, lr}
2fff4c66:	4605      	mov	r5, r0
2fff4c68:	460e      	mov	r6, r1
2fff4c6a:	f7ff fde3 	bl	2fff4834 <clock_is_always_on>
2fff4c6e:	bb70      	cbnz	r0, 2fff4cce <__stm32mp1_clk_enable+0x6a>
2fff4c70:	4628      	mov	r0, r5
2fff4c72:	f7ff ffa1 	bl	2fff4bb8 <stm32mp1_clk_get_gated_id>
2fff4c76:	1e04      	subs	r4, r0, #0
2fff4c78:	da07      	bge.n	2fff4c8a <__stm32mp1_clk_enable+0x26>
2fff4c7a:	4815      	ldr	r0, [pc, #84]	; (2fff4cd0 <__stm32mp1_clk_enable+0x6c>)
2fff4c7c:	4629      	mov	r1, r5
2fff4c7e:	f7fd fdf1 	bl	2fff2864 <tf_log>
2fff4c82:	f7fd fe93 	bl	2fff29ac <console_flush>
2fff4c86:	f003 edf8 	blx	2fff8878 <do_panic>
2fff4c8a:	4d12      	ldr	r5, [pc, #72]	; (2fff4cd4 <__stm32mp1_clk_enable+0x70>)
2fff4c8c:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
2fff4c90:	b926      	cbnz	r6, 2fff4c9c <__stm32mp1_clk_enable+0x38>
2fff4c92:	4628      	mov	r0, r5
2fff4c94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff4c98:	f7ff bf66 	b.w	2fff4b68 <__clk_enable>
2fff4c9c:	796b      	ldrb	r3, [r5, #5]
2fff4c9e:	2b00      	cmp	r3, #0
2fff4ca0:	d0f7      	beq.n	2fff4c92 <__stm32mp1_clk_enable+0x2e>
2fff4ca2:	4e0d      	ldr	r6, [pc, #52]	; (2fff4cd8 <__stm32mp1_clk_enable+0x74>)
2fff4ca4:	480d      	ldr	r0, [pc, #52]	; (2fff4cdc <__stm32mp1_clk_enable+0x78>)
2fff4ca6:	f7ff ff15 	bl	2fff4ad4 <stm32mp1_clk_lock>
2fff4caa:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
2fff4cae:	b913      	cbnz	r3, 2fff4cb6 <__stm32mp1_clk_enable+0x52>
2fff4cb0:	4628      	mov	r0, r5
2fff4cb2:	f7ff ff59 	bl	2fff4b68 <__clk_enable>
2fff4cb6:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
2fff4cba:	3301      	adds	r3, #1
2fff4cbc:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
2fff4cc0:	3301      	adds	r3, #1
2fff4cc2:	d0de      	beq.n	2fff4c82 <__stm32mp1_clk_enable+0x1e>
2fff4cc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff4cc8:	4804      	ldr	r0, [pc, #16]	; (2fff4cdc <__stm32mp1_clk_enable+0x78>)
2fff4cca:	f7ff bf0e 	b.w	2fff4aea <stm32mp1_clk_unlock>
2fff4cce:	bd70      	pop	{r4, r5, r6, pc}
2fff4cd0:	2fffb3a5 	.word	0x2fffb3a5
2fff4cd4:	2fffb586 	.word	0x2fffb586
2fff4cd8:	2fffeb08 	.word	0x2fffeb08
2fff4cdc:	2fffec1c 	.word	0x2fffec1c

2fff4ce0 <__stm32mp1_clk_disable>:
2fff4ce0:	b570      	push	{r4, r5, r6, lr}
2fff4ce2:	4605      	mov	r5, r0
2fff4ce4:	460e      	mov	r6, r1
2fff4ce6:	f7ff fda5 	bl	2fff4834 <clock_is_always_on>
2fff4cea:	bb58      	cbnz	r0, 2fff4d44 <__stm32mp1_clk_disable+0x64>
2fff4cec:	4628      	mov	r0, r5
2fff4cee:	f7ff ff63 	bl	2fff4bb8 <stm32mp1_clk_get_gated_id>
2fff4cf2:	1e04      	subs	r4, r0, #0
2fff4cf4:	da07      	bge.n	2fff4d06 <__stm32mp1_clk_disable+0x26>
2fff4cf6:	4814      	ldr	r0, [pc, #80]	; (2fff4d48 <__stm32mp1_clk_disable+0x68>)
2fff4cf8:	4629      	mov	r1, r5
2fff4cfa:	f7fd fdb3 	bl	2fff2864 <tf_log>
2fff4cfe:	f7fd fe55 	bl	2fff29ac <console_flush>
2fff4d02:	f003 edba 	blx	2fff8878 <do_panic>
2fff4d06:	4d11      	ldr	r5, [pc, #68]	; (2fff4d4c <__stm32mp1_clk_disable+0x6c>)
2fff4d08:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
2fff4d0c:	b926      	cbnz	r6, 2fff4d18 <__stm32mp1_clk_disable+0x38>
2fff4d0e:	4628      	mov	r0, r5
2fff4d10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff4d14:	f7ff bf3b 	b.w	2fff4b8e <__clk_disable>
2fff4d18:	796b      	ldrb	r3, [r5, #5]
2fff4d1a:	b19b      	cbz	r3, 2fff4d44 <__stm32mp1_clk_disable+0x64>
2fff4d1c:	480c      	ldr	r0, [pc, #48]	; (2fff4d50 <__stm32mp1_clk_disable+0x70>)
2fff4d1e:	f7ff fed9 	bl	2fff4ad4 <stm32mp1_clk_lock>
2fff4d22:	4a0c      	ldr	r2, [pc, #48]	; (2fff4d54 <__stm32mp1_clk_disable+0x74>)
2fff4d24:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
2fff4d28:	2b00      	cmp	r3, #0
2fff4d2a:	d0e8      	beq.n	2fff4cfe <__stm32mp1_clk_disable+0x1e>
2fff4d2c:	3b01      	subs	r3, #1
2fff4d2e:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
2fff4d32:	b913      	cbnz	r3, 2fff4d3a <__stm32mp1_clk_disable+0x5a>
2fff4d34:	4628      	mov	r0, r5
2fff4d36:	f7ff ff2a 	bl	2fff4b8e <__clk_disable>
2fff4d3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff4d3e:	4804      	ldr	r0, [pc, #16]	; (2fff4d50 <__stm32mp1_clk_disable+0x70>)
2fff4d40:	f7ff bed3 	b.w	2fff4aea <stm32mp1_clk_unlock>
2fff4d44:	bd70      	pop	{r4, r5, r6, pc}
2fff4d46:	bf00      	nop
2fff4d48:	2fffb3c1 	.word	0x2fffb3c1
2fff4d4c:	2fffb586 	.word	0x2fffb586
2fff4d50:	2fffec1c 	.word	0x2fffec1c
2fff4d54:	2fffeb08 	.word	0x2fffeb08

2fff4d58 <stm32mp1_pll_compute_pllxcfgr1>:
2fff4d58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff4d5a:	4605      	mov	r5, r0
2fff4d5c:	460c      	mov	r4, r1
2fff4d5e:	4616      	mov	r6, r2
2fff4d60:	f7fd ff36 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4d64:	88ab      	ldrh	r3, [r5, #4]
2fff4d66:	682a      	ldr	r2, [r5, #0]
2fff4d68:	581b      	ldr	r3, [r3, r0]
2fff4d6a:	481a      	ldr	r0, [pc, #104]	; (2fff4dd4 <stm32mp1_pll_compute_pllxcfgr1+0x7c>)
2fff4d6c:	f003 0303 	and.w	r3, r3, #3
2fff4d70:	3304      	adds	r3, #4
2fff4d72:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
2fff4d76:	4d18      	ldr	r5, [pc, #96]	; (2fff4dd8 <stm32mp1_pll_compute_pllxcfgr1+0x80>)
2fff4d78:	2b05      	cmp	r3, #5
2fff4d7a:	bf8e      	itee	hi
2fff4d7c:	2300      	movhi	r3, #0
2fff4d7e:	4917      	ldrls	r1, [pc, #92]	; (2fff4ddc <stm32mp1_pll_compute_pllxcfgr1+0x84>)
2fff4d80:	f851 3023 	ldrls.w	r3, [r1, r3, lsl #2]
2fff4d84:	6821      	ldr	r1, [r4, #0]
2fff4d86:	3101      	adds	r1, #1
2fff4d88:	fbb3 f3f1 	udiv	r3, r3, r1
2fff4d8c:	eb02 0142 	add.w	r1, r2, r2, lsl #1
2fff4d90:	1847      	adds	r7, r0, r1
2fff4d92:	5c40      	ldrb	r0, [r0, r1]
2fff4d94:	4368      	muls	r0, r5
2fff4d96:	4298      	cmp	r0, r3
2fff4d98:	d819      	bhi.n	2fff4dce <stm32mp1_pll_compute_pllxcfgr1+0x76>
2fff4d9a:	7879      	ldrb	r1, [r7, #1]
2fff4d9c:	4369      	muls	r1, r5
2fff4d9e:	4299      	cmp	r1, r3
2fff4da0:	d315      	bcc.n	2fff4dce <stm32mp1_pll_compute_pllxcfgr1+0x76>
2fff4da2:	b992      	cbnz	r2, 2fff4dca <stm32mp1_pll_compute_pllxcfgr1+0x72>
2fff4da4:	480e      	ldr	r0, [pc, #56]	; (2fff4de0 <stm32mp1_pll_compute_pllxcfgr1+0x88>)
2fff4da6:	4283      	cmp	r3, r0
2fff4da8:	bf34      	ite	cc
2fff4daa:	2000      	movcc	r0, #0
2fff4dac:	2001      	movcs	r0, #1
2fff4dae:	6863      	ldr	r3, [r4, #4]
2fff4db0:	f3c3 0208 	ubfx	r2, r3, #0, #9
2fff4db4:	6032      	str	r2, [r6, #0]
2fff4db6:	6823      	ldr	r3, [r4, #0]
2fff4db8:	041b      	lsls	r3, r3, #16
2fff4dba:	f403 137c 	and.w	r3, r3, #4128768	; 0x3f0000
2fff4dbe:	4313      	orrs	r3, r2
2fff4dc0:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
2fff4dc4:	2000      	movs	r0, #0
2fff4dc6:	6033      	str	r3, [r6, #0]
2fff4dc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff4dca:	2000      	movs	r0, #0
2fff4dcc:	e7ef      	b.n	2fff4dae <stm32mp1_pll_compute_pllxcfgr1+0x56>
2fff4dce:	f06f 0015 	mvn.w	r0, #21
2fff4dd2:	e7f9      	b.n	2fff4dc8 <stm32mp1_pll_compute_pllxcfgr1+0x70>
2fff4dd4:	2fffb898 	.word	0x2fffb898
2fff4dd8:	000f4240 	.word	0x000f4240
2fff4ddc:	2fffec24 	.word	0x2fffec24
2fff4de0:	007a1200 	.word	0x007a1200

2fff4de4 <stm32mp1_pll_config>:
2fff4de4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff4de8:	4605      	mov	r5, r0
2fff4dea:	4688      	mov	r8, r1
2fff4dec:	4616      	mov	r6, r2
2fff4dee:	f7fd feef 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4df2:	4604      	mov	r4, r0
2fff4df4:	aa01      	add	r2, sp, #4
2fff4df6:	4810      	ldr	r0, [pc, #64]	; (2fff4e38 <stm32mp1_pll_config+0x54>)
2fff4df8:	4641      	mov	r1, r8
2fff4dfa:	eb00 1545 	add.w	r5, r0, r5, lsl #5
2fff4dfe:	4628      	mov	r0, r5
2fff4e00:	f7ff ffaa 	bl	2fff4d58 <stm32mp1_pll_compute_pllxcfgr1>
2fff4e04:	4607      	mov	r7, r0
2fff4e06:	b998      	cbnz	r0, 2fff4e30 <stm32mp1_pll_config+0x4c>
2fff4e08:	9a01      	ldr	r2, [sp, #4]
2fff4e0a:	88eb      	ldrh	r3, [r5, #6]
2fff4e0c:	00f6      	lsls	r6, r6, #3
2fff4e0e:	511a      	str	r2, [r3, r4]
2fff4e10:	896b      	ldrh	r3, [r5, #10]
2fff4e12:	5118      	str	r0, [r3, r4]
2fff4e14:	9601      	str	r6, [sp, #4]
2fff4e16:	511e      	str	r6, [r3, r4]
2fff4e18:	591a      	ldr	r2, [r3, r4]
2fff4e1a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
2fff4e1e:	511a      	str	r2, [r3, r4]
2fff4e20:	f7fd fed6 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4e24:	4604      	mov	r4, r0
2fff4e26:	4640      	mov	r0, r8
2fff4e28:	f7ff fd12 	bl	2fff4850 <stm32mp1_pll_compute_pllxcfgr2>
2fff4e2c:	892b      	ldrh	r3, [r5, #8]
2fff4e2e:	5118      	str	r0, [r3, r4]
2fff4e30:	4638      	mov	r0, r7
2fff4e32:	b002      	add	sp, #8
2fff4e34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff4e38:	2fffb6f8 	.word	0x2fffb6f8

2fff4e3c <stm32mp1_set_clksrc>:
2fff4e3c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4e40:	4605      	mov	r5, r0
2fff4e42:	f7fd fec5 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4e46:	ea4f 1815 	mov.w	r8, r5, lsr #4
2fff4e4a:	f005 0307 	and.w	r3, r5, #7
2fff4e4e:	eb00 1915 	add.w	r9, r0, r5, lsr #4
2fff4e52:	4604      	mov	r4, r0
2fff4e54:	f858 2000 	ldr.w	r2, [r8, r0]
2fff4e58:	f022 0207 	bic.w	r2, r2, #7
2fff4e5c:	4313      	orrs	r3, r2
2fff4e5e:	f848 3000 	str.w	r3, [r8, r0]
2fff4e62:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff4e66:	ec5b af0e 	mrrc	15, 0, sl, fp, cr14
2fff4e6a:	4811      	ldr	r0, [pc, #68]	; (2fff4eb0 <stm32mp1_set_clksrc+0x74>)
2fff4e6c:	2300      	movs	r3, #0
2fff4e6e:	4a11      	ldr	r2, [pc, #68]	; (2fff4eb4 <stm32mp1_set_clksrc+0x78>)
2fff4e70:	4656      	mov	r6, sl
2fff4e72:	fba1 0100 	umull	r0, r1, r1, r0
2fff4e76:	f003 ee9e 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff4e7a:	1980      	adds	r0, r0, r6
2fff4e7c:	eb41 010b 	adc.w	r1, r1, fp
2fff4e80:	f8d9 3000 	ldr.w	r3, [r9]
2fff4e84:	2b00      	cmp	r3, #0
2fff4e86:	da01      	bge.n	2fff4e8c <stm32mp1_set_clksrc+0x50>
2fff4e88:	2000      	movs	r0, #0
2fff4e8a:	e00e      	b.n	2fff4eaa <stm32mp1_set_clksrc+0x6e>
2fff4e8c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4e90:	4290      	cmp	r0, r2
2fff4e92:	eb71 0303 	sbcs.w	r3, r1, r3
2fff4e96:	d2f3      	bcs.n	2fff4e80 <stm32mp1_set_clksrc+0x44>
2fff4e98:	4807      	ldr	r0, [pc, #28]	; (2fff4eb8 <stm32mp1_set_clksrc+0x7c>)
2fff4e9a:	464a      	mov	r2, r9
2fff4e9c:	f858 3004 	ldr.w	r3, [r8, r4]
2fff4ea0:	4629      	mov	r1, r5
2fff4ea2:	f7fd fcdf 	bl	2fff2864 <tf_log>
2fff4ea6:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff4eaa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff4eae:	bf00      	nop
2fff4eb0:	00030d40 	.word	0x00030d40
2fff4eb4:	000f4240 	.word	0x000f4240
2fff4eb8:	2fffb3de 	.word	0x2fffb3de

2fff4ebc <stm32mp1_pll_output>:
2fff4ebc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff4ec0:	4680      	mov	r8, r0
2fff4ec2:	4689      	mov	r9, r1
2fff4ec4:	f7fd fe84 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4ec8:	4b19      	ldr	r3, [pc, #100]	; (2fff4f30 <stm32mp1_pll_output+0x74>)
2fff4eca:	4604      	mov	r4, r0
2fff4ecc:	eb03 1348 	add.w	r3, r3, r8, lsl #5
2fff4ed0:	899d      	ldrh	r5, [r3, #12]
2fff4ed2:	eb05 0a00 	add.w	sl, r5, r0
2fff4ed6:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff4eda:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4ede:	4815      	ldr	r0, [pc, #84]	; (2fff4f34 <stm32mp1_pll_output+0x78>)
2fff4ee0:	e9cd 2300 	strd	r2, r3, [sp]
2fff4ee4:	9e00      	ldr	r6, [sp, #0]
2fff4ee6:	2300      	movs	r3, #0
2fff4ee8:	4a13      	ldr	r2, [pc, #76]	; (2fff4f38 <stm32mp1_pll_output+0x7c>)
2fff4eea:	fba1 0100 	umull	r0, r1, r1, r0
2fff4eee:	f003 ee62 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff4ef2:	9b01      	ldr	r3, [sp, #4]
2fff4ef4:	1980      	adds	r0, r0, r6
2fff4ef6:	eb41 0103 	adc.w	r1, r1, r3
2fff4efa:	f8da 3000 	ldr.w	r3, [sl]
2fff4efe:	079b      	lsls	r3, r3, #30
2fff4f00:	d505      	bpl.n	2fff4f0e <stm32mp1_pll_output+0x52>
2fff4f02:	5929      	ldr	r1, [r5, r4]
2fff4f04:	2000      	movs	r0, #0
2fff4f06:	ea41 1109 	orr.w	r1, r1, r9, lsl #4
2fff4f0a:	5129      	str	r1, [r5, r4]
2fff4f0c:	e00d      	b.n	2fff4f2a <stm32mp1_pll_output+0x6e>
2fff4f0e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4f12:	4290      	cmp	r0, r2
2fff4f14:	eb71 0303 	sbcs.w	r3, r1, r3
2fff4f18:	d2ef      	bcs.n	2fff4efa <stm32mp1_pll_output+0x3e>
2fff4f1a:	4808      	ldr	r0, [pc, #32]	; (2fff4f3c <stm32mp1_pll_output+0x80>)
2fff4f1c:	4652      	mov	r2, sl
2fff4f1e:	592b      	ldr	r3, [r5, r4]
2fff4f20:	4641      	mov	r1, r8
2fff4f22:	f7fd fc9f 	bl	2fff2864 <tf_log>
2fff4f26:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff4f2a:	b002      	add	sp, #8
2fff4f2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff4f30:	2fffb6f8 	.word	0x2fffb6f8
2fff4f34:	00030d40 	.word	0x00030d40
2fff4f38:	000f4240 	.word	0x000f4240
2fff4f3c:	2fffb405 	.word	0x2fffb405

2fff4f40 <stm32mp1_pll_stop>:
2fff4f40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff4f44:	4606      	mov	r6, r0
2fff4f46:	f7fd fe43 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff4f4a:	4b18      	ldr	r3, [pc, #96]	; (2fff4fac <stm32mp1_pll_stop+0x6c>)
2fff4f4c:	4604      	mov	r4, r0
2fff4f4e:	eb03 1346 	add.w	r3, r3, r6, lsl #5
2fff4f52:	899d      	ldrh	r5, [r3, #12]
2fff4f54:	582b      	ldr	r3, [r5, r0]
2fff4f56:	182f      	adds	r7, r5, r0
2fff4f58:	f023 0370 	bic.w	r3, r3, #112	; 0x70
2fff4f5c:	502b      	str	r3, [r5, r0]
2fff4f5e:	582b      	ldr	r3, [r5, r0]
2fff4f60:	f023 0301 	bic.w	r3, r3, #1
2fff4f64:	502b      	str	r3, [r5, r0]
2fff4f66:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff4f6a:	ec5a 9f0e 	mrrc	15, 0, r9, sl, cr14
2fff4f6e:	4810      	ldr	r0, [pc, #64]	; (2fff4fb0 <stm32mp1_pll_stop+0x70>)
2fff4f70:	2300      	movs	r3, #0
2fff4f72:	4a10      	ldr	r2, [pc, #64]	; (2fff4fb4 <stm32mp1_pll_stop+0x74>)
2fff4f74:	fba1 0100 	umull	r0, r1, r1, r0
2fff4f78:	f003 ee1c 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff4f7c:	eb10 0209 	adds.w	r2, r0, r9
2fff4f80:	eb41 0c0a 	adc.w	ip, r1, sl
2fff4f84:	6838      	ldr	r0, [r7, #0]
2fff4f86:	f010 0002 	ands.w	r0, r0, #2
2fff4f8a:	d00d      	beq.n	2fff4fa8 <stm32mp1_pll_stop+0x68>
2fff4f8c:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff4f90:	4282      	cmp	r2, r0
2fff4f92:	eb7c 0301 	sbcs.w	r3, ip, r1
2fff4f96:	d2f5      	bcs.n	2fff4f84 <stm32mp1_pll_stop+0x44>
2fff4f98:	4807      	ldr	r0, [pc, #28]	; (2fff4fb8 <stm32mp1_pll_stop+0x78>)
2fff4f9a:	463a      	mov	r2, r7
2fff4f9c:	592b      	ldr	r3, [r5, r4]
2fff4f9e:	4631      	mov	r1, r6
2fff4fa0:	f7fd fc60 	bl	2fff2864 <tf_log>
2fff4fa4:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff4fa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff4fac:	2fffb6f8 	.word	0x2fffb6f8
2fff4fb0:	00030d40 	.word	0x00030d40
2fff4fb4:	000f4240 	.word	0x000f4240
2fff4fb8:	2fffb428 	.word	0x2fffb428

2fff4fbc <stm32mp1_pll1_config_from_opp_khz>:
2fff4fbc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff4fc0:	4604      	mov	r4, r0
2fff4fc2:	4d4a      	ldr	r5, [pc, #296]	; (2fff50ec <stm32mp1_pll1_config_from_opp_khz+0x130>)
2fff4fc4:	686b      	ldr	r3, [r5, #4]
2fff4fc6:	4298      	cmp	r0, r3
2fff4fc8:	d02f      	beq.n	2fff502a <stm32mp1_pll1_config_from_opp_khz+0x6e>
2fff4fca:	68ab      	ldr	r3, [r5, #8]
2fff4fcc:	4298      	cmp	r0, r3
2fff4fce:	f040 808a 	bne.w	2fff50e6 <stm32mp1_pll1_config_from_opp_khz+0x12a>
2fff4fd2:	2701      	movs	r7, #1
2fff4fd4:	200a      	movs	r0, #10
2fff4fd6:	f7ff fc9f 	bl	2fff4918 <get_clock_rate>
2fff4fda:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff4fde:	fbb0 f3f3 	udiv	r3, r0, r3
2fff4fe2:	fbb3 f2f4 	udiv	r2, r3, r4
2fff4fe6:	fb04 3312 	mls	r3, r4, r2, r3
2fff4fea:	bb2b      	cbnz	r3, 2fff5038 <stm32mp1_pll1_config_from_opp_khz+0x7c>
2fff4fec:	2a10      	cmp	r2, #16
2fff4fee:	d823      	bhi.n	2fff5038 <stm32mp1_pll1_config_from_opp_khz+0x7c>
2fff4ff0:	493f      	ldr	r1, [pc, #252]	; (2fff50f0 <stm32mp1_pll1_config_from_opp_khz+0x134>)
2fff4ff2:	2301      	movs	r3, #1
2fff4ff4:	4093      	lsls	r3, r2
2fff4ff6:	420b      	tst	r3, r1
2fff4ff8:	d01e      	beq.n	2fff5038 <stm32mp1_pll1_config_from_opp_khz+0x7c>
2fff4ffa:	fa92 f4a2 	rbit	r4, r2
2fff4ffe:	fab4 f484 	clz	r4, r4
2fff5002:	b9a2      	cbnz	r2, 2fff502e <stm32mp1_pll1_config_from_opp_khz+0x72>
2fff5004:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff5008:	f7fd fde2 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff500c:	f100 012c 	add.w	r1, r0, #44	; 0x2c
2fff5010:	4620      	mov	r0, r4
2fff5012:	f7ff fd75 	bl	2fff4b00 <stm32mp1_set_clkdiv>
2fff5016:	4604      	mov	r4, r0
2fff5018:	2800      	cmp	r0, #0
2fff501a:	d151      	bne.n	2fff50c0 <stm32mp1_pll1_config_from_opp_khz+0x104>
2fff501c:	f240 2003 	movw	r0, #515	; 0x203
2fff5020:	b002      	add	sp, #8
2fff5022:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff5026:	f7ff bf09 	b.w	2fff4e3c <stm32mp1_set_clksrc>
2fff502a:	2700      	movs	r7, #0
2fff502c:	e7d2      	b.n	2fff4fd4 <stm32mp1_pll1_config_from_opp_khz+0x18>
2fff502e:	2c00      	cmp	r4, #0
2fff5030:	d1ea      	bne.n	2fff5008 <stm32mp1_pll1_config_from_opp_khz+0x4c>
2fff5032:	f240 2002 	movw	r0, #514	; 0x202
2fff5036:	e7f3      	b.n	2fff5020 <stm32mp1_pll1_config_from_opp_khz+0x64>
2fff5038:	f107 0a10 	add.w	sl, r7, #16
2fff503c:	2618      	movs	r6, #24
2fff503e:	fb06 5607 	mla	r6, r6, r7, r5
2fff5042:	eb05 038a 	add.w	r3, r5, sl, lsl #2
2fff5046:	3614      	adds	r6, #20
2fff5048:	f8d3 9004 	ldr.w	r9, [r3, #4]
2fff504c:	f7fd fdc0 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5050:	4680      	mov	r8, r0
2fff5052:	aa01      	add	r2, sp, #4
2fff5054:	4827      	ldr	r0, [pc, #156]	; (2fff50f4 <stm32mp1_pll1_config_from_opp_khz+0x138>)
2fff5056:	4631      	mov	r1, r6
2fff5058:	f7ff fe7e 	bl	2fff4d58 <stm32mp1_pll_compute_pllxcfgr1>
2fff505c:	4604      	mov	r4, r0
2fff505e:	bb78      	cbnz	r0, 2fff50c0 <stm32mp1_pll1_config_from_opp_khz+0x104>
2fff5060:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
2fff5064:	9b01      	ldr	r3, [sp, #4]
2fff5066:	429a      	cmp	r2, r3
2fff5068:	d12e      	bne.n	2fff50c8 <stm32mp1_pll1_config_from_opp_khz+0x10c>
2fff506a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
2fff506e:	4630      	mov	r0, r6
2fff5070:	f449 3980 	orr.w	r9, r9, #65536	; 0x10000
2fff5074:	f7ff fbec 	bl	2fff4850 <stm32mp1_pll_compute_pllxcfgr2>
2fff5078:	9001      	str	r0, [sp, #4]
2fff507a:	f8d8 308c 	ldr.w	r3, [r8, #140]	; 0x8c
2fff507e:	4599      	cmp	r9, r3
2fff5080:	d103      	bne.n	2fff508a <stm32mp1_pll1_config_from_opp_khz+0xce>
2fff5082:	f8d8 3088 	ldr.w	r3, [r8, #136]	; 0x88
2fff5086:	4298      	cmp	r0, r3
2fff5088:	d01a      	beq.n	2fff50c0 <stm32mp1_pll1_config_from_opp_khz+0x104>
2fff508a:	f04f 0800 	mov.w	r8, #0
2fff508e:	eb05 0a8a 	add.w	sl, r5, sl, lsl #2
2fff5092:	4631      	mov	r1, r6
2fff5094:	2000      	movs	r0, #0
2fff5096:	f8da 2004 	ldr.w	r2, [sl, #4]
2fff509a:	f7ff fea3 	bl	2fff4de4 <stm32mp1_pll_config>
2fff509e:	4604      	mov	r4, r0
2fff50a0:	b970      	cbnz	r0, 2fff50c0 <stm32mp1_pll1_config_from_opp_khz+0x104>
2fff50a2:	f1b8 0f00 	cmp.w	r8, #0
2fff50a6:	d00b      	beq.n	2fff50c0 <stm32mp1_pll1_config_from_opp_khz+0x104>
2fff50a8:	f7ff fd02 	bl	2fff4ab0 <stm32mp1_pll_start>
2fff50ac:	2318      	movs	r3, #24
2fff50ae:	4620      	mov	r0, r4
2fff50b0:	fb03 5507 	mla	r5, r3, r7, r5
2fff50b4:	6aa9      	ldr	r1, [r5, #40]	; 0x28
2fff50b6:	f7ff ff01 	bl	2fff4ebc <stm32mp1_pll_output>
2fff50ba:	4604      	mov	r4, r0
2fff50bc:	2800      	cmp	r0, #0
2fff50be:	d0b8      	beq.n	2fff5032 <stm32mp1_pll1_config_from_opp_khz+0x76>
2fff50c0:	4620      	mov	r0, r4
2fff50c2:	b002      	add	sp, #8
2fff50c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff50c8:	f44f 7000 	mov.w	r0, #512	; 0x200
2fff50cc:	f7ff feb6 	bl	2fff4e3c <stm32mp1_set_clksrc>
2fff50d0:	4604      	mov	r4, r0
2fff50d2:	2800      	cmp	r0, #0
2fff50d4:	d1f4      	bne.n	2fff50c0 <stm32mp1_pll1_config_from_opp_khz+0x104>
2fff50d6:	f7ff ff33 	bl	2fff4f40 <stm32mp1_pll_stop>
2fff50da:	4604      	mov	r4, r0
2fff50dc:	2800      	cmp	r0, #0
2fff50de:	d1ef      	bne.n	2fff50c0 <stm32mp1_pll1_config_from_opp_khz+0x104>
2fff50e0:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff50e4:	e7d3      	b.n	2fff508e <stm32mp1_pll1_config_from_opp_khz+0xd2>
2fff50e6:	f06f 0405 	mvn.w	r4, #5
2fff50ea:	e7e9      	b.n	2fff50c0 <stm32mp1_pll1_config_from_opp_khz+0x104>
2fff50ec:	2fffebc8 	.word	0x2fffebc8
2fff50f0:	00010116 	.word	0x00010116
2fff50f4:	2fffb6f8 	.word	0x2fffb6f8

2fff50f8 <stm32mp1_rcc_is_secure>:
2fff50f8:	b508      	push	{r3, lr}
2fff50fa:	f7fd fd69 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff50fe:	6800      	ldr	r0, [r0, #0]
2fff5100:	f000 0001 	and.w	r0, r0, #1
2fff5104:	bd08      	pop	{r3, pc}

2fff5106 <stm32mp1_rcc_is_mckprot>:
2fff5106:	b508      	push	{r3, lr}
2fff5108:	f7fd fd62 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff510c:	6800      	ldr	r0, [r0, #0]
2fff510e:	f000 0003 	and.w	r0, r0, #3
2fff5112:	1ec3      	subs	r3, r0, #3
2fff5114:	4258      	negs	r0, r3
2fff5116:	4158      	adcs	r0, r3
2fff5118:	bd08      	pop	{r3, pc}
	...

2fff511c <stm32mp1_clk_rcc_regs_lock>:
2fff511c:	4801      	ldr	r0, [pc, #4]	; (2fff5124 <stm32mp1_clk_rcc_regs_lock+0x8>)
2fff511e:	f7ff bcd9 	b.w	2fff4ad4 <stm32mp1_clk_lock>
2fff5122:	bf00      	nop
2fff5124:	2fffec20 	.word	0x2fffec20

2fff5128 <stm32mp1_clk_rcc_regs_unlock>:
2fff5128:	4801      	ldr	r0, [pc, #4]	; (2fff5130 <stm32mp1_clk_rcc_regs_unlock+0x8>)
2fff512a:	f7ff bcde 	b.w	2fff4aea <stm32mp1_clk_unlock>
2fff512e:	bf00      	nop
2fff5130:	2fffec20 	.word	0x2fffec20

2fff5134 <stm32mp_clk_enable>:
2fff5134:	2101      	movs	r1, #1
2fff5136:	f7ff bd95 	b.w	2fff4c64 <__stm32mp1_clk_enable>

2fff513a <stm32mp_clk_disable>:
2fff513a:	2101      	movs	r1, #1
2fff513c:	f7ff bdd0 	b.w	2fff4ce0 <__stm32mp1_clk_disable>

2fff5140 <stm32mp1_clk_force_enable>:
2fff5140:	2100      	movs	r1, #0
2fff5142:	f7ff bd8f 	b.w	2fff4c64 <__stm32mp1_clk_enable>

2fff5146 <stm32mp1_clk_force_disable>:
2fff5146:	2100      	movs	r1, #0
2fff5148:	f7ff bdca 	b.w	2fff4ce0 <__stm32mp1_clk_disable>

2fff514c <stm32mp_clk_is_enabled>:
2fff514c:	b510      	push	{r4, lr}
2fff514e:	4602      	mov	r2, r0
2fff5150:	f7ff fb70 	bl	2fff4834 <clock_is_always_on>
2fff5154:	b9b8      	cbnz	r0, 2fff5186 <stm32mp_clk_is_enabled+0x3a>
2fff5156:	4610      	mov	r0, r2
2fff5158:	f7ff fd2e 	bl	2fff4bb8 <stm32mp1_clk_get_gated_id>
2fff515c:	1e04      	subs	r4, r0, #0
2fff515e:	da03      	bge.n	2fff5168 <stm32mp_clk_is_enabled+0x1c>
2fff5160:	f7fd fc24 	bl	2fff29ac <console_flush>
2fff5164:	f003 eb88 	blx	2fff8878 <do_panic>
2fff5168:	f7fd fd32 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff516c:	4b06      	ldr	r3, [pc, #24]	; (2fff5188 <stm32mp_clk_is_enabled+0x3c>)
2fff516e:	f833 2034 	ldrh.w	r2, [r3, r4, lsl #3]
2fff5172:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
2fff5176:	5812      	ldr	r2, [r2, r0]
2fff5178:	7899      	ldrb	r1, [r3, #2]
2fff517a:	2301      	movs	r3, #1
2fff517c:	408b      	lsls	r3, r1
2fff517e:	4213      	tst	r3, r2
2fff5180:	bf14      	ite	ne
2fff5182:	2001      	movne	r0, #1
2fff5184:	2000      	moveq	r0, #0
2fff5186:	bd10      	pop	{r4, pc}
2fff5188:	2fffb586 	.word	0x2fffb586

2fff518c <stm32mp_clk_get_rate>:
2fff518c:	b508      	push	{r3, lr}
2fff518e:	f7ff fd2d 	bl	2fff4bec <stm32mp1_clk_get_parent>
2fff5192:	2800      	cmp	r0, #0
2fff5194:	db03      	blt.n	2fff519e <stm32mp_clk_get_rate+0x12>
2fff5196:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff519a:	f7ff bbbd 	b.w	2fff4918 <get_clock_rate>
2fff519e:	2000      	movs	r0, #0
2fff51a0:	bd08      	pop	{r3, pc}
	...

2fff51a4 <clk_get_pll1_settings>:
2fff51a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff51a8:	b08f      	sub	sp, #60	; 0x3c
2fff51aa:	4d77      	ldr	r5, [pc, #476]	; (2fff5388 <clk_get_pll1_settings+0x1e4>)
2fff51ac:	460c      	mov	r4, r1
2fff51ae:	9308      	str	r3, [sp, #32]
2fff51b0:	4616      	mov	r6, r2
2fff51b2:	686b      	ldr	r3, [r5, #4]
2fff51b4:	4299      	cmp	r1, r3
2fff51b6:	f000 80cf 	beq.w	2fff5358 <clk_get_pll1_settings+0x1b4>
2fff51ba:	68ab      	ldr	r3, [r5, #8]
2fff51bc:	4299      	cmp	r1, r3
2fff51be:	f000 80e1 	beq.w	2fff5384 <clk_get_pll1_settings+0x1e0>
2fff51c2:	682b      	ldr	r3, [r5, #0]
2fff51c4:	2b00      	cmp	r3, #0
2fff51c6:	f040 80c4 	bne.w	2fff5352 <clk_get_pll1_settings+0x1ae>
2fff51ca:	f5b0 7f20 	cmp.w	r0, #640	; 0x280
2fff51ce:	d008      	beq.n	2fff51e2 <clk_get_pll1_settings+0x3e>
2fff51d0:	f240 2381 	movw	r3, #641	; 0x281
2fff51d4:	4298      	cmp	r0, r3
2fff51d6:	f000 808a 	beq.w	2fff52ee <clk_get_pll1_settings+0x14a>
2fff51da:	f7fd fbe7 	bl	2fff29ac <console_flush>
2fff51de:	f003 eb4c 	blx	2fff8878 <do_panic>
2fff51e2:	2004      	movs	r0, #4
2fff51e4:	f7ff ffd2 	bl	2fff518c <stm32mp_clk_get_rate>
2fff51e8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff51ec:	2300      	movs	r3, #0
2fff51ee:	434c      	muls	r4, r1
2fff51f0:	60f3      	str	r3, [r6, #12]
2fff51f2:	4681      	mov	r9, r0
2fff51f4:	6133      	str	r3, [r6, #16]
2fff51f6:	2301      	movs	r3, #1
2fff51f8:	6173      	str	r3, [r6, #20]
2fff51fa:	0ea3      	lsrs	r3, r4, #26
2fff51fc:	9307      	str	r3, [sp, #28]
2fff51fe:	01a3      	lsls	r3, r4, #6
2fff5200:	9306      	str	r3, [sp, #24]
2fff5202:	2340      	movs	r3, #64	; 0x40
2fff5204:	9303      	str	r3, [sp, #12]
2fff5206:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff520a:	9302      	str	r3, [sp, #8]
2fff520c:	9b03      	ldr	r3, [sp, #12]
2fff520e:	4a5f      	ldr	r2, [pc, #380]	; (2fff538c <clk_get_pll1_settings+0x1e8>)
2fff5210:	fbb9 f3f3 	udiv	r3, r9, r3
2fff5214:	9301      	str	r3, [sp, #4]
2fff5216:	f5a3 03f4 	sub.w	r3, r3, #7995392	; 0x7a0000
2fff521a:	f5a3 5390 	sub.w	r3, r3, #4608	; 0x1200
2fff521e:	4293      	cmp	r3, r2
2fff5220:	f200 8084 	bhi.w	2fff532c <clk_get_pll1_settings+0x188>
2fff5224:	9b07      	ldr	r3, [sp, #28]
2fff5226:	2701      	movs	r7, #1
2fff5228:	f8dd 8018 	ldr.w	r8, [sp, #24]
2fff522c:	9305      	str	r3, [sp, #20]
2fff522e:	2300      	movs	r3, #0
2fff5230:	9304      	str	r3, [sp, #16]
2fff5232:	9b03      	ldr	r3, [sp, #12]
2fff5234:	3b01      	subs	r3, #1
2fff5236:	930d      	str	r3, [sp, #52]	; 0x34
2fff5238:	9905      	ldr	r1, [sp, #20]
2fff523a:	2300      	movs	r3, #0
2fff523c:	464a      	mov	r2, r9
2fff523e:	4640      	mov	r0, r8
2fff5240:	f003 ecb8 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff5244:	f1a0 0319 	sub.w	r3, r0, #25
2fff5248:	4682      	mov	sl, r0
2fff524a:	2b4b      	cmp	r3, #75	; 0x4b
2fff524c:	d85c      	bhi.n	2fff5308 <clk_get_pll1_settings+0x164>
2fff524e:	1e43      	subs	r3, r0, #1
2fff5250:	464a      	mov	r2, r9
2fff5252:	9309      	str	r3, [sp, #36]	; 0x24
2fff5254:	9b05      	ldr	r3, [sp, #20]
2fff5256:	ea4f 3048 	mov.w	r0, r8, lsl #13
2fff525a:	0359      	lsls	r1, r3, #13
2fff525c:	2300      	movs	r3, #0
2fff525e:	ea41 41d8 	orr.w	r1, r1, r8, lsr #19
2fff5262:	f003 eca8 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff5266:	9b01      	ldr	r3, [sp, #4]
2fff5268:	9a01      	ldr	r2, [sp, #4]
2fff526a:	eba0 354a 	sub.w	r5, r0, sl, lsl #13
2fff526e:	fb03 f30a 	mul.w	r3, r3, sl
2fff5272:	fba5 ba02 	umull	fp, sl, r5, r2
2fff5276:	930b      	str	r3, [sp, #44]	; 0x2c
2fff5278:	17eb      	asrs	r3, r5, #31
2fff527a:	fb02 aa03 	mla	sl, r2, r3, sl
2fff527e:	1cab      	adds	r3, r5, #2
2fff5280:	930a      	str	r3, [sp, #40]	; 0x28
2fff5282:	1e7b      	subs	r3, r7, #1
2fff5284:	930c      	str	r3, [sp, #48]	; 0x30
2fff5286:	f5b5 5f00 	cmp.w	r5, #8192	; 0x2000
2fff528a:	dc3d      	bgt.n	2fff5308 <clk_get_pll1_settings+0x164>
2fff528c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2fff528e:	ea4f 305b 	mov.w	r0, fp, lsr #13
2fff5292:	ea40 40ca 	orr.w	r0, r0, sl, lsl #19
2fff5296:	18c0      	adds	r0, r0, r3
2fff5298:	4b3d      	ldr	r3, [pc, #244]	; (2fff5390 <clk_get_pll1_settings+0x1ec>)
2fff529a:	ea4f 315a 	mov.w	r1, sl, lsr #13
2fff529e:	f8df c0f4 	ldr.w	ip, [pc, #244]	; 2fff5394 <clk_get_pll1_settings+0x1f0>
2fff52a2:	f141 0100 	adc.w	r1, r1, #0
2fff52a6:	18c2      	adds	r2, r0, r3
2fff52a8:	f161 0300 	sbc.w	r3, r1, #0
2fff52ac:	4594      	cmp	ip, r2
2fff52ae:	f04f 0200 	mov.w	r2, #0
2fff52b2:	eb72 0303 	sbcs.w	r3, r2, r3
2fff52b6:	d31e      	bcc.n	2fff52f6 <clk_get_pll1_settings+0x152>
2fff52b8:	9b04      	ldr	r3, [sp, #16]
2fff52ba:	463a      	mov	r2, r7
2fff52bc:	f003 ec7a 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff52c0:	4284      	cmp	r4, r0
2fff52c2:	f04f 0200 	mov.w	r2, #0
2fff52c6:	eb72 0301 	sbcs.w	r3, r2, r1
2fff52ca:	9b02      	ldr	r3, [sp, #8]
2fff52cc:	bf34      	ite	cc
2fff52ce:	1b00      	subcc	r0, r0, r4
2fff52d0:	1a20      	subcs	r0, r4, r0
2fff52d2:	4298      	cmp	r0, r3
2fff52d4:	d20d      	bcs.n	2fff52f2 <clk_get_pll1_settings+0x14e>
2fff52d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff52d8:	6033      	str	r3, [r6, #0]
2fff52da:	9b09      	ldr	r3, [sp, #36]	; 0x24
2fff52dc:	6073      	str	r3, [r6, #4]
2fff52de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2fff52e0:	60b3      	str	r3, [r6, #8]
2fff52e2:	9b08      	ldr	r3, [sp, #32]
2fff52e4:	601d      	str	r5, [r3, #0]
2fff52e6:	b928      	cbnz	r0, 2fff52f4 <clk_get_pll1_settings+0x150>
2fff52e8:	b00f      	add	sp, #60	; 0x3c
2fff52ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff52ee:	2000      	movs	r0, #0
2fff52f0:	e778      	b.n	2fff51e4 <clk_get_pll1_settings+0x40>
2fff52f2:	9802      	ldr	r0, [sp, #8]
2fff52f4:	9002      	str	r0, [sp, #8]
2fff52f6:	9b01      	ldr	r3, [sp, #4]
2fff52f8:	3501      	adds	r5, #1
2fff52fa:	eb13 0b0b 	adds.w	fp, r3, fp
2fff52fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
2fff5300:	f14a 0a00 	adc.w	sl, sl, #0
2fff5304:	42ab      	cmp	r3, r5
2fff5306:	d1be      	bne.n	2fff5286 <clk_get_pll1_settings+0xe2>
2fff5308:	9b06      	ldr	r3, [sp, #24]
2fff530a:	9a07      	ldr	r2, [sp, #28]
2fff530c:	eb18 0803 	adds.w	r8, r8, r3
2fff5310:	9b05      	ldr	r3, [sp, #20]
2fff5312:	eb43 0302 	adc.w	r3, r3, r2
2fff5316:	3701      	adds	r7, #1
2fff5318:	9305      	str	r3, [sp, #20]
2fff531a:	9b04      	ldr	r3, [sp, #16]
2fff531c:	f143 0300 	adc.w	r3, r3, #0
2fff5320:	9304      	str	r3, [sp, #16]
2fff5322:	f1a7 0381 	sub.w	r3, r7, #129	; 0x81
2fff5326:	9a04      	ldr	r2, [sp, #16]
2fff5328:	4313      	orrs	r3, r2
2fff532a:	d185      	bne.n	2fff5238 <clk_get_pll1_settings+0x94>
2fff532c:	9b06      	ldr	r3, [sp, #24]
2fff532e:	1b1b      	subs	r3, r3, r4
2fff5330:	9306      	str	r3, [sp, #24]
2fff5332:	9b07      	ldr	r3, [sp, #28]
2fff5334:	f163 0300 	sbc.w	r3, r3, #0
2fff5338:	9307      	str	r3, [sp, #28]
2fff533a:	9b03      	ldr	r3, [sp, #12]
2fff533c:	3b01      	subs	r3, #1
2fff533e:	9303      	str	r3, [sp, #12]
2fff5340:	f47f af64 	bne.w	2fff520c <clk_get_pll1_settings+0x68>
2fff5344:	9b02      	ldr	r3, [sp, #8]
2fff5346:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff534a:	3301      	adds	r3, #1
2fff534c:	bf18      	it	ne
2fff534e:	2000      	movne	r0, #0
2fff5350:	e7ca      	b.n	2fff52e8 <clk_get_pll1_settings+0x144>
2fff5352:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5356:	e7c7      	b.n	2fff52e8 <clk_get_pll1_settings+0x144>
2fff5358:	2700      	movs	r7, #0
2fff535a:	2218      	movs	r2, #24
2fff535c:	fb02 f307 	mul.w	r3, r2, r7
2fff5360:	18e9      	adds	r1, r5, r3
2fff5362:	6a89      	ldr	r1, [r1, #40]	; 0x28
2fff5364:	2900      	cmp	r1, #0
2fff5366:	f43f af30 	beq.w	2fff51ca <clk_get_pll1_settings+0x26>
2fff536a:	f103 0114 	add.w	r1, r3, #20
2fff536e:	4630      	mov	r0, r6
2fff5370:	4429      	add	r1, r5
2fff5372:	eb05 0587 	add.w	r5, r5, r7, lsl #2
2fff5376:	f004 fae1 	bl	2fff993c <memcpy>
2fff537a:	9a08      	ldr	r2, [sp, #32]
2fff537c:	2000      	movs	r0, #0
2fff537e:	6c6b      	ldr	r3, [r5, #68]	; 0x44
2fff5380:	6013      	str	r3, [r2, #0]
2fff5382:	e7b1      	b.n	2fff52e8 <clk_get_pll1_settings+0x144>
2fff5384:	2701      	movs	r7, #1
2fff5386:	e7e8      	b.n	2fff535a <clk_get_pll1_settings+0x1b6>
2fff5388:	2fffebc8 	.word	0x2fffebc8
2fff538c:	007a1200 	.word	0x007a1200
2fff5390:	e8287c00 	.word	0xe8287c00
2fff5394:	17d78400 	.word	0x17d78400

2fff5398 <stm32mp_clk_timer_get_rate>:
2fff5398:	b538      	push	{r3, r4, r5, lr}
2fff539a:	4605      	mov	r5, r0
2fff539c:	f7fd fc18 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff53a0:	4604      	mov	r4, r0
2fff53a2:	4628      	mov	r0, r5
2fff53a4:	f7ff fef2 	bl	2fff518c <stm32mp_clk_get_rate>
2fff53a8:	2dcd      	cmp	r5, #205	; 0xcd
2fff53aa:	bf97      	itett	ls
2fff53ac:	f8d4 2834 	ldrls.w	r2, [r4, #2100]	; 0x834
2fff53b0:	f8d4 2838 	ldrhi.w	r2, [r4, #2104]	; 0x838
2fff53b4:	f8d4 3828 	ldrls.w	r3, [r4, #2088]	; 0x828
2fff53b8:	f002 0207 	andls.w	r2, r2, #7
2fff53bc:	bf84      	itt	hi
2fff53be:	f8d4 382c 	ldrhi.w	r3, [r4, #2092]	; 0x82c
2fff53c2:	f002 0207 	andhi.w	r2, r2, #7
2fff53c6:	f003 0301 	and.w	r3, r3, #1
2fff53ca:	b112      	cbz	r2, 2fff53d2 <stm32mp_clk_timer_get_rate+0x3a>
2fff53cc:	fb03 0000 	mla	r0, r3, r0, r0
2fff53d0:	0040      	lsls	r0, r0, #1
2fff53d2:	bd38      	pop	{r3, r4, r5, pc}

2fff53d4 <stm32mp1_rtc_get_read_twice>:
2fff53d4:	b538      	push	{r3, r4, r5, lr}
2fff53d6:	f7fd fbfb 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff53da:	4605      	mov	r5, r0
2fff53dc:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
2fff53e0:	f3c0 4001 	ubfx	r0, r0, #16, #2
2fff53e4:	2802      	cmp	r0, #2
2fff53e6:	d004      	beq.n	2fff53f2 <stm32mp1_rtc_get_read_twice+0x1e>
2fff53e8:	2803      	cmp	r0, #3
2fff53ea:	d014      	beq.n	2fff5416 <stm32mp1_rtc_get_read_twice+0x42>
2fff53ec:	2801      	cmp	r0, #1
2fff53ee:	d11c      	bne.n	2fff542a <stm32mp1_rtc_get_read_twice+0x56>
2fff53f0:	2003      	movs	r0, #3
2fff53f2:	f7ff fecb 	bl	2fff518c <stm32mp_clk_get_rate>
2fff53f6:	4604      	mov	r4, r0
2fff53f8:	f8d5 5834 	ldr.w	r5, [r5, #2100]	; 0x834
2fff53fc:	20c4      	movs	r0, #196	; 0xc4
2fff53fe:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
2fff5402:	f7ff fec3 	bl	2fff518c <stm32mp_clk_get_rate>
2fff5406:	f005 0507 	and.w	r5, r5, #7
2fff540a:	40e8      	lsrs	r0, r5
2fff540c:	4284      	cmp	r4, r0
2fff540e:	bf94      	ite	ls
2fff5410:	2000      	movls	r0, #0
2fff5412:	2001      	movhi	r0, #1
2fff5414:	bd38      	pop	{r3, r4, r5, pc}
2fff5416:	2000      	movs	r0, #0
2fff5418:	f7ff feb8 	bl	2fff518c <stm32mp_clk_get_rate>
2fff541c:	6c6c      	ldr	r4, [r5, #68]	; 0x44
2fff541e:	f004 043f 	and.w	r4, r4, #63	; 0x3f
2fff5422:	3401      	adds	r4, #1
2fff5424:	fbb0 f4f4 	udiv	r4, r0, r4
2fff5428:	e7e6      	b.n	2fff53f8 <stm32mp1_rtc_get_read_twice+0x24>
2fff542a:	f7fd fabf 	bl	2fff29ac <console_flush>
2fff542e:	f003 ea24 	blx	2fff8878 <do_panic>
	...

2fff5434 <stm32mp1_round_opp_khz>:
2fff5434:	4a0a      	ldr	r2, [pc, #40]	; (2fff5460 <stm32mp1_round_opp_khz+0x2c>)
2fff5436:	4b0b      	ldr	r3, [pc, #44]	; (2fff5464 <stm32mp1_round_opp_khz+0x30>)
2fff5438:	6811      	ldr	r1, [r2, #0]
2fff543a:	4299      	cmp	r1, r3
2fff543c:	d10d      	bne.n	2fff545a <stm32mp1_round_opp_khz+0x26>
2fff543e:	6853      	ldr	r3, [r2, #4]
2fff5440:	6801      	ldr	r1, [r0, #0]
2fff5442:	6892      	ldr	r2, [r2, #8]
2fff5444:	428b      	cmp	r3, r1
2fff5446:	bf88      	it	hi
2fff5448:	2300      	movhi	r3, #0
2fff544a:	4291      	cmp	r1, r2
2fff544c:	d302      	bcc.n	2fff5454 <stm32mp1_round_opp_khz+0x20>
2fff544e:	4293      	cmp	r3, r2
2fff5450:	bf38      	it	cc
2fff5452:	4613      	movcc	r3, r2
2fff5454:	6003      	str	r3, [r0, #0]
2fff5456:	2000      	movs	r0, #0
2fff5458:	4770      	bx	lr
2fff545a:	4b03      	ldr	r3, [pc, #12]	; (2fff5468 <stm32mp1_round_opp_khz+0x34>)
2fff545c:	681b      	ldr	r3, [r3, #0]
2fff545e:	e7f9      	b.n	2fff5454 <stm32mp1_round_opp_khz+0x20>
2fff5460:	2fffebc8 	.word	0x2fffebc8
2fff5464:	504c4c31 	.word	0x504c4c31
2fff5468:	2fffeb04 	.word	0x2fffeb04

2fff546c <stm32mp1_set_opp_khz>:
2fff546c:	b538      	push	{r3, r4, r5, lr}
2fff546e:	4604      	mov	r4, r0
2fff5470:	4d16      	ldr	r5, [pc, #88]	; (2fff54cc <stm32mp1_set_opp_khz+0x60>)
2fff5472:	f7fd fbad 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5476:	682b      	ldr	r3, [r5, #0]
2fff5478:	42a3      	cmp	r3, r4
2fff547a:	d01b      	beq.n	2fff54b4 <stm32mp1_set_opp_khz+0x48>
2fff547c:	4b14      	ldr	r3, [pc, #80]	; (2fff54d0 <stm32mp1_set_opp_khz+0x64>)
2fff547e:	681a      	ldr	r2, [r3, #0]
2fff5480:	4b14      	ldr	r3, [pc, #80]	; (2fff54d4 <stm32mp1_set_opp_khz+0x68>)
2fff5482:	429a      	cmp	r2, r3
2fff5484:	d118      	bne.n	2fff54b8 <stm32mp1_set_opp_khz+0x4c>
2fff5486:	6a03      	ldr	r3, [r0, #32]
2fff5488:	f003 0307 	and.w	r3, r3, #7
2fff548c:	3b02      	subs	r3, #2
2fff548e:	2b01      	cmp	r3, #1
2fff5490:	d815      	bhi.n	2fff54be <stm32mp1_set_opp_khz+0x52>
2fff5492:	4620      	mov	r0, r4
2fff5494:	f7ff fd92 	bl	2fff4fbc <stm32mp1_pll1_config_from_opp_khz>
2fff5498:	b150      	cbz	r0, 2fff54b0 <stm32mp1_set_opp_khz+0x44>
2fff549a:	6828      	ldr	r0, [r5, #0]
2fff549c:	f7ff fd8e 	bl	2fff4fbc <stm32mp1_pll1_config_from_opp_khz>
2fff54a0:	b180      	cbz	r0, 2fff54c4 <stm32mp1_set_opp_khz+0x58>
2fff54a2:	480d      	ldr	r0, [pc, #52]	; (2fff54d8 <stm32mp1_set_opp_khz+0x6c>)
2fff54a4:	f7fd f9de 	bl	2fff2864 <tf_log>
2fff54a8:	f7fd fa80 	bl	2fff29ac <console_flush>
2fff54ac:	f003 e9e4 	blx	2fff8878 <do_panic>
2fff54b0:	602c      	str	r4, [r5, #0]
2fff54b2:	bd38      	pop	{r3, r4, r5, pc}
2fff54b4:	2000      	movs	r0, #0
2fff54b6:	e7fc      	b.n	2fff54b2 <stm32mp1_set_opp_khz+0x46>
2fff54b8:	f06f 000c 	mvn.w	r0, #12
2fff54bc:	e7f9      	b.n	2fff54b2 <stm32mp1_set_opp_khz+0x46>
2fff54be:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff54c2:	e7f6      	b.n	2fff54b2 <stm32mp1_set_opp_khz+0x46>
2fff54c4:	f06f 0004 	mvn.w	r0, #4
2fff54c8:	e7f3      	b.n	2fff54b2 <stm32mp1_set_opp_khz+0x46>
2fff54ca:	bf00      	nop
2fff54cc:	2fffeb04 	.word	0x2fffeb04
2fff54d0:	2fffebc8 	.word	0x2fffebc8
2fff54d4:	504c4c31 	.word	0x504c4c31
2fff54d8:	2fffb44a 	.word	0x2fffb44a

2fff54dc <stm32mp1_clk_compute_all_pll1_settings>:
2fff54dc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff54e0:	2302      	movs	r3, #2
2fff54e2:	4d45      	ldr	r5, [pc, #276]	; (2fff55f8 <stm32mp1_clk_compute_all_pll1_settings+0x11c>)
2fff54e4:	4607      	mov	r7, r0
2fff54e6:	9301      	str	r3, [sp, #4]
2fff54e8:	a801      	add	r0, sp, #4
2fff54ea:	f105 020c 	add.w	r2, r5, #12
2fff54ee:	1d29      	adds	r1, r5, #4
2fff54f0:	f002 fdbc 	bl	2fff806c <dt_get_all_opp_freqvolt>
2fff54f4:	1c43      	adds	r3, r0, #1
2fff54f6:	4604      	mov	r4, r0
2fff54f8:	d003      	beq.n	2fff5502 <stm32mp1_clk_compute_all_pll1_settings+0x26>
2fff54fa:	b120      	cbz	r0, 2fff5506 <stm32mp1_clk_compute_all_pll1_settings+0x2a>
2fff54fc:	483f      	ldr	r0, [pc, #252]	; (2fff55fc <stm32mp1_clk_compute_all_pll1_settings+0x120>)
2fff54fe:	f7fd f9b1 	bl	2fff2864 <tf_log>
2fff5502:	2000      	movs	r0, #0
2fff5504:	e074      	b.n	2fff55f0 <stm32mp1_clk_compute_all_pll1_settings+0x114>
2fff5506:	f7fd fb63 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff550a:	4606      	mov	r6, r0
2fff550c:	20c2      	movs	r0, #194	; 0xc2
2fff550e:	f7ff fe3d 	bl	2fff518c <stm32mp_clk_get_rate>
2fff5512:	686b      	ldr	r3, [r5, #4]
2fff5514:	f500 72fa 	add.w	r2, r0, #500	; 0x1f4
2fff5518:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
2fff551c:	fbb2 f2f0 	udiv	r2, r2, r0
2fff5520:	4293      	cmp	r3, r2
2fff5522:	d041      	beq.n	2fff55a8 <stm32mp1_clk_compute_all_pll1_settings+0xcc>
2fff5524:	68ab      	ldr	r3, [r5, #8]
2fff5526:	4293      	cmp	r3, r2
2fff5528:	d140      	bne.n	2fff55ac <stm32mp1_clk_compute_all_pll1_settings+0xd0>
2fff552a:	2301      	movs	r3, #1
2fff552c:	eb05 0283 	add.w	r2, r5, r3, lsl #2
2fff5530:	68d2      	ldr	r2, [r2, #12]
2fff5532:	4297      	cmp	r7, r2
2fff5534:	d001      	beq.n	2fff553a <stm32mp1_clk_compute_all_pll1_settings+0x5e>
2fff5536:	2f00      	cmp	r7, #0
2fff5538:	d138      	bne.n	2fff55ac <stm32mp1_clk_compute_all_pll1_settings+0xd0>
2fff553a:	f8d6 0084 	ldr.w	r0, [r6, #132]	; 0x84
2fff553e:	2218      	movs	r2, #24
2fff5540:	fb02 5103 	mla	r1, r2, r3, r5
2fff5544:	f3c0 4005 	ubfx	r0, r0, #16, #6
2fff5548:	461c      	mov	r4, r3
2fff554a:	6148      	str	r0, [r1, #20]
2fff554c:	f8d6 0084 	ldr.w	r0, [r6, #132]	; 0x84
2fff5550:	fb03 2202 	mla	r2, r3, r2, r2
2fff5554:	f3c0 0008 	ubfx	r0, r0, #0, #9
2fff5558:	6188      	str	r0, [r1, #24]
2fff555a:	f8d6 0088 	ldr.w	r0, [r6, #136]	; 0x88
2fff555e:	442a      	add	r2, r5
2fff5560:	f000 007f 	and.w	r0, r0, #127	; 0x7f
2fff5564:	6050      	str	r0, [r2, #4]
2fff5566:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
2fff556a:	f3c2 2206 	ubfx	r2, r2, #8, #7
2fff556e:	620a      	str	r2, [r1, #32]
2fff5570:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
2fff5574:	f3c2 4206 	ubfx	r2, r2, #16, #7
2fff5578:	624a      	str	r2, [r1, #36]	; 0x24
2fff557a:	f8d6 2080 	ldr.w	r2, [r6, #128]	; 0x80
2fff557e:	0912      	lsrs	r2, r2, #4
2fff5580:	628a      	str	r2, [r1, #40]	; 0x28
2fff5582:	f8d6 208c 	ldr.w	r2, [r6, #140]	; 0x8c
2fff5586:	eb05 0183 	add.w	r1, r5, r3, lsl #2
2fff558a:	f3c2 02cc 	ubfx	r2, r2, #3, #13
2fff558e:	644a      	str	r2, [r1, #68]	; 0x44
2fff5590:	f7fd fb1e 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5594:	6a83      	ldr	r3, [r0, #40]	; 0x28
2fff5596:	f013 0303 	ands.w	r3, r3, #3
2fff559a:	d00a      	beq.n	2fff55b2 <stm32mp1_clk_compute_all_pll1_settings+0xd6>
2fff559c:	2b01      	cmp	r3, #1
2fff559e:	d014      	beq.n	2fff55ca <stm32mp1_clk_compute_all_pll1_settings+0xee>
2fff55a0:	f7fd fa04 	bl	2fff29ac <console_flush>
2fff55a4:	f003 e968 	blx	2fff8878 <do_panic>
2fff55a8:	4623      	mov	r3, r4
2fff55aa:	e7bf      	b.n	2fff552c <stm32mp1_clk_compute_all_pll1_settings+0x50>
2fff55ac:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff55b0:	e7ee      	b.n	2fff5590 <stm32mp1_clk_compute_all_pll1_settings+0xb4>
2fff55b2:	f44f 7920 	mov.w	r9, #640	; 0x280
2fff55b6:	4e10      	ldr	r6, [pc, #64]	; (2fff55f8 <stm32mp1_clk_compute_all_pll1_settings+0x11c>)
2fff55b8:	2700      	movs	r7, #0
2fff55ba:	f106 0814 	add.w	r8, r6, #20
2fff55be:	9b01      	ldr	r3, [sp, #4]
2fff55c0:	42bb      	cmp	r3, r7
2fff55c2:	dc05      	bgt.n	2fff55d0 <stm32mp1_clk_compute_all_pll1_settings+0xf4>
2fff55c4:	4b0e      	ldr	r3, [pc, #56]	; (2fff5600 <stm32mp1_clk_compute_all_pll1_settings+0x124>)
2fff55c6:	602b      	str	r3, [r5, #0]
2fff55c8:	e79b      	b.n	2fff5502 <stm32mp1_clk_compute_all_pll1_settings+0x26>
2fff55ca:	f240 2981 	movw	r9, #641	; 0x281
2fff55ce:	e7f2      	b.n	2fff55b6 <stm32mp1_clk_compute_all_pll1_settings+0xda>
2fff55d0:	42a7      	cmp	r7, r4
2fff55d2:	d104      	bne.n	2fff55de <stm32mp1_clk_compute_all_pll1_settings+0x102>
2fff55d4:	3701      	adds	r7, #1
2fff55d6:	3604      	adds	r6, #4
2fff55d8:	f108 0818 	add.w	r8, r8, #24
2fff55dc:	e7ef      	b.n	2fff55be <stm32mp1_clk_compute_all_pll1_settings+0xe2>
2fff55de:	6871      	ldr	r1, [r6, #4]
2fff55e0:	f106 0344 	add.w	r3, r6, #68	; 0x44
2fff55e4:	4642      	mov	r2, r8
2fff55e6:	4648      	mov	r0, r9
2fff55e8:	f7ff fddc 	bl	2fff51a4 <clk_get_pll1_settings>
2fff55ec:	2800      	cmp	r0, #0
2fff55ee:	d0f1      	beq.n	2fff55d4 <stm32mp1_clk_compute_all_pll1_settings+0xf8>
2fff55f0:	b003      	add	sp, #12
2fff55f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff55f6:	bf00      	nop
2fff55f8:	2fffebc8 	.word	0x2fffebc8
2fff55fc:	2fffb46e 	.word	0x2fffb46e
2fff5600:	504c4c31 	.word	0x504c4c31

2fff5604 <stm32mp1_clk_lp_save_opp_pll1_settings>:
2fff5604:	294c      	cmp	r1, #76	; 0x4c
2fff5606:	460a      	mov	r2, r1
2fff5608:	b510      	push	{r4, lr}
2fff560a:	d104      	bne.n	2fff5616 <stm32mp1_clk_lp_save_opp_pll1_settings+0x12>
2fff560c:	4906      	ldr	r1, [pc, #24]	; (2fff5628 <stm32mp1_clk_lp_save_opp_pll1_settings+0x24>)
2fff560e:	4b07      	ldr	r3, [pc, #28]	; (2fff562c <stm32mp1_clk_lp_save_opp_pll1_settings+0x28>)
2fff5610:	680c      	ldr	r4, [r1, #0]
2fff5612:	429c      	cmp	r4, r3
2fff5614:	d003      	beq.n	2fff561e <stm32mp1_clk_lp_save_opp_pll1_settings+0x1a>
2fff5616:	f7fd f9c9 	bl	2fff29ac <console_flush>
2fff561a:	f003 e92e 	blx	2fff8878 <do_panic>
2fff561e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff5622:	f004 b98b 	b.w	2fff993c <memcpy>
2fff5626:	bf00      	nop
2fff5628:	2fffebc8 	.word	0x2fffebc8
2fff562c:	504c4c31 	.word	0x504c4c31

2fff5630 <stm32mp1_clk_lp_load_opp_pll1_settings>:
2fff5630:	294c      	cmp	r1, #76	; 0x4c
2fff5632:	460a      	mov	r2, r1
2fff5634:	b508      	push	{r3, lr}
2fff5636:	d003      	beq.n	2fff5640 <stm32mp1_clk_lp_load_opp_pll1_settings+0x10>
2fff5638:	f7fd f9b8 	bl	2fff29ac <console_flush>
2fff563c:	f003 e91c 	blx	2fff8878 <do_panic>
2fff5640:	4601      	mov	r1, r0
2fff5642:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5646:	4801      	ldr	r0, [pc, #4]	; (2fff564c <stm32mp1_clk_lp_load_opp_pll1_settings+0x1c>)
2fff5648:	f004 b978 	b.w	2fff993c <memcpy>
2fff564c:	2fffebc8 	.word	0x2fffebc8

2fff5650 <stm32mp1_register_clock_parents_secure>:
2fff5650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff5652:	4605      	mov	r5, r0
2fff5654:	f7ff fd50 	bl	2fff50f8 <stm32mp1_rcc_is_secure>
2fff5658:	2800      	cmp	r0, #0
2fff565a:	d07f      	beq.n	2fff575c <stm32mp1_register_clock_parents_secure+0x10c>
2fff565c:	2db2      	cmp	r5, #178	; 0xb2
2fff565e:	d018      	beq.n	2fff5692 <stm32mp1_register_clock_parents_secure+0x42>
2fff5660:	d80e      	bhi.n	2fff5680 <stm32mp1_register_clock_parents_secure+0x30>
2fff5662:	f1a5 03b0 	sub.w	r3, r5, #176	; 0xb0
2fff5666:	2b01      	cmp	r3, #1
2fff5668:	d978      	bls.n	2fff575c <stm32mp1_register_clock_parents_secure+0x10c>
2fff566a:	4628      	mov	r0, r5
2fff566c:	f7ff fabe 	bl	2fff4bec <stm32mp1_clk_get_parent>
2fff5670:	1e04      	subs	r4, r0, #0
2fff5672:	da13      	bge.n	2fff569c <stm32mp1_register_clock_parents_secure+0x4c>
2fff5674:	483e      	ldr	r0, [pc, #248]	; (2fff5770 <stm32mp1_register_clock_parents_secure+0x120>)
2fff5676:	4629      	mov	r1, r5
2fff5678:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff567c:	f7fd b8f2 	b.w	2fff2864 <tf_log>
2fff5680:	2db3      	cmp	r5, #179	; 0xb3
2fff5682:	d1f2      	bne.n	2fff566a <stm32mp1_register_clock_parents_secure+0x1a>
2fff5684:	483b      	ldr	r0, [pc, #236]	; (2fff5774 <stm32mp1_register_clock_parents_secure+0x124>)
2fff5686:	f7fd f8ed 	bl	2fff2864 <tf_log>
2fff568a:	f7fd f98f 	bl	2fff29ac <console_flush>
2fff568e:	f003 e8f4 	blx	2fff8878 <do_panic>
2fff5692:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff5696:	2013      	movs	r0, #19
2fff5698:	f7fb b970 	b.w	2fff097c <stm32mp_register_secure_periph>
2fff569c:	4e36      	ldr	r6, [pc, #216]	; (2fff5778 <stm32mp1_register_clock_parents_secure+0x128>)
2fff569e:	4d37      	ldr	r5, [pc, #220]	; (2fff577c <stm32mp1_register_clock_parents_secure+0x12c>)
2fff56a0:	4f37      	ldr	r7, [pc, #220]	; (2fff5780 <stm32mp1_register_clock_parents_secure+0x130>)
2fff56a2:	2c1d      	cmp	r4, #29
2fff56a4:	d8f1      	bhi.n	2fff568a <stm32mp1_register_clock_parents_secure+0x3a>
2fff56a6:	2301      	movs	r3, #1
2fff56a8:	40a3      	lsls	r3, r4
2fff56aa:	4233      	tst	r3, r6
2fff56ac:	d105      	bne.n	2fff56ba <stm32mp1_register_clock_parents_secure+0x6a>
2fff56ae:	f413 2fe0 	tst.w	r3, #458752	; 0x70000
2fff56b2:	d0ea      	beq.n	2fff568a <stm32mp1_register_clock_parents_secure+0x3a>
2fff56b4:	2013      	movs	r0, #19
2fff56b6:	f7fb f961 	bl	2fff097c <stm32mp_register_secure_periph>
2fff56ba:	3c0a      	subs	r4, #10
2fff56bc:	2c17      	cmp	r4, #23
2fff56be:	d84d      	bhi.n	2fff575c <stm32mp1_register_clock_parents_secure+0x10c>
2fff56c0:	a301      	add	r3, pc, #4	; (adr r3, 2fff56c8 <stm32mp1_register_clock_parents_secure+0x78>)
2fff56c2:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
2fff56c6:	bf00      	nop
2fff56c8:	2fff575f 	.word	0x2fff575f
2fff56cc:	2fff575f 	.word	0x2fff575f
2fff56d0:	2fff575f 	.word	0x2fff575f
2fff56d4:	2fff576b 	.word	0x2fff576b
2fff56d8:	2fff576b 	.word	0x2fff576b
2fff56dc:	2fff576b 	.word	0x2fff576b
2fff56e0:	2fff5729 	.word	0x2fff5729
2fff56e4:	2fff5729 	.word	0x2fff5729
2fff56e8:	2fff5729 	.word	0x2fff5729
2fff56ec:	2fff5767 	.word	0x2fff5767
2fff56f0:	2fff5767 	.word	0x2fff5767
2fff56f4:	2fff5767 	.word	0x2fff5767
2fff56f8:	2fff574f 	.word	0x2fff574f
2fff56fc:	2fff568b 	.word	0x2fff568b
2fff5700:	2fff568b 	.word	0x2fff568b
2fff5704:	2fff575d 	.word	0x2fff575d
2fff5708:	2fff574f 	.word	0x2fff574f
2fff570c:	2fff574f 	.word	0x2fff574f
2fff5710:	2fff568b 	.word	0x2fff568b
2fff5714:	2fff568b 	.word	0x2fff568b
2fff5718:	2fff568b 	.word	0x2fff568b
2fff571c:	2fff568b 	.word	0x2fff568b
2fff5720:	2fff568b 	.word	0x2fff568b
2fff5724:	2fff568b 	.word	0x2fff568b
2fff5728:	2402      	movs	r4, #2
2fff572a:	f7fd fa51 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff572e:	eb05 1344 	add.w	r3, r5, r4, lsl #5
2fff5732:	889b      	ldrh	r3, [r3, #4]
2fff5734:	581b      	ldr	r3, [r3, r0]
2fff5736:	f003 0303 	and.w	r3, r3, #3
2fff573a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
2fff573e:	3304      	adds	r3, #4
2fff5740:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
2fff5744:	2cff      	cmp	r4, #255	; 0xff
2fff5746:	d009      	beq.n	2fff575c <stm32mp1_register_clock_parents_secure+0x10c>
2fff5748:	2c00      	cmp	r4, #0
2fff574a:	daaa      	bge.n	2fff56a2 <stm32mp1_register_clock_parents_secure+0x52>
2fff574c:	e006      	b.n	2fff575c <stm32mp1_register_clock_parents_secure+0x10c>
2fff574e:	f7fd fa3f 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5752:	6a43      	ldr	r3, [r0, #36]	; 0x24
2fff5754:	f003 0307 	and.w	r3, r3, #7
2fff5758:	2b02      	cmp	r3, #2
2fff575a:	d902      	bls.n	2fff5762 <stm32mp1_register_clock_parents_secure+0x112>
2fff575c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff575e:	2400      	movs	r4, #0
2fff5760:	e7e3      	b.n	2fff572a <stm32mp1_register_clock_parents_secure+0xda>
2fff5762:	5cfc      	ldrb	r4, [r7, r3]
2fff5764:	e79d      	b.n	2fff56a2 <stm32mp1_register_clock_parents_secure+0x52>
2fff5766:	2403      	movs	r4, #3
2fff5768:	e7df      	b.n	2fff572a <stm32mp1_register_clock_parents_secure+0xda>
2fff576a:	2401      	movs	r4, #1
2fff576c:	e7dd      	b.n	2fff572a <stm32mp1_register_clock_parents_secure+0xda>
2fff576e:	bf00      	nop
2fff5770:	2fffb4b9 	.word	0x2fffb4b9
2fff5774:	2fffb4a0 	.word	0x2fffb4a0
2fff5778:	3c40ffdf 	.word	0x3c40ffdf
2fff577c:	2fffb6f8 	.word	0x2fffb6f8
2fff5780:	2fffb51e 	.word	0x2fffb51e

2fff5784 <save_clock_pm_context>:
2fff5784:	b508      	push	{r3, lr}
2fff5786:	2288      	movs	r2, #136	; 0x88
2fff5788:	490d      	ldr	r1, [pc, #52]	; (2fff57c0 <save_clock_pm_context+0x3c>)
2fff578a:	2000      	movs	r0, #0
2fff578c:	f002 fd95 	bl	2fff82ba <stm32mp1_pm_save_clock_cfg>
2fff5790:	490c      	ldr	r1, [pc, #48]	; (2fff57c4 <save_clock_pm_context+0x40>)
2fff5792:	2204      	movs	r2, #4
2fff5794:	2088      	movs	r0, #136	; 0x88
2fff5796:	f002 fd90 	bl	2fff82ba <stm32mp1_pm_save_clock_cfg>
2fff579a:	490b      	ldr	r1, [pc, #44]	; (2fff57c8 <save_clock_pm_context+0x44>)
2fff579c:	2258      	movs	r2, #88	; 0x58
2fff579e:	208c      	movs	r0, #140	; 0x8c
2fff57a0:	f002 fd8b 	bl	2fff82ba <stm32mp1_pm_save_clock_cfg>
2fff57a4:	4909      	ldr	r1, [pc, #36]	; (2fff57cc <save_clock_pm_context+0x48>)
2fff57a6:	2238      	movs	r2, #56	; 0x38
2fff57a8:	20e4      	movs	r0, #228	; 0xe4
2fff57aa:	f002 fd86 	bl	2fff82ba <stm32mp1_pm_save_clock_cfg>
2fff57ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff57b2:	4907      	ldr	r1, [pc, #28]	; (2fff57d0 <save_clock_pm_context+0x4c>)
2fff57b4:	22b8      	movs	r2, #184	; 0xb8
2fff57b6:	f44f 708e 	mov.w	r0, #284	; 0x11c
2fff57ba:	f002 bd7e 	b.w	2fff82ba <stm32mp1_pm_save_clock_cfg>
2fff57be:	bf00      	nop
2fff57c0:	2fffd488 	.word	0x2fffd488
2fff57c4:	2fffd510 	.word	0x2fffd510
2fff57c8:	2fffd430 	.word	0x2fffd430
2fff57cc:	2fffd3f8 	.word	0x2fffd3f8
2fff57d0:	2fffeb08 	.word	0x2fffeb08

2fff57d4 <restore_clock_pm_context>:
2fff57d4:	b508      	push	{r3, lr}
2fff57d6:	2288      	movs	r2, #136	; 0x88
2fff57d8:	490d      	ldr	r1, [pc, #52]	; (2fff5810 <restore_clock_pm_context+0x3c>)
2fff57da:	2000      	movs	r0, #0
2fff57dc:	f002 fd89 	bl	2fff82f2 <stm32mp1_pm_restore_clock_cfg>
2fff57e0:	490c      	ldr	r1, [pc, #48]	; (2fff5814 <restore_clock_pm_context+0x40>)
2fff57e2:	2204      	movs	r2, #4
2fff57e4:	2088      	movs	r0, #136	; 0x88
2fff57e6:	f002 fd84 	bl	2fff82f2 <stm32mp1_pm_restore_clock_cfg>
2fff57ea:	490b      	ldr	r1, [pc, #44]	; (2fff5818 <restore_clock_pm_context+0x44>)
2fff57ec:	2258      	movs	r2, #88	; 0x58
2fff57ee:	208c      	movs	r0, #140	; 0x8c
2fff57f0:	f002 fd7f 	bl	2fff82f2 <stm32mp1_pm_restore_clock_cfg>
2fff57f4:	4909      	ldr	r1, [pc, #36]	; (2fff581c <restore_clock_pm_context+0x48>)
2fff57f6:	2238      	movs	r2, #56	; 0x38
2fff57f8:	20e4      	movs	r0, #228	; 0xe4
2fff57fa:	f002 fd7a 	bl	2fff82f2 <stm32mp1_pm_restore_clock_cfg>
2fff57fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5802:	4907      	ldr	r1, [pc, #28]	; (2fff5820 <restore_clock_pm_context+0x4c>)
2fff5804:	22b8      	movs	r2, #184	; 0xb8
2fff5806:	f44f 708e 	mov.w	r0, #284	; 0x11c
2fff580a:	f002 bd72 	b.w	2fff82f2 <stm32mp1_pm_restore_clock_cfg>
2fff580e:	bf00      	nop
2fff5810:	2fffd488 	.word	0x2fffd488
2fff5814:	2fffd510 	.word	0x2fffd510
2fff5818:	2fffd430 	.word	0x2fffd430
2fff581c:	2fffd3f8 	.word	0x2fffd3f8
2fff5820:	2fffeb08 	.word	0x2fffeb08

2fff5824 <stm32mp1_clock_suspend>:
2fff5824:	b538      	push	{r3, r4, r5, lr}
2fff5826:	f7fd f9d3 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff582a:	4b20      	ldr	r3, [pc, #128]	; (2fff58ac <stm32mp1_clock_suspend+0x88>)
2fff582c:	2200      	movs	r2, #0
2fff582e:	6819      	ldr	r1, [r3, #0]
2fff5830:	3201      	adds	r2, #1
2fff5832:	2a07      	cmp	r2, #7
2fff5834:	f103 0308 	add.w	r3, r3, #8
2fff5838:	5841      	ldr	r1, [r0, r1]
2fff583a:	f843 1c04 	str.w	r1, [r3, #-4]
2fff583e:	d1f6      	bne.n	2fff582e <stm32mp1_clock_suspend+0xa>
2fff5840:	f7fd f9c6 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5844:	4b1a      	ldr	r3, [pc, #104]	; (2fff58b0 <stm32mp1_clock_suspend+0x8c>)
2fff5846:	2200      	movs	r2, #0
2fff5848:	6819      	ldr	r1, [r3, #0]
2fff584a:	3201      	adds	r2, #1
2fff584c:	2a0b      	cmp	r2, #11
2fff584e:	f103 0308 	add.w	r3, r3, #8
2fff5852:	5841      	ldr	r1, [r0, r1]
2fff5854:	f843 1c04 	str.w	r1, [r3, #-4]
2fff5858:	d1f6      	bne.n	2fff5848 <stm32mp1_clock_suspend+0x24>
2fff585a:	2400      	movs	r4, #0
2fff585c:	f7fd f9b8 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5860:	4914      	ldr	r1, [pc, #80]	; (2fff58b4 <stm32mp1_clock_suspend+0x90>)
2fff5862:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff5866:	880a      	ldrh	r2, [r1, #0]
2fff5868:	3401      	adds	r4, #1
2fff586a:	2c22      	cmp	r4, #34	; 0x22
2fff586c:	f101 0104 	add.w	r1, r1, #4
2fff5870:	5815      	ldr	r5, [r2, r0]
2fff5872:	f811 2c01 	ldrb.w	r2, [r1, #-1]
2fff5876:	f1c2 0220 	rsb	r2, r2, #32
2fff587a:	fa23 f202 	lsr.w	r2, r3, r2
2fff587e:	ea02 0205 	and.w	r2, r2, r5
2fff5882:	f801 2c02 	strb.w	r2, [r1, #-2]
2fff5886:	d1ee      	bne.n	2fff5866 <stm32mp1_clock_suspend+0x42>
2fff5888:	4a0b      	ldr	r2, [pc, #44]	; (2fff58b8 <stm32mp1_clock_suspend+0x94>)
2fff588a:	8811      	ldrh	r1, [r2, #0]
2fff588c:	5808      	ldr	r0, [r1, r0]
2fff588e:	78d1      	ldrb	r1, [r2, #3]
2fff5890:	f1c1 011c 	rsb	r1, r1, #28
2fff5894:	40cb      	lsrs	r3, r1
2fff5896:	4003      	ands	r3, r0
2fff5898:	f023 030f 	bic.w	r3, r3, #15
2fff589c:	7093      	strb	r3, [r2, #2]
2fff589e:	f7fd f997 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff58a2:	2300      	movs	r3, #0
2fff58a4:	f8c0 3408 	str.w	r3, [r0, #1032]	; 0x408
2fff58a8:	bd38      	pop	{r3, r4, r5, pc}
2fff58aa:	bf00      	nop
2fff58ac:	2fffd3f8 	.word	0x2fffd3f8
2fff58b0:	2fffd430 	.word	0x2fffd430
2fff58b4:	2fffd488 	.word	0x2fffd488
2fff58b8:	2fffd510 	.word	0x2fffd510

2fff58bc <stm32mp1_clock_resume>:
2fff58bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff58be:	f7fd f987 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff58c2:	492d      	ldr	r1, [pc, #180]	; (2fff5978 <stm32mp1_clock_resume+0xbc>)
2fff58c4:	2400      	movs	r4, #0
2fff58c6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff58ca:	880e      	ldrh	r6, [r1, #0]
2fff58cc:	3401      	adds	r4, #1
2fff58ce:	78ca      	ldrb	r2, [r1, #3]
2fff58d0:	2c22      	cmp	r4, #34	; 0x22
2fff58d2:	5837      	ldr	r7, [r6, r0]
2fff58d4:	f101 0104 	add.w	r1, r1, #4
2fff58d8:	f811 5c02 	ldrb.w	r5, [r1, #-2]
2fff58dc:	f1c2 0220 	rsb	r2, r2, #32
2fff58e0:	ea85 0507 	eor.w	r5, r5, r7
2fff58e4:	fa23 f202 	lsr.w	r2, r3, r2
2fff58e8:	ea02 0205 	and.w	r2, r2, r5
2fff58ec:	ea82 0207 	eor.w	r2, r2, r7
2fff58f0:	5032      	str	r2, [r6, r0]
2fff58f2:	d1ea      	bne.n	2fff58ca <stm32mp1_clock_resume+0xe>
2fff58f4:	4a21      	ldr	r2, [pc, #132]	; (2fff597c <stm32mp1_clock_resume+0xc0>)
2fff58f6:	8814      	ldrh	r4, [r2, #0]
2fff58f8:	78d1      	ldrb	r1, [r2, #3]
2fff58fa:	5825      	ldr	r5, [r4, r0]
2fff58fc:	7892      	ldrb	r2, [r2, #2]
2fff58fe:	f1c1 011c 	rsb	r1, r1, #28
2fff5902:	406a      	eors	r2, r5
2fff5904:	40cb      	lsrs	r3, r1
2fff5906:	4013      	ands	r3, r2
2fff5908:	f023 030f 	bic.w	r3, r3, #15
2fff590c:	406b      	eors	r3, r5
2fff590e:	5023      	str	r3, [r4, r0]
2fff5910:	f7fd f95e 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5914:	4a1a      	ldr	r2, [pc, #104]	; (2fff5980 <stm32mp1_clock_resume+0xc4>)
2fff5916:	2100      	movs	r1, #0
2fff5918:	1d05      	adds	r5, r0, #4
2fff591a:	6853      	ldr	r3, [r2, #4]
2fff591c:	3101      	adds	r1, #1
2fff591e:	6814      	ldr	r4, [r2, #0]
2fff5920:	290b      	cmp	r1, #11
2fff5922:	5103      	str	r3, [r0, r4]
2fff5924:	f852 4b08 	ldr.w	r4, [r2], #8
2fff5928:	ea6f 0303 	mvn.w	r3, r3
2fff592c:	512b      	str	r3, [r5, r4]
2fff592e:	d1f4      	bne.n	2fff591a <stm32mp1_clock_resume+0x5e>
2fff5930:	f7fd f94e 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5934:	4a13      	ldr	r2, [pc, #76]	; (2fff5984 <stm32mp1_clock_resume+0xc8>)
2fff5936:	2300      	movs	r3, #0
2fff5938:	6854      	ldr	r4, [r2, #4]
2fff593a:	3301      	adds	r3, #1
2fff593c:	f852 1b08 	ldr.w	r1, [r2], #8
2fff5940:	2b07      	cmp	r3, #7
2fff5942:	5044      	str	r4, [r0, r1]
2fff5944:	d1f8      	bne.n	2fff5938 <stm32mp1_clock_resume+0x7c>
2fff5946:	4c10      	ldr	r4, [pc, #64]	; (2fff5988 <stm32mp1_clock_resume+0xcc>)
2fff5948:	2500      	movs	r5, #0
2fff594a:	4e10      	ldr	r6, [pc, #64]	; (2fff598c <stm32mp1_clock_resume+0xd0>)
2fff594c:	7963      	ldrb	r3, [r4, #5]
2fff594e:	b12b      	cbz	r3, 2fff595c <stm32mp1_clock_resume+0xa0>
2fff5950:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
2fff5954:	4620      	mov	r0, r4
2fff5956:	b15b      	cbz	r3, 2fff5970 <stm32mp1_clock_resume+0xb4>
2fff5958:	f7ff f906 	bl	2fff4b68 <__clk_enable>
2fff595c:	3501      	adds	r5, #1
2fff595e:	3408      	adds	r4, #8
2fff5960:	2d2e      	cmp	r5, #46	; 0x2e
2fff5962:	d1f3      	bne.n	2fff594c <stm32mp1_clock_resume+0x90>
2fff5964:	f7fd f934 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5968:	f240 2322 	movw	r3, #546	; 0x222
2fff596c:	6103      	str	r3, [r0, #16]
2fff596e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff5970:	f7ff f90d 	bl	2fff4b8e <__clk_disable>
2fff5974:	e7f2      	b.n	2fff595c <stm32mp1_clock_resume+0xa0>
2fff5976:	bf00      	nop
2fff5978:	2fffd488 	.word	0x2fffd488
2fff597c:	2fffd510 	.word	0x2fffd510
2fff5980:	2fffd430 	.word	0x2fffd430
2fff5984:	2fffd3f8 	.word	0x2fffd3f8
2fff5988:	2fffb586 	.word	0x2fffb586
2fff598c:	2fffeb08 	.word	0x2fffeb08

2fff5990 <stm32mp1_clock_stopmode_save>:
2fff5990:	b508      	push	{r3, lr}
2fff5992:	f7fd f91d 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5996:	f8d0 2880 	ldr.w	r2, [r0, #2176]	; 0x880
2fff599a:	4b0c      	ldr	r3, [pc, #48]	; (2fff59cc <stm32mp1_clock_stopmode_save+0x3c>)
2fff599c:	601a      	str	r2, [r3, #0]
2fff599e:	f8d0 2894 	ldr.w	r2, [r0, #2196]	; 0x894
2fff59a2:	4b0b      	ldr	r3, [pc, #44]	; (2fff59d0 <stm32mp1_clock_stopmode_save+0x40>)
2fff59a4:	601a      	str	r2, [r3, #0]
2fff59a6:	6c82      	ldr	r2, [r0, #72]	; 0x48
2fff59a8:	4b0a      	ldr	r3, [pc, #40]	; (2fff59d4 <stm32mp1_clock_stopmode_save+0x44>)
2fff59aa:	601a      	str	r2, [r3, #0]
2fff59ac:	f8d0 3830 	ldr.w	r3, [r0, #2096]	; 0x830
2fff59b0:	4a09      	ldr	r2, [pc, #36]	; (2fff59d8 <stm32mp1_clock_stopmode_save+0x48>)
2fff59b2:	f003 030f 	and.w	r3, r3, #15
2fff59b6:	6013      	str	r3, [r2, #0]
2fff59b8:	f7fd f90a 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff59bc:	68c2      	ldr	r2, [r0, #12]
2fff59be:	f240 2322 	movw	r3, #546	; 0x222
2fff59c2:	ea03 0342 	and.w	r3, r3, r2, lsl #1
2fff59c6:	60c3      	str	r3, [r0, #12]
2fff59c8:	bd08      	pop	{r3, pc}
2fff59ca:	bf00      	nop
2fff59cc:	2fffec14 	.word	0x2fffec14
2fff59d0:	2fffec18 	.word	0x2fffec18
2fff59d4:	2fffebc4 	.word	0x2fffebc4
2fff59d8:	2fffebc0 	.word	0x2fffebc0

2fff59dc <stm32mp1_clock_stopmode_resume>:
2fff59dc:	b570      	push	{r4, r5, r6, lr}
2fff59de:	f7fd f8f7 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff59e2:	4e20      	ldr	r6, [pc, #128]	; (2fff5a64 <stm32mp1_clock_stopmode_resume+0x88>)
2fff59e4:	4605      	mov	r5, r0
2fff59e6:	6833      	ldr	r3, [r6, #0]
2fff59e8:	07dc      	lsls	r4, r3, #31
2fff59ea:	d508      	bpl.n	2fff59fe <stm32mp1_clock_stopmode_resume+0x22>
2fff59ec:	f7fd f8f0 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff59f0:	f8d0 3894 	ldr.w	r3, [r0, #2196]	; 0x894
2fff59f4:	07d8      	lsls	r0, r3, #31
2fff59f6:	d402      	bmi.n	2fff59fe <stm32mp1_clock_stopmode_resume+0x22>
2fff59f8:	2003      	movs	r0, #3
2fff59fa:	f7ff f859 	bl	2fff4ab0 <stm32mp1_pll_start>
2fff59fe:	4c1a      	ldr	r4, [pc, #104]	; (2fff5a68 <stm32mp1_clock_stopmode_resume+0x8c>)
2fff5a00:	6823      	ldr	r3, [r4, #0]
2fff5a02:	07d9      	lsls	r1, r3, #31
2fff5a04:	d413      	bmi.n	2fff5a2e <stm32mp1_clock_stopmode_resume+0x52>
2fff5a06:	6831      	ldr	r1, [r6, #0]
2fff5a08:	07ca      	lsls	r2, r1, #31
2fff5a0a:	d423      	bmi.n	2fff5a54 <stm32mp1_clock_stopmode_resume+0x78>
2fff5a0c:	4b17      	ldr	r3, [pc, #92]	; (2fff5a6c <stm32mp1_clock_stopmode_resume+0x90>)
2fff5a0e:	f505 6103 	add.w	r1, r5, #2096	; 0x830
2fff5a12:	681b      	ldr	r3, [r3, #0]
2fff5a14:	64ab      	str	r3, [r5, #72]	; 0x48
2fff5a16:	4b16      	ldr	r3, [pc, #88]	; (2fff5a70 <stm32mp1_clock_stopmode_resume+0x94>)
2fff5a18:	6818      	ldr	r0, [r3, #0]
2fff5a1a:	f7ff f871 	bl	2fff4b00 <stm32mp1_set_clkdiv>
2fff5a1e:	4604      	mov	r4, r0
2fff5a20:	b9b0      	cbnz	r0, 2fff5a50 <stm32mp1_clock_stopmode_resume+0x74>
2fff5a22:	f7fd f8d5 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5a26:	f240 2322 	movw	r3, #546	; 0x222
2fff5a2a:	6103      	str	r3, [r0, #16]
2fff5a2c:	e010      	b.n	2fff5a50 <stm32mp1_clock_stopmode_resume+0x74>
2fff5a2e:	f7fd f8cf 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5a32:	f8d0 3880 	ldr.w	r3, [r0, #2176]	; 0x880
2fff5a36:	07db      	lsls	r3, r3, #31
2fff5a38:	d402      	bmi.n	2fff5a40 <stm32mp1_clock_stopmode_resume+0x64>
2fff5a3a:	2002      	movs	r0, #2
2fff5a3c:	f7ff f838 	bl	2fff4ab0 <stm32mp1_pll_start>
2fff5a40:	6821      	ldr	r1, [r4, #0]
2fff5a42:	2002      	movs	r0, #2
2fff5a44:	0909      	lsrs	r1, r1, #4
2fff5a46:	f7ff fa39 	bl	2fff4ebc <stm32mp1_pll_output>
2fff5a4a:	4604      	mov	r4, r0
2fff5a4c:	2800      	cmp	r0, #0
2fff5a4e:	d0da      	beq.n	2fff5a06 <stm32mp1_clock_stopmode_resume+0x2a>
2fff5a50:	4620      	mov	r0, r4
2fff5a52:	bd70      	pop	{r4, r5, r6, pc}
2fff5a54:	0909      	lsrs	r1, r1, #4
2fff5a56:	2003      	movs	r0, #3
2fff5a58:	f7ff fa30 	bl	2fff4ebc <stm32mp1_pll_output>
2fff5a5c:	4604      	mov	r4, r0
2fff5a5e:	2800      	cmp	r0, #0
2fff5a60:	d0d4      	beq.n	2fff5a0c <stm32mp1_clock_stopmode_resume+0x30>
2fff5a62:	e7f5      	b.n	2fff5a50 <stm32mp1_clock_stopmode_resume+0x74>
2fff5a64:	2fffec18 	.word	0x2fffec18
2fff5a68:	2fffec14 	.word	0x2fffec14
2fff5a6c:	2fffebc4 	.word	0x2fffebc4
2fff5a70:	2fffebc0 	.word	0x2fffebc0

2fff5a74 <stm32mp1_dump_clocks_state>:
2fff5a74:	4770      	bx	lr
	...

2fff5a78 <stm32mp1_clk_probe>:
2fff5a78:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff5a7a:	2400      	movs	r4, #0
2fff5a7c:	4d29      	ldr	r5, [pc, #164]	; (2fff5b24 <stm32mp1_clk_probe+0xac>)
2fff5a7e:	4e2a      	ldr	r6, [pc, #168]	; (2fff5b28 <stm32mp1_clk_probe+0xb0>)
2fff5a80:	f855 0b04 	ldr.w	r0, [r5], #4
2fff5a84:	a901      	add	r1, sp, #4
2fff5a86:	f7fe fddd 	bl	2fff4644 <fdt_osc_read_freq>
2fff5a8a:	b910      	cbnz	r0, 2fff5a92 <stm32mp1_clk_probe+0x1a>
2fff5a8c:	9b01      	ldr	r3, [sp, #4]
2fff5a8e:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
2fff5a92:	3401      	adds	r4, #1
2fff5a94:	2c06      	cmp	r4, #6
2fff5a96:	d1f3      	bne.n	2fff5a80 <stm32mp1_clk_probe+0x8>
2fff5a98:	4c24      	ldr	r4, [pc, #144]	; (2fff5b2c <stm32mp1_clk_probe+0xb4>)
2fff5a9a:	2500      	movs	r5, #0
2fff5a9c:	7963      	ldrb	r3, [r4, #5]
2fff5a9e:	b113      	cbz	r3, 2fff5aa6 <stm32mp1_clk_probe+0x2e>
2fff5aa0:	78e0      	ldrb	r0, [r4, #3]
2fff5aa2:	f7ff fdd5 	bl	2fff5650 <stm32mp1_register_clock_parents_secure>
2fff5aa6:	3501      	adds	r5, #1
2fff5aa8:	3408      	adds	r4, #8
2fff5aaa:	2d2e      	cmp	r5, #46	; 0x2e
2fff5aac:	d1f6      	bne.n	2fff5a9c <stm32mp1_clk_probe+0x24>
2fff5aae:	20e4      	movs	r0, #228	; 0xe4
2fff5ab0:	f7ff fb40 	bl	2fff5134 <stm32mp_clk_enable>
2fff5ab4:	20dc      	movs	r0, #220	; 0xdc
2fff5ab6:	f7ff fb3d 	bl	2fff5134 <stm32mp_clk_enable>
2fff5aba:	20dd      	movs	r0, #221	; 0xdd
2fff5abc:	f7ff fb3a 	bl	2fff5134 <stm32mp_clk_enable>
2fff5ac0:	20de      	movs	r0, #222	; 0xde
2fff5ac2:	f7ff fb37 	bl	2fff5134 <stm32mp_clk_enable>
2fff5ac6:	20df      	movs	r0, #223	; 0xdf
2fff5ac8:	f7ff fb34 	bl	2fff5134 <stm32mp_clk_enable>
2fff5acc:	20e2      	movs	r0, #226	; 0xe2
2fff5ace:	f7ff fb31 	bl	2fff5134 <stm32mp_clk_enable>
2fff5ad2:	20e0      	movs	r0, #224	; 0xe0
2fff5ad4:	f7ff fb2e 	bl	2fff5134 <stm32mp_clk_enable>
2fff5ad8:	20e1      	movs	r0, #225	; 0xe1
2fff5ada:	f7ff fb2b 	bl	2fff5134 <stm32mp_clk_enable>
2fff5ade:	20e5      	movs	r0, #229	; 0xe5
2fff5ae0:	f7ff fb28 	bl	2fff5134 <stm32mp_clk_enable>
2fff5ae4:	20e6      	movs	r0, #230	; 0xe6
2fff5ae6:	f7ff fb25 	bl	2fff5134 <stm32mp_clk_enable>
2fff5aea:	2043      	movs	r0, #67	; 0x43
2fff5aec:	f7ff fb22 	bl	2fff5134 <stm32mp_clk_enable>
2fff5af0:	2042      	movs	r0, #66	; 0x42
2fff5af2:	f7ff fb1f 	bl	2fff5134 <stm32mp_clk_enable>
2fff5af6:	2071      	movs	r0, #113	; 0x71
2fff5af8:	f7ff fb1c 	bl	2fff5134 <stm32mp_clk_enable>
2fff5afc:	2080      	movs	r0, #128	; 0x80
2fff5afe:	f7ff fb19 	bl	2fff5134 <stm32mp_clk_enable>
2fff5b02:	2041      	movs	r0, #65	; 0x41
2fff5b04:	f7ff fb16 	bl	2fff5134 <stm32mp_clk_enable>
2fff5b08:	20c2      	movs	r0, #194	; 0xc2
2fff5b0a:	f7ff fb3f 	bl	2fff518c <stm32mp_clk_get_rate>
2fff5b0e:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
2fff5b12:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff5b16:	fbb0 f0f3 	udiv	r0, r0, r3
2fff5b1a:	4b05      	ldr	r3, [pc, #20]	; (2fff5b30 <stm32mp1_clk_probe+0xb8>)
2fff5b1c:	6018      	str	r0, [r3, #0]
2fff5b1e:	2000      	movs	r0, #0
2fff5b20:	b002      	add	sp, #8
2fff5b22:	bd70      	pop	{r4, r5, r6, pc}
2fff5b24:	2fffd514 	.word	0x2fffd514
2fff5b28:	2fffec24 	.word	0x2fffec24
2fff5b2c:	2fffb586 	.word	0x2fffb586
2fff5b30:	2fffeb04 	.word	0x2fffeb04

2fff5b34 <do_sw_handshake>:
2fff5b34:	b508      	push	{r3, lr}
2fff5b36:	f7fd f83f 	bl	2fff2bb8 <stm32mp_ddrctrl_base>
2fff5b3a:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2fff5b3e:	f023 0301 	bic.w	r3, r3, #1
2fff5b42:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2fff5b46:	bd08      	pop	{r3, pc}

2fff5b48 <do_sw_ack>:
2fff5b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff5b4a:	f7fd f835 	bl	2fff2bb8 <stm32mp_ddrctrl_base>
2fff5b4e:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2fff5b52:	4604      	mov	r4, r0
2fff5b54:	f043 0301 	orr.w	r3, r3, #1
2fff5b58:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2fff5b5c:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff5b60:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff5b64:	4a0c      	ldr	r2, [pc, #48]	; (2fff5b98 <do_sw_ack+0x50>)
2fff5b66:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
2fff5b6a:	2300      	movs	r3, #0
2fff5b6c:	fba1 0100 	umull	r0, r1, r1, r0
2fff5b70:	f003 e820 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff5b74:	1980      	adds	r0, r0, r6
2fff5b76:	eb41 0107 	adc.w	r1, r1, r7
2fff5b7a:	f8d4 3324 	ldr.w	r3, [r4, #804]	; 0x324
2fff5b7e:	07db      	lsls	r3, r3, #31
2fff5b80:	d500      	bpl.n	2fff5b84 <do_sw_ack+0x3c>
2fff5b82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff5b84:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5b88:	4290      	cmp	r0, r2
2fff5b8a:	eb71 0303 	sbcs.w	r3, r1, r3
2fff5b8e:	d2f4      	bcs.n	2fff5b7a <do_sw_ack+0x32>
2fff5b90:	f7fc ff0c 	bl	2fff29ac <console_flush>
2fff5b94:	f002 ee70 	blx	2fff8878 <do_panic>
2fff5b98:	000f4240 	.word	0x000f4240

2fff5b9c <ddr_enable_clock>:
2fff5b9c:	b508      	push	{r3, lr}
2fff5b9e:	f7ff fabd 	bl	2fff511c <stm32mp1_clk_rcc_regs_lock>
2fff5ba2:	f7fd f815 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5ba6:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
2fff5baa:	f443 7315 	orr.w	r3, r3, #596	; 0x254
2fff5bae:	f043 0301 	orr.w	r3, r3, #1
2fff5bb2:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8
2fff5bb6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5bba:	f7ff bab5 	b.w	2fff5128 <stm32mp1_clk_rcc_regs_unlock>
	...

2fff5bc0 <ddr_sw_self_refresh_exit>:
2fff5bc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff5bc4:	f7fd f804 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5bc8:	4606      	mov	r6, r0
2fff5bca:	f7fc fffd 	bl	2fff2bc8 <stm32mp_pwr_base>
2fff5bce:	4607      	mov	r7, r0
2fff5bd0:	f7fc fff2 	bl	2fff2bb8 <stm32mp_ddrctrl_base>
2fff5bd4:	4605      	mov	r5, r0
2fff5bd6:	f7fc fff3 	bl	2fff2bc0 <stm32mp_ddrphyc_base>
2fff5bda:	4604      	mov	r4, r0
2fff5bdc:	f7ff ffde 	bl	2fff5b9c <ddr_enable_clock>
2fff5be0:	f7ff ffa8 	bl	2fff5b34 <do_sw_handshake>
2fff5be4:	f8d5 31b0 	ldr.w	r3, [r5, #432]	; 0x1b0
2fff5be8:	f023 0301 	bic.w	r3, r3, #1
2fff5bec:	f8c5 31b0 	str.w	r3, [r5, #432]	; 0x1b0
2fff5bf0:	f7ff ffaa 	bl	2fff5b48 <do_sw_ack>
2fff5bf4:	f7ff fa92 	bl	2fff511c <stm32mp1_clk_rcc_regs_lock>
2fff5bf8:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff5bfc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff5c00:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff5c04:	f7ff fa90 	bl	2fff5128 <stm32mp1_clk_rcc_regs_unlock>
2fff5c08:	6963      	ldr	r3, [r4, #20]
2fff5c0a:	2032      	movs	r0, #50	; 0x32
2fff5c0c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5c10:	6163      	str	r3, [r4, #20]
2fff5c12:	f8d4 31cc 	ldr.w	r3, [r4, #460]	; 0x1cc
2fff5c16:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5c1a:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
2fff5c1e:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
2fff5c22:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5c26:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
2fff5c2a:	f8d4 324c 	ldr.w	r3, [r4, #588]	; 0x24c
2fff5c2e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5c32:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
2fff5c36:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
2fff5c3a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5c3e:	f8c4 328c 	str.w	r3, [r4, #652]	; 0x28c
2fff5c42:	f7fe f94d 	bl	2fff3ee0 <udelay>
2fff5c46:	f7ff fa69 	bl	2fff511c <stm32mp1_clk_rcc_regs_lock>
2fff5c4a:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff5c4e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff5c52:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff5c56:	f7ff fa67 	bl	2fff5128 <stm32mp1_clk_rcc_regs_unlock>
2fff5c5a:	6963      	ldr	r3, [r4, #20]
2fff5c5c:	200a      	movs	r0, #10
2fff5c5e:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
2fff5c62:	6163      	str	r3, [r4, #20]
2fff5c64:	f7fe f93c 	bl	2fff3ee0 <udelay>
2fff5c68:	6963      	ldr	r3, [r4, #20]
2fff5c6a:	2001      	movs	r0, #1
2fff5c6c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
2fff5c70:	6163      	str	r3, [r4, #20]
2fff5c72:	2317      	movs	r3, #23
2fff5c74:	6063      	str	r3, [r4, #4]
2fff5c76:	f7fe f933 	bl	2fff3ee0 <udelay>
2fff5c7a:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff5c7e:	ec5a 9f0e 	mrrc	15, 0, r9, sl, cr14
2fff5c82:	4a48      	ldr	r2, [pc, #288]	; (2fff5da4 <ddr_sw_self_refresh_exit+0x1e4>)
2fff5c84:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
2fff5c88:	2300      	movs	r3, #0
2fff5c8a:	fba1 0100 	umull	r0, r1, r1, r0
2fff5c8e:	f002 ef92 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff5c92:	eb10 0309 	adds.w	r3, r0, r9
2fff5c96:	eb41 020a 	adc.w	r2, r1, sl
2fff5c9a:	68e1      	ldr	r1, [r4, #12]
2fff5c9c:	07c9      	lsls	r1, r1, #31
2fff5c9e:	d570      	bpl.n	2fff5d82 <ddr_sw_self_refresh_exit+0x1c2>
2fff5ca0:	f7ff ff48 	bl	2fff5b34 <do_sw_handshake>
2fff5ca4:	f8d5 31b0 	ldr.w	r3, [r5, #432]	; 0x1b0
2fff5ca8:	f043 0301 	orr.w	r3, r3, #1
2fff5cac:	f8c5 31b0 	str.w	r3, [r5, #432]	; 0x1b0
2fff5cb0:	f7ff ff4a 	bl	2fff5b48 <do_sw_ack>
2fff5cb4:	f7fc ff98 	bl	2fff2be8 <stm32mp_pwr_regs_lock>
2fff5cb8:	68fb      	ldr	r3, [r7, #12]
2fff5cba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
2fff5cbe:	60fb      	str	r3, [r7, #12]
2fff5cc0:	f7fc ff9e 	bl	2fff2c00 <stm32mp_pwr_regs_unlock>
2fff5cc4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
2fff5cc8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5ccc:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
2fff5cd0:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5cd2:	f023 0308 	bic.w	r3, r3, #8
2fff5cd6:	6263      	str	r3, [r4, #36]	; 0x24
2fff5cd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5cda:	f043 0302 	orr.w	r3, r3, #2
2fff5cde:	6263      	str	r3, [r4, #36]	; 0x24
2fff5ce0:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5ce2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
2fff5ce6:	6263      	str	r3, [r4, #36]	; 0x24
2fff5ce8:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5cea:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
2fff5cee:	6263      	str	r3, [r4, #36]	; 0x24
2fff5cf0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff5cf2:	f023 0304 	bic.w	r3, r3, #4
2fff5cf6:	62a3      	str	r3, [r4, #40]	; 0x28
2fff5cf8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff5cfa:	f023 0308 	bic.w	r3, r3, #8
2fff5cfe:	62a3      	str	r3, [r4, #40]	; 0x28
2fff5d00:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5d02:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
2fff5d06:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5d08:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5d0a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
2fff5d0e:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5d10:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5d12:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff5d16:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5d18:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5d1a:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
2fff5d1e:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5d20:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff5d22:	f023 0320 	bic.w	r3, r3, #32
2fff5d26:	632b      	str	r3, [r5, #48]	; 0x30
2fff5d28:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff5d2c:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff5d30:	4a1c      	ldr	r2, [pc, #112]	; (2fff5da4 <ddr_sw_self_refresh_exit+0x1e4>)
2fff5d32:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
2fff5d36:	2300      	movs	r3, #0
2fff5d38:	4644      	mov	r4, r8
2fff5d3a:	fba1 0100 	umull	r0, r1, r1, r0
2fff5d3e:	f002 ef3a 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff5d42:	1900      	adds	r0, r0, r4
2fff5d44:	eb41 0109 	adc.w	r1, r1, r9
2fff5d48:	686b      	ldr	r3, [r5, #4]
2fff5d4a:	f003 0307 	and.w	r3, r3, #7
2fff5d4e:	2b01      	cmp	r3, #1
2fff5d50:	d121      	bne.n	2fff5d96 <ddr_sw_self_refresh_exit+0x1d6>
2fff5d52:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff5d56:	f043 0301 	orr.w	r3, r3, #1
2fff5d5a:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff5d5e:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff5d62:	f043 0301 	orr.w	r3, r3, #1
2fff5d66:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff5d6a:	f7ff f9d7 	bl	2fff511c <stm32mp1_clk_rcc_regs_lock>
2fff5d6e:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff5d72:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff5d76:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff5d7a:	f7ff f9d5 	bl	2fff5128 <stm32mp1_clk_rcc_regs_unlock>
2fff5d7e:	2000      	movs	r0, #0
2fff5d80:	e007      	b.n	2fff5d92 <ddr_sw_self_refresh_exit+0x1d2>
2fff5d82:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff5d86:	4283      	cmp	r3, r0
2fff5d88:	eb72 0101 	sbcs.w	r1, r2, r1
2fff5d8c:	d285      	bcs.n	2fff5c9a <ddr_sw_self_refresh_exit+0xda>
2fff5d8e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5d92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff5d96:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5d9a:	4290      	cmp	r0, r2
2fff5d9c:	eb71 0303 	sbcs.w	r3, r1, r3
2fff5da0:	d2d2      	bcs.n	2fff5d48 <ddr_sw_self_refresh_exit+0x188>
2fff5da2:	e7f4      	b.n	2fff5d8e <ddr_sw_self_refresh_exit+0x1ce>
2fff5da4:	000f4240 	.word	0x000f4240

2fff5da8 <ddr_standby_sr_entry>:
2fff5da8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff5dac:	4604      	mov	r4, r0
2fff5dae:	f7fc ff0b 	bl	2fff2bc8 <stm32mp_pwr_base>
2fff5db2:	4682      	mov	sl, r0
2fff5db4:	f7fc ff04 	bl	2fff2bc0 <stm32mp_ddrphyc_base>
2fff5db8:	b124      	cbz	r4, 2fff5dc4 <ddr_standby_sr_entry+0x1c>
2fff5dba:	f8d0 3180 	ldr.w	r3, [r0, #384]	; 0x180
2fff5dbe:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
2fff5dc2:	6023      	str	r3, [r4, #0]
2fff5dc4:	f7fc ff04 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff5dc8:	4606      	mov	r6, r0
2fff5dca:	f7fc fefd 	bl	2fff2bc8 <stm32mp_pwr_base>
2fff5dce:	4607      	mov	r7, r0
2fff5dd0:	f7fc fef2 	bl	2fff2bb8 <stm32mp_ddrctrl_base>
2fff5dd4:	4605      	mov	r5, r0
2fff5dd6:	f7fc fef3 	bl	2fff2bc0 <stm32mp_ddrphyc_base>
2fff5dda:	4604      	mov	r4, r0
2fff5ddc:	f7ff f99e 	bl	2fff511c <stm32mp1_clk_rcc_regs_lock>
2fff5de0:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff5de4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
2fff5de8:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff5dec:	f7ff f99c 	bl	2fff5128 <stm32mp1_clk_rcc_regs_unlock>
2fff5df0:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff5df4:	f023 0301 	bic.w	r3, r3, #1
2fff5df8:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff5dfc:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff5e00:	f023 0301 	bic.w	r3, r3, #1
2fff5e04:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff5e08:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff5e0c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5e10:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
2fff5e14:	e9cd 2300 	strd	r2, r3, [sp]
2fff5e18:	f8dd 8000 	ldr.w	r8, [sp]
2fff5e1c:	2300      	movs	r3, #0
2fff5e1e:	4a70      	ldr	r2, [pc, #448]	; (2fff5fe0 <ddr_standby_sr_entry+0x238>)
2fff5e20:	fba1 0100 	umull	r0, r1, r1, r0
2fff5e24:	f002 eec6 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff5e28:	9b01      	ldr	r3, [sp, #4]
2fff5e2a:	eb10 0008 	adds.w	r0, r0, r8
2fff5e2e:	eb41 0103 	adc.w	r1, r1, r3
2fff5e32:	f8d5 33fc 	ldr.w	r3, [r5, #1020]	; 0x3fc
2fff5e36:	bb1b      	cbnz	r3, 2fff5e80 <ddr_standby_sr_entry+0xd8>
2fff5e38:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff5e3a:	f043 0320 	orr.w	r3, r3, #32
2fff5e3e:	632b      	str	r3, [r5, #48]	; 0x30
2fff5e40:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff5e44:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5e48:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
2fff5e4c:	e9cd 2300 	strd	r2, r3, [sp]
2fff5e50:	f8dd 8000 	ldr.w	r8, [sp]
2fff5e54:	2300      	movs	r3, #0
2fff5e56:	4a62      	ldr	r2, [pc, #392]	; (2fff5fe0 <ddr_standby_sr_entry+0x238>)
2fff5e58:	fba1 0100 	umull	r0, r1, r1, r0
2fff5e5c:	f002 eeaa 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff5e60:	9b01      	ldr	r3, [sp, #4]
2fff5e62:	eb10 0008 	adds.w	r0, r0, r8
2fff5e66:	eb41 0103 	adc.w	r1, r1, r3
2fff5e6a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5e6e:	4290      	cmp	r0, r2
2fff5e70:	eb71 0303 	sbcs.w	r3, r1, r3
2fff5e74:	d21b      	bcs.n	2fff5eae <ddr_standby_sr_entry+0x106>
2fff5e76:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff5e78:	f023 0320 	bic.w	r3, r3, #32
2fff5e7c:	632b      	str	r3, [r5, #48]	; 0x30
2fff5e7e:	e005      	b.n	2fff5e8c <ddr_standby_sr_entry+0xe4>
2fff5e80:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5e84:	4290      	cmp	r0, r2
2fff5e86:	eb71 0303 	sbcs.w	r3, r1, r3
2fff5e8a:	d2d2      	bcs.n	2fff5e32 <ddr_standby_sr_entry+0x8a>
2fff5e8c:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff5e90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5e94:	f043 0301 	orr.w	r3, r3, #1
2fff5e98:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff5e9c:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff5ea0:	f043 0301 	orr.w	r3, r3, #1
2fff5ea4:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff5ea8:	b002      	add	sp, #8
2fff5eaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff5eae:	686b      	ldr	r3, [r5, #4]
2fff5eb0:	f003 0207 	and.w	r2, r3, #7
2fff5eb4:	2a03      	cmp	r2, #3
2fff5eb6:	d1d8      	bne.n	2fff5e6a <ddr_standby_sr_entry+0xc2>
2fff5eb8:	f003 0330 	and.w	r3, r3, #48	; 0x30
2fff5ebc:	2b20      	cmp	r3, #32
2fff5ebe:	d1d4      	bne.n	2fff5e6a <ddr_standby_sr_entry+0xc2>
2fff5ec0:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5ec2:	200a      	movs	r0, #10
2fff5ec4:	f043 0308 	orr.w	r3, r3, #8
2fff5ec8:	6263      	str	r3, [r4, #36]	; 0x24
2fff5eca:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5ecc:	f043 0310 	orr.w	r3, r3, #16
2fff5ed0:	6263      	str	r3, [r4, #36]	; 0x24
2fff5ed2:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5ed4:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
2fff5ed8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff5edc:	6263      	str	r3, [r4, #36]	; 0x24
2fff5ede:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5ee0:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
2fff5ee4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
2fff5ee8:	6263      	str	r3, [r4, #36]	; 0x24
2fff5eea:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5eec:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
2fff5ef0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
2fff5ef4:	6263      	str	r3, [r4, #36]	; 0x24
2fff5ef6:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5ef8:	f023 0302 	bic.w	r3, r3, #2
2fff5efc:	6263      	str	r3, [r4, #36]	; 0x24
2fff5efe:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff5f00:	f043 0304 	orr.w	r3, r3, #4
2fff5f04:	62a3      	str	r3, [r4, #40]	; 0x28
2fff5f06:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff5f08:	f043 0308 	orr.w	r3, r3, #8
2fff5f0c:	62a3      	str	r3, [r4, #40]	; 0x28
2fff5f0e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5f10:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
2fff5f14:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff5f18:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5f1a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5f1c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff5f20:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5f22:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5f24:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
2fff5f28:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff5f2c:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5f2e:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
2fff5f32:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff5f36:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
2fff5f3a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5f3c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
2fff5f40:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5f42:	f7fd ffcd 	bl	2fff3ee0 <udelay>
2fff5f46:	f7fc fe4f 	bl	2fff2be8 <stm32mp_pwr_regs_lock>
2fff5f4a:	68fb      	ldr	r3, [r7, #12]
2fff5f4c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
2fff5f50:	60fb      	str	r3, [r7, #12]
2fff5f52:	f7fc fe55 	bl	2fff2c00 <stm32mp_pwr_regs_unlock>
2fff5f56:	f7ff f8e1 	bl	2fff511c <stm32mp1_clk_rcc_regs_lock>
2fff5f5a:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff5f5e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff5f62:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff5f66:	f7ff f8df 	bl	2fff5128 <stm32mp1_clk_rcc_regs_unlock>
2fff5f6a:	6963      	ldr	r3, [r4, #20]
2fff5f6c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff5f70:	6163      	str	r3, [r4, #20]
2fff5f72:	f8d4 31cc 	ldr.w	r3, [r4, #460]	; 0x1cc
2fff5f76:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff5f7a:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
2fff5f7e:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
2fff5f82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff5f86:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
2fff5f8a:	f8d4 324c 	ldr.w	r3, [r4, #588]	; 0x24c
2fff5f8e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff5f92:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
2fff5f96:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
2fff5f9a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff5f9e:	f8c4 328c 	str.w	r3, [r4, #652]	; 0x28c
2fff5fa2:	f7ff f8bb 	bl	2fff511c <stm32mp1_clk_rcc_regs_lock>
2fff5fa6:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff5faa:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff5fae:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff5fb2:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff5fb6:	f423 7311 	bic.w	r3, r3, #580	; 0x244
2fff5fba:	f023 0301 	bic.w	r3, r3, #1
2fff5fbe:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff5fc2:	f7ff f8b1 	bl	2fff5128 <stm32mp1_clk_rcc_regs_unlock>
2fff5fc6:	f7fc fe0f 	bl	2fff2be8 <stm32mp_pwr_regs_lock>
2fff5fca:	f8da 300c 	ldr.w	r3, [sl, #12]
2fff5fce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
2fff5fd2:	f8ca 300c 	str.w	r3, [sl, #12]
2fff5fd6:	f7fc fe13 	bl	2fff2c00 <stm32mp_pwr_regs_unlock>
2fff5fda:	2000      	movs	r0, #0
2fff5fdc:	e764      	b.n	2fff5ea8 <ddr_standby_sr_entry+0x100>
2fff5fde:	bf00      	nop
2fff5fe0:	000f4240 	.word	0x000f4240

2fff5fe4 <ddr_read_sr_mode>:
2fff5fe4:	b508      	push	{r3, lr}
2fff5fe6:	f7fc fde7 	bl	2fff2bb8 <stm32mp_ddrctrl_base>
2fff5fea:	6b03      	ldr	r3, [r0, #48]	; 0x30
2fff5fec:	4a02      	ldr	r2, [pc, #8]	; (2fff5ff8 <ddr_read_sr_mode+0x14>)
2fff5fee:	f003 0309 	and.w	r3, r3, #9
2fff5ff2:	5cd0      	ldrb	r0, [r2, r3]
2fff5ff4:	bd08      	pop	{r3, pc}
2fff5ff6:	bf00      	nop
2fff5ff8:	2fffb8cf 	.word	0x2fffb8cf

2fff5ffc <ddr_set_sr_mode>:
2fff5ffc:	2802      	cmp	r0, #2
2fff5ffe:	b538      	push	{r3, r4, r5, lr}
2fff6000:	d064      	beq.n	2fff60cc <ddr_set_sr_mode+0xd0>
2fff6002:	2803      	cmp	r0, #3
2fff6004:	f000 809a 	beq.w	2fff613c <ddr_set_sr_mode+0x140>
2fff6008:	2801      	cmp	r0, #1
2fff600a:	f040 80d3 	bne.w	2fff61b4 <ddr_set_sr_mode+0x1b8>
2fff600e:	f7fc fddf 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff6012:	4604      	mov	r4, r0
2fff6014:	f7fc fdd0 	bl	2fff2bb8 <stm32mp_ddrctrl_base>
2fff6018:	4605      	mov	r5, r0
2fff601a:	f7ff f87f 	bl	2fff511c <stm32mp1_clk_rcc_regs_lock>
2fff601e:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6022:	f043 0302 	orr.w	r3, r3, #2
2fff6026:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff602a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff602e:	f043 0308 	orr.w	r3, r3, #8
2fff6032:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6036:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff603a:	f043 0301 	orr.w	r3, r3, #1
2fff603e:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6042:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6046:	f043 0304 	orr.w	r3, r3, #4
2fff604a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff604e:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6052:	f043 0380 	orr.w	r3, r3, #128	; 0x80
2fff6056:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff605a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff605e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
2fff6062:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6066:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff606a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
2fff606e:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6072:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6076:	f443 7300 	orr.w	r3, r3, #512	; 0x200
2fff607a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff607e:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6082:	f043 0310 	orr.w	r3, r3, #16
2fff6086:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff608a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff608e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
2fff6092:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6096:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff609a:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff609e:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff60a2:	f7ff f841 	bl	2fff5128 <stm32mp1_clk_rcc_regs_unlock>
2fff60a6:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff60a8:	f023 0301 	bic.w	r3, r3, #1
2fff60ac:	63ab      	str	r3, [r5, #56]	; 0x38
2fff60ae:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff60b0:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff60b4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff60b8:	636b      	str	r3, [r5, #52]	; 0x34
2fff60ba:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff60bc:	f023 0308 	bic.w	r3, r3, #8
2fff60c0:	632b      	str	r3, [r5, #48]	; 0x30
2fff60c2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff60c4:	f023 0301 	bic.w	r3, r3, #1
2fff60c8:	632b      	str	r3, [r5, #48]	; 0x30
2fff60ca:	bd38      	pop	{r3, r4, r5, pc}
2fff60cc:	f7fc fd80 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff60d0:	4604      	mov	r4, r0
2fff60d2:	f7fc fd71 	bl	2fff2bb8 <stm32mp_ddrctrl_base>
2fff60d6:	4605      	mov	r5, r0
2fff60d8:	f7ff f820 	bl	2fff511c <stm32mp1_clk_rcc_regs_lock>
2fff60dc:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff60e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff60e4:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff60e8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff60ec:	f023 0302 	bic.w	r3, r3, #2
2fff60f0:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff60f4:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff60f8:	f023 0308 	bic.w	r3, r3, #8
2fff60fc:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6100:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6104:	f043 0320 	orr.w	r3, r3, #32
2fff6108:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff610c:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6110:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff6114:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
2fff6118:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff611c:	f7ff f804 	bl	2fff5128 <stm32mp1_clk_rcc_regs_unlock>
2fff6120:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff6122:	f043 0301 	orr.w	r3, r3, #1
2fff6126:	63ab      	str	r3, [r5, #56]	; 0x38
2fff6128:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff612a:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff612e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff6132:	636b      	str	r3, [r5, #52]	; 0x34
2fff6134:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6136:	f043 0308 	orr.w	r3, r3, #8
2fff613a:	e7c5      	b.n	2fff60c8 <ddr_set_sr_mode+0xcc>
2fff613c:	f7fc fd48 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff6140:	4604      	mov	r4, r0
2fff6142:	f7fc fd39 	bl	2fff2bb8 <stm32mp_ddrctrl_base>
2fff6146:	4605      	mov	r5, r0
2fff6148:	f7fe ffe8 	bl	2fff511c <stm32mp1_clk_rcc_regs_lock>
2fff614c:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6150:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff6154:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6158:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff615c:	f043 0302 	orr.w	r3, r3, #2
2fff6160:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6164:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6168:	f043 0308 	orr.w	r3, r3, #8
2fff616c:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6170:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6174:	f043 0320 	orr.w	r3, r3, #32
2fff6178:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff617c:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6180:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff6184:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff6188:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff618c:	f7fe ffcc 	bl	2fff5128 <stm32mp1_clk_rcc_regs_unlock>
2fff6190:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff6192:	f043 0301 	orr.w	r3, r3, #1
2fff6196:	63ab      	str	r3, [r5, #56]	; 0x38
2fff6198:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff619a:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff619e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff61a2:	636b      	str	r3, [r5, #52]	; 0x34
2fff61a4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff61a6:	f043 0308 	orr.w	r3, r3, #8
2fff61aa:	632b      	str	r3, [r5, #48]	; 0x30
2fff61ac:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff61ae:	f043 0301 	orr.w	r3, r3, #1
2fff61b2:	e789      	b.n	2fff60c8 <ddr_set_sr_mode+0xcc>
2fff61b4:	4803      	ldr	r0, [pc, #12]	; (2fff61c4 <ddr_set_sr_mode+0x1c8>)
2fff61b6:	f7fc fb55 	bl	2fff2864 <tf_log>
2fff61ba:	f7fc fbf7 	bl	2fff29ac <console_flush>
2fff61be:	f002 eb5c 	blx	2fff8878 <do_panic>
2fff61c2:	bf00      	nop
2fff61c4:	2fffb8b3 	.word	0x2fffb8b3

2fff61c8 <ddr_save_sr_mode>:
2fff61c8:	b508      	push	{r3, lr}
2fff61ca:	f7ff ff0b 	bl	2fff5fe4 <ddr_read_sr_mode>
2fff61ce:	4b01      	ldr	r3, [pc, #4]	; (2fff61d4 <ddr_save_sr_mode+0xc>)
2fff61d0:	6018      	str	r0, [r3, #0]
2fff61d2:	bd08      	pop	{r3, pc}
2fff61d4:	2fffec3c 	.word	0x2fffec3c

2fff61d8 <ddr_restore_sr_mode>:
2fff61d8:	4b01      	ldr	r3, [pc, #4]	; (2fff61e0 <ddr_restore_sr_mode+0x8>)
2fff61da:	6818      	ldr	r0, [r3, #0]
2fff61dc:	f7ff bf0e 	b.w	2fff5ffc <ddr_set_sr_mode>
2fff61e0:	2fffec3c 	.word	0x2fffec3c

2fff61e4 <fdt32_to_cpu>:
2fff61e4:	ba00      	rev	r0, r0
2fff61e6:	4770      	bx	lr

2fff61e8 <set_gpio>:
2fff61e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff61ec:	460d      	mov	r5, r1
2fff61ee:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
2fff61f2:	4680      	mov	r8, r0
2fff61f4:	4693      	mov	fp, r2
2fff61f6:	461e      	mov	r6, r3
2fff61f8:	e9dd a70c 	ldrd	sl, r7, [sp, #48]	; 0x30
2fff61fc:	f7fc fd0c 	bl	2fff2c18 <stm32_get_gpio_bank_base>
2fff6200:	4604      	mov	r4, r0
2fff6202:	4640      	mov	r0, r8
2fff6204:	f7fc fd80 	bl	2fff2d08 <stm32_get_gpio_bank_clock>
2fff6208:	2d0f      	cmp	r5, #15
2fff620a:	d903      	bls.n	2fff6214 <set_gpio+0x2c>
2fff620c:	4835      	ldr	r0, [pc, #212]	; (2fff62e4 <set_gpio+0xfc>)
2fff620e:	21d0      	movs	r1, #208	; 0xd0
2fff6210:	f003 fb6c 	bl	2fff98ec <__assert>
2fff6214:	9001      	str	r0, [sp, #4]
2fff6216:	f7fe ff8d 	bl	2fff5134 <stm32mp_clk_enable>
2fff621a:	006b      	lsls	r3, r5, #1
2fff621c:	2103      	movs	r1, #3
2fff621e:	f8d4 c000 	ldr.w	ip, [r4]
2fff6222:	f01b 0f10 	tst.w	fp, #16
2fff6226:	fa01 f103 	lsl.w	r1, r1, r3
2fff622a:	ea6f 0001 	mvn.w	r0, r1
2fff622e:	ea2c 0101 	bic.w	r1, ip, r1
2fff6232:	6021      	str	r1, [r4, #0]
2fff6234:	f02b 0110 	bic.w	r1, fp, #16
2fff6238:	f8d4 c000 	ldr.w	ip, [r4]
2fff623c:	fa01 f103 	lsl.w	r1, r1, r3
2fff6240:	ea41 010c 	orr.w	r1, r1, ip
2fff6244:	6021      	str	r1, [r4, #0]
2fff6246:	f04f 0101 	mov.w	r1, #1
2fff624a:	f8d4 c004 	ldr.w	ip, [r4, #4]
2fff624e:	fa01 f105 	lsl.w	r1, r1, r5
2fff6252:	bf14      	ite	ne
2fff6254:	ea4c 0101 	orrne.w	r1, ip, r1
2fff6258:	ea2c 0101 	biceq.w	r1, ip, r1
2fff625c:	2d07      	cmp	r5, #7
2fff625e:	9a01      	ldr	r2, [sp, #4]
2fff6260:	6061      	str	r1, [r4, #4]
2fff6262:	68a1      	ldr	r1, [r4, #8]
2fff6264:	fa06 f603 	lsl.w	r6, r6, r3
2fff6268:	fa0a fa03 	lsl.w	sl, sl, r3
2fff626c:	ea01 0100 	and.w	r1, r1, r0
2fff6270:	60a1      	str	r1, [r4, #8]
2fff6272:	f04f 030f 	mov.w	r3, #15
2fff6276:	68a1      	ldr	r1, [r4, #8]
2fff6278:	ea46 0601 	orr.w	r6, r6, r1
2fff627c:	60a6      	str	r6, [r4, #8]
2fff627e:	68e1      	ldr	r1, [r4, #12]
2fff6280:	ea00 0001 	and.w	r0, r0, r1
2fff6284:	60e0      	str	r0, [r4, #12]
2fff6286:	68e1      	ldr	r1, [r4, #12]
2fff6288:	ea4a 0101 	orr.w	r1, sl, r1
2fff628c:	60e1      	str	r1, [r4, #12]
2fff628e:	d817      	bhi.n	2fff62c0 <set_gpio+0xd8>
2fff6290:	00a9      	lsls	r1, r5, #2
2fff6292:	6a20      	ldr	r0, [r4, #32]
2fff6294:	408b      	lsls	r3, r1
2fff6296:	ea20 0303 	bic.w	r3, r0, r3
2fff629a:	6223      	str	r3, [r4, #32]
2fff629c:	6a23      	ldr	r3, [r4, #32]
2fff629e:	fa07 f101 	lsl.w	r1, r7, r1
2fff62a2:	4319      	orrs	r1, r3
2fff62a4:	6221      	str	r1, [r4, #32]
2fff62a6:	4610      	mov	r0, r2
2fff62a8:	f7fe ff47 	bl	2fff513a <stm32mp_clk_disable>
2fff62ac:	f1b9 0f02 	cmp.w	r9, #2
2fff62b0:	4629      	mov	r1, r5
2fff62b2:	4640      	mov	r0, r8
2fff62b4:	d111      	bne.n	2fff62da <set_gpio+0xf2>
2fff62b6:	b003      	add	sp, #12
2fff62b8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff62bc:	f7fa bb68 	b.w	2fff0990 <stm32mp_register_secure_gpio>
2fff62c0:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff62c2:	f1a5 0108 	sub.w	r1, r5, #8
2fff62c6:	0089      	lsls	r1, r1, #2
2fff62c8:	408b      	lsls	r3, r1
2fff62ca:	ea20 0303 	bic.w	r3, r0, r3
2fff62ce:	6263      	str	r3, [r4, #36]	; 0x24
2fff62d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff62d2:	408f      	lsls	r7, r1
2fff62d4:	431f      	orrs	r7, r3
2fff62d6:	6267      	str	r7, [r4, #36]	; 0x24
2fff62d8:	e7e5      	b.n	2fff62a6 <set_gpio+0xbe>
2fff62da:	b003      	add	sp, #12
2fff62dc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff62e0:	f7fa bb6a 	b.w	2fff09b8 <stm32mp_register_non_secure_gpio>
2fff62e4:	2fffb8d9 	.word	0x2fffb8d9

2fff62e8 <dt_set_pinctrl_config>:
2fff62e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff62ec:	b091      	sub	sp, #68	; 0x44
2fff62ee:	2700      	movs	r7, #0
2fff62f0:	4604      	mov	r4, r0
2fff62f2:	970d      	str	r7, [sp, #52]	; 0x34
2fff62f4:	f001 fd94 	bl	2fff7e20 <fdt_get_status>
2fff62f8:	9004      	str	r0, [sp, #16]
2fff62fa:	a80e      	add	r0, sp, #56	; 0x38
2fff62fc:	f001 fd84 	bl	2fff7e08 <fdt_get_address>
2fff6300:	b920      	cbnz	r0, 2fff630c <dt_set_pinctrl_config+0x24>
2fff6302:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff6306:	b011      	add	sp, #68	; 0x44
2fff6308:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff630c:	9b04      	ldr	r3, [sp, #16]
2fff630e:	2b00      	cmp	r3, #0
2fff6310:	d0f7      	beq.n	2fff6302 <dt_set_pinctrl_config+0x1a>
2fff6312:	4a6c      	ldr	r2, [pc, #432]	; (2fff64c4 <dt_set_pinctrl_config+0x1dc>)
2fff6314:	ab0d      	add	r3, sp, #52	; 0x34
2fff6316:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff6318:	4621      	mov	r1, r4
2fff631a:	f003 f949 	bl	2fff95b0 <fdt_getprop>
2fff631e:	9005      	str	r0, [sp, #20]
2fff6320:	2800      	cmp	r0, #0
2fff6322:	d0ee      	beq.n	2fff6302 <dt_set_pinctrl_config+0x1a>
2fff6324:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff6326:	ebb7 0f93 	cmp.w	r7, r3, lsr #2
2fff632a:	d301      	bcc.n	2fff6330 <dt_set_pinctrl_config+0x48>
2fff632c:	2000      	movs	r0, #0
2fff632e:	e7ea      	b.n	2fff6306 <dt_set_pinctrl_config+0x1e>
2fff6330:	9b05      	ldr	r3, [sp, #20]
2fff6332:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
2fff6336:	f7ff ff55 	bl	2fff61e4 <fdt32_to_cpu>
2fff633a:	4601      	mov	r1, r0
2fff633c:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff633e:	f003 fa29 	bl	2fff9794 <fdt_node_offset_by_phandle>
2fff6342:	1e01      	subs	r1, r0, #0
2fff6344:	dbdd      	blt.n	2fff6302 <dt_set_pinctrl_config+0x1a>
2fff6346:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff6348:	f002 ffb7 	bl	2fff92ba <fdt_first_subnode>
2fff634c:	4605      	mov	r5, r0
2fff634e:	2d00      	cmp	r5, #0
2fff6350:	da01      	bge.n	2fff6356 <dt_set_pinctrl_config+0x6e>
2fff6352:	3701      	adds	r7, #1
2fff6354:	e7e6      	b.n	2fff6324 <dt_set_pinctrl_config+0x3c>
2fff6356:	9e0e      	ldr	r6, [sp, #56]	; 0x38
2fff6358:	ab0f      	add	r3, sp, #60	; 0x3c
2fff635a:	4a5b      	ldr	r2, [pc, #364]	; (2fff64c8 <dt_set_pinctrl_config+0x1e0>)
2fff635c:	4629      	mov	r1, r5
2fff635e:	4630      	mov	r0, r6
2fff6360:	f003 f926 	bl	2fff95b0 <fdt_getprop>
2fff6364:	9006      	str	r0, [sp, #24]
2fff6366:	2800      	cmp	r0, #0
2fff6368:	d0cb      	beq.n	2fff6302 <dt_set_pinctrl_config+0x1a>
2fff636a:	4629      	mov	r1, r5
2fff636c:	4630      	mov	r0, r6
2fff636e:	f003 fa01 	bl	2fff9774 <fdt_parent_offset>
2fff6372:	4601      	mov	r1, r0
2fff6374:	4630      	mov	r0, r6
2fff6376:	f003 f9fd 	bl	2fff9774 <fdt_parent_offset>
2fff637a:	1e03      	subs	r3, r0, #0
2fff637c:	9309      	str	r3, [sp, #36]	; 0x24
2fff637e:	dbc0      	blt.n	2fff6302 <dt_set_pinctrl_config+0x1a>
2fff6380:	4a52      	ldr	r2, [pc, #328]	; (2fff64cc <dt_set_pinctrl_config+0x1e4>)
2fff6382:	2300      	movs	r3, #0
2fff6384:	4629      	mov	r1, r5
2fff6386:	4630      	mov	r0, r6
2fff6388:	f003 f912 	bl	2fff95b0 <fdt_getprop>
2fff638c:	b110      	cbz	r0, 2fff6394 <dt_set_pinctrl_config+0xac>
2fff638e:	6800      	ldr	r0, [r0, #0]
2fff6390:	f7ff ff28 	bl	2fff61e4 <fdt32_to_cpu>
2fff6394:	9007      	str	r0, [sp, #28]
2fff6396:	2300      	movs	r3, #0
2fff6398:	4a4d      	ldr	r2, [pc, #308]	; (2fff64d0 <dt_set_pinctrl_config+0x1e8>)
2fff639a:	4629      	mov	r1, r5
2fff639c:	4630      	mov	r0, r6
2fff639e:	f003 f907 	bl	2fff95b0 <fdt_getprop>
2fff63a2:	4603      	mov	r3, r0
2fff63a4:	b9a0      	cbnz	r0, 2fff63d0 <dt_set_pinctrl_config+0xe8>
2fff63a6:	4a4b      	ldr	r2, [pc, #300]	; (2fff64d4 <dt_set_pinctrl_config+0x1ec>)
2fff63a8:	4629      	mov	r1, r5
2fff63aa:	4630      	mov	r0, r6
2fff63ac:	f003 f900 	bl	2fff95b0 <fdt_getprop>
2fff63b0:	2800      	cmp	r0, #0
2fff63b2:	bf0c      	ite	eq
2fff63b4:	2300      	moveq	r3, #0
2fff63b6:	2302      	movne	r3, #2
2fff63b8:	9308      	str	r3, [sp, #32]
2fff63ba:	f04f 0800 	mov.w	r8, #0
2fff63be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2fff63c0:	ebb8 0f93 	cmp.w	r8, r3, lsr #2
2fff63c4:	d306      	bcc.n	2fff63d4 <dt_set_pinctrl_config+0xec>
2fff63c6:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff63c8:	4629      	mov	r1, r5
2fff63ca:	f002 ff89 	bl	2fff92e0 <fdt_next_subnode>
2fff63ce:	e7bd      	b.n	2fff634c <dt_set_pinctrl_config+0x64>
2fff63d0:	2301      	movs	r3, #1
2fff63d2:	e7f1      	b.n	2fff63b8 <dt_set_pinctrl_config+0xd0>
2fff63d4:	9b06      	ldr	r3, [sp, #24]
2fff63d6:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
2fff63da:	f7ff ff03 	bl	2fff61e4 <fdt32_to_cpu>
2fff63de:	f3c0 2303 	ubfx	r3, r0, #8, #4
2fff63e2:	b2c4      	uxtb	r4, r0
2fff63e4:	f3c0 3a04 	ubfx	sl, r0, #12, #5
2fff63e8:	2c10      	cmp	r4, #16
2fff63ea:	930a      	str	r3, [sp, #40]	; 0x28
2fff63ec:	d81c      	bhi.n	2fff6428 <dt_set_pinctrl_config+0x140>
2fff63ee:	bb0c      	cbnz	r4, 2fff6434 <dt_set_pinctrl_config+0x14c>
2fff63f0:	46a1      	mov	r9, r4
2fff63f2:	4a39      	ldr	r2, [pc, #228]	; (2fff64d8 <dt_set_pinctrl_config+0x1f0>)
2fff63f4:	2300      	movs	r3, #0
2fff63f6:	4629      	mov	r1, r5
2fff63f8:	4630      	mov	r0, r6
2fff63fa:	f003 f8d9 	bl	2fff95b0 <fdt_getprop>
2fff63fe:	b108      	cbz	r0, 2fff6404 <dt_set_pinctrl_config+0x11c>
2fff6400:	f044 0410 	orr.w	r4, r4, #16
2fff6404:	4650      	mov	r0, sl
2fff6406:	f7fc fc1b 	bl	2fff2c40 <stm32_get_gpio_bank_offset>
2fff640a:	900b      	str	r0, [sp, #44]	; 0x2c
2fff640c:	4630      	mov	r0, r6
2fff640e:	9909      	ldr	r1, [sp, #36]	; 0x24
2fff6410:	f002 ff53 	bl	2fff92ba <fdt_first_subnode>
2fff6414:	2800      	cmp	r0, #0
2fff6416:	4683      	mov	fp, r0
2fff6418:	da12      	bge.n	2fff6440 <dt_set_pinctrl_config+0x158>
2fff641a:	4830      	ldr	r0, [pc, #192]	; (2fff64dc <dt_set_pinctrl_config+0x1f4>)
2fff641c:	f7fc fa22 	bl	2fff2864 <tf_log>
2fff6420:	f7fc fac4 	bl	2fff29ac <console_flush>
2fff6424:	f002 ea28 	blx	2fff8878 <do_panic>
2fff6428:	2c11      	cmp	r4, #17
2fff642a:	f04f 0900 	mov.w	r9, #0
2fff642e:	d105      	bne.n	2fff643c <dt_set_pinctrl_config+0x154>
2fff6430:	2403      	movs	r4, #3
2fff6432:	e7de      	b.n	2fff63f2 <dt_set_pinctrl_config+0x10a>
2fff6434:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
2fff6438:	2402      	movs	r4, #2
2fff643a:	e7da      	b.n	2fff63f2 <dt_set_pinctrl_config+0x10a>
2fff643c:	2401      	movs	r4, #1
2fff643e:	e7d8      	b.n	2fff63f2 <dt_set_pinctrl_config+0x10a>
2fff6440:	4a27      	ldr	r2, [pc, #156]	; (2fff64e0 <dt_set_pinctrl_config+0x1f8>)
2fff6442:	2300      	movs	r3, #0
2fff6444:	4659      	mov	r1, fp
2fff6446:	4630      	mov	r0, r6
2fff6448:	f003 f8b2 	bl	2fff95b0 <fdt_getprop>
2fff644c:	b920      	cbnz	r0, 2fff6458 <dt_set_pinctrl_config+0x170>
2fff644e:	4659      	mov	r1, fp
2fff6450:	4630      	mov	r0, r6
2fff6452:	f002 ff45 	bl	2fff92e0 <fdt_next_subnode>
2fff6456:	e7dd      	b.n	2fff6414 <dt_set_pinctrl_config+0x12c>
2fff6458:	4a22      	ldr	r2, [pc, #136]	; (2fff64e4 <dt_set_pinctrl_config+0x1fc>)
2fff645a:	2300      	movs	r3, #0
2fff645c:	4659      	mov	r1, fp
2fff645e:	4630      	mov	r0, r6
2fff6460:	f003 f8a6 	bl	2fff95b0 <fdt_getprop>
2fff6464:	2800      	cmp	r0, #0
2fff6466:	d0f2      	beq.n	2fff644e <dt_set_pinctrl_config+0x166>
2fff6468:	6800      	ldr	r0, [r0, #0]
2fff646a:	f7ff febb 	bl	2fff61e4 <fdt32_to_cpu>
2fff646e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2fff6470:	4283      	cmp	r3, r0
2fff6472:	d1ec      	bne.n	2fff644e <dt_set_pinctrl_config+0x166>
2fff6474:	4658      	mov	r0, fp
2fff6476:	f001 fcd3 	bl	2fff7e20 <fdt_get_status>
2fff647a:	2800      	cmp	r0, #0
2fff647c:	d0e7      	beq.n	2fff644e <dt_set_pinctrl_config+0x166>
2fff647e:	f1bb 0f00 	cmp.w	fp, #0
2fff6482:	d0ca      	beq.n	2fff641a <dt_set_pinctrl_config+0x132>
2fff6484:	4658      	mov	r0, fp
2fff6486:	f7fe f961 	bl	2fff474c <fdt_get_clock_id>
2fff648a:	f1b0 0b00 	subs.w	fp, r0, #0
2fff648e:	f6ff af38 	blt.w	2fff6302 <dt_set_pinctrl_config+0x1a>
2fff6492:	4650      	mov	r0, sl
2fff6494:	f7fc fc38 	bl	2fff2d08 <stm32_get_gpio_bank_clock>
2fff6498:	4558      	cmp	r0, fp
2fff649a:	d003      	beq.n	2fff64a4 <dt_set_pinctrl_config+0x1bc>
2fff649c:	4812      	ldr	r0, [pc, #72]	; (2fff64e8 <dt_set_pinctrl_config+0x200>)
2fff649e:	2192      	movs	r1, #146	; 0x92
2fff64a0:	f003 fa24 	bl	2fff98ec <__assert>
2fff64a4:	9b04      	ldr	r3, [sp, #16]
2fff64a6:	4622      	mov	r2, r4
2fff64a8:	990a      	ldr	r1, [sp, #40]	; 0x28
2fff64aa:	4650      	mov	r0, sl
2fff64ac:	9302      	str	r3, [sp, #8]
2fff64ae:	f108 0801 	add.w	r8, r8, #1
2fff64b2:	9b08      	ldr	r3, [sp, #32]
2fff64b4:	f8cd 9004 	str.w	r9, [sp, #4]
2fff64b8:	9300      	str	r3, [sp, #0]
2fff64ba:	9b07      	ldr	r3, [sp, #28]
2fff64bc:	f7ff fe94 	bl	2fff61e8 <set_gpio>
2fff64c0:	e77d      	b.n	2fff63be <dt_set_pinctrl_config+0xd6>
2fff64c2:	bf00      	nop
2fff64c4:	2fffb8f6 	.word	0x2fffb8f6
2fff64c8:	2fffb900 	.word	0x2fffb900
2fff64cc:	2fffb907 	.word	0x2fffb907
2fff64d0:	2fffb911 	.word	0x2fffb911
2fff64d4:	2fffb91e 	.word	0x2fffb91e
2fff64d8:	2fffb92d 	.word	0x2fffb92d
2fff64dc:	2fffb94e 	.word	0x2fffb94e
2fff64e0:	2fffb93e 	.word	0x2fffb93e
2fff64e4:	2fffa630 	.word	0x2fffa630
2fff64e8:	2fffb8d9 	.word	0x2fffb8d9

2fff64ec <set_gpio_secure_cfg>:
2fff64ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff64f0:	460f      	mov	r7, r1
2fff64f2:	4680      	mov	r8, r0
2fff64f4:	4616      	mov	r6, r2
2fff64f6:	f7fc fb8f 	bl	2fff2c18 <stm32_get_gpio_bank_base>
2fff64fa:	4604      	mov	r4, r0
2fff64fc:	4640      	mov	r0, r8
2fff64fe:	f7fc fc03 	bl	2fff2d08 <stm32_get_gpio_bank_clock>
2fff6502:	2f0f      	cmp	r7, #15
2fff6504:	4605      	mov	r5, r0
2fff6506:	d904      	bls.n	2fff6512 <set_gpio_secure_cfg+0x26>
2fff6508:	f44f 7187 	mov.w	r1, #270	; 0x10e
2fff650c:	480e      	ldr	r0, [pc, #56]	; (2fff6548 <set_gpio_secure_cfg+0x5c>)
2fff650e:	f003 f9ed 	bl	2fff98ec <__assert>
2fff6512:	b136      	cbz	r6, 2fff6522 <set_gpio_secure_cfg+0x36>
2fff6514:	4640      	mov	r0, r8
2fff6516:	f7fa faad 	bl	2fff0a74 <stm32mp_gpio_bank_is_non_secure>
2fff651a:	b110      	cbz	r0, 2fff6522 <set_gpio_secure_cfg+0x36>
2fff651c:	f44f 7188 	mov.w	r1, #272	; 0x110
2fff6520:	e7f4      	b.n	2fff650c <set_gpio_secure_cfg+0x20>
2fff6522:	4628      	mov	r0, r5
2fff6524:	f7fe fe06 	bl	2fff5134 <stm32mp_clk_enable>
2fff6528:	2301      	movs	r3, #1
2fff652a:	fa03 f107 	lsl.w	r1, r3, r7
2fff652e:	6b23      	ldr	r3, [r4, #48]	; 0x30
2fff6530:	b136      	cbz	r6, 2fff6540 <set_gpio_secure_cfg+0x54>
2fff6532:	4319      	orrs	r1, r3
2fff6534:	6321      	str	r1, [r4, #48]	; 0x30
2fff6536:	4628      	mov	r0, r5
2fff6538:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2fff653c:	f7fe bdfd 	b.w	2fff513a <stm32mp_clk_disable>
2fff6540:	ea23 0101 	bic.w	r1, r3, r1
2fff6544:	e7f6      	b.n	2fff6534 <set_gpio_secure_cfg+0x48>
2fff6546:	bf00      	nop
2fff6548:	2fffb8d9 	.word	0x2fffb8d9

2fff654c <i2c_wait_flag>:
2fff654c:	6803      	ldr	r3, [r0, #0]
2fff654e:	f002 0201 	and.w	r2, r2, #1
2fff6552:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff6554:	3318      	adds	r3, #24
2fff6556:	9f05      	ldr	r7, [sp, #20]
2fff6558:	9e06      	ldr	r6, [sp, #24]
2fff655a:	681c      	ldr	r4, [r3, #0]
2fff655c:	4221      	tst	r1, r4
2fff655e:	bf14      	ite	ne
2fff6560:	2401      	movne	r4, #1
2fff6562:	2400      	moveq	r4, #0
2fff6564:	4294      	cmp	r4, r2
2fff6566:	d111      	bne.n	2fff658c <i2c_wait_flag+0x40>
2fff6568:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff656c:	42a7      	cmp	r7, r4
2fff656e:	eb76 0405 	sbcs.w	r4, r6, r5
2fff6572:	d2f2      	bcs.n	2fff655a <i2c_wait_flag+0xe>
2fff6574:	6983      	ldr	r3, [r0, #24]
2fff6576:	2220      	movs	r2, #32
2fff6578:	6102      	str	r2, [r0, #16]
2fff657a:	f043 0320 	orr.w	r3, r3, #32
2fff657e:	6183      	str	r3, [r0, #24]
2fff6580:	2300      	movs	r3, #0
2fff6582:	6143      	str	r3, [r0, #20]
2fff6584:	7303      	strb	r3, [r0, #12]
2fff6586:	f06f 0004 	mvn.w	r0, #4
2fff658a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff658c:	2000      	movs	r0, #0
2fff658e:	e7fc      	b.n	2fff658a <i2c_wait_flag+0x3e>

2fff6590 <i2c_transfer_config.isra.0>:
2fff6590:	b530      	push	{r4, r5, lr}
2fff6592:	9d03      	ldr	r5, [sp, #12]
2fff6594:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff6598:	432b      	orrs	r3, r5
2fff659a:	0412      	lsls	r2, r2, #16
2fff659c:	430b      	orrs	r3, r1
2fff659e:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
2fff65a2:	4313      	orrs	r3, r2
2fff65a4:	4a04      	ldr	r2, [pc, #16]	; (2fff65b8 <i2c_transfer_config.isra.0+0x28>)
2fff65a6:	6844      	ldr	r4, [r0, #4]
2fff65a8:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
2fff65ac:	ea24 0402 	bic.w	r4, r4, r2
2fff65b0:	4323      	orrs	r3, r4
2fff65b2:	6043      	str	r3, [r0, #4]
2fff65b4:	bd30      	pop	{r4, r5, pc}
2fff65b6:	bf00      	nop
2fff65b8:	03ff63ff 	.word	0x03ff63ff

2fff65bc <i2c_ack_failed>:
2fff65bc:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff65be:	6804      	ldr	r4, [r0, #0]
2fff65c0:	69a1      	ldr	r1, [r4, #24]
2fff65c2:	f104 0518 	add.w	r5, r4, #24
2fff65c6:	f011 0110 	ands.w	r1, r1, #16
2fff65ca:	d112      	bne.n	2fff65f2 <i2c_ack_failed+0x36>
2fff65cc:	4608      	mov	r0, r1
2fff65ce:	e00f      	b.n	2fff65f0 <i2c_ack_failed+0x34>
2fff65d0:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff65d4:	42b2      	cmp	r2, r6
2fff65d6:	eb73 0607 	sbcs.w	r6, r3, r7
2fff65da:	d20a      	bcs.n	2fff65f2 <i2c_ack_failed+0x36>
2fff65dc:	6983      	ldr	r3, [r0, #24]
2fff65de:	6141      	str	r1, [r0, #20]
2fff65e0:	7301      	strb	r1, [r0, #12]
2fff65e2:	f043 0320 	orr.w	r3, r3, #32
2fff65e6:	6183      	str	r3, [r0, #24]
2fff65e8:	2320      	movs	r3, #32
2fff65ea:	6103      	str	r3, [r0, #16]
2fff65ec:	f06f 0004 	mvn.w	r0, #4
2fff65f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff65f2:	6829      	ldr	r1, [r5, #0]
2fff65f4:	f011 0120 	ands.w	r1, r1, #32
2fff65f8:	d0ea      	beq.n	2fff65d0 <i2c_ack_failed+0x14>
2fff65fa:	2310      	movs	r3, #16
2fff65fc:	2220      	movs	r2, #32
2fff65fe:	61e3      	str	r3, [r4, #28]
2fff6600:	6803      	ldr	r3, [r0, #0]
2fff6602:	61da      	str	r2, [r3, #28]
2fff6604:	6803      	ldr	r3, [r0, #0]
2fff6606:	699a      	ldr	r2, [r3, #24]
2fff6608:	0794      	lsls	r4, r2, #30
2fff660a:	bf44      	itt	mi
2fff660c:	2200      	movmi	r2, #0
2fff660e:	629a      	strmi	r2, [r3, #40]	; 0x28
2fff6610:	6803      	ldr	r3, [r0, #0]
2fff6612:	699a      	ldr	r2, [r3, #24]
2fff6614:	07d1      	lsls	r1, r2, #31
2fff6616:	bf5e      	ittt	pl
2fff6618:	699a      	ldrpl	r2, [r3, #24]
2fff661a:	f042 0201 	orrpl.w	r2, r2, #1
2fff661e:	619a      	strpl	r2, [r3, #24]
2fff6620:	6802      	ldr	r2, [r0, #0]
2fff6622:	6853      	ldr	r3, [r2, #4]
2fff6624:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff6628:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff662c:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff6630:	f023 0301 	bic.w	r3, r3, #1
2fff6634:	6053      	str	r3, [r2, #4]
2fff6636:	6983      	ldr	r3, [r0, #24]
2fff6638:	f043 0304 	orr.w	r3, r3, #4
2fff663c:	6183      	str	r3, [r0, #24]
2fff663e:	2320      	movs	r3, #32
2fff6640:	6103      	str	r3, [r0, #16]
2fff6642:	2300      	movs	r3, #0
2fff6644:	6143      	str	r3, [r0, #20]
2fff6646:	7303      	strb	r3, [r0, #12]
2fff6648:	e7d0      	b.n	2fff65ec <i2c_ack_failed+0x30>

2fff664a <i2c_wait_txis>:
2fff664a:	b570      	push	{r4, r5, r6, lr}
2fff664c:	4604      	mov	r4, r0
2fff664e:	4615      	mov	r5, r2
2fff6650:	461e      	mov	r6, r3
2fff6652:	6823      	ldr	r3, [r4, #0]
2fff6654:	699b      	ldr	r3, [r3, #24]
2fff6656:	079b      	lsls	r3, r3, #30
2fff6658:	d501      	bpl.n	2fff665e <i2c_wait_txis+0x14>
2fff665a:	2000      	movs	r0, #0
2fff665c:	bd70      	pop	{r4, r5, r6, pc}
2fff665e:	462a      	mov	r2, r5
2fff6660:	4633      	mov	r3, r6
2fff6662:	4620      	mov	r0, r4
2fff6664:	f7ff ffaa 	bl	2fff65bc <i2c_ack_failed>
2fff6668:	b968      	cbnz	r0, 2fff6686 <i2c_wait_txis+0x3c>
2fff666a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff666e:	4295      	cmp	r5, r2
2fff6670:	eb76 0303 	sbcs.w	r3, r6, r3
2fff6674:	d2ed      	bcs.n	2fff6652 <i2c_wait_txis+0x8>
2fff6676:	69a3      	ldr	r3, [r4, #24]
2fff6678:	6160      	str	r0, [r4, #20]
2fff667a:	7320      	strb	r0, [r4, #12]
2fff667c:	f043 0320 	orr.w	r3, r3, #32
2fff6680:	61a3      	str	r3, [r4, #24]
2fff6682:	2320      	movs	r3, #32
2fff6684:	6123      	str	r3, [r4, #16]
2fff6686:	f06f 0004 	mvn.w	r0, #4
2fff668a:	e7e7      	b.n	2fff665c <i2c_wait_txis+0x12>

2fff668c <i2c_wait_stop>:
2fff668c:	b570      	push	{r4, r5, r6, lr}
2fff668e:	4604      	mov	r4, r0
2fff6690:	4615      	mov	r5, r2
2fff6692:	461e      	mov	r6, r3
2fff6694:	6823      	ldr	r3, [r4, #0]
2fff6696:	699b      	ldr	r3, [r3, #24]
2fff6698:	069b      	lsls	r3, r3, #26
2fff669a:	d501      	bpl.n	2fff66a0 <i2c_wait_stop+0x14>
2fff669c:	2000      	movs	r0, #0
2fff669e:	bd70      	pop	{r4, r5, r6, pc}
2fff66a0:	462a      	mov	r2, r5
2fff66a2:	4633      	mov	r3, r6
2fff66a4:	4620      	mov	r0, r4
2fff66a6:	f7ff ff89 	bl	2fff65bc <i2c_ack_failed>
2fff66aa:	b968      	cbnz	r0, 2fff66c8 <i2c_wait_stop+0x3c>
2fff66ac:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff66b0:	4295      	cmp	r5, r2
2fff66b2:	eb76 0303 	sbcs.w	r3, r6, r3
2fff66b6:	d2ed      	bcs.n	2fff6694 <i2c_wait_stop+0x8>
2fff66b8:	69a3      	ldr	r3, [r4, #24]
2fff66ba:	6160      	str	r0, [r4, #20]
2fff66bc:	7320      	strb	r0, [r4, #12]
2fff66be:	f043 0320 	orr.w	r3, r3, #32
2fff66c2:	61a3      	str	r3, [r4, #24]
2fff66c4:	2320      	movs	r3, #32
2fff66c6:	6123      	str	r3, [r4, #16]
2fff66c8:	f06f 0004 	mvn.w	r0, #4
2fff66cc:	e7e7      	b.n	2fff669e <i2c_wait_stop+0x12>
	...

2fff66d0 <i2c_read.constprop.0>:
2fff66d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff66d4:	b085      	sub	sp, #20
2fff66d6:	4699      	mov	r9, r3
2fff66d8:	4604      	mov	r4, r0
2fff66da:	9b10      	ldr	r3, [sp, #64]	; 0x40
2fff66dc:	4688      	mov	r8, r1
2fff66de:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
2fff66e2:	4617      	mov	r7, r2
2fff66e4:	2b10      	cmp	r3, #16
2fff66e6:	d002      	beq.n	2fff66ee <i2c_read.constprop.0+0x1e>
2fff66e8:	2b40      	cmp	r3, #64	; 0x40
2fff66ea:	f040 80be 	bne.w	2fff686a <i2c_read.constprop.0+0x19a>
2fff66ee:	6923      	ldr	r3, [r4, #16]
2fff66f0:	2b20      	cmp	r3, #32
2fff66f2:	f040 80bd 	bne.w	2fff6870 <i2c_read.constprop.0+0x1a0>
2fff66f6:	7b23      	ldrb	r3, [r4, #12]
2fff66f8:	2b00      	cmp	r3, #0
2fff66fa:	f040 80b9 	bne.w	2fff6870 <i2c_read.constprop.0+0x1a0>
2fff66fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff6700:	2b00      	cmp	r3, #0
2fff6702:	f000 80b8 	beq.w	2fff6876 <i2c_read.constprop.0+0x1a6>
2fff6706:	f1ba 0f00 	cmp.w	sl, #0
2fff670a:	f000 80b4 	beq.w	2fff6876 <i2c_read.constprop.0+0x1a6>
2fff670e:	68a0      	ldr	r0, [r4, #8]
2fff6710:	f04f 0b01 	mov.w	fp, #1
2fff6714:	f7fe fd0e 	bl	2fff5134 <stm32mp_clk_enable>
2fff6718:	f884 b00c 	strb.w	fp, [r4, #12]
2fff671c:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff6720:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6724:	f246 10a8 	movw	r0, #25000	; 0x61a8
2fff6728:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff672c:	9d02      	ldr	r5, [sp, #8]
2fff672e:	2300      	movs	r3, #0
2fff6730:	4a5f      	ldr	r2, [pc, #380]	; (2fff68b0 <i2c_read.constprop.0+0x1e0>)
2fff6732:	fba1 0100 	umull	r0, r1, r1, r0
2fff6736:	f002 ea3e 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff673a:	9b03      	ldr	r3, [sp, #12]
2fff673c:	465a      	mov	r2, fp
2fff673e:	1945      	adds	r5, r0, r5
2fff6740:	4620      	mov	r0, r4
2fff6742:	eb41 0603 	adc.w	r6, r1, r3
2fff6746:	f44f 4100 	mov.w	r1, #32768	; 0x8000
2fff674a:	e9cd 5600 	strd	r5, r6, [sp]
2fff674e:	f7ff fefd 	bl	2fff654c <i2c_wait_flag>
2fff6752:	4603      	mov	r3, r0
2fff6754:	b150      	cbz	r0, 2fff676c <i2c_read.constprop.0+0x9c>
2fff6756:	f06f 0504 	mvn.w	r5, #4
2fff675a:	68a0      	ldr	r0, [r4, #8]
2fff675c:	2300      	movs	r3, #0
2fff675e:	7323      	strb	r3, [r4, #12]
2fff6760:	f7fe fceb 	bl	2fff513a <stm32mp_clk_disable>
2fff6764:	4628      	mov	r0, r5
2fff6766:	b005      	add	sp, #20
2fff6768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff676c:	61a0      	str	r0, [r4, #24]
2fff676e:	2222      	movs	r2, #34	; 0x22
2fff6770:	6122      	str	r2, [r4, #16]
2fff6772:	9a10      	ldr	r2, [sp, #64]	; 0x40
2fff6774:	6162      	str	r2, [r4, #20]
2fff6776:	2a40      	cmp	r2, #64	; 0x40
2fff6778:	d00d      	beq.n	2fff6796 <i2c_read.constprop.0+0xc6>
2fff677a:	6820      	ldr	r0, [r4, #0]
2fff677c:	4657      	mov	r7, sl
2fff677e:	4b4d      	ldr	r3, [pc, #308]	; (2fff68b4 <i2c_read.constprop.0+0x1e4>)
2fff6780:	2fff      	cmp	r7, #255	; 0xff
2fff6782:	d834      	bhi.n	2fff67ee <i2c_read.constprop.0+0x11e>
2fff6784:	9300      	str	r3, [sp, #0]
2fff6786:	4652      	mov	r2, sl
2fff6788:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff678c:	4641      	mov	r1, r8
2fff678e:	46d1      	mov	r9, sl
2fff6790:	f7ff fefe 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff6794:	e034      	b.n	2fff6800 <i2c_read.constprop.0+0x130>
2fff6796:	4a48      	ldr	r2, [pc, #288]	; (2fff68b8 <i2c_read.constprop.0+0x1e8>)
2fff6798:	4641      	mov	r1, r8
2fff679a:	6820      	ldr	r0, [r4, #0]
2fff679c:	9200      	str	r2, [sp, #0]
2fff679e:	464a      	mov	r2, r9
2fff67a0:	f7ff fef6 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff67a4:	462a      	mov	r2, r5
2fff67a6:	4633      	mov	r3, r6
2fff67a8:	4620      	mov	r0, r4
2fff67aa:	f7ff ff4e 	bl	2fff664a <i2c_wait_txis>
2fff67ae:	2800      	cmp	r0, #0
2fff67b0:	d1d1      	bne.n	2fff6756 <i2c_read.constprop.0+0x86>
2fff67b2:	6823      	ldr	r3, [r4, #0]
2fff67b4:	f1b9 0f01 	cmp.w	r9, #1
2fff67b8:	d10c      	bne.n	2fff67d4 <i2c_read.constprop.0+0x104>
2fff67ba:	b2ff      	uxtb	r7, r7
2fff67bc:	f883 7028 	strb.w	r7, [r3, #40]	; 0x28
2fff67c0:	2200      	movs	r2, #0
2fff67c2:	2140      	movs	r1, #64	; 0x40
2fff67c4:	4620      	mov	r0, r4
2fff67c6:	e9cd 5600 	strd	r5, r6, [sp]
2fff67ca:	f7ff febf 	bl	2fff654c <i2c_wait_flag>
2fff67ce:	2800      	cmp	r0, #0
2fff67d0:	d0d3      	beq.n	2fff677a <i2c_read.constprop.0+0xaa>
2fff67d2:	e7c0      	b.n	2fff6756 <i2c_read.constprop.0+0x86>
2fff67d4:	0a3a      	lsrs	r2, r7, #8
2fff67d6:	4620      	mov	r0, r4
2fff67d8:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff67dc:	462a      	mov	r2, r5
2fff67de:	4633      	mov	r3, r6
2fff67e0:	f7ff ff33 	bl	2fff664a <i2c_wait_txis>
2fff67e4:	2800      	cmp	r0, #0
2fff67e6:	d1b6      	bne.n	2fff6756 <i2c_read.constprop.0+0x86>
2fff67e8:	6823      	ldr	r3, [r4, #0]
2fff67ea:	b2ff      	uxtb	r7, r7
2fff67ec:	e7e6      	b.n	2fff67bc <i2c_read.constprop.0+0xec>
2fff67ee:	9300      	str	r3, [sp, #0]
2fff67f0:	22ff      	movs	r2, #255	; 0xff
2fff67f2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff67f6:	4641      	mov	r1, r8
2fff67f8:	f04f 09ff 	mov.w	r9, #255	; 0xff
2fff67fc:	f7ff fec8 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff6800:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff6802:	f103 3aff 	add.w	sl, r3, #4294967295	; 0xffffffff
2fff6806:	2200      	movs	r2, #0
2fff6808:	2104      	movs	r1, #4
2fff680a:	4620      	mov	r0, r4
2fff680c:	e9cd 5600 	strd	r5, r6, [sp]
2fff6810:	f7ff fe9c 	bl	2fff654c <i2c_wait_flag>
2fff6814:	2800      	cmp	r0, #0
2fff6816:	d19e      	bne.n	2fff6756 <i2c_read.constprop.0+0x86>
2fff6818:	6823      	ldr	r3, [r4, #0]
2fff681a:	3f01      	subs	r7, #1
2fff681c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
2fff6820:	f80a 3f01 	strb.w	r3, [sl, #1]!
2fff6824:	d02a      	beq.n	2fff687c <i2c_read.constprop.0+0x1ac>
2fff6826:	f1b9 0901 	subs.w	r9, r9, #1
2fff682a:	d1ec      	bne.n	2fff6806 <i2c_read.constprop.0+0x136>
2fff682c:	464a      	mov	r2, r9
2fff682e:	2180      	movs	r1, #128	; 0x80
2fff6830:	4620      	mov	r0, r4
2fff6832:	e9cd 5600 	strd	r5, r6, [sp]
2fff6836:	f7ff fe89 	bl	2fff654c <i2c_wait_flag>
2fff683a:	2800      	cmp	r0, #0
2fff683c:	d18b      	bne.n	2fff6756 <i2c_read.constprop.0+0x86>
2fff683e:	6820      	ldr	r0, [r4, #0]
2fff6840:	2fff      	cmp	r7, #255	; 0xff
2fff6842:	f8cd 9000 	str.w	r9, [sp]
2fff6846:	d908      	bls.n	2fff685a <i2c_read.constprop.0+0x18a>
2fff6848:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff684c:	22ff      	movs	r2, #255	; 0xff
2fff684e:	4641      	mov	r1, r8
2fff6850:	f04f 09ff 	mov.w	r9, #255	; 0xff
2fff6854:	f7ff fe9c 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff6858:	e7d5      	b.n	2fff6806 <i2c_read.constprop.0+0x136>
2fff685a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff685e:	b2ba      	uxth	r2, r7
2fff6860:	4641      	mov	r1, r8
2fff6862:	46b9      	mov	r9, r7
2fff6864:	f7ff fe94 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff6868:	e7cd      	b.n	2fff6806 <i2c_read.constprop.0+0x136>
2fff686a:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff686e:	e779      	b.n	2fff6764 <i2c_read.constprop.0+0x94>
2fff6870:	f06f 050f 	mvn.w	r5, #15
2fff6874:	e776      	b.n	2fff6764 <i2c_read.constprop.0+0x94>
2fff6876:	f06f 0515 	mvn.w	r5, #21
2fff687a:	e773      	b.n	2fff6764 <i2c_read.constprop.0+0x94>
2fff687c:	462a      	mov	r2, r5
2fff687e:	4633      	mov	r3, r6
2fff6880:	4620      	mov	r0, r4
2fff6882:	f7ff ff03 	bl	2fff668c <i2c_wait_stop>
2fff6886:	4605      	mov	r5, r0
2fff6888:	2800      	cmp	r0, #0
2fff688a:	f47f af64 	bne.w	2fff6756 <i2c_read.constprop.0+0x86>
2fff688e:	6823      	ldr	r3, [r4, #0]
2fff6890:	2220      	movs	r2, #32
2fff6892:	61da      	str	r2, [r3, #28]
2fff6894:	6821      	ldr	r1, [r4, #0]
2fff6896:	684b      	ldr	r3, [r1, #4]
2fff6898:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff689c:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff68a0:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff68a4:	f023 0301 	bic.w	r3, r3, #1
2fff68a8:	604b      	str	r3, [r1, #4]
2fff68aa:	6122      	str	r2, [r4, #16]
2fff68ac:	6167      	str	r7, [r4, #20]
2fff68ae:	e754      	b.n	2fff675a <i2c_read.constprop.0+0x8a>
2fff68b0:	000f4240 	.word	0x000f4240
2fff68b4:	80002400 	.word	0x80002400
2fff68b8:	80002000 	.word	0x80002000

2fff68bc <i2c_write>:
2fff68bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff68c0:	b085      	sub	sp, #20
2fff68c2:	469a      	mov	sl, r3
2fff68c4:	4604      	mov	r4, r0
2fff68c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff68c8:	460e      	mov	r6, r1
2fff68ca:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
2fff68ce:	4617      	mov	r7, r2
2fff68d0:	2b10      	cmp	r3, #16
2fff68d2:	d002      	beq.n	2fff68da <i2c_write+0x1e>
2fff68d4:	2b40      	cmp	r3, #64	; 0x40
2fff68d6:	f040 80db 	bne.w	2fff6a90 <i2c_write+0x1d4>
2fff68da:	6923      	ldr	r3, [r4, #16]
2fff68dc:	2b20      	cmp	r3, #32
2fff68de:	f040 80da 	bne.w	2fff6a96 <i2c_write+0x1da>
2fff68e2:	7b23      	ldrb	r3, [r4, #12]
2fff68e4:	2b00      	cmp	r3, #0
2fff68e6:	f040 80d6 	bne.w	2fff6a96 <i2c_write+0x1da>
2fff68ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff68ec:	2b00      	cmp	r3, #0
2fff68ee:	f000 80d5 	beq.w	2fff6a9c <i2c_write+0x1e0>
2fff68f2:	2d00      	cmp	r5, #0
2fff68f4:	f000 80d2 	beq.w	2fff6a9c <i2c_write+0x1e0>
2fff68f8:	68a0      	ldr	r0, [r4, #8]
2fff68fa:	f04f 0b01 	mov.w	fp, #1
2fff68fe:	f7fe fc19 	bl	2fff5134 <stm32mp_clk_enable>
2fff6902:	f884 b00c 	strb.w	fp, [r4, #12]
2fff6906:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff690a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff690e:	f246 10a8 	movw	r0, #25000	; 0x61a8
2fff6912:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff6916:	f8dd 8008 	ldr.w	r8, [sp, #8]
2fff691a:	2300      	movs	r3, #0
2fff691c:	4a6e      	ldr	r2, [pc, #440]	; (2fff6ad8 <i2c_write+0x21c>)
2fff691e:	fba1 0100 	umull	r0, r1, r1, r0
2fff6922:	f002 e948 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff6926:	9b03      	ldr	r3, [sp, #12]
2fff6928:	465a      	mov	r2, fp
2fff692a:	eb10 0008 	adds.w	r0, r0, r8
2fff692e:	eb41 0103 	adc.w	r1, r1, r3
2fff6932:	e9cd 0100 	strd	r0, r1, [sp]
2fff6936:	f44f 4100 	mov.w	r1, #32768	; 0x8000
2fff693a:	4620      	mov	r0, r4
2fff693c:	f7ff fe06 	bl	2fff654c <i2c_wait_flag>
2fff6940:	b150      	cbz	r0, 2fff6958 <i2c_write+0x9c>
2fff6942:	f06f 0504 	mvn.w	r5, #4
2fff6946:	68a0      	ldr	r0, [r4, #8]
2fff6948:	2300      	movs	r3, #0
2fff694a:	7323      	strb	r3, [r4, #12]
2fff694c:	f7fe fbf5 	bl	2fff513a <stm32mp_clk_disable>
2fff6950:	4628      	mov	r0, r5
2fff6952:	b005      	add	sp, #20
2fff6954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff6958:	61a0      	str	r0, [r4, #24]
2fff695a:	2321      	movs	r3, #33	; 0x21
2fff695c:	6123      	str	r3, [r4, #16]
2fff695e:	46ab      	mov	fp, r5
2fff6960:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff6962:	6163      	str	r3, [r4, #20]
2fff6964:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff6968:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff696c:	9910      	ldr	r1, [sp, #64]	; 0x40
2fff696e:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff6972:	f8dd 8008 	ldr.w	r8, [sp, #8]
2fff6976:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff697a:	4359      	muls	r1, r3
2fff697c:	4a56      	ldr	r2, [pc, #344]	; (2fff6ad8 <i2c_write+0x21c>)
2fff697e:	2300      	movs	r3, #0
2fff6980:	fba1 0100 	umull	r0, r1, r1, r0
2fff6984:	f002 e916 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff6988:	9b03      	ldr	r3, [sp, #12]
2fff698a:	eb10 0808 	adds.w	r8, r0, r8
2fff698e:	eb41 0903 	adc.w	r9, r1, r3
2fff6992:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff6994:	6820      	ldr	r0, [r4, #0]
2fff6996:	2b40      	cmp	r3, #64	; 0x40
2fff6998:	4b50      	ldr	r3, [pc, #320]	; (2fff6adc <i2c_write+0x220>)
2fff699a:	9300      	str	r3, [sp, #0]
2fff699c:	d166      	bne.n	2fff6a6c <i2c_write+0x1b0>
2fff699e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff69a2:	4652      	mov	r2, sl
2fff69a4:	4631      	mov	r1, r6
2fff69a6:	f7ff fdf3 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff69aa:	4642      	mov	r2, r8
2fff69ac:	464b      	mov	r3, r9
2fff69ae:	4620      	mov	r0, r4
2fff69b0:	f7ff fe4b 	bl	2fff664a <i2c_wait_txis>
2fff69b4:	2800      	cmp	r0, #0
2fff69b6:	d1c4      	bne.n	2fff6942 <i2c_write+0x86>
2fff69b8:	6823      	ldr	r3, [r4, #0]
2fff69ba:	f1ba 0f01 	cmp.w	sl, #1
2fff69be:	d118      	bne.n	2fff69f2 <i2c_write+0x136>
2fff69c0:	b2ff      	uxtb	r7, r7
2fff69c2:	f883 7028 	strb.w	r7, [r3, #40]	; 0x28
2fff69c6:	2200      	movs	r2, #0
2fff69c8:	2180      	movs	r1, #128	; 0x80
2fff69ca:	4620      	mov	r0, r4
2fff69cc:	e9cd 8900 	strd	r8, r9, [sp]
2fff69d0:	f7ff fdbc 	bl	2fff654c <i2c_wait_flag>
2fff69d4:	4603      	mov	r3, r0
2fff69d6:	2800      	cmp	r0, #0
2fff69d8:	d1b3      	bne.n	2fff6942 <i2c_write+0x86>
2fff69da:	6820      	ldr	r0, [r4, #0]
2fff69dc:	2dff      	cmp	r5, #255	; 0xff
2fff69de:	9300      	str	r3, [sp, #0]
2fff69e0:	d914      	bls.n	2fff6a0c <i2c_write+0x150>
2fff69e2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff69e6:	22ff      	movs	r2, #255	; 0xff
2fff69e8:	4631      	mov	r1, r6
2fff69ea:	25ff      	movs	r5, #255	; 0xff
2fff69ec:	f7ff fdd0 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff69f0:	e012      	b.n	2fff6a18 <i2c_write+0x15c>
2fff69f2:	0a3a      	lsrs	r2, r7, #8
2fff69f4:	4620      	mov	r0, r4
2fff69f6:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff69fa:	4642      	mov	r2, r8
2fff69fc:	464b      	mov	r3, r9
2fff69fe:	f7ff fe24 	bl	2fff664a <i2c_wait_txis>
2fff6a02:	2800      	cmp	r0, #0
2fff6a04:	d19d      	bne.n	2fff6942 <i2c_write+0x86>
2fff6a06:	6823      	ldr	r3, [r4, #0]
2fff6a08:	b2ff      	uxtb	r7, r7
2fff6a0a:	e7da      	b.n	2fff69c2 <i2c_write+0x106>
2fff6a0c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff6a10:	462a      	mov	r2, r5
2fff6a12:	4631      	mov	r1, r6
2fff6a14:	f7ff fdbc 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff6a18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff6a1a:	1e5f      	subs	r7, r3, #1
2fff6a1c:	4642      	mov	r2, r8
2fff6a1e:	464b      	mov	r3, r9
2fff6a20:	4620      	mov	r0, r4
2fff6a22:	f7ff fe12 	bl	2fff664a <i2c_wait_txis>
2fff6a26:	2800      	cmp	r0, #0
2fff6a28:	d18b      	bne.n	2fff6942 <i2c_write+0x86>
2fff6a2a:	f817 2f01 	ldrb.w	r2, [r7, #1]!
2fff6a2e:	f1bb 0b01 	subs.w	fp, fp, #1
2fff6a32:	6823      	ldr	r3, [r4, #0]
2fff6a34:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff6a38:	d033      	beq.n	2fff6aa2 <i2c_write+0x1e6>
2fff6a3a:	3d01      	subs	r5, #1
2fff6a3c:	d1ee      	bne.n	2fff6a1c <i2c_write+0x160>
2fff6a3e:	462a      	mov	r2, r5
2fff6a40:	2180      	movs	r1, #128	; 0x80
2fff6a42:	4620      	mov	r0, r4
2fff6a44:	e9cd 8900 	strd	r8, r9, [sp]
2fff6a48:	f7ff fd80 	bl	2fff654c <i2c_wait_flag>
2fff6a4c:	2800      	cmp	r0, #0
2fff6a4e:	f47f af78 	bne.w	2fff6942 <i2c_write+0x86>
2fff6a52:	6820      	ldr	r0, [r4, #0]
2fff6a54:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
2fff6a58:	9500      	str	r5, [sp, #0]
2fff6a5a:	d910      	bls.n	2fff6a7e <i2c_write+0x1c2>
2fff6a5c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff6a60:	22ff      	movs	r2, #255	; 0xff
2fff6a62:	4631      	mov	r1, r6
2fff6a64:	25ff      	movs	r5, #255	; 0xff
2fff6a66:	f7ff fd93 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff6a6a:	e7d7      	b.n	2fff6a1c <i2c_write+0x160>
2fff6a6c:	2dff      	cmp	r5, #255	; 0xff
2fff6a6e:	d8b8      	bhi.n	2fff69e2 <i2c_write+0x126>
2fff6a70:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff6a74:	462a      	mov	r2, r5
2fff6a76:	4631      	mov	r1, r6
2fff6a78:	f7ff fd8a 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff6a7c:	e7cc      	b.n	2fff6a18 <i2c_write+0x15c>
2fff6a7e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff6a82:	fa1f f28b 	uxth.w	r2, fp
2fff6a86:	4631      	mov	r1, r6
2fff6a88:	465d      	mov	r5, fp
2fff6a8a:	f7ff fd81 	bl	2fff6590 <i2c_transfer_config.isra.0>
2fff6a8e:	e7c5      	b.n	2fff6a1c <i2c_write+0x160>
2fff6a90:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff6a94:	e75c      	b.n	2fff6950 <i2c_write+0x94>
2fff6a96:	f06f 050f 	mvn.w	r5, #15
2fff6a9a:	e759      	b.n	2fff6950 <i2c_write+0x94>
2fff6a9c:	f06f 0515 	mvn.w	r5, #21
2fff6aa0:	e756      	b.n	2fff6950 <i2c_write+0x94>
2fff6aa2:	4642      	mov	r2, r8
2fff6aa4:	464b      	mov	r3, r9
2fff6aa6:	4620      	mov	r0, r4
2fff6aa8:	f7ff fdf0 	bl	2fff668c <i2c_wait_stop>
2fff6aac:	4605      	mov	r5, r0
2fff6aae:	2800      	cmp	r0, #0
2fff6ab0:	f47f af47 	bne.w	2fff6942 <i2c_write+0x86>
2fff6ab4:	6823      	ldr	r3, [r4, #0]
2fff6ab6:	2220      	movs	r2, #32
2fff6ab8:	61da      	str	r2, [r3, #28]
2fff6aba:	6821      	ldr	r1, [r4, #0]
2fff6abc:	684b      	ldr	r3, [r1, #4]
2fff6abe:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff6ac2:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff6ac6:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff6aca:	f023 0301 	bic.w	r3, r3, #1
2fff6ace:	604b      	str	r3, [r1, #4]
2fff6ad0:	6122      	str	r2, [r4, #16]
2fff6ad2:	f8c4 b014 	str.w	fp, [r4, #20]
2fff6ad6:	e736      	b.n	2fff6946 <i2c_write+0x8a>
2fff6ad8:	000f4240 	.word	0x000f4240
2fff6adc:	80002000 	.word	0x80002000

2fff6ae0 <stm32_i2c_get_setup_from_fdt>:
2fff6ae0:	b538      	push	{r3, r4, r5, lr}
2fff6ae2:	2219      	movs	r2, #25
2fff6ae4:	460d      	mov	r5, r1
2fff6ae6:	4604      	mov	r4, r0
2fff6ae8:	490f      	ldr	r1, [pc, #60]	; (2fff6b28 <stm32_i2c_get_setup_from_fdt+0x48>)
2fff6aea:	f001 f9f9 	bl	2fff7ee0 <fdt_read_uint32_default>
2fff6aee:	61e8      	str	r0, [r5, #28]
2fff6af0:	220a      	movs	r2, #10
2fff6af2:	490e      	ldr	r1, [pc, #56]	; (2fff6b2c <stm32_i2c_get_setup_from_fdt+0x4c>)
2fff6af4:	4620      	mov	r0, r4
2fff6af6:	f001 f9f3 	bl	2fff7ee0 <fdt_read_uint32_default>
2fff6afa:	6228      	str	r0, [r5, #32]
2fff6afc:	4620      	mov	r0, r4
2fff6afe:	4a0c      	ldr	r2, [pc, #48]	; (2fff6b30 <stm32_i2c_get_setup_from_fdt+0x50>)
2fff6b00:	490c      	ldr	r1, [pc, #48]	; (2fff6b34 <stm32_i2c_get_setup_from_fdt+0x54>)
2fff6b02:	f001 f9ed 	bl	2fff7ee0 <fdt_read_uint32_default>
2fff6b06:	4a0c      	ldr	r2, [pc, #48]	; (2fff6b38 <stm32_i2c_get_setup_from_fdt+0x58>)
2fff6b08:	4601      	mov	r1, r0
2fff6b0a:	4290      	cmp	r0, r2
2fff6b0c:	d805      	bhi.n	2fff6b1a <stm32_i2c_get_setup_from_fdt+0x3a>
2fff6b0e:	6268      	str	r0, [r5, #36]	; 0x24
2fff6b10:	4620      	mov	r0, r4
2fff6b12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff6b16:	f7ff bbe7 	b.w	2fff62e8 <dt_set_pinctrl_config>
2fff6b1a:	4808      	ldr	r0, [pc, #32]	; (2fff6b3c <stm32_i2c_get_setup_from_fdt+0x5c>)
2fff6b1c:	f7fb fea2 	bl	2fff2864 <tf_log>
2fff6b20:	f06f 000e 	mvn.w	r0, #14
2fff6b24:	bd38      	pop	{r3, r4, r5, pc}
2fff6b26:	bf00      	nop
2fff6b28:	2fffb96b 	.word	0x2fffb96b
2fff6b2c:	2fffb982 	.word	0x2fffb982
2fff6b30:	000186a0 	.word	0x000186a0
2fff6b34:	2fffb338 	.word	0x2fffb338
2fff6b38:	000f4240 	.word	0x000f4240
2fff6b3c:	2fffb99a 	.word	0x2fffb99a

2fff6b40 <stm32_i2c_init>:
2fff6b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6b44:	460d      	mov	r5, r1
2fff6b46:	b0a3      	sub	sp, #140	; 0x8c
2fff6b48:	4604      	mov	r4, r0
2fff6b4a:	2800      	cmp	r0, #0
2fff6b4c:	f000 8216 	beq.w	2fff6f7c <stm32_i2c_init+0x43c>
2fff6b50:	6903      	ldr	r3, [r0, #16]
2fff6b52:	b903      	cbnz	r3, 2fff6b56 <stm32_i2c_init+0x16>
2fff6b54:	7303      	strb	r3, [r0, #12]
2fff6b56:	68a0      	ldr	r0, [r4, #8]
2fff6b58:	2324      	movs	r3, #36	; 0x24
2fff6b5a:	6123      	str	r3, [r4, #16]
2fff6b5c:	f7fe fb16 	bl	2fff518c <stm32mp_clk_get_rate>
2fff6b60:	9003      	str	r0, [sp, #12]
2fff6b62:	b940      	cbnz	r0, 2fff6b76 <stm32_i2c_init+0x36>
2fff6b64:	489d      	ldr	r0, [pc, #628]	; (2fff6ddc <stm32_i2c_init+0x29c>)
2fff6b66:	f06f 0815 	mvn.w	r8, #21
2fff6b6a:	f7fb fe7b 	bl	2fff2864 <tf_log>
2fff6b6e:	4640      	mov	r0, r8
2fff6b70:	b023      	add	sp, #140	; 0x8c
2fff6b72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff6b76:	6a23      	ldr	r3, [r4, #32]
2fff6b78:	9a03      	ldr	r2, [sp, #12]
2fff6b7a:	429a      	cmp	r2, r3
2fff6b7c:	d02a      	beq.n	2fff6bd4 <stm32_i2c_init+0x94>
2fff6b7e:	4b98      	ldr	r3, [pc, #608]	; (2fff6de0 <stm32_i2c_init+0x2a0>)
2fff6b80:	eb03 0652 	add.w	r6, r3, r2, lsr #1
2fff6b84:	fbb6 f6f2 	udiv	r6, r6, r2
2fff6b88:	0073      	lsls	r3, r6, #1
2fff6b8a:	930c      	str	r3, [sp, #48]	; 0x30
2fff6b8c:	6a69      	ldr	r1, [r5, #36]	; 0x24
2fff6b8e:	4b95      	ldr	r3, [pc, #596]	; (2fff6de4 <stm32_i2c_init+0x2a4>)
2fff6b90:	4299      	cmp	r1, r3
2fff6b92:	d97e      	bls.n	2fff6c92 <stm32_i2c_init+0x152>
2fff6b94:	4b94      	ldr	r3, [pc, #592]	; (2fff6de8 <stm32_i2c_init+0x2a8>)
2fff6b96:	4299      	cmp	r1, r3
2fff6b98:	d97d      	bls.n	2fff6c96 <stm32_i2c_init+0x156>
2fff6b9a:	4b94      	ldr	r3, [pc, #592]	; (2fff6dec <stm32_i2c_init+0x2ac>)
2fff6b9c:	4299      	cmp	r1, r3
2fff6b9e:	d87c      	bhi.n	2fff6c9a <stm32_i2c_init+0x15a>
2fff6ba0:	2702      	movs	r7, #2
2fff6ba2:	4a93      	ldr	r2, [pc, #588]	; (2fff6df0 <stm32_i2c_init+0x2b0>)
2fff6ba4:	017b      	lsls	r3, r7, #5
2fff6ba6:	eb02 1147 	add.w	r1, r2, r7, lsl #5
2fff6baa:	f852 a003 	ldr.w	sl, [r2, r3]
2fff6bae:	4b8c      	ldr	r3, [pc, #560]	; (2fff6de0 <stm32_i2c_init+0x2a0>)
2fff6bb0:	688a      	ldr	r2, [r1, #8]
2fff6bb2:	eb03 035a 	add.w	r3, r3, sl, lsr #1
2fff6bb6:	69e8      	ldr	r0, [r5, #28]
2fff6bb8:	fbb3 f3fa 	udiv	r3, r3, sl
2fff6bbc:	4290      	cmp	r0, r2
2fff6bbe:	930a      	str	r3, [sp, #40]	; 0x28
2fff6bc0:	6849      	ldr	r1, [r1, #4]
2fff6bc2:	6a2b      	ldr	r3, [r5, #32]
2fff6bc4:	f240 8083 	bls.w	2fff6cce <stm32_i2c_init+0x18e>
2fff6bc8:	9100      	str	r1, [sp, #0]
2fff6bca:	4601      	mov	r1, r0
2fff6bcc:	4889      	ldr	r0, [pc, #548]	; (2fff6df4 <stm32_i2c_init+0x2b4>)
2fff6bce:	f7fb fe49 	bl	2fff2864 <tf_log>
2fff6bd2:	e065      	b.n	2fff6ca0 <stm32_i2c_init+0x160>
2fff6bd4:	69e6      	ldr	r6, [r4, #28]
2fff6bd6:	68a0      	ldr	r0, [r4, #8]
2fff6bd8:	f026 6670 	bic.w	r6, r6, #251658240	; 0xf000000
2fff6bdc:	f7fe faaa 	bl	2fff5134 <stm32mp_clk_enable>
2fff6be0:	6822      	ldr	r2, [r4, #0]
2fff6be2:	2120      	movs	r1, #32
2fff6be4:	6813      	ldr	r3, [r2, #0]
2fff6be6:	f023 0301 	bic.w	r3, r3, #1
2fff6bea:	6013      	str	r3, [r2, #0]
2fff6bec:	6823      	ldr	r3, [r4, #0]
2fff6bee:	611e      	str	r6, [r3, #16]
2fff6bf0:	6822      	ldr	r2, [r4, #0]
2fff6bf2:	6893      	ldr	r3, [r2, #8]
2fff6bf4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
2fff6bf8:	6093      	str	r3, [r2, #8]
2fff6bfa:	686b      	ldr	r3, [r5, #4]
2fff6bfc:	6822      	ldr	r2, [r4, #0]
2fff6bfe:	2b01      	cmp	r3, #1
2fff6c00:	682b      	ldr	r3, [r5, #0]
2fff6c02:	bf0c      	ite	eq
2fff6c04:	f443 4300 	orreq.w	r3, r3, #32768	; 0x8000
2fff6c08:	f443 4304 	orrne.w	r3, r3, #33792	; 0x8400
2fff6c0c:	6093      	str	r3, [r2, #8]
2fff6c0e:	2200      	movs	r2, #0
2fff6c10:	6823      	ldr	r3, [r4, #0]
2fff6c12:	605a      	str	r2, [r3, #4]
2fff6c14:	686b      	ldr	r3, [r5, #4]
2fff6c16:	2b02      	cmp	r3, #2
2fff6c18:	bf01      	itttt	eq
2fff6c1a:	6822      	ldreq	r2, [r4, #0]
2fff6c1c:	6853      	ldreq	r3, [r2, #4]
2fff6c1e:	f443 6300 	orreq.w	r3, r3, #2048	; 0x800
2fff6c22:	6053      	streq	r3, [r2, #4]
2fff6c24:	6822      	ldr	r2, [r4, #0]
2fff6c26:	6853      	ldr	r3, [r2, #4]
2fff6c28:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
2fff6c2c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
2fff6c30:	6053      	str	r3, [r2, #4]
2fff6c32:	6822      	ldr	r2, [r4, #0]
2fff6c34:	68d3      	ldr	r3, [r2, #12]
2fff6c36:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
2fff6c3a:	60d3      	str	r3, [r2, #12]
2fff6c3c:	68ea      	ldr	r2, [r5, #12]
2fff6c3e:	68ab      	ldr	r3, [r5, #8]
2fff6c40:	4313      	orrs	r3, r2
2fff6c42:	692a      	ldr	r2, [r5, #16]
2fff6c44:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff6c48:	6822      	ldr	r2, [r4, #0]
2fff6c4a:	60d3      	str	r3, [r2, #12]
2fff6c4c:	69aa      	ldr	r2, [r5, #24]
2fff6c4e:	696b      	ldr	r3, [r5, #20]
2fff6c50:	4313      	orrs	r3, r2
2fff6c52:	6822      	ldr	r2, [r4, #0]
2fff6c54:	6013      	str	r3, [r2, #0]
2fff6c56:	6822      	ldr	r2, [r4, #0]
2fff6c58:	6813      	ldr	r3, [r2, #0]
2fff6c5a:	f043 0301 	orr.w	r3, r3, #1
2fff6c5e:	6013      	str	r3, [r2, #0]
2fff6c60:	2300      	movs	r3, #0
2fff6c62:	61a3      	str	r3, [r4, #24]
2fff6c64:	6163      	str	r3, [r4, #20]
2fff6c66:	6aab      	ldr	r3, [r5, #40]	; 0x28
2fff6c68:	7b25      	ldrb	r5, [r4, #12]
2fff6c6a:	6121      	str	r1, [r4, #16]
2fff6c6c:	2b00      	cmp	r3, #0
2fff6c6e:	bf14      	ite	ne
2fff6c70:	2300      	movne	r3, #0
2fff6c72:	f44f 5380 	moveq.w	r3, #4096	; 0x1000
2fff6c76:	2d00      	cmp	r5, #0
2fff6c78:	f000 8164 	beq.w	2fff6f44 <stm32_i2c_init+0x404>
2fff6c7c:	485e      	ldr	r0, [pc, #376]	; (2fff6df8 <stm32_i2c_init+0x2b8>)
2fff6c7e:	f06f 010f 	mvn.w	r1, #15
2fff6c82:	f06f 080f 	mvn.w	r8, #15
2fff6c86:	f7fb fded 	bl	2fff2864 <tf_log>
2fff6c8a:	68a0      	ldr	r0, [r4, #8]
2fff6c8c:	f7fe fa55 	bl	2fff513a <stm32mp_clk_disable>
2fff6c90:	e76d      	b.n	2fff6b6e <stm32_i2c_init+0x2e>
2fff6c92:	2700      	movs	r7, #0
2fff6c94:	e785      	b.n	2fff6ba2 <stm32_i2c_init+0x62>
2fff6c96:	2701      	movs	r7, #1
2fff6c98:	e783      	b.n	2fff6ba2 <stm32_i2c_init+0x62>
2fff6c9a:	4858      	ldr	r0, [pc, #352]	; (2fff6dfc <stm32_i2c_init+0x2bc>)
2fff6c9c:	f7fb fde2 	bl	2fff2864 <tf_log>
2fff6ca0:	f06f 0815 	mvn.w	r8, #21
2fff6ca4:	4856      	ldr	r0, [pc, #344]	; (2fff6e00 <stm32_i2c_init+0x2c0>)
2fff6ca6:	f7fb fddd 	bl	2fff2864 <tf_log>
2fff6caa:	6a6b      	ldr	r3, [r5, #36]	; 0x24
2fff6cac:	4a4d      	ldr	r2, [pc, #308]	; (2fff6de4 <stm32_i2c_init+0x2a4>)
2fff6cae:	4293      	cmp	r3, r2
2fff6cb0:	f240 8167 	bls.w	2fff6f82 <stm32_i2c_init+0x442>
2fff6cb4:	494d      	ldr	r1, [pc, #308]	; (2fff6dec <stm32_i2c_init+0x2ac>)
2fff6cb6:	428b      	cmp	r3, r1
2fff6cb8:	d804      	bhi.n	2fff6cc4 <stm32_i2c_init+0x184>
2fff6cba:	484b      	ldr	r0, [pc, #300]	; (2fff6de8 <stm32_i2c_init+0x2a8>)
2fff6cbc:	4283      	cmp	r3, r0
2fff6cbe:	bf8c      	ite	hi
2fff6cc0:	4601      	movhi	r1, r0
2fff6cc2:	4611      	movls	r1, r2
2fff6cc4:	484f      	ldr	r0, [pc, #316]	; (2fff6e04 <stm32_i2c_init+0x2c4>)
2fff6cc6:	6269      	str	r1, [r5, #36]	; 0x24
2fff6cc8:	f7fb fdcc 	bl	2fff2864 <tf_log>
2fff6ccc:	e75e      	b.n	2fff6b8c <stm32_i2c_init+0x4c>
2fff6cce:	4299      	cmp	r1, r3
2fff6cd0:	f4ff af7a 	bcc.w	2fff6bc8 <stm32_i2c_init+0x88>
2fff6cd4:	f895 102c 	ldrb.w	r1, [r5, #44]	; 0x2c
2fff6cd8:	2910      	cmp	r1, #16
2fff6cda:	d904      	bls.n	2fff6ce6 <stm32_i2c_init+0x1a6>
2fff6cdc:	484a      	ldr	r0, [pc, #296]	; (2fff6e08 <stm32_i2c_init+0x2c8>)
2fff6cde:	2210      	movs	r2, #16
2fff6ce0:	f7fb fdc0 	bl	2fff2864 <tf_log>
2fff6ce4:	e7dc      	b.n	2fff6ca0 <stm32_i2c_init+0x160>
2fff6ce6:	6aaa      	ldr	r2, [r5, #40]	; 0x28
2fff6ce8:	2a00      	cmp	r2, #0
2fff6cea:	d136      	bne.n	2fff6d5a <stm32_i2c_init+0x21a>
2fff6cec:	4691      	mov	r9, r2
2fff6cee:	4694      	mov	ip, r2
2fff6cf0:	fb06 f201 	mul.w	r2, r6, r1
2fff6cf4:	3103      	adds	r1, #3
2fff6cf6:	f10d 0b38 	add.w	fp, sp, #56	; 0x38
2fff6cfa:	9208      	str	r2, [sp, #32]
2fff6cfc:	4a3c      	ldr	r2, [pc, #240]	; (2fff6df0 <stm32_i2c_init+0x2b0>)
2fff6cfe:	fb06 fe01 	mul.w	lr, r6, r1
2fff6d02:	eb02 1147 	add.w	r1, r2, r7, lsl #5
2fff6d06:	eba3 030e 	sub.w	r3, r3, lr
2fff6d0a:	68ca      	ldr	r2, [r1, #12]
2fff6d0c:	44b6      	add	lr, r6
2fff6d0e:	4413      	add	r3, r2
2fff6d10:	eba3 0309 	sub.w	r3, r3, r9
2fff6d14:	9304      	str	r3, [sp, #16]
2fff6d16:	690b      	ldr	r3, [r1, #16]
2fff6d18:	4486      	add	lr, r0
2fff6d1a:	eba3 0e0e 	sub.w	lr, r3, lr
2fff6d1e:	6949      	ldr	r1, [r1, #20]
2fff6d20:	ebae 030c 	sub.w	r3, lr, ip
2fff6d24:	9305      	str	r3, [sp, #20]
2fff6d26:	1843      	adds	r3, r0, r1
2fff6d28:	a80e      	add	r0, sp, #56	; 0x38
2fff6d2a:	930b      	str	r3, [sp, #44]	; 0x2c
2fff6d2c:	2150      	movs	r1, #80	; 0x50
2fff6d2e:	9b04      	ldr	r3, [sp, #16]
2fff6d30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2fff6d34:	9304      	str	r3, [sp, #16]
2fff6d36:	9b05      	ldr	r3, [sp, #20]
2fff6d38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2fff6d3c:	9305      	str	r3, [sp, #20]
2fff6d3e:	f001 eef2 	blx	2fff8b24 <zero_normalmem>
2fff6d42:	f8cd b008 	str.w	fp, [sp, #8]
2fff6d46:	4630      	mov	r0, r6
2fff6d48:	46dc      	mov	ip, fp
2fff6d4a:	2201      	movs	r2, #1
2fff6d4c:	f04f 0e10 	mov.w	lr, #16
2fff6d50:	9006      	str	r0, [sp, #24]
2fff6d52:	1e53      	subs	r3, r2, #1
2fff6d54:	9307      	str	r3, [sp, #28]
2fff6d56:	2100      	movs	r1, #0
2fff6d58:	e011      	b.n	2fff6d7e <stm32_i2c_init+0x23e>
2fff6d5a:	f04f 0932 	mov.w	r9, #50	; 0x32
2fff6d5e:	f44f 7c82 	mov.w	ip, #260	; 0x104
2fff6d62:	e7c5      	b.n	2fff6cf0 <stm32_i2c_init+0x1b0>
2fff6d64:	4480      	add	r8, r0
2fff6d66:	3301      	adds	r3, #1
2fff6d68:	b29b      	uxth	r3, r3
2fff6d6a:	2b10      	cmp	r3, #16
2fff6d6c:	d111      	bne.n	2fff6d92 <stm32_i2c_init+0x252>
2fff6d6e:	9b07      	ldr	r3, [sp, #28]
2fff6d70:	4573      	cmp	r3, lr
2fff6d72:	d024      	beq.n	2fff6dbe <stm32_i2c_init+0x27e>
2fff6d74:	9b06      	ldr	r3, [sp, #24]
2fff6d76:	2910      	cmp	r1, #16
2fff6d78:	4403      	add	r3, r0
2fff6d7a:	9306      	str	r3, [sp, #24]
2fff6d7c:	d01f      	beq.n	2fff6dbe <stm32_i2c_init+0x27e>
2fff6d7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2fff6d80:	f8dd 8018 	ldr.w	r8, [sp, #24]
2fff6d84:	9109      	str	r1, [sp, #36]	; 0x24
2fff6d86:	3101      	adds	r1, #1
2fff6d88:	4543      	cmp	r3, r8
2fff6d8a:	b289      	uxth	r1, r1
2fff6d8c:	d8f2      	bhi.n	2fff6d74 <stm32_i2c_init+0x234>
2fff6d8e:	46b0      	mov	r8, r6
2fff6d90:	2300      	movs	r3, #0
2fff6d92:	f8dd b010 	ldr.w	fp, [sp, #16]
2fff6d96:	45c3      	cmp	fp, r8
2fff6d98:	d8e4      	bhi.n	2fff6d64 <stm32_i2c_init+0x224>
2fff6d9a:	f8dd b014 	ldr.w	fp, [sp, #20]
2fff6d9e:	45c3      	cmp	fp, r8
2fff6da0:	d3e0      	bcc.n	2fff6d64 <stm32_i2c_init+0x224>
2fff6da2:	f8dd b01c 	ldr.w	fp, [sp, #28]
2fff6da6:	45f3      	cmp	fp, lr
2fff6da8:	d0dc      	beq.n	2fff6d64 <stm32_i2c_init+0x224>
2fff6daa:	9909      	ldr	r1, [sp, #36]	; 0x24
2fff6dac:	46de      	mov	lr, fp
2fff6dae:	f88c 3001 	strb.w	r3, [ip, #1]
2fff6db2:	f04f 0301 	mov.w	r3, #1
2fff6db6:	f88c 1000 	strb.w	r1, [ip]
2fff6dba:	f88c 3004 	strb.w	r3, [ip, #4]
2fff6dbe:	4430      	add	r0, r6
2fff6dc0:	3201      	adds	r2, #1
2fff6dc2:	2a11      	cmp	r2, #17
2fff6dc4:	f10c 0c05 	add.w	ip, ip, #5
2fff6dc8:	d1c2      	bne.n	2fff6d50 <stm32_i2c_init+0x210>
2fff6dca:	f1be 0f10 	cmp.w	lr, #16
2fff6dce:	d11f      	bne.n	2fff6e10 <stm32_i2c_init+0x2d0>
2fff6dd0:	480e      	ldr	r0, [pc, #56]	; (2fff6e0c <stm32_i2c_init+0x2cc>)
2fff6dd2:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff6dd6:	f7fb fd45 	bl	2fff2864 <tf_log>
2fff6dda:	e763      	b.n	2fff6ca4 <stm32_i2c_init+0x164>
2fff6ddc:	2fffb9b8 	.word	0x2fffb9b8
2fff6de0:	3b9aca00 	.word	0x3b9aca00
2fff6de4:	000186a0 	.word	0x000186a0
2fff6de8:	00061a80 	.word	0x00061a80
2fff6dec:	000f4240 	.word	0x000f4240
2fff6df0:	2fffbb00 	.word	0x2fffbb00
2fff6df4:	2fffb9ec 	.word	0x2fffb9ec
2fff6df8:	2fffbaaf 	.word	0x2fffbaaf
2fff6dfc:	2fffb9ce 	.word	0x2fffb9ce
2fff6e00:	2fffba70 	.word	0x2fffba70
2fff6e04:	2fffba90 	.word	0x2fffba90
2fff6e08:	2fffba20 	.word	0x2fffba20
2fff6e0c:	2fffba39 	.word	0x2fffba39
2fff6e10:	9a0c      	ldr	r2, [sp, #48]	; 0x30
2fff6e12:	4631      	mov	r1, r6
2fff6e14:	9b08      	ldr	r3, [sp, #32]
2fff6e16:	f04f 0e00 	mov.w	lr, #0
2fff6e1a:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff6e1e:	4413      	add	r3, r2
2fff6e20:	2250      	movs	r2, #80	; 0x50
2fff6e22:	444b      	add	r3, r9
2fff6e24:	9306      	str	r3, [sp, #24]
2fff6e26:	2364      	movs	r3, #100	; 0x64
2fff6e28:	fbba f3f3 	udiv	r3, sl, r3
2fff6e2c:	4353      	muls	r3, r2
2fff6e2e:	4a57      	ldr	r2, [pc, #348]	; (2fff6f8c <stm32_i2c_init+0x44c>)
2fff6e30:	fbb2 f3f3 	udiv	r3, r2, r3
2fff6e34:	9307      	str	r3, [sp, #28]
2fff6e36:	fbb2 f3fa 	udiv	r3, r2, sl
2fff6e3a:	9309      	str	r3, [sp, #36]	; 0x24
2fff6e3c:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
2fff6e40:	9304      	str	r3, [sp, #16]
2fff6e42:	4b53      	ldr	r3, [pc, #332]	; (2fff6f90 <stm32_i2c_init+0x450>)
2fff6e44:	eb03 1747 	add.w	r7, r3, r7, lsl #5
2fff6e48:	9b08      	ldr	r3, [sp, #32]
2fff6e4a:	444b      	add	r3, r9
2fff6e4c:	930d      	str	r3, [sp, #52]	; 0x34
2fff6e4e:	9b02      	ldr	r3, [sp, #8]
2fff6e50:	791b      	ldrb	r3, [r3, #4]
2fff6e52:	2b00      	cmp	r3, #0
2fff6e54:	d045      	beq.n	2fff6ee2 <stm32_i2c_init+0x3a2>
2fff6e56:	69bb      	ldr	r3, [r7, #24]
2fff6e58:	f04f 0900 	mov.w	r9, #0
2fff6e5c:	9308      	str	r3, [sp, #32]
2fff6e5e:	9b06      	ldr	r3, [sp, #24]
2fff6e60:	440b      	add	r3, r1
2fff6e62:	9305      	str	r3, [sp, #20]
2fff6e64:	469c      	mov	ip, r3
2fff6e66:	9b08      	ldr	r3, [sp, #32]
2fff6e68:	459c      	cmp	ip, r3
2fff6e6a:	d334      	bcc.n	2fff6ed6 <stm32_i2c_init+0x396>
2fff6e6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff6e6e:	ebac 0303 	sub.w	r3, ip, r3
2fff6e72:	ebb6 0f93 	cmp.w	r6, r3, lsr #2
2fff6e76:	d22e      	bcs.n	2fff6ed6 <stm32_i2c_init+0x396>
2fff6e78:	6a2b      	ldr	r3, [r5, #32]
2fff6e7a:	f04f 0a00 	mov.w	sl, #0
2fff6e7e:	69ea      	ldr	r2, [r5, #28]
2fff6e80:	980a      	ldr	r0, [sp, #40]	; 0x28
2fff6e82:	441a      	add	r2, r3
2fff6e84:	4462      	add	r2, ip
2fff6e86:	9b05      	ldr	r3, [sp, #20]
2fff6e88:	1a10      	subs	r0, r2, r0
2fff6e8a:	900b      	str	r0, [sp, #44]	; 0x2c
2fff6e8c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
2fff6e90:	1898      	adds	r0, r3, r2
2fff6e92:	4558      	cmp	r0, fp
2fff6e94:	d319      	bcc.n	2fff6eca <stm32_i2c_init+0x38a>
2fff6e96:	f8dd b01c 	ldr.w	fp, [sp, #28]
2fff6e9a:	4558      	cmp	r0, fp
2fff6e9c:	d815      	bhi.n	2fff6eca <stm32_i2c_init+0x38a>
2fff6e9e:	69f8      	ldr	r0, [r7, #28]
2fff6ea0:	4283      	cmp	r3, r0
2fff6ea2:	d312      	bcc.n	2fff6eca <stm32_i2c_init+0x38a>
2fff6ea4:	429e      	cmp	r6, r3
2fff6ea6:	d210      	bcs.n	2fff6eca <stm32_i2c_init+0x38a>
2fff6ea8:	980b      	ldr	r0, [sp, #44]	; 0x2c
2fff6eaa:	f8dd b010 	ldr.w	fp, [sp, #16]
2fff6eae:	4418      	add	r0, r3
2fff6eb0:	2800      	cmp	r0, #0
2fff6eb2:	bfb8      	it	lt
2fff6eb4:	4240      	neglt	r0, r0
2fff6eb6:	4558      	cmp	r0, fp
2fff6eb8:	da07      	bge.n	2fff6eca <stm32_i2c_init+0x38a>
2fff6eba:	f8dd 8008 	ldr.w	r8, [sp, #8]
2fff6ebe:	9004      	str	r0, [sp, #16]
2fff6ec0:	f888 9003 	strb.w	r9, [r8, #3]
2fff6ec4:	f888 a002 	strb.w	sl, [r8, #2]
2fff6ec8:	46f0      	mov	r8, lr
2fff6eca:	440b      	add	r3, r1
2fff6ecc:	f10a 0a01 	add.w	sl, sl, #1
2fff6ed0:	f5ba 7f80 	cmp.w	sl, #256	; 0x100
2fff6ed4:	d1da      	bne.n	2fff6e8c <stm32_i2c_init+0x34c>
2fff6ed6:	448c      	add	ip, r1
2fff6ed8:	f109 0901 	add.w	r9, r9, #1
2fff6edc:	f5b9 7f80 	cmp.w	r9, #256	; 0x100
2fff6ee0:	d1c1      	bne.n	2fff6e66 <stm32_i2c_init+0x326>
2fff6ee2:	9b02      	ldr	r3, [sp, #8]
2fff6ee4:	f10e 0e01 	add.w	lr, lr, #1
2fff6ee8:	4431      	add	r1, r6
2fff6eea:	f1be 0f10 	cmp.w	lr, #16
2fff6eee:	f103 0305 	add.w	r3, r3, #5
2fff6ef2:	9302      	str	r3, [sp, #8]
2fff6ef4:	d1ab      	bne.n	2fff6e4e <stm32_i2c_init+0x30e>
2fff6ef6:	f1b8 3fff 	cmp.w	r8, #4294967295	; 0xffffffff
2fff6efa:	d103      	bne.n	2fff6f04 <stm32_i2c_init+0x3c4>
2fff6efc:	4825      	ldr	r0, [pc, #148]	; (2fff6f94 <stm32_i2c_init+0x454>)
2fff6efe:	f7fb fcb1 	bl	2fff2864 <tf_log>
2fff6f02:	e6cf      	b.n	2fff6ca4 <stm32_i2c_init+0x164>
2fff6f04:	eb08 0388 	add.w	r3, r8, r8, lsl #2
2fff6f08:	3388      	adds	r3, #136	; 0x88
2fff6f0a:	446b      	add	r3, sp
2fff6f0c:	f813 6c4d 	ldrb.w	r6, [r3, #-77]
2fff6f10:	ea46 7608 	orr.w	r6, r6, r8, lsl #28
2fff6f14:	f813 8c4e 	ldrb.w	r8, [r3, #-78]
2fff6f18:	ea46 2608 	orr.w	r6, r6, r8, lsl #8
2fff6f1c:	f813 8c50 	ldrb.w	r8, [r3, #-80]
2fff6f20:	ea4f 5808 	mov.w	r8, r8, lsl #20
2fff6f24:	f408 0870 	and.w	r8, r8, #15728640	; 0xf00000
2fff6f28:	ea46 0608 	orr.w	r6, r6, r8
2fff6f2c:	f813 8c4f 	ldrb.w	r8, [r3, #-79]
2fff6f30:	9b03      	ldr	r3, [sp, #12]
2fff6f32:	ea4f 4808 	mov.w	r8, r8, lsl #16
2fff6f36:	6223      	str	r3, [r4, #32]
2fff6f38:	f408 2870 	and.w	r8, r8, #983040	; 0xf0000
2fff6f3c:	ea46 0608 	orr.w	r6, r6, r8
2fff6f40:	61e6      	str	r6, [r4, #28]
2fff6f42:	e648      	b.n	2fff6bd6 <stm32_i2c_init+0x96>
2fff6f44:	6820      	ldr	r0, [r4, #0]
2fff6f46:	2224      	movs	r2, #36	; 0x24
2fff6f48:	6122      	str	r2, [r4, #16]
2fff6f4a:	46a8      	mov	r8, r5
2fff6f4c:	6802      	ldr	r2, [r0, #0]
2fff6f4e:	f022 0201 	bic.w	r2, r2, #1
2fff6f52:	6002      	str	r2, [r0, #0]
2fff6f54:	6820      	ldr	r0, [r4, #0]
2fff6f56:	6802      	ldr	r2, [r0, #0]
2fff6f58:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
2fff6f5c:	6002      	str	r2, [r0, #0]
2fff6f5e:	6822      	ldr	r2, [r4, #0]
2fff6f60:	6810      	ldr	r0, [r2, #0]
2fff6f62:	4303      	orrs	r3, r0
2fff6f64:	6013      	str	r3, [r2, #0]
2fff6f66:	6822      	ldr	r2, [r4, #0]
2fff6f68:	6813      	ldr	r3, [r2, #0]
2fff6f6a:	f043 0301 	orr.w	r3, r3, #1
2fff6f6e:	6013      	str	r3, [r2, #0]
2fff6f70:	6121      	str	r1, [r4, #16]
2fff6f72:	68a0      	ldr	r0, [r4, #8]
2fff6f74:	7325      	strb	r5, [r4, #12]
2fff6f76:	f7fe f8e0 	bl	2fff513a <stm32mp_clk_disable>
2fff6f7a:	e5f8      	b.n	2fff6b6e <stm32_i2c_init+0x2e>
2fff6f7c:	f06f 0801 	mvn.w	r8, #1
2fff6f80:	e5f5      	b.n	2fff6b6e <stm32_i2c_init+0x2e>
2fff6f82:	4805      	ldr	r0, [pc, #20]	; (2fff6f98 <stm32_i2c_init+0x458>)
2fff6f84:	f7fb fc6e 	bl	2fff2864 <tf_log>
2fff6f88:	e5f1      	b.n	2fff6b6e <stm32_i2c_init+0x2e>
2fff6f8a:	bf00      	nop
2fff6f8c:	3b9aca00 	.word	0x3b9aca00
2fff6f90:	2fffbb00 	.word	0x2fffbb00
2fff6f94:	2fffba56 	.word	0x2fffba56
2fff6f98:	2fffbada 	.word	0x2fffbada

2fff6f9c <stm32_i2c_mem_write>:
2fff6f9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff6f9e:	2440      	movs	r4, #64	; 0x40
2fff6fa0:	9403      	str	r4, [sp, #12]
2fff6fa2:	9c08      	ldr	r4, [sp, #32]
2fff6fa4:	9402      	str	r4, [sp, #8]
2fff6fa6:	f8bd 401c 	ldrh.w	r4, [sp, #28]
2fff6faa:	9401      	str	r4, [sp, #4]
2fff6fac:	9c06      	ldr	r4, [sp, #24]
2fff6fae:	9400      	str	r4, [sp, #0]
2fff6fb0:	f7ff fc84 	bl	2fff68bc <i2c_write>
2fff6fb4:	b004      	add	sp, #16
2fff6fb6:	bd10      	pop	{r4, pc}

2fff6fb8 <stm32_i2c_mem_read>:
2fff6fb8:	b430      	push	{r4, r5}
2fff6fba:	2540      	movs	r5, #64	; 0x40
2fff6fbc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
2fff6fc0:	9504      	str	r5, [sp, #16]
2fff6fc2:	9403      	str	r4, [sp, #12]
2fff6fc4:	bc30      	pop	{r4, r5}
2fff6fc6:	f7ff bb83 	b.w	2fff66d0 <i2c_read.constprop.0>
	...

2fff6fcc <stm32_i2c_is_device_ready>:
2fff6fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6fd0:	461f      	mov	r7, r3
2fff6fd2:	6903      	ldr	r3, [r0, #16]
2fff6fd4:	b085      	sub	sp, #20
2fff6fd6:	4604      	mov	r4, r0
2fff6fd8:	468a      	mov	sl, r1
2fff6fda:	2b20      	cmp	r3, #32
2fff6fdc:	4693      	mov	fp, r2
2fff6fde:	f040 8093 	bne.w	2fff7108 <stm32_i2c_is_device_ready+0x13c>
2fff6fe2:	7b05      	ldrb	r5, [r0, #12]
2fff6fe4:	2d00      	cmp	r5, #0
2fff6fe6:	f040 808f 	bne.w	2fff7108 <stm32_i2c_is_device_ready+0x13c>
2fff6fea:	6880      	ldr	r0, [r0, #8]
2fff6fec:	f7fe f8a2 	bl	2fff5134 <stm32mp_clk_enable>
2fff6ff0:	6165      	str	r5, [r4, #20]
2fff6ff2:	2301      	movs	r3, #1
2fff6ff4:	7323      	strb	r3, [r4, #12]
2fff6ff6:	6823      	ldr	r3, [r4, #0]
2fff6ff8:	699e      	ldr	r6, [r3, #24]
2fff6ffa:	f416 4600 	ands.w	r6, r6, #32768	; 0x8000
2fff6ffe:	d009      	beq.n	2fff7014 <stm32_i2c_is_device_ready+0x48>
2fff7000:	2500      	movs	r5, #0
2fff7002:	68a0      	ldr	r0, [r4, #8]
2fff7004:	2300      	movs	r3, #0
2fff7006:	7323      	strb	r3, [r4, #12]
2fff7008:	f7fe f897 	bl	2fff513a <stm32mp_clk_disable>
2fff700c:	4628      	mov	r0, r5
2fff700e:	b005      	add	sp, #20
2fff7010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff7014:	f3ca 0a09 	ubfx	sl, sl, #0, #10
2fff7018:	2324      	movs	r3, #36	; 0x24
2fff701a:	6123      	str	r3, [r4, #16]
2fff701c:	f04a 7500 	orr.w	r5, sl, #33554432	; 0x2000000
2fff7020:	61a6      	str	r6, [r4, #24]
2fff7022:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff7026:	435f      	muls	r7, r3
2fff7028:	f445 5500 	orr.w	r5, r5, #8192	; 0x2000
2fff702c:	6823      	ldr	r3, [r4, #0]
2fff702e:	689a      	ldr	r2, [r3, #8]
2fff7030:	0552      	lsls	r2, r2, #21
2fff7032:	bf52      	itee	pl
2fff7034:	605d      	strpl	r5, [r3, #4]
2fff7036:	f44a 5220 	orrmi.w	r2, sl, #10240	; 0x2800
2fff703a:	605a      	strmi	r2, [r3, #4]
2fff703c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff7040:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff7044:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff7048:	f8dd 8008 	ldr.w	r8, [sp, #8]
2fff704c:	2300      	movs	r3, #0
2fff704e:	4a2f      	ldr	r2, [pc, #188]	; (2fff710c <stm32_i2c_is_device_ready+0x140>)
2fff7050:	fba7 0100 	umull	r0, r1, r7, r0
2fff7054:	f001 edae 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff7058:	9b03      	ldr	r3, [sp, #12]
2fff705a:	6822      	ldr	r2, [r4, #0]
2fff705c:	eb10 0808 	adds.w	r8, r0, r8
2fff7060:	eb41 0903 	adc.w	r9, r1, r3
2fff7064:	f102 0c18 	add.w	ip, r2, #24
2fff7068:	f8dc 3000 	ldr.w	r3, [ip]
2fff706c:	f013 0330 	ands.w	r3, r3, #48	; 0x30
2fff7070:	d10d      	bne.n	2fff708e <stm32_i2c_is_device_ready+0xc2>
2fff7072:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff7076:	4580      	cmp	r8, r0
2fff7078:	eb79 0101 	sbcs.w	r1, r9, r1
2fff707c:	d2f4      	bcs.n	2fff7068 <stm32_i2c_is_device_ready+0x9c>
2fff707e:	69a2      	ldr	r2, [r4, #24]
2fff7080:	6163      	str	r3, [r4, #20]
2fff7082:	f042 0220 	orr.w	r2, r2, #32
2fff7086:	61a2      	str	r2, [r4, #24]
2fff7088:	2220      	movs	r2, #32
2fff708a:	6122      	str	r2, [r4, #16]
2fff708c:	e7b8      	b.n	2fff7000 <stm32_i2c_is_device_ready+0x34>
2fff708e:	6992      	ldr	r2, [r2, #24]
2fff7090:	e9cd 8900 	strd	r8, r9, [sp]
2fff7094:	f012 0210 	ands.w	r2, r2, #16
2fff7098:	d10a      	bne.n	2fff70b0 <stm32_i2c_is_device_ready+0xe4>
2fff709a:	2120      	movs	r1, #32
2fff709c:	4620      	mov	r0, r4
2fff709e:	f7ff fa55 	bl	2fff654c <i2c_wait_flag>
2fff70a2:	2800      	cmp	r0, #0
2fff70a4:	d1ac      	bne.n	2fff7000 <stm32_i2c_is_device_ready+0x34>
2fff70a6:	6823      	ldr	r3, [r4, #0]
2fff70a8:	2501      	movs	r5, #1
2fff70aa:	61d9      	str	r1, [r3, #28]
2fff70ac:	6121      	str	r1, [r4, #16]
2fff70ae:	e7a8      	b.n	2fff7002 <stm32_i2c_is_device_ready+0x36>
2fff70b0:	2200      	movs	r2, #0
2fff70b2:	2120      	movs	r1, #32
2fff70b4:	4620      	mov	r0, r4
2fff70b6:	f7ff fa49 	bl	2fff654c <i2c_wait_flag>
2fff70ba:	4602      	mov	r2, r0
2fff70bc:	2800      	cmp	r0, #0
2fff70be:	d19f      	bne.n	2fff7000 <stm32_i2c_is_device_ready+0x34>
2fff70c0:	6823      	ldr	r3, [r4, #0]
2fff70c2:	2010      	movs	r0, #16
2fff70c4:	455e      	cmp	r6, fp
2fff70c6:	61d8      	str	r0, [r3, #28]
2fff70c8:	6820      	ldr	r0, [r4, #0]
2fff70ca:	61c1      	str	r1, [r0, #28]
2fff70cc:	d110      	bne.n	2fff70f0 <stm32_i2c_is_device_ready+0x124>
2fff70ce:	f8d4 c000 	ldr.w	ip, [r4]
2fff70d2:	f8dc 0004 	ldr.w	r0, [ip, #4]
2fff70d6:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
2fff70da:	f8cc 0004 	str.w	r0, [ip, #4]
2fff70de:	4620      	mov	r0, r4
2fff70e0:	e9cd 8900 	strd	r8, r9, [sp]
2fff70e4:	f7ff fa32 	bl	2fff654c <i2c_wait_flag>
2fff70e8:	2800      	cmp	r0, #0
2fff70ea:	d189      	bne.n	2fff7000 <stm32_i2c_is_device_ready+0x34>
2fff70ec:	6822      	ldr	r2, [r4, #0]
2fff70ee:	61d1      	str	r1, [r2, #28]
2fff70f0:	3601      	adds	r6, #1
2fff70f2:	45b3      	cmp	fp, r6
2fff70f4:	d89a      	bhi.n	2fff702c <stm32_i2c_is_device_ready+0x60>
2fff70f6:	69a3      	ldr	r3, [r4, #24]
2fff70f8:	2500      	movs	r5, #0
2fff70fa:	6165      	str	r5, [r4, #20]
2fff70fc:	f043 0320 	orr.w	r3, r3, #32
2fff7100:	61a3      	str	r3, [r4, #24]
2fff7102:	2320      	movs	r3, #32
2fff7104:	6123      	str	r3, [r4, #16]
2fff7106:	e77c      	b.n	2fff7002 <stm32_i2c_is_device_ready+0x36>
2fff7108:	2500      	movs	r5, #0
2fff710a:	e77f      	b.n	2fff700c <stm32_i2c_is_device_ready+0x40>
2fff710c:	000f4240 	.word	0x000f4240

2fff7110 <stm32_iwdg_refresh>:
2fff7110:	b510      	push	{r4, lr}
2fff7112:	4c0e      	ldr	r4, [pc, #56]	; (2fff714c <stm32_iwdg_refresh+0x3c>)
2fff7114:	6823      	ldr	r3, [r4, #0]
2fff7116:	b14b      	cbz	r3, 2fff712c <stm32_iwdg_refresh+0x1c>
2fff7118:	6860      	ldr	r0, [r4, #4]
2fff711a:	f7fe f80b 	bl	2fff5134 <stm32mp_clk_enable>
2fff711e:	6823      	ldr	r3, [r4, #0]
2fff7120:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
2fff7124:	601a      	str	r2, [r3, #0]
2fff7126:	6860      	ldr	r0, [r4, #4]
2fff7128:	f7fe f807 	bl	2fff513a <stm32mp_clk_disable>
2fff712c:	6923      	ldr	r3, [r4, #16]
2fff712e:	b15b      	cbz	r3, 2fff7148 <stm32_iwdg_refresh+0x38>
2fff7130:	6960      	ldr	r0, [r4, #20]
2fff7132:	f7fd ffff 	bl	2fff5134 <stm32mp_clk_enable>
2fff7136:	6923      	ldr	r3, [r4, #16]
2fff7138:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
2fff713c:	601a      	str	r2, [r3, #0]
2fff713e:	6960      	ldr	r0, [r4, #20]
2fff7140:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff7144:	f7fd bff9 	b.w	2fff513a <stm32mp_clk_disable>
2fff7148:	bd10      	pop	{r4, pc}
2fff714a:	bf00      	nop
2fff714c:	2fffec40 	.word	0x2fffec40

2fff7150 <stm32_iwdg_it_handler>:
2fff7150:	4e15      	ldr	r6, [pc, #84]	; (2fff71a8 <stm32_iwdg_it_handler+0x58>)
2fff7152:	4605      	mov	r5, r0
2fff7154:	b580      	push	{r7, lr}
2fff7156:	f001 ef14 	blx	2fff8f80 <plat_my_core_pos>
2fff715a:	68f3      	ldr	r3, [r6, #12]
2fff715c:	4607      	mov	r7, r0
2fff715e:	429d      	cmp	r5, r3
2fff7160:	d006      	beq.n	2fff7170 <stm32_iwdg_it_handler+0x20>
2fff7162:	69f3      	ldr	r3, [r6, #28]
2fff7164:	429d      	cmp	r5, r3
2fff7166:	d01c      	beq.n	2fff71a2 <stm32_iwdg_it_handler+0x52>
2fff7168:	f7fb fc20 	bl	2fff29ac <console_flush>
2fff716c:	f001 eb84 	blx	2fff8878 <do_panic>
2fff7170:	2400      	movs	r4, #0
2fff7172:	ea4f 1804 	mov.w	r8, r4, lsl #4
2fff7176:	f7ff ffcb 	bl	2fff7110 <stm32_iwdg_refresh>
2fff717a:	eb06 1404 	add.w	r4, r6, r4, lsl #4
2fff717e:	6860      	ldr	r0, [r4, #4]
2fff7180:	f7fd ffd8 	bl	2fff5134 <stm32mp_clk_enable>
2fff7184:	f856 2008 	ldr.w	r2, [r6, r8]
2fff7188:	6953      	ldr	r3, [r2, #20]
2fff718a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
2fff718e:	6153      	str	r3, [r2, #20]
2fff7190:	6860      	ldr	r0, [r4, #4]
2fff7192:	f7fd ffd2 	bl	2fff513a <stm32mp_clk_disable>
2fff7196:	4628      	mov	r0, r5
2fff7198:	f7fa f838 	bl	2fff120c <gicv2_end_of_interrupt>
2fff719c:	4638      	mov	r0, r7
2fff719e:	f7fb fe6f 	bl	2fff2e80 <stm32mp_plat_reset>
2fff71a2:	2401      	movs	r4, #1
2fff71a4:	e7e5      	b.n	2fff7172 <stm32_iwdg_it_handler+0x22>
2fff71a6:	bf00      	nop
2fff71a8:	2fffec40 	.word	0x2fffec40

2fff71ac <stm32_iwdg_init>:
2fff71ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff71b0:	b087      	sub	sp, #28
2fff71b2:	4668      	mov	r0, sp
2fff71b4:	f000 fe28 	bl	2fff7e08 <fdt_get_address>
2fff71b8:	b918      	cbnz	r0, 2fff71c2 <stm32_iwdg_init+0x16>
2fff71ba:	f7fb fbf7 	bl	2fff29ac <console_flush>
2fff71be:	f001 eb5c 	blx	2fff8878 <do_panic>
2fff71c2:	4a6d      	ldr	r2, [pc, #436]	; (2fff7378 <stm32_iwdg_init+0x1cc>)
2fff71c4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff71c8:	4f6c      	ldr	r7, [pc, #432]	; (2fff737c <stm32_iwdg_init+0x1d0>)
2fff71ca:	a802      	add	r0, sp, #8
2fff71cc:	f8df 91b0 	ldr.w	r9, [pc, #432]	; 2fff7380 <stm32_iwdg_init+0x1d4>
2fff71d0:	f000 ff04 	bl	2fff7fdc <dt_get_node>
2fff71d4:	ea40 76e0 	orr.w	r6, r0, r0, asr #31
2fff71d8:	1c73      	adds	r3, r6, #1
2fff71da:	d101      	bne.n	2fff71e0 <stm32_iwdg_init+0x34>
2fff71dc:	2400      	movs	r4, #0
2fff71de:	e083      	b.n	2fff72e8 <stm32_iwdg_init+0x13c>
2fff71e0:	9802      	ldr	r0, [sp, #8]
2fff71e2:	f7fb fea3 	bl	2fff2f2c <stm32_iwdg_get_instance>
2fff71e6:	0105      	lsls	r5, r0, #4
2fff71e8:	4680      	mov	r8, r0
2fff71ea:	9b02      	ldr	r3, [sp, #8]
2fff71ec:	464a      	mov	r2, r9
2fff71ee:	eb07 1400 	add.w	r4, r7, r0, lsl #4
2fff71f2:	4631      	mov	r1, r6
2fff71f4:	517b      	str	r3, [r7, r5]
2fff71f6:	9b03      	ldr	r3, [sp, #12]
2fff71f8:	9800      	ldr	r0, [sp, #0]
2fff71fa:	6063      	str	r3, [r4, #4]
2fff71fc:	2300      	movs	r3, #0
2fff71fe:	f002 f9d7 	bl	2fff95b0 <fdt_getprop>
2fff7202:	b918      	cbnz	r0, 2fff720c <stm32_iwdg_init+0x60>
2fff7204:	7a23      	ldrb	r3, [r4, #8]
2fff7206:	f043 0302 	orr.w	r3, r3, #2
2fff720a:	7223      	strb	r3, [r4, #8]
2fff720c:	4a5d      	ldr	r2, [pc, #372]	; (2fff7384 <stm32_iwdg_init+0x1d8>)
2fff720e:	2300      	movs	r3, #0
2fff7210:	9800      	ldr	r0, [sp, #0]
2fff7212:	4631      	mov	r1, r6
2fff7214:	f002 f9cc 	bl	2fff95b0 <fdt_getprop>
2fff7218:	b920      	cbnz	r0, 2fff7224 <stm32_iwdg_init+0x78>
2fff721a:	197a      	adds	r2, r7, r5
2fff721c:	7a13      	ldrb	r3, [r2, #8]
2fff721e:	f043 0304 	orr.w	r3, r3, #4
2fff7222:	7213      	strb	r3, [r2, #8]
2fff7224:	4640      	mov	r0, r8
2fff7226:	f7fb fe95 	bl	2fff2f54 <stm32_iwdg_get_otp_config>
2fff722a:	9b05      	ldr	r3, [sp, #20]
2fff722c:	f010 0f01 	tst.w	r0, #1
2fff7230:	d00b      	beq.n	2fff724a <stm32_iwdg_init+0x9e>
2fff7232:	b92b      	cbnz	r3, 2fff7240 <stm32_iwdg_init+0x94>
2fff7234:	4854      	ldr	r0, [pc, #336]	; (2fff7388 <stm32_iwdg_init+0x1dc>)
2fff7236:	f108 0101 	add.w	r1, r8, #1
2fff723a:	f7fb fb13 	bl	2fff2864 <tf_log>
2fff723e:	e7bc      	b.n	2fff71ba <stm32_iwdg_init+0xe>
2fff7240:	1979      	adds	r1, r7, r5
2fff7242:	7a0a      	ldrb	r2, [r1, #8]
2fff7244:	f042 0201 	orr.w	r2, r2, #1
2fff7248:	720a      	strb	r2, [r1, #8]
2fff724a:	b95b      	cbnz	r3, 2fff7264 <stm32_iwdg_init+0xb8>
2fff724c:	1978      	adds	r0, r7, r5
2fff724e:	2110      	movs	r1, #16
2fff7250:	f001 ec68 	blx	2fff8b24 <zero_normalmem>
2fff7254:	4a48      	ldr	r2, [pc, #288]	; (2fff7378 <stm32_iwdg_init+0x1cc>)
2fff7256:	4631      	mov	r1, r6
2fff7258:	a802      	add	r0, sp, #8
2fff725a:	f000 febf 	bl	2fff7fdc <dt_get_node>
2fff725e:	ea40 76e0 	orr.w	r6, r0, r0, asr #31
2fff7262:	e7b9      	b.n	2fff71d8 <stm32_iwdg_init+0x2c>
2fff7264:	0784      	lsls	r4, r0, #30
2fff7266:	bf41      	itttt	mi
2fff7268:	1979      	addmi	r1, r7, r5
2fff726a:	7a0a      	ldrbmi	r2, [r1, #8]
2fff726c:	f042 0202 	orrmi.w	r2, r2, #2
2fff7270:	720a      	strbmi	r2, [r1, #8]
2fff7272:	0741      	lsls	r1, r0, #29
2fff7274:	bf48      	it	mi
2fff7276:	1979      	addmi	r1, r7, r5
2fff7278:	5978      	ldr	r0, [r7, r5]
2fff727a:	bf42      	ittt	mi
2fff727c:	7a0a      	ldrbmi	r2, [r1, #8]
2fff727e:	f042 0204 	orrmi.w	r2, r2, #4
2fff7282:	720a      	strbmi	r2, [r1, #8]
2fff7284:	07da      	lsls	r2, r3, #31
2fff7286:	d533      	bpl.n	2fff72f0 <stm32_iwdg_init+0x144>
2fff7288:	f7f9 fb7e 	bl	2fff0988 <stm32mp_register_non_secure_periph_iomem>
2fff728c:	eb07 0a05 	add.w	sl, r7, r5
2fff7290:	f8da 0004 	ldr.w	r0, [sl, #4]
2fff7294:	f7fd ff4e 	bl	2fff5134 <stm32mp_clk_enable>
2fff7298:	f8da 0004 	ldr.w	r0, [sl, #4]
2fff729c:	f7fd ff4d 	bl	2fff513a <stm32mp_clk_disable>
2fff72a0:	a801      	add	r0, sp, #4
2fff72a2:	f000 fdb1 	bl	2fff7e08 <fdt_get_address>
2fff72a6:	2800      	cmp	r0, #0
2fff72a8:	d0d4      	beq.n	2fff7254 <stm32_iwdg_init+0xa8>
2fff72aa:	4a38      	ldr	r2, [pc, #224]	; (2fff738c <stm32_iwdg_init+0x1e0>)
2fff72ac:	2300      	movs	r3, #0
2fff72ae:	9801      	ldr	r0, [sp, #4]
2fff72b0:	4631      	mov	r1, r6
2fff72b2:	f002 f97d 	bl	2fff95b0 <fdt_getprop>
2fff72b6:	2800      	cmp	r0, #0
2fff72b8:	d0cc      	beq.n	2fff7254 <stm32_iwdg_init+0xa8>
2fff72ba:	6803      	ldr	r3, [r0, #0]
2fff72bc:	0e1c      	lsrs	r4, r3, #24
2fff72be:	f3c3 2207 	ubfx	r2, r3, #8, #8
2fff72c2:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
2fff72c6:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff72ca:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
2fff72ce:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
2fff72d2:	2c00      	cmp	r4, #0
2fff72d4:	dbbe      	blt.n	2fff7254 <stm32_iwdg_init+0xa8>
2fff72d6:	d10e      	bne.n	2fff72f6 <stm32_iwdg_init+0x14a>
2fff72d8:	f06f 0415 	mvn.w	r4, #21
2fff72dc:	482c      	ldr	r0, [pc, #176]	; (2fff7390 <stm32_iwdg_init+0x1e4>)
2fff72de:	4622      	mov	r2, r4
2fff72e0:	f108 0101 	add.w	r1, r8, #1
2fff72e4:	f7fb fabe 	bl	2fff2864 <tf_log>
2fff72e8:	4620      	mov	r0, r4
2fff72ea:	b007      	add	sp, #28
2fff72ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff72f0:	f7f9 fb47 	bl	2fff0982 <stm32mp_register_secure_periph_iomem>
2fff72f4:	e7ca      	b.n	2fff728c <stm32_iwdg_init+0xe0>
2fff72f6:	4927      	ldr	r1, [pc, #156]	; (2fff7394 <stm32_iwdg_init+0x1e8>)
2fff72f8:	4630      	mov	r0, r6
2fff72fa:	f7fd fa43 	bl	2fff4784 <fdt_get_clock_id_by_name>
2fff72fe:	2800      	cmp	r0, #0
2fff7300:	dbea      	blt.n	2fff72d8 <stm32_iwdg_init+0x12c>
2fff7302:	f7fd ff43 	bl	2fff518c <stm32mp_clk_get_rate>
2fff7306:	4683      	mov	fp, r0
2fff7308:	f8da 0004 	ldr.w	r0, [sl, #4]
2fff730c:	f7fd ff12 	bl	2fff5134 <stm32mp_clk_enable>
2fff7310:	597a      	ldr	r2, [r7, r5]
2fff7312:	f64c 43cc 	movw	r3, #52428	; 0xcccc
2fff7316:	6013      	str	r3, [r2, #0]
2fff7318:	f245 5355 	movw	r3, #21845	; 0x5555
2fff731c:	6013      	str	r3, [r2, #0]
2fff731e:	2306      	movs	r3, #6
2fff7320:	6053      	str	r3, [r2, #4]
2fff7322:	fba4 340b 	umull	r3, r4, r4, fp
2fff7326:	2464      	movs	r4, #100	; 0x64
2fff7328:	0a1b      	lsrs	r3, r3, #8
2fff732a:	f603 73ff 	addw	r3, r3, #4095	; 0xfff
2fff732e:	f3c3 030b 	ubfx	r3, r3, #0, #12
2fff7332:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
2fff7336:	6153      	str	r3, [r2, #20]
2fff7338:	f8da 3000 	ldr.w	r3, [sl]
2fff733c:	2001      	movs	r0, #1
2fff733e:	3c01      	subs	r4, #1
2fff7340:	f8d3 b00c 	ldr.w	fp, [r3, #12]
2fff7344:	f7fc fdfa 	bl	2fff3f3c <mdelay>
2fff7348:	f01b 0f08 	tst.w	fp, #8
2fff734c:	d001      	beq.n	2fff7352 <stm32_iwdg_init+0x1a6>
2fff734e:	2c00      	cmp	r4, #0
2fff7350:	d1f2      	bne.n	2fff7338 <stm32_iwdg_init+0x18c>
2fff7352:	2100      	movs	r1, #0
2fff7354:	4630      	mov	r0, r6
2fff7356:	f7fa f961 	bl	2fff161c <stm32_gic_enable_spi>
2fff735a:	197b      	adds	r3, r7, r5
2fff735c:	2800      	cmp	r0, #0
2fff735e:	60d8      	str	r0, [r3, #12]
2fff7360:	f6ff af2b 	blt.w	2fff71ba <stm32_iwdg_init+0xe>
2fff7364:	6858      	ldr	r0, [r3, #4]
2fff7366:	f7fd fee8 	bl	2fff513a <stm32mp_clk_disable>
2fff736a:	2c00      	cmp	r4, #0
2fff736c:	f47f af72 	bne.w	2fff7254 <stm32_iwdg_init+0xa8>
2fff7370:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2fff7374:	e7b2      	b.n	2fff72dc <stm32_iwdg_init+0x130>
2fff7376:	bf00      	nop
2fff7378:	2fffbb60 	.word	0x2fffbb60
2fff737c:	2fffec40 	.word	0x2fffec40
2fff7380:	2fffbb71 	.word	0x2fffbb71
2fff7384:	2fffbb86 	.word	0x2fffbb86
2fff7388:	2fffbb9e 	.word	0x2fffbb9e
2fff738c:	2fffbbc3 	.word	0x2fffbbc3
2fff7390:	2fffbbd6 	.word	0x2fffbbd6
2fff7394:	2fffb4ef 	.word	0x2fffb4ef

2fff7398 <fdt32_to_cpu>:
2fff7398:	ba00      	rev	r0, r0
2fff739a:	4770      	bx	lr

2fff739c <dt_get_pmic_node>:
2fff739c:	b510      	push	{r4, lr}
2fff739e:	4c05      	ldr	r4, [pc, #20]	; (2fff73b4 <dt_get_pmic_node+0x18>)
2fff73a0:	6823      	ldr	r3, [r4, #0]
2fff73a2:	3304      	adds	r3, #4
2fff73a4:	d103      	bne.n	2fff73ae <dt_get_pmic_node+0x12>
2fff73a6:	4804      	ldr	r0, [pc, #16]	; (2fff73b8 <dt_get_pmic_node+0x1c>)
2fff73a8:	f000 fe3a 	bl	2fff8020 <dt_get_node_by_compatible>
2fff73ac:	6020      	str	r0, [r4, #0]
2fff73ae:	6820      	ldr	r0, [r4, #0]
2fff73b0:	bd10      	pop	{r4, pc}
2fff73b2:	bf00      	nop
2fff73b4:	2fffd530 	.word	0x2fffd530
2fff73b8:	2fffbc00 	.word	0x2fffbc00

2fff73bc <dt_pmic_get_regulator_voltage>:
2fff73bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff73be:	4615      	mov	r5, r2
2fff73c0:	4a14      	ldr	r2, [pc, #80]	; (2fff7414 <dt_pmic_get_regulator_voltage+0x58>)
2fff73c2:	461c      	mov	r4, r3
2fff73c4:	2300      	movs	r3, #0
2fff73c6:	4606      	mov	r6, r0
2fff73c8:	460f      	mov	r7, r1
2fff73ca:	f002 f8f1 	bl	2fff95b0 <fdt_getprop>
2fff73ce:	b910      	cbnz	r0, 2fff73d6 <dt_pmic_get_regulator_voltage+0x1a>
2fff73d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff73d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff73d6:	b13d      	cbz	r5, 2fff73e8 <dt_pmic_get_regulator_voltage+0x2c>
2fff73d8:	6800      	ldr	r0, [r0, #0]
2fff73da:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff73de:	f7ff ffdb 	bl	2fff7398 <fdt32_to_cpu>
2fff73e2:	fbb0 f0f3 	udiv	r0, r0, r3
2fff73e6:	8028      	strh	r0, [r5, #0]
2fff73e8:	4a0b      	ldr	r2, [pc, #44]	; (2fff7418 <dt_pmic_get_regulator_voltage+0x5c>)
2fff73ea:	2300      	movs	r3, #0
2fff73ec:	4639      	mov	r1, r7
2fff73ee:	4630      	mov	r0, r6
2fff73f0:	f002 f8de 	bl	2fff95b0 <fdt_getprop>
2fff73f4:	2800      	cmp	r0, #0
2fff73f6:	d0eb      	beq.n	2fff73d0 <dt_pmic_get_regulator_voltage+0x14>
2fff73f8:	b14c      	cbz	r4, 2fff740e <dt_pmic_get_regulator_voltage+0x52>
2fff73fa:	6800      	ldr	r0, [r0, #0]
2fff73fc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff7400:	f7ff ffca 	bl	2fff7398 <fdt32_to_cpu>
2fff7404:	fbb0 f0f3 	udiv	r0, r0, r3
2fff7408:	8020      	strh	r0, [r4, #0]
2fff740a:	2000      	movs	r0, #0
2fff740c:	e7e2      	b.n	2fff73d4 <dt_pmic_get_regulator_voltage+0x18>
2fff740e:	4620      	mov	r0, r4
2fff7410:	e7e0      	b.n	2fff73d4 <dt_pmic_get_regulator_voltage+0x18>
2fff7412:	bf00      	nop
2fff7414:	2fffbc0b 	.word	0x2fffbc0b
2fff7418:	2fffbc23 	.word	0x2fffbc23

2fff741c <pmic_operate>:
2fff741c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff7420:	4681      	mov	r9, r0
2fff7422:	a801      	add	r0, sp, #4
2fff7424:	460f      	mov	r7, r1
2fff7426:	4692      	mov	sl, r2
2fff7428:	f000 fcee 	bl	2fff7e08 <fdt_get_address>
2fff742c:	b928      	cbnz	r0, 2fff743a <pmic_operate+0x1e>
2fff742e:	f06f 0b01 	mvn.w	fp, #1
2fff7432:	4658      	mov	r0, fp
2fff7434:	b003      	add	sp, #12
2fff7436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff743a:	f7ff ffaf 	bl	2fff739c <dt_get_pmic_node>
2fff743e:	1e01      	subs	r1, r0, #0
2fff7440:	dbf5      	blt.n	2fff742e <pmic_operate+0x12>
2fff7442:	4a7d      	ldr	r2, [pc, #500]	; (2fff7638 <pmic_operate+0x21c>)
2fff7444:	9801      	ldr	r0, [sp, #4]
2fff7446:	f002 f832 	bl	2fff94ae <fdt_subnode_offset>
2fff744a:	1e01      	subs	r1, r0, #0
2fff744c:	dbef      	blt.n	2fff742e <pmic_operate+0x12>
2fff744e:	9801      	ldr	r0, [sp, #4]
2fff7450:	f06f 0b04 	mvn.w	fp, #4
2fff7454:	f001 ff31 	bl	2fff92ba <fdt_first_subnode>
2fff7458:	4604      	mov	r4, r0
2fff745a:	2c00      	cmp	r4, #0
2fff745c:	dbe9      	blt.n	2fff7432 <pmic_operate+0x16>
2fff745e:	9801      	ldr	r0, [sp, #4]
2fff7460:	2200      	movs	r2, #0
2fff7462:	4621      	mov	r1, r4
2fff7464:	f001 ffb4 	bl	2fff93d0 <fdt_get_name>
2fff7468:	f1b9 0f01 	cmp.w	r9, #1
2fff746c:	4605      	mov	r5, r0
2fff746e:	d01e      	beq.n	2fff74ae <pmic_operate+0x92>
2fff7470:	f1b9 0f02 	cmp.w	r9, #2
2fff7474:	d07d      	beq.n	2fff7572 <pmic_operate+0x156>
2fff7476:	b927      	cbnz	r7, 2fff7482 <pmic_operate+0x66>
2fff7478:	f240 110d 	movw	r1, #269	; 0x10d
2fff747c:	486f      	ldr	r0, [pc, #444]	; (2fff763c <pmic_operate+0x220>)
2fff747e:	f002 fa35 	bl	2fff98ec <__assert>
2fff7482:	f1ba 0f00 	cmp.w	sl, #0
2fff7486:	d102      	bne.n	2fff748e <pmic_operate+0x72>
2fff7488:	f44f 7187 	mov.w	r1, #270	; 0x10e
2fff748c:	e7f6      	b.n	2fff747c <pmic_operate+0x60>
2fff748e:	4639      	mov	r1, r7
2fff7490:	f002 fbab 	bl	2fff9bea <strcmp>
2fff7494:	4603      	mov	r3, r0
2fff7496:	b9d8      	cbnz	r0, 2fff74d0 <pmic_operate+0xb4>
2fff7498:	9801      	ldr	r0, [sp, #4]
2fff749a:	4652      	mov	r2, sl
2fff749c:	4621      	mov	r1, r4
2fff749e:	f7ff ff8d 	bl	2fff73bc <dt_pmic_get_regulator_voltage>
2fff74a2:	f1b0 0b00 	subs.w	fp, r0, #0
2fff74a6:	bfb8      	it	lt
2fff74a8:	f06f 0b05 	mvnlt.w	fp, #5
2fff74ac:	e7c1      	b.n	2fff7432 <pmic_operate+0x16>
2fff74ae:	9e01      	ldr	r6, [sp, #4]
2fff74b0:	2300      	movs	r3, #0
2fff74b2:	4a63      	ldr	r2, [pc, #396]	; (2fff7640 <pmic_operate+0x224>)
2fff74b4:	4621      	mov	r1, r4
2fff74b6:	4630      	mov	r0, r6
2fff74b8:	f002 f87a 	bl	2fff95b0 <fdt_getprop>
2fff74bc:	4603      	mov	r3, r0
2fff74be:	b968      	cbnz	r0, 2fff74dc <pmic_operate+0xc0>
2fff74c0:	4a60      	ldr	r2, [pc, #384]	; (2fff7644 <pmic_operate+0x228>)
2fff74c2:	4621      	mov	r1, r4
2fff74c4:	4630      	mov	r0, r6
2fff74c6:	f002 f873 	bl	2fff95b0 <fdt_getprop>
2fff74ca:	b938      	cbnz	r0, 2fff74dc <pmic_operate+0xc0>
2fff74cc:	f04f 0b00 	mov.w	fp, #0
2fff74d0:	9801      	ldr	r0, [sp, #4]
2fff74d2:	4621      	mov	r1, r4
2fff74d4:	f001 ff04 	bl	2fff92e0 <fdt_next_subnode>
2fff74d8:	4604      	mov	r4, r0
2fff74da:	e7be      	b.n	2fff745a <pmic_operate+0x3e>
2fff74dc:	4a5a      	ldr	r2, [pc, #360]	; (2fff7648 <pmic_operate+0x22c>)
2fff74de:	2300      	movs	r3, #0
2fff74e0:	4621      	mov	r1, r4
2fff74e2:	4630      	mov	r0, r6
2fff74e4:	f002 f864 	bl	2fff95b0 <fdt_getprop>
2fff74e8:	bb70      	cbnz	r0, 2fff7548 <pmic_operate+0x12c>
2fff74ea:	4a58      	ldr	r2, [pc, #352]	; (2fff764c <pmic_operate+0x230>)
2fff74ec:	2300      	movs	r3, #0
2fff74ee:	4621      	mov	r1, r4
2fff74f0:	4630      	mov	r0, r6
2fff74f2:	f002 f85d 	bl	2fff95b0 <fdt_getprop>
2fff74f6:	bb70      	cbnz	r0, 2fff7556 <pmic_operate+0x13a>
2fff74f8:	f10d 0302 	add.w	r3, sp, #2
2fff74fc:	466a      	mov	r2, sp
2fff74fe:	4621      	mov	r1, r4
2fff7500:	4630      	mov	r0, r6
2fff7502:	f7ff ff5b 	bl	2fff73bc <dt_pmic_get_regulator_voltage>
2fff7506:	2800      	cmp	r0, #0
2fff7508:	dbe0      	blt.n	2fff74cc <pmic_operate+0xb0>
2fff750a:	4628      	mov	r0, r5
2fff750c:	f000 f9fe 	bl	2fff790c <stpmic1_regulator_voltage_get>
2fff7510:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7514:	db8d      	blt.n	2fff7432 <pmic_operate+0x16>
2fff7516:	f8bd 1000 	ldrh.w	r1, [sp]
2fff751a:	fa1f f08b 	uxth.w	r0, fp
2fff751e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
2fff7522:	4288      	cmp	r0, r1
2fff7524:	bf28      	it	cs
2fff7526:	2100      	movcs	r1, #0
2fff7528:	4290      	cmp	r0, r2
2fff752a:	bf88      	it	hi
2fff752c:	4611      	movhi	r1, r2
2fff752e:	b9c9      	cbnz	r1, 2fff7564 <pmic_operate+0x148>
2fff7530:	4628      	mov	r0, r5
2fff7532:	f000 f9d7 	bl	2fff78e4 <stpmic1_is_regulator_enabled>
2fff7536:	2800      	cmp	r0, #0
2fff7538:	d1c8      	bne.n	2fff74cc <pmic_operate+0xb0>
2fff753a:	4628      	mov	r0, r5
2fff753c:	f000 fa80 	bl	2fff7a40 <stpmic1_regulator_enable>
2fff7540:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7544:	dac2      	bge.n	2fff74cc <pmic_operate+0xb0>
2fff7546:	e774      	b.n	2fff7432 <pmic_operate+0x16>
2fff7548:	4628      	mov	r0, r5
2fff754a:	f000 fab1 	bl	2fff7ab0 <stpmic1_regulator_pull_down_set>
2fff754e:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7552:	daca      	bge.n	2fff74ea <pmic_operate+0xce>
2fff7554:	e76d      	b.n	2fff7432 <pmic_operate+0x16>
2fff7556:	4628      	mov	r0, r5
2fff7558:	f000 fabc 	bl	2fff7ad4 <stpmic1_regulator_mask_reset_set>
2fff755c:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7560:	daca      	bge.n	2fff74f8 <pmic_operate+0xdc>
2fff7562:	e766      	b.n	2fff7432 <pmic_operate+0x16>
2fff7564:	4628      	mov	r0, r5
2fff7566:	f000 fa75 	bl	2fff7a54 <stpmic1_regulator_voltage_set>
2fff756a:	f1b0 0b00 	subs.w	fp, r0, #0
2fff756e:	dadf      	bge.n	2fff7530 <pmic_operate+0x114>
2fff7570:	e75f      	b.n	2fff7432 <pmic_operate+0x16>
2fff7572:	b917      	cbnz	r7, 2fff757a <pmic_operate+0x15e>
2fff7574:	f240 1125 	movw	r1, #293	; 0x125
2fff7578:	e780      	b.n	2fff747c <pmic_operate+0x60>
2fff757a:	f8dd 8004 	ldr.w	r8, [sp, #4]
2fff757e:	f000 fa55 	bl	2fff7a2c <stpmic1_powerctrl_on>
2fff7582:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7586:	f6ff af54 	blt.w	2fff7432 <pmic_operate+0x16>
2fff758a:	4628      	mov	r0, r5
2fff758c:	f000 fa24 	bl	2fff79d8 <stpmic1_lp_copy_reg>
2fff7590:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7594:	f6ff af4d 	blt.w	2fff7432 <pmic_operate+0x16>
2fff7598:	463a      	mov	r2, r7
2fff759a:	4621      	mov	r1, r4
2fff759c:	4640      	mov	r0, r8
2fff759e:	f001 ff86 	bl	2fff94ae <fdt_subnode_offset>
2fff75a2:	1e06      	subs	r6, r0, #0
2fff75a4:	dd92      	ble.n	2fff74cc <pmic_operate+0xb0>
2fff75a6:	4a2a      	ldr	r2, [pc, #168]	; (2fff7650 <pmic_operate+0x234>)
2fff75a8:	2300      	movs	r3, #0
2fff75aa:	4631      	mov	r1, r6
2fff75ac:	4640      	mov	r0, r8
2fff75ae:	f001 ffff 	bl	2fff95b0 <fdt_getprop>
2fff75b2:	bb08      	cbnz	r0, 2fff75f8 <pmic_operate+0x1dc>
2fff75b4:	4a27      	ldr	r2, [pc, #156]	; (2fff7654 <pmic_operate+0x238>)
2fff75b6:	2300      	movs	r3, #0
2fff75b8:	4631      	mov	r1, r6
2fff75ba:	4640      	mov	r0, r8
2fff75bc:	f001 fff8 	bl	2fff95b0 <fdt_getprop>
2fff75c0:	bb10      	cbnz	r0, 2fff7608 <pmic_operate+0x1ec>
2fff75c2:	4a25      	ldr	r2, [pc, #148]	; (2fff7658 <pmic_operate+0x23c>)
2fff75c4:	2300      	movs	r3, #0
2fff75c6:	4631      	mov	r1, r6
2fff75c8:	4640      	mov	r0, r8
2fff75ca:	f001 fff1 	bl	2fff95b0 <fdt_getprop>
2fff75ce:	bb18      	cbnz	r0, 2fff7618 <pmic_operate+0x1fc>
2fff75d0:	4a22      	ldr	r2, [pc, #136]	; (2fff765c <pmic_operate+0x240>)
2fff75d2:	2300      	movs	r3, #0
2fff75d4:	4631      	mov	r1, r6
2fff75d6:	4640      	mov	r0, r8
2fff75d8:	f001 ffea 	bl	2fff95b0 <fdt_getprop>
2fff75dc:	2800      	cmp	r0, #0
2fff75de:	f43f af75 	beq.w	2fff74cc <pmic_operate+0xb0>
2fff75e2:	6800      	ldr	r0, [r0, #0]
2fff75e4:	f7ff fed8 	bl	2fff7398 <fdt32_to_cpu>
2fff75e8:	2808      	cmp	r0, #8
2fff75ea:	f47f af6f 	bne.w	2fff74cc <pmic_operate+0xb0>
2fff75ee:	2101      	movs	r1, #1
2fff75f0:	4628      	mov	r0, r5
2fff75f2:	f000 fa87 	bl	2fff7b04 <stpmic1_lp_set_mode>
2fff75f6:	e7a3      	b.n	2fff7540 <pmic_operate+0x124>
2fff75f8:	2101      	movs	r1, #1
2fff75fa:	4628      	mov	r0, r5
2fff75fc:	f000 fa77 	bl	2fff7aee <stpmic1_lp_reg_on_off>
2fff7600:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7604:	dad6      	bge.n	2fff75b4 <pmic_operate+0x198>
2fff7606:	e714      	b.n	2fff7432 <pmic_operate+0x16>
2fff7608:	2100      	movs	r1, #0
2fff760a:	4628      	mov	r0, r5
2fff760c:	f000 fa6f 	bl	2fff7aee <stpmic1_lp_reg_on_off>
2fff7610:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7614:	dad5      	bge.n	2fff75c2 <pmic_operate+0x1a6>
2fff7616:	e70c      	b.n	2fff7432 <pmic_operate+0x16>
2fff7618:	6800      	ldr	r0, [r0, #0]
2fff761a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff761e:	f7ff febb 	bl	2fff7398 <fdt32_to_cpu>
2fff7622:	fbb0 f1f1 	udiv	r1, r0, r1
2fff7626:	4628      	mov	r0, r5
2fff7628:	b289      	uxth	r1, r1
2fff762a:	f000 fa79 	bl	2fff7b20 <stpmic1_lp_set_voltage>
2fff762e:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7632:	dacd      	bge.n	2fff75d0 <pmic_operate+0x1b4>
2fff7634:	e6fd      	b.n	2fff7432 <pmic_operate+0x16>
2fff7636:	bf00      	nop
2fff7638:	2fffbc3b 	.word	0x2fffbc3b
2fff763c:	2fffbc46 	.word	0x2fffbc46
2fff7640:	2fffbc65 	.word	0x2fffbc65
2fff7644:	2fffbc77 	.word	0x2fffbc77
2fff7648:	2fffbc8b 	.word	0x2fffbc8b
2fff764c:	2fffbc9f 	.word	0x2fffbc9f
2fff7650:	2fffbcad 	.word	0x2fffbcad
2fff7654:	2fffbcc5 	.word	0x2fffbcc5
2fff7658:	2fffbcde 	.word	0x2fffbcde
2fff765c:	2fffbcfa 	.word	0x2fffbcfa

2fff7660 <dt_pmic_status>:
2fff7660:	b510      	push	{r4, lr}
2fff7662:	4c08      	ldr	r4, [pc, #32]	; (2fff7684 <dt_pmic_status+0x24>)
2fff7664:	6820      	ldr	r0, [r4, #0]
2fff7666:	f110 0f0f 	cmn.w	r0, #15
2fff766a:	d106      	bne.n	2fff767a <dt_pmic_status+0x1a>
2fff766c:	f7ff fe96 	bl	2fff739c <dt_get_pmic_node>
2fff7670:	2800      	cmp	r0, #0
2fff7672:	dc03      	bgt.n	2fff767c <dt_pmic_status+0x1c>
2fff7674:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7678:	6020      	str	r0, [r4, #0]
2fff767a:	bd10      	pop	{r4, pc}
2fff767c:	f000 fbd0 	bl	2fff7e20 <fdt_get_status>
2fff7680:	e7fa      	b.n	2fff7678 <dt_pmic_status+0x18>
2fff7682:	bf00      	nop
2fff7684:	2fffd534 	.word	0x2fffd534

2fff7688 <pmic_configure_boot_on_regulators>:
2fff7688:	2200      	movs	r2, #0
2fff768a:	2001      	movs	r0, #1
2fff768c:	4611      	mov	r1, r2
2fff768e:	f7ff bec5 	b.w	2fff741c <pmic_operate>

2fff7692 <pmic_set_lp_config>:
2fff7692:	4601      	mov	r1, r0
2fff7694:	2200      	movs	r2, #0
2fff7696:	2002      	movs	r0, #2
2fff7698:	f7ff bec0 	b.w	2fff741c <pmic_operate>

2fff769c <dt_pmic_find_supply>:
2fff769c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff76a0:	4606      	mov	r6, r0
2fff76a2:	a801      	add	r0, sp, #4
2fff76a4:	460f      	mov	r7, r1
2fff76a6:	f000 fbaf 	bl	2fff7e08 <fdt_get_address>
2fff76aa:	b928      	cbnz	r0, 2fff76b8 <dt_pmic_find_supply+0x1c>
2fff76ac:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff76b0:	4628      	mov	r0, r5
2fff76b2:	b002      	add	sp, #8
2fff76b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff76b8:	f7ff fe70 	bl	2fff739c <dt_get_pmic_node>
2fff76bc:	1e01      	subs	r1, r0, #0
2fff76be:	dbf5      	blt.n	2fff76ac <dt_pmic_find_supply+0x10>
2fff76c0:	4a13      	ldr	r2, [pc, #76]	; (2fff7710 <dt_pmic_find_supply+0x74>)
2fff76c2:	9801      	ldr	r0, [sp, #4]
2fff76c4:	f001 fef3 	bl	2fff94ae <fdt_subnode_offset>
2fff76c8:	1e01      	subs	r1, r0, #0
2fff76ca:	dbef      	blt.n	2fff76ac <dt_pmic_find_supply+0x10>
2fff76cc:	9801      	ldr	r0, [sp, #4]
2fff76ce:	f8df 8044 	ldr.w	r8, [pc, #68]	; 2fff7714 <dt_pmic_find_supply+0x78>
2fff76d2:	f001 fdf2 	bl	2fff92ba <fdt_first_subnode>
2fff76d6:	4604      	mov	r4, r0
2fff76d8:	2c00      	cmp	r4, #0
2fff76da:	dbe7      	blt.n	2fff76ac <dt_pmic_find_supply+0x10>
2fff76dc:	9801      	ldr	r0, [sp, #4]
2fff76de:	2300      	movs	r3, #0
2fff76e0:	4642      	mov	r2, r8
2fff76e2:	4621      	mov	r1, r4
2fff76e4:	f001 ff64 	bl	2fff95b0 <fdt_getprop>
2fff76e8:	b158      	cbz	r0, 2fff7702 <dt_pmic_find_supply+0x66>
2fff76ea:	4639      	mov	r1, r7
2fff76ec:	f002 fa7d 	bl	2fff9bea <strcmp>
2fff76f0:	4605      	mov	r5, r0
2fff76f2:	b930      	cbnz	r0, 2fff7702 <dt_pmic_find_supply+0x66>
2fff76f4:	4602      	mov	r2, r0
2fff76f6:	4621      	mov	r1, r4
2fff76f8:	9801      	ldr	r0, [sp, #4]
2fff76fa:	f001 fe69 	bl	2fff93d0 <fdt_get_name>
2fff76fe:	6030      	str	r0, [r6, #0]
2fff7700:	e7d6      	b.n	2fff76b0 <dt_pmic_find_supply+0x14>
2fff7702:	9801      	ldr	r0, [sp, #4]
2fff7704:	4621      	mov	r1, r4
2fff7706:	f001 fdeb 	bl	2fff92e0 <fdt_next_subnode>
2fff770a:	4604      	mov	r4, r0
2fff770c:	e7e4      	b.n	2fff76d8 <dt_pmic_find_supply+0x3c>
2fff770e:	bf00      	nop
2fff7710:	2fffbc3b 	.word	0x2fffbc3b
2fff7714:	2fffbd09 	.word	0x2fffbd09

2fff7718 <initialize_pmic_i2c>:
2fff7718:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff771a:	b091      	sub	sp, #68	; 0x44
2fff771c:	4e39      	ldr	r6, [pc, #228]	; (2fff7804 <initialize_pmic_i2c+0xec>)
2fff771e:	6834      	ldr	r4, [r6, #0]
2fff7720:	1c63      	adds	r3, r4, #1
2fff7722:	d129      	bne.n	2fff7778 <initialize_pmic_i2c+0x60>
2fff7724:	a804      	add	r0, sp, #16
2fff7726:	f000 fb6f 	bl	2fff7e08 <fdt_get_address>
2fff772a:	b1d0      	cbz	r0, 2fff7762 <initialize_pmic_i2c+0x4a>
2fff772c:	f7ff fe36 	bl	2fff739c <dt_get_pmic_node>
2fff7730:	1e05      	subs	r5, r0, #0
2fff7732:	db64      	blt.n	2fff77fe <initialize_pmic_i2c+0xe6>
2fff7734:	4a34      	ldr	r2, [pc, #208]	; (2fff7808 <initialize_pmic_i2c+0xf0>)
2fff7736:	2300      	movs	r3, #0
2fff7738:	9804      	ldr	r0, [sp, #16]
2fff773a:	4629      	mov	r1, r5
2fff773c:	f001 ff38 	bl	2fff95b0 <fdt_getprop>
2fff7740:	b178      	cbz	r0, 2fff7762 <initialize_pmic_i2c+0x4a>
2fff7742:	6800      	ldr	r0, [r0, #0]
2fff7744:	4b31      	ldr	r3, [pc, #196]	; (2fff780c <initialize_pmic_i2c+0xf4>)
2fff7746:	f7ff fe27 	bl	2fff7398 <fdt32_to_cpu>
2fff774a:	0040      	lsls	r0, r0, #1
2fff774c:	6018      	str	r0, [r3, #0]
2fff774e:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
2fff7752:	d20e      	bcs.n	2fff7772 <initialize_pmic_i2c+0x5a>
2fff7754:	9804      	ldr	r0, [sp, #16]
2fff7756:	4629      	mov	r1, r5
2fff7758:	f002 f80c 	bl	2fff9774 <fdt_parent_offset>
2fff775c:	6030      	str	r0, [r6, #0]
2fff775e:	2800      	cmp	r0, #0
2fff7760:	da0a      	bge.n	2fff7778 <initialize_pmic_i2c+0x60>
2fff7762:	482b      	ldr	r0, [pc, #172]	; (2fff7810 <initialize_pmic_i2c+0xf8>)
2fff7764:	4621      	mov	r1, r4
2fff7766:	f7fb f87d 	bl	2fff2864 <tf_log>
2fff776a:	f7fb f91f 	bl	2fff29ac <console_flush>
2fff776e:	f001 e884 	blx	2fff8878 <do_panic>
2fff7772:	f06f 040e 	mvn.w	r4, #14
2fff7776:	e7f4      	b.n	2fff7762 <initialize_pmic_i2c+0x4a>
2fff7778:	6831      	ldr	r1, [r6, #0]
2fff777a:	4668      	mov	r0, sp
2fff777c:	f000 fbea 	bl	2fff7f54 <dt_fill_device_info>
2fff7780:	9b00      	ldr	r3, [sp, #0]
2fff7782:	b333      	cbz	r3, 2fff77d2 <initialize_pmic_i2c+0xba>
2fff7784:	6830      	ldr	r0, [r6, #0]
2fff7786:	a904      	add	r1, sp, #16
2fff7788:	f7ff f9aa 	bl	2fff6ae0 <stm32_i2c_get_setup_from_fdt>
2fff778c:	1e04      	subs	r4, r0, #0
2fff778e:	dbe8      	blt.n	2fff7762 <initialize_pmic_i2c+0x4a>
2fff7790:	d135      	bne.n	2fff77fe <initialize_pmic_i2c+0xe6>
2fff7792:	4d20      	ldr	r5, [pc, #128]	; (2fff7814 <initialize_pmic_i2c+0xfc>)
2fff7794:	2701      	movs	r7, #1
2fff7796:	9b00      	ldr	r3, [sp, #0]
2fff7798:	a904      	add	r1, sp, #16
2fff779a:	4e1c      	ldr	r6, [pc, #112]	; (2fff780c <initialize_pmic_i2c+0xf4>)
2fff779c:	4628      	mov	r0, r5
2fff779e:	602b      	str	r3, [r5, #0]
2fff77a0:	9b03      	ldr	r3, [sp, #12]
2fff77a2:	612c      	str	r4, [r5, #16]
2fff77a4:	606b      	str	r3, [r5, #4]
2fff77a6:	9b01      	ldr	r3, [sp, #4]
2fff77a8:	9705      	str	r7, [sp, #20]
2fff77aa:	60ab      	str	r3, [r5, #8]
2fff77ac:	6833      	ldr	r3, [r6, #0]
2fff77ae:	e9cd 4406 	strd	r4, r4, [sp, #24]
2fff77b2:	9304      	str	r3, [sp, #16]
2fff77b4:	e9cd 4408 	strd	r4, r4, [sp, #32]
2fff77b8:	940a      	str	r4, [sp, #40]	; 0x28
2fff77ba:	970e      	str	r7, [sp, #56]	; 0x38
2fff77bc:	f88d 403c 	strb.w	r4, [sp, #60]	; 0x3c
2fff77c0:	f7ff f9be 	bl	2fff6b40 <stm32_i2c_init>
2fff77c4:	4602      	mov	r2, r0
2fff77c6:	b138      	cbz	r0, 2fff77d8 <initialize_pmic_i2c+0xc0>
2fff77c8:	6829      	ldr	r1, [r5, #0]
2fff77ca:	4813      	ldr	r0, [pc, #76]	; (2fff7818 <initialize_pmic_i2c+0x100>)
2fff77cc:	f7fb f84a 	bl	2fff2864 <tf_log>
2fff77d0:	e7cb      	b.n	2fff776a <initialize_pmic_i2c+0x52>
2fff77d2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff77d6:	e7c4      	b.n	2fff7762 <initialize_pmic_i2c+0x4a>
2fff77d8:	8831      	ldrh	r1, [r6, #0]
2fff77da:	2319      	movs	r3, #25
2fff77dc:	463a      	mov	r2, r7
2fff77de:	4628      	mov	r0, r5
2fff77e0:	f7ff fbf4 	bl	2fff6fcc <stm32_i2c_is_device_ready>
2fff77e4:	4604      	mov	r4, r0
2fff77e6:	b918      	cbnz	r0, 2fff77f0 <initialize_pmic_i2c+0xd8>
2fff77e8:	480c      	ldr	r0, [pc, #48]	; (2fff781c <initialize_pmic_i2c+0x104>)
2fff77ea:	f7fb f83b 	bl	2fff2864 <tf_log>
2fff77ee:	e7bc      	b.n	2fff776a <initialize_pmic_i2c+0x52>
2fff77f0:	8831      	ldrh	r1, [r6, #0]
2fff77f2:	4628      	mov	r0, r5
2fff77f4:	f000 f9c2 	bl	2fff7b7c <stpmic1_bind_i2c>
2fff77f8:	4620      	mov	r0, r4
2fff77fa:	b011      	add	sp, #68	; 0x44
2fff77fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff77fe:	2400      	movs	r4, #0
2fff7800:	e7fa      	b.n	2fff77f8 <initialize_pmic_i2c+0xe0>
2fff7802:	bf00      	nop
2fff7804:	2fffd52c 	.word	0x2fffd52c
2fff7808:	2fffa630 	.word	0x2fffa630
2fff780c:	2fffec84 	.word	0x2fffec84
2fff7810:	2fffbd18 	.word	0x2fffbd18
2fff7814:	2fffec60 	.word	0x2fffec60
2fff7818:	2fffbd36 	.word	0x2fffbd36
2fff781c:	2fffbd56 	.word	0x2fffbd56

2fff7820 <initialize_pmic>:
2fff7820:	b510      	push	{r4, lr}
2fff7822:	f7ff ff79 	bl	2fff7718 <initialize_pmic_i2c>
2fff7826:	4c0a      	ldr	r4, [pc, #40]	; (2fff7850 <initialize_pmic+0x30>)
2fff7828:	b928      	cbnz	r0, 2fff7836 <initialize_pmic+0x16>
2fff782a:	6820      	ldr	r0, [r4, #0]
2fff782c:	b178      	cbz	r0, 2fff784e <initialize_pmic+0x2e>
2fff782e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff7832:	f7f9 b8a9 	b.w	2fff0988 <stm32mp_register_non_secure_periph_iomem>
2fff7836:	f7ff ff13 	bl	2fff7660 <dt_pmic_status>
2fff783a:	2802      	cmp	r0, #2
2fff783c:	d1f5      	bne.n	2fff782a <initialize_pmic+0xa>
2fff783e:	e9d4 0300 	ldrd	r0, r3, [r4]
2fff7842:	2b02      	cmp	r3, #2
2fff7844:	d1f1      	bne.n	2fff782a <initialize_pmic+0xa>
2fff7846:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff784a:	f7f9 b89a 	b.w	2fff0982 <stm32mp_register_secure_periph_iomem>
2fff784e:	bd10      	pop	{r4, pc}
2fff7850:	2fffec60 	.word	0x2fffec60

2fff7854 <get_regulator_data>:
2fff7854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff7858:	4606      	mov	r6, r0
2fff785a:	4c0c      	ldr	r4, [pc, #48]	; (2fff788c <get_regulator_data+0x38>)
2fff785c:	2500      	movs	r5, #0
2fff785e:	012f      	lsls	r7, r5, #4
2fff7860:	f857 8004 	ldr.w	r8, [r7, r4]
2fff7864:	4640      	mov	r0, r8
2fff7866:	f002 f9e8 	bl	2fff9c3a <strlen>
2fff786a:	4602      	mov	r2, r0
2fff786c:	4641      	mov	r1, r8
2fff786e:	4630      	mov	r0, r6
2fff7870:	f002 f9eb 	bl	2fff9c4a <strncmp>
2fff7874:	b130      	cbz	r0, 2fff7884 <get_regulator_data+0x30>
2fff7876:	3501      	adds	r5, #1
2fff7878:	2d0e      	cmp	r5, #14
2fff787a:	d1f0      	bne.n	2fff785e <get_regulator_data+0xa>
2fff787c:	f7fb f896 	bl	2fff29ac <console_flush>
2fff7880:	f000 effa 	blx	2fff8878 <do_panic>
2fff7884:	19e0      	adds	r0, r4, r7
2fff7886:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff788a:	bf00      	nop
2fff788c:	2fffc09c 	.word	0x2fffc09c

2fff7890 <voltage_to_index>:
2fff7890:	b538      	push	{r3, r4, r5, lr}
2fff7892:	460c      	mov	r4, r1
2fff7894:	f7ff ffde 	bl	2fff7854 <get_regulator_data>
2fff7898:	7a01      	ldrb	r1, [r0, #8]
2fff789a:	4602      	mov	r2, r0
2fff789c:	2300      	movs	r3, #0
2fff789e:	b2d8      	uxtb	r0, r3
2fff78a0:	4281      	cmp	r1, r0
2fff78a2:	d803      	bhi.n	2fff78ac <voltage_to_index+0x1c>
2fff78a4:	f7fb f882 	bl	2fff29ac <console_flush>
2fff78a8:	f000 efe6 	blx	2fff8878 <do_panic>
2fff78ac:	6855      	ldr	r5, [r2, #4]
2fff78ae:	f835 5013 	ldrh.w	r5, [r5, r3, lsl #1]
2fff78b2:	3301      	adds	r3, #1
2fff78b4:	42a5      	cmp	r5, r4
2fff78b6:	d1f2      	bne.n	2fff789e <voltage_to_index+0xe>
2fff78b8:	bd38      	pop	{r3, r4, r5, pc}
	...

2fff78bc <stpmic1_register_read>:
2fff78bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff78be:	2319      	movs	r3, #25
2fff78c0:	9302      	str	r3, [sp, #8]
2fff78c2:	2301      	movs	r3, #1
2fff78c4:	e9cd 1300 	strd	r1, r3, [sp]
2fff78c8:	4904      	ldr	r1, [pc, #16]	; (2fff78dc <stpmic1_register_read+0x20>)
2fff78ca:	4602      	mov	r2, r0
2fff78cc:	4804      	ldr	r0, [pc, #16]	; (2fff78e0 <stpmic1_register_read+0x24>)
2fff78ce:	8809      	ldrh	r1, [r1, #0]
2fff78d0:	6800      	ldr	r0, [r0, #0]
2fff78d2:	f7ff fb71 	bl	2fff6fb8 <stm32_i2c_mem_read>
2fff78d6:	b005      	add	sp, #20
2fff78d8:	f85d fb04 	ldr.w	pc, [sp], #4
2fff78dc:	2fffec88 	.word	0x2fffec88
2fff78e0:	2fffec8c 	.word	0x2fffec8c

2fff78e4 <stpmic1_is_regulator_enabled>:
2fff78e4:	b507      	push	{r0, r1, r2, lr}
2fff78e6:	f7ff ffb5 	bl	2fff7854 <get_regulator_data>
2fff78ea:	7a40      	ldrb	r0, [r0, #9]
2fff78ec:	f10d 0107 	add.w	r1, sp, #7
2fff78f0:	f7ff ffe4 	bl	2fff78bc <stpmic1_register_read>
2fff78f4:	b118      	cbz	r0, 2fff78fe <stpmic1_is_regulator_enabled+0x1a>
2fff78f6:	f7fb f859 	bl	2fff29ac <console_flush>
2fff78fa:	f000 efbe 	blx	2fff8878 <do_panic>
2fff78fe:	f89d 0007 	ldrb.w	r0, [sp, #7]
2fff7902:	f000 0001 	and.w	r0, r0, #1
2fff7906:	b003      	add	sp, #12
2fff7908:	f85d fb04 	ldr.w	pc, [sp], #4

2fff790c <stpmic1_regulator_voltage_get>:
2fff790c:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff790e:	4604      	mov	r4, r0
2fff7910:	f7ff ffa0 	bl	2fff7854 <get_regulator_data>
2fff7914:	4917      	ldr	r1, [pc, #92]	; (2fff7974 <stpmic1_regulator_voltage_get+0x68>)
2fff7916:	4605      	mov	r5, r0
2fff7918:	2204      	movs	r2, #4
2fff791a:	4620      	mov	r0, r4
2fff791c:	f002 f995 	bl	2fff9c4a <strncmp>
2fff7920:	b330      	cbz	r0, 2fff7970 <stpmic1_regulator_voltage_get+0x64>
2fff7922:	4915      	ldr	r1, [pc, #84]	; (2fff7978 <stpmic1_regulator_voltage_get+0x6c>)
2fff7924:	2203      	movs	r2, #3
2fff7926:	4620      	mov	r0, r4
2fff7928:	f002 f98f 	bl	2fff9c4a <strncmp>
2fff792c:	b110      	cbz	r0, 2fff7934 <stpmic1_regulator_voltage_get+0x28>
2fff792e:	2000      	movs	r0, #0
2fff7930:	b003      	add	sp, #12
2fff7932:	bd30      	pop	{r4, r5, pc}
2fff7934:	4911      	ldr	r1, [pc, #68]	; (2fff797c <stpmic1_regulator_voltage_get+0x70>)
2fff7936:	2204      	movs	r2, #4
2fff7938:	4620      	mov	r0, r4
2fff793a:	f002 f986 	bl	2fff9c4a <strncmp>
2fff793e:	2800      	cmp	r0, #0
2fff7940:	d0f5      	beq.n	2fff792e <stpmic1_regulator_voltage_get+0x22>
2fff7942:	247c      	movs	r4, #124	; 0x7c
2fff7944:	7a68      	ldrb	r0, [r5, #9]
2fff7946:	f10d 0107 	add.w	r1, sp, #7
2fff794a:	f7ff ffb7 	bl	2fff78bc <stpmic1_register_read>
2fff794e:	2800      	cmp	r0, #0
2fff7950:	dbee      	blt.n	2fff7930 <stpmic1_regulator_voltage_get+0x24>
2fff7952:	f89d 3007 	ldrb.w	r3, [sp, #7]
2fff7956:	7a2a      	ldrb	r2, [r5, #8]
2fff7958:	4023      	ands	r3, r4
2fff795a:	089b      	lsrs	r3, r3, #2
2fff795c:	429a      	cmp	r2, r3
2fff795e:	f88d 3007 	strb.w	r3, [sp, #7]
2fff7962:	bf32      	itee	cc
2fff7964:	f06f 0021 	mvncc.w	r0, #33	; 0x21
2fff7968:	686a      	ldrcs	r2, [r5, #4]
2fff796a:	f832 0013 	ldrhcs.w	r0, [r2, r3, lsl #1]
2fff796e:	e7df      	b.n	2fff7930 <stpmic1_regulator_voltage_get+0x24>
2fff7970:	24fc      	movs	r4, #252	; 0xfc
2fff7972:	e7e7      	b.n	2fff7944 <stpmic1_regulator_voltage_get+0x38>
2fff7974:	2fffbd6d 	.word	0x2fffbd6d
2fff7978:	2fffbd72 	.word	0x2fffbd72
2fff797c:	2fffbd76 	.word	0x2fffbd76

2fff7980 <stpmic1_register_write>:
2fff7980:	b510      	push	{r4, lr}
2fff7982:	b088      	sub	sp, #32
2fff7984:	f10d 0217 	add.w	r2, sp, #23
2fff7988:	2319      	movs	r3, #25
2fff798a:	9200      	str	r2, [sp, #0]
2fff798c:	4604      	mov	r4, r0
2fff798e:	f88d 1017 	strb.w	r1, [sp, #23]
2fff7992:	4602      	mov	r2, r0
2fff7994:	490e      	ldr	r1, [pc, #56]	; (2fff79d0 <stpmic1_register_write+0x50>)
2fff7996:	480f      	ldr	r0, [pc, #60]	; (2fff79d4 <stpmic1_register_write+0x54>)
2fff7998:	9302      	str	r3, [sp, #8]
2fff799a:	2301      	movs	r3, #1
2fff799c:	9301      	str	r3, [sp, #4]
2fff799e:	8809      	ldrh	r1, [r1, #0]
2fff79a0:	6800      	ldr	r0, [r0, #0]
2fff79a2:	f7ff fafb 	bl	2fff6f9c <stm32_i2c_mem_write>
2fff79a6:	b988      	cbnz	r0, 2fff79cc <stpmic1_register_write+0x4c>
2fff79a8:	2c1b      	cmp	r4, #27
2fff79aa:	d00f      	beq.n	2fff79cc <stpmic1_register_write+0x4c>
2fff79ac:	2c40      	cmp	r4, #64	; 0x40
2fff79ae:	d80d      	bhi.n	2fff79cc <stpmic1_register_write+0x4c>
2fff79b0:	f10d 011f 	add.w	r1, sp, #31
2fff79b4:	4620      	mov	r0, r4
2fff79b6:	f7ff ff81 	bl	2fff78bc <stpmic1_register_read>
2fff79ba:	b938      	cbnz	r0, 2fff79cc <stpmic1_register_write+0x4c>
2fff79bc:	f89d 201f 	ldrb.w	r2, [sp, #31]
2fff79c0:	f89d 3017 	ldrb.w	r3, [sp, #23]
2fff79c4:	429a      	cmp	r2, r3
2fff79c6:	bf18      	it	ne
2fff79c8:	f06f 0004 	mvnne.w	r0, #4
2fff79cc:	b008      	add	sp, #32
2fff79ce:	bd10      	pop	{r4, pc}
2fff79d0:	2fffec88 	.word	0x2fffec88
2fff79d4:	2fffec8c 	.word	0x2fffec8c

2fff79d8 <stpmic1_lp_copy_reg>:
2fff79d8:	b513      	push	{r0, r1, r4, lr}
2fff79da:	f7ff ff3b 	bl	2fff7854 <get_regulator_data>
2fff79de:	4604      	mov	r4, r0
2fff79e0:	7a80      	ldrb	r0, [r0, #10]
2fff79e2:	b150      	cbz	r0, 2fff79fa <stpmic1_lp_copy_reg+0x22>
2fff79e4:	7a60      	ldrb	r0, [r4, #9]
2fff79e6:	f10d 0107 	add.w	r1, sp, #7
2fff79ea:	f7ff ff67 	bl	2fff78bc <stpmic1_register_read>
2fff79ee:	b920      	cbnz	r0, 2fff79fa <stpmic1_lp_copy_reg+0x22>
2fff79f0:	f89d 1007 	ldrb.w	r1, [sp, #7]
2fff79f4:	7aa0      	ldrb	r0, [r4, #10]
2fff79f6:	f7ff ffc3 	bl	2fff7980 <stpmic1_register_write>
2fff79fa:	b002      	add	sp, #8
2fff79fc:	bd10      	pop	{r4, pc}

2fff79fe <stpmic1_register_update>:
2fff79fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff7a00:	460e      	mov	r6, r1
2fff7a02:	f10d 0107 	add.w	r1, sp, #7
2fff7a06:	4605      	mov	r5, r0
2fff7a08:	4614      	mov	r4, r2
2fff7a0a:	f7ff ff57 	bl	2fff78bc <stpmic1_register_read>
2fff7a0e:	b958      	cbnz	r0, 2fff7a28 <stpmic1_register_update+0x2a>
2fff7a10:	f89d 3007 	ldrb.w	r3, [sp, #7]
2fff7a14:	4628      	mov	r0, r5
2fff7a16:	ea04 0106 	and.w	r1, r4, r6
2fff7a1a:	ea23 0304 	bic.w	r3, r3, r4
2fff7a1e:	4319      	orrs	r1, r3
2fff7a20:	f88d 1007 	strb.w	r1, [sp, #7]
2fff7a24:	f7ff ffac 	bl	2fff7980 <stpmic1_register_write>
2fff7a28:	b002      	add	sp, #8
2fff7a2a:	bd70      	pop	{r4, r5, r6, pc}

2fff7a2c <stpmic1_powerctrl_on>:
2fff7a2c:	2204      	movs	r2, #4
2fff7a2e:	2010      	movs	r0, #16
2fff7a30:	4611      	mov	r1, r2
2fff7a32:	f7ff bfe4 	b.w	2fff79fe <stpmic1_register_update>

2fff7a36 <stpmic1_switch_off>:
2fff7a36:	2201      	movs	r2, #1
2fff7a38:	2010      	movs	r0, #16
2fff7a3a:	4611      	mov	r1, r2
2fff7a3c:	f7ff bfdf 	b.w	2fff79fe <stpmic1_register_update>

2fff7a40 <stpmic1_regulator_enable>:
2fff7a40:	b508      	push	{r3, lr}
2fff7a42:	f7ff ff07 	bl	2fff7854 <get_regulator_data>
2fff7a46:	7a40      	ldrb	r0, [r0, #9]
2fff7a48:	2201      	movs	r2, #1
2fff7a4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff7a4e:	4611      	mov	r1, r2
2fff7a50:	f7ff bfd5 	b.w	2fff79fe <stpmic1_register_update>

2fff7a54 <stpmic1_regulator_voltage_set>:
2fff7a54:	b570      	push	{r4, r5, r6, lr}
2fff7a56:	4604      	mov	r4, r0
2fff7a58:	f7ff ff1a 	bl	2fff7890 <voltage_to_index>
2fff7a5c:	4605      	mov	r5, r0
2fff7a5e:	4620      	mov	r0, r4
2fff7a60:	f7ff fef8 	bl	2fff7854 <get_regulator_data>
2fff7a64:	490f      	ldr	r1, [pc, #60]	; (2fff7aa4 <stpmic1_regulator_voltage_set+0x50>)
2fff7a66:	4606      	mov	r6, r0
2fff7a68:	2204      	movs	r2, #4
2fff7a6a:	4620      	mov	r0, r4
2fff7a6c:	f002 f8ed 	bl	2fff9c4a <strncmp>
2fff7a70:	b1a0      	cbz	r0, 2fff7a9c <stpmic1_regulator_voltage_set+0x48>
2fff7a72:	490d      	ldr	r1, [pc, #52]	; (2fff7aa8 <stpmic1_regulator_voltage_set+0x54>)
2fff7a74:	2203      	movs	r2, #3
2fff7a76:	4620      	mov	r0, r4
2fff7a78:	f002 f8e7 	bl	2fff9c4a <strncmp>
2fff7a7c:	b980      	cbnz	r0, 2fff7aa0 <stpmic1_regulator_voltage_set+0x4c>
2fff7a7e:	490b      	ldr	r1, [pc, #44]	; (2fff7aac <stpmic1_regulator_voltage_set+0x58>)
2fff7a80:	2204      	movs	r2, #4
2fff7a82:	4620      	mov	r0, r4
2fff7a84:	f002 f8e1 	bl	2fff9c4a <strncmp>
2fff7a88:	b150      	cbz	r0, 2fff7aa0 <stpmic1_regulator_voltage_set+0x4c>
2fff7a8a:	227c      	movs	r2, #124	; 0x7c
2fff7a8c:	00a9      	lsls	r1, r5, #2
2fff7a8e:	7a70      	ldrb	r0, [r6, #9]
2fff7a90:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
2fff7a94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff7a98:	f7ff bfb1 	b.w	2fff79fe <stpmic1_register_update>
2fff7a9c:	22fc      	movs	r2, #252	; 0xfc
2fff7a9e:	e7f5      	b.n	2fff7a8c <stpmic1_regulator_voltage_set+0x38>
2fff7aa0:	2000      	movs	r0, #0
2fff7aa2:	bd70      	pop	{r4, r5, r6, pc}
2fff7aa4:	2fffbd6d 	.word	0x2fffbd6d
2fff7aa8:	2fffbd72 	.word	0x2fffbd72
2fff7aac:	2fffbd76 	.word	0x2fffbd76

2fff7ab0 <stpmic1_regulator_pull_down_set>:
2fff7ab0:	b508      	push	{r3, lr}
2fff7ab2:	f7ff fecf 	bl	2fff7854 <get_regulator_data>
2fff7ab6:	4603      	mov	r3, r0
2fff7ab8:	7ac0      	ldrb	r0, [r0, #11]
2fff7aba:	b150      	cbz	r0, 2fff7ad2 <stpmic1_regulator_pull_down_set+0x22>
2fff7abc:	7b1b      	ldrb	r3, [r3, #12]
2fff7abe:	2203      	movs	r2, #3
2fff7ac0:	2101      	movs	r1, #1
2fff7ac2:	409a      	lsls	r2, r3
2fff7ac4:	4099      	lsls	r1, r3
2fff7ac6:	b2d2      	uxtb	r2, r2
2fff7ac8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff7acc:	b2c9      	uxtb	r1, r1
2fff7ace:	f7ff bf96 	b.w	2fff79fe <stpmic1_register_update>
2fff7ad2:	bd08      	pop	{r3, pc}

2fff7ad4 <stpmic1_regulator_mask_reset_set>:
2fff7ad4:	b508      	push	{r3, lr}
2fff7ad6:	f7ff febd 	bl	2fff7854 <get_regulator_data>
2fff7ada:	7b83      	ldrb	r3, [r0, #14]
2fff7adc:	2201      	movs	r2, #1
2fff7ade:	7b40      	ldrb	r0, [r0, #13]
2fff7ae0:	409a      	lsls	r2, r3
2fff7ae2:	b2d2      	uxtb	r2, r2
2fff7ae4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff7ae8:	4611      	mov	r1, r2
2fff7aea:	f7ff bf88 	b.w	2fff79fe <stpmic1_register_update>

2fff7aee <stpmic1_lp_reg_on_off>:
2fff7aee:	b510      	push	{r4, lr}
2fff7af0:	460c      	mov	r4, r1
2fff7af2:	f7ff feaf 	bl	2fff7854 <get_regulator_data>
2fff7af6:	7a80      	ldrb	r0, [r0, #10]
2fff7af8:	4621      	mov	r1, r4
2fff7afa:	2201      	movs	r2, #1
2fff7afc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff7b00:	f7ff bf7d 	b.w	2fff79fe <stpmic1_register_update>

2fff7b04 <stpmic1_lp_set_mode>:
2fff7b04:	b510      	push	{r4, lr}
2fff7b06:	460c      	mov	r4, r1
2fff7b08:	f7ff fea4 	bl	2fff7854 <get_regulator_data>
2fff7b0c:	0061      	lsls	r1, r4, #1
2fff7b0e:	2202      	movs	r2, #2
2fff7b10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff7b14:	7a80      	ldrb	r0, [r0, #10]
2fff7b16:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
2fff7b1a:	f7ff bf70 	b.w	2fff79fe <stpmic1_register_update>
	...

2fff7b20 <stpmic1_lp_set_voltage>:
2fff7b20:	b570      	push	{r4, r5, r6, lr}
2fff7b22:	4604      	mov	r4, r0
2fff7b24:	f7ff feb4 	bl	2fff7890 <voltage_to_index>
2fff7b28:	4605      	mov	r5, r0
2fff7b2a:	4620      	mov	r0, r4
2fff7b2c:	f7ff fe92 	bl	2fff7854 <get_regulator_data>
2fff7b30:	490f      	ldr	r1, [pc, #60]	; (2fff7b70 <stpmic1_lp_set_voltage+0x50>)
2fff7b32:	4606      	mov	r6, r0
2fff7b34:	2204      	movs	r2, #4
2fff7b36:	4620      	mov	r0, r4
2fff7b38:	f002 f887 	bl	2fff9c4a <strncmp>
2fff7b3c:	b1a0      	cbz	r0, 2fff7b68 <stpmic1_lp_set_voltage+0x48>
2fff7b3e:	490d      	ldr	r1, [pc, #52]	; (2fff7b74 <stpmic1_lp_set_voltage+0x54>)
2fff7b40:	2203      	movs	r2, #3
2fff7b42:	4620      	mov	r0, r4
2fff7b44:	f002 f881 	bl	2fff9c4a <strncmp>
2fff7b48:	b980      	cbnz	r0, 2fff7b6c <stpmic1_lp_set_voltage+0x4c>
2fff7b4a:	490b      	ldr	r1, [pc, #44]	; (2fff7b78 <stpmic1_lp_set_voltage+0x58>)
2fff7b4c:	2204      	movs	r2, #4
2fff7b4e:	4620      	mov	r0, r4
2fff7b50:	f002 f87b 	bl	2fff9c4a <strncmp>
2fff7b54:	b150      	cbz	r0, 2fff7b6c <stpmic1_lp_set_voltage+0x4c>
2fff7b56:	227c      	movs	r2, #124	; 0x7c
2fff7b58:	00a9      	lsls	r1, r5, #2
2fff7b5a:	7ab0      	ldrb	r0, [r6, #10]
2fff7b5c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
2fff7b60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff7b64:	f7ff bf4b 	b.w	2fff79fe <stpmic1_register_update>
2fff7b68:	22fc      	movs	r2, #252	; 0xfc
2fff7b6a:	e7f5      	b.n	2fff7b58 <stpmic1_lp_set_voltage+0x38>
2fff7b6c:	2000      	movs	r0, #0
2fff7b6e:	bd70      	pop	{r4, r5, r6, pc}
2fff7b70:	2fffbd6d 	.word	0x2fffbd6d
2fff7b74:	2fffbd72 	.word	0x2fffbd72
2fff7b78:	2fffbd76 	.word	0x2fffbd76

2fff7b7c <stpmic1_bind_i2c>:
2fff7b7c:	4b02      	ldr	r3, [pc, #8]	; (2fff7b88 <stpmic1_bind_i2c+0xc>)
2fff7b7e:	6018      	str	r0, [r3, #0]
2fff7b80:	4b02      	ldr	r3, [pc, #8]	; (2fff7b8c <stpmic1_bind_i2c+0x10>)
2fff7b82:	8019      	strh	r1, [r3, #0]
2fff7b84:	4770      	bx	lr
2fff7b86:	bf00      	nop
2fff7b88:	2fffec8c 	.word	0x2fffec8c
2fff7b8c:	2fffec88 	.word	0x2fffec88

2fff7b90 <stm32mp_reset_assert_to>:
2fff7b90:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff7b94:	4605      	mov	r5, r0
2fff7b96:	f000 031f 	and.w	r3, r0, #31
2fff7b9a:	2601      	movs	r6, #1
2fff7b9c:	096d      	lsrs	r5, r5, #5
2fff7b9e:	460c      	mov	r4, r1
2fff7ba0:	409e      	lsls	r6, r3
2fff7ba2:	f7fb f815 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff7ba6:	f840 6025 	str.w	r6, [r0, r5, lsl #2]
2fff7baa:	4607      	mov	r7, r0
2fff7bac:	eb00 0a85 	add.w	sl, r0, r5, lsl #2
2fff7bb0:	b334      	cbz	r4, 2fff7c00 <stm32mp_reset_assert_to+0x70>
2fff7bb2:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff7bb6:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff7bba:	e9cd 2300 	strd	r2, r3, [sp]
2fff7bbe:	f8dd 8000 	ldr.w	r8, [sp]
2fff7bc2:	2300      	movs	r3, #0
2fff7bc4:	4a0f      	ldr	r2, [pc, #60]	; (2fff7c04 <stm32mp_reset_assert_to+0x74>)
2fff7bc6:	fba4 0100 	umull	r0, r1, r4, r0
2fff7bca:	f000 eff4 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff7bce:	9b01      	ldr	r3, [sp, #4]
2fff7bd0:	eb10 0008 	adds.w	r0, r0, r8
2fff7bd4:	eb41 0103 	adc.w	r1, r1, r3
2fff7bd8:	f8da 3000 	ldr.w	r3, [sl]
2fff7bdc:	421e      	tst	r6, r3
2fff7bde:	d105      	bne.n	2fff7bec <stm32mp_reset_assert_to+0x5c>
2fff7be0:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff7be4:	4290      	cmp	r0, r2
2fff7be6:	eb71 0303 	sbcs.w	r3, r1, r3
2fff7bea:	d2f5      	bcs.n	2fff7bd8 <stm32mp_reset_assert_to+0x48>
2fff7bec:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
2fff7bf0:	421e      	tst	r6, r3
2fff7bf2:	bf14      	ite	ne
2fff7bf4:	2000      	movne	r0, #0
2fff7bf6:	f06f 003b 	mvneq.w	r0, #59	; 0x3b
2fff7bfa:	b002      	add	sp, #8
2fff7bfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff7c00:	4620      	mov	r0, r4
2fff7c02:	e7fa      	b.n	2fff7bfa <stm32mp_reset_assert_to+0x6a>
2fff7c04:	000f4240 	.word	0x000f4240

2fff7c08 <stm32mp_reset_deassert_to>:
2fff7c08:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff7c0c:	4604      	mov	r4, r0
2fff7c0e:	f000 031f 	and.w	r3, r0, #31
2fff7c12:	2601      	movs	r6, #1
2fff7c14:	0964      	lsrs	r4, r4, #5
2fff7c16:	460d      	mov	r5, r1
2fff7c18:	409e      	lsls	r6, r3
2fff7c1a:	3401      	adds	r4, #1
2fff7c1c:	f7fa ffd8 	bl	2fff2bd0 <stm32mp_rcc_base>
2fff7c20:	f840 6024 	str.w	r6, [r0, r4, lsl #2]
2fff7c24:	4607      	mov	r7, r0
2fff7c26:	eb00 0a84 	add.w	sl, r0, r4, lsl #2
2fff7c2a:	b335      	cbz	r5, 2fff7c7a <stm32mp_reset_deassert_to+0x72>
2fff7c2c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff7c30:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff7c34:	e9cd 2300 	strd	r2, r3, [sp]
2fff7c38:	f8dd 8000 	ldr.w	r8, [sp]
2fff7c3c:	2300      	movs	r3, #0
2fff7c3e:	4a10      	ldr	r2, [pc, #64]	; (2fff7c80 <stm32mp_reset_deassert_to+0x78>)
2fff7c40:	fba5 0100 	umull	r0, r1, r5, r0
2fff7c44:	f000 efb6 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff7c48:	9b01      	ldr	r3, [sp, #4]
2fff7c4a:	eb10 0008 	adds.w	r0, r0, r8
2fff7c4e:	eb41 0103 	adc.w	r1, r1, r3
2fff7c52:	f8da 3000 	ldr.w	r3, [sl]
2fff7c56:	421e      	tst	r6, r3
2fff7c58:	d005      	beq.n	2fff7c66 <stm32mp_reset_deassert_to+0x5e>
2fff7c5a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff7c5e:	4290      	cmp	r0, r2
2fff7c60:	eb71 0303 	sbcs.w	r3, r1, r3
2fff7c64:	d2f5      	bcs.n	2fff7c52 <stm32mp_reset_deassert_to+0x4a>
2fff7c66:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
2fff7c6a:	421e      	tst	r6, r3
2fff7c6c:	bf0c      	ite	eq
2fff7c6e:	2000      	moveq	r0, #0
2fff7c70:	f06f 003b 	mvnne.w	r0, #59	; 0x3b
2fff7c74:	b002      	add	sp, #8
2fff7c76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff7c7a:	4628      	mov	r0, r5
2fff7c7c:	e7fa      	b.n	2fff7c74 <stm32mp_reset_deassert_to+0x6c>
2fff7c7e:	bf00      	nop
2fff7c80:	000f4240 	.word	0x000f4240

2fff7c84 <fdt32_to_cpu>:
2fff7c84:	ba00      	rev	r0, r0
2fff7c86:	4770      	bx	lr

2fff7c88 <fdt_get_node_parent_address_cells>:
2fff7c88:	4601      	mov	r1, r0
2fff7c8a:	b508      	push	{r3, lr}
2fff7c8c:	4806      	ldr	r0, [pc, #24]	; (2fff7ca8 <fdt_get_node_parent_address_cells+0x20>)
2fff7c8e:	f001 fd71 	bl	2fff9774 <fdt_parent_offset>
2fff7c92:	1e01      	subs	r1, r0, #0
2fff7c94:	db04      	blt.n	2fff7ca0 <fdt_get_node_parent_address_cells+0x18>
2fff7c96:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff7c9a:	4803      	ldr	r0, [pc, #12]	; (2fff7ca8 <fdt_get_node_parent_address_cells+0x20>)
2fff7c9c:	f001 bb36 	b.w	2fff930c <fdt_address_cells>
2fff7ca0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7ca4:	bd08      	pop	{r3, pc}
2fff7ca6:	bf00      	nop
2fff7ca8:	2ffcc000 	.word	0x2ffcc000

2fff7cac <dt_get_stdout_node_offset>:
2fff7cac:	4919      	ldr	r1, [pc, #100]	; (2fff7d14 <dt_get_stdout_node_offset+0x68>)
2fff7cae:	481a      	ldr	r0, [pc, #104]	; (2fff7d18 <dt_get_stdout_node_offset+0x6c>)
2fff7cb0:	b570      	push	{r4, r5, r6, lr}
2fff7cb2:	f001 fd0f 	bl	2fff96d4 <fdt_path_offset>
2fff7cb6:	1e01      	subs	r1, r0, #0
2fff7cb8:	da05      	bge.n	2fff7cc6 <dt_get_stdout_node_offset+0x1a>
2fff7cba:	4918      	ldr	r1, [pc, #96]	; (2fff7d1c <dt_get_stdout_node_offset+0x70>)
2fff7cbc:	4816      	ldr	r0, [pc, #88]	; (2fff7d18 <dt_get_stdout_node_offset+0x6c>)
2fff7cbe:	f001 fd09 	bl	2fff96d4 <fdt_path_offset>
2fff7cc2:	1e01      	subs	r1, r0, #0
2fff7cc4:	db23      	blt.n	2fff7d0e <dt_get_stdout_node_offset+0x62>
2fff7cc6:	4a16      	ldr	r2, [pc, #88]	; (2fff7d20 <dt_get_stdout_node_offset+0x74>)
2fff7cc8:	2300      	movs	r3, #0
2fff7cca:	4813      	ldr	r0, [pc, #76]	; (2fff7d18 <dt_get_stdout_node_offset+0x6c>)
2fff7ccc:	f001 fc70 	bl	2fff95b0 <fdt_getprop>
2fff7cd0:	4604      	mov	r4, r0
2fff7cd2:	b1e0      	cbz	r0, 2fff7d0e <dt_get_stdout_node_offset+0x62>
2fff7cd4:	213a      	movs	r1, #58	; 0x3a
2fff7cd6:	f001 ff7d 	bl	2fff9bd4 <strchr>
2fff7cda:	b9a8      	cbnz	r0, 2fff7d08 <dt_get_stdout_node_offset+0x5c>
2fff7cdc:	4621      	mov	r1, r4
2fff7cde:	e00e      	b.n	2fff7cfe <dt_get_stdout_node_offset+0x52>
2fff7ce0:	3501      	adds	r5, #1
2fff7ce2:	1961      	adds	r1, r4, r5
2fff7ce4:	2201      	movs	r2, #1
2fff7ce6:	4630      	mov	r0, r6
2fff7ce8:	f001 ffaf 	bl	2fff9c4a <strncmp>
2fff7cec:	2800      	cmp	r0, #0
2fff7cee:	d1f7      	bne.n	2fff7ce0 <dt_get_stdout_node_offset+0x34>
2fff7cf0:	4809      	ldr	r0, [pc, #36]	; (2fff7d18 <dt_get_stdout_node_offset+0x6c>)
2fff7cf2:	4621      	mov	r1, r4
2fff7cf4:	462a      	mov	r2, r5
2fff7cf6:	f001 fc8f 	bl	2fff9618 <fdt_get_alias_namelen>
2fff7cfa:	4601      	mov	r1, r0
2fff7cfc:	b138      	cbz	r0, 2fff7d0e <dt_get_stdout_node_offset+0x62>
2fff7cfe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff7d02:	4805      	ldr	r0, [pc, #20]	; (2fff7d18 <dt_get_stdout_node_offset+0x6c>)
2fff7d04:	f001 bce6 	b.w	2fff96d4 <fdt_path_offset>
2fff7d08:	4e06      	ldr	r6, [pc, #24]	; (2fff7d24 <dt_get_stdout_node_offset+0x78>)
2fff7d0a:	2500      	movs	r5, #0
2fff7d0c:	e7e9      	b.n	2fff7ce2 <dt_get_stdout_node_offset+0x36>
2fff7d0e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7d12:	bd70      	pop	{r4, r5, r6, pc}
2fff7d14:	2fffc17e 	.word	0x2fffc17e
2fff7d18:	2ffcc000 	.word	0x2ffcc000
2fff7d1c:	2fffc18d 	.word	0x2fffc18d
2fff7d20:	2fffc195 	.word	0x2fffc195
2fff7d24:	2fffc1a1 	.word	0x2fffc1a1

2fff7d28 <dt_get_opp_freqvolt_from_subnode>:
2fff7d28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff7d2c:	2300      	movs	r3, #0
2fff7d2e:	4605      	mov	r5, r0
2fff7d30:	460f      	mov	r7, r1
2fff7d32:	4616      	mov	r6, r2
2fff7d34:	4601      	mov	r1, r0
2fff7d36:	4a29      	ldr	r2, [pc, #164]	; (2fff7ddc <dt_get_opp_freqvolt_from_subnode+0xb4>)
2fff7d38:	4829      	ldr	r0, [pc, #164]	; (2fff7de0 <dt_get_opp_freqvolt_from_subnode+0xb8>)
2fff7d3a:	f001 fc39 	bl	2fff95b0 <fdt_getprop>
2fff7d3e:	b948      	cbnz	r0, 2fff7d54 <dt_get_opp_freqvolt_from_subnode+0x2c>
2fff7d40:	4a28      	ldr	r2, [pc, #160]	; (2fff7de4 <dt_get_opp_freqvolt_from_subnode+0xbc>)
2fff7d42:	2300      	movs	r3, #0
2fff7d44:	4826      	ldr	r0, [pc, #152]	; (2fff7de0 <dt_get_opp_freqvolt_from_subnode+0xb8>)
2fff7d46:	4629      	mov	r1, r5
2fff7d48:	f001 fc32 	bl	2fff95b0 <fdt_getprop>
2fff7d4c:	b968      	cbnz	r0, 2fff7d6a <dt_get_opp_freqvolt_from_subnode+0x42>
2fff7d4e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7d52:	e008      	b.n	2fff7d66 <dt_get_opp_freqvolt_from_subnode+0x3e>
2fff7d54:	6800      	ldr	r0, [r0, #0]
2fff7d56:	f7ff ff95 	bl	2fff7c84 <fdt32_to_cpu>
2fff7d5a:	f7fb f85b 	bl	2fff2e14 <stm32mp_supports_cpu_opp>
2fff7d5e:	2800      	cmp	r0, #0
2fff7d60:	d1ee      	bne.n	2fff7d40 <dt_get_opp_freqvolt_from_subnode+0x18>
2fff7d62:	f06f 000e 	mvn.w	r0, #14
2fff7d66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff7d6a:	e9d0 2300 	ldrd	r2, r3, [r0]
2fff7d6e:	f3c2 2407 	ubfx	r4, r2, #8, #8
2fff7d72:	f3c2 4107 	ubfx	r1, r2, #16, #8
2fff7d76:	0424      	lsls	r4, r4, #16
2fff7d78:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
2fff7d7c:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
2fff7d80:	0618      	lsls	r0, r3, #24
2fff7d82:	f3c3 2107 	ubfx	r1, r3, #8, #8
2fff7d86:	ea40 6013 	orr.w	r0, r0, r3, lsr #24
2fff7d8a:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff7d8e:	ea44 6412 	orr.w	r4, r4, r2, lsr #24
2fff7d92:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2fff7d96:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
2fff7d9a:	4621      	mov	r1, r4
2fff7d9c:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2fff7da0:	2300      	movs	r3, #0
2fff7da2:	f000 ef08 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff7da6:	f5b4 7f7a 	cmp.w	r4, #1000	; 0x3e8
2fff7daa:	4680      	mov	r8, r0
2fff7dac:	d2d9      	bcs.n	2fff7d62 <dt_get_opp_freqvolt_from_subnode+0x3a>
2fff7dae:	4a0e      	ldr	r2, [pc, #56]	; (2fff7de8 <dt_get_opp_freqvolt_from_subnode+0xc0>)
2fff7db0:	2300      	movs	r3, #0
2fff7db2:	480b      	ldr	r0, [pc, #44]	; (2fff7de0 <dt_get_opp_freqvolt_from_subnode+0xb8>)
2fff7db4:	4629      	mov	r1, r5
2fff7db6:	f001 fbfb 	bl	2fff95b0 <fdt_getprop>
2fff7dba:	2800      	cmp	r0, #0
2fff7dbc:	d0c7      	beq.n	2fff7d4e <dt_get_opp_freqvolt_from_subnode+0x26>
2fff7dbe:	6800      	ldr	r0, [r0, #0]
2fff7dc0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff7dc4:	f7ff ff5e 	bl	2fff7c84 <fdt32_to_cpu>
2fff7dc8:	f1b0 7f7a 	cmp.w	r0, #65536000	; 0x3e80000
2fff7dcc:	fbb0 f3f3 	udiv	r3, r0, r3
2fff7dd0:	d2c7      	bcs.n	2fff7d62 <dt_get_opp_freqvolt_from_subnode+0x3a>
2fff7dd2:	f8c7 8000 	str.w	r8, [r7]
2fff7dd6:	2000      	movs	r0, #0
2fff7dd8:	6033      	str	r3, [r6, #0]
2fff7dda:	e7c4      	b.n	2fff7d66 <dt_get_opp_freqvolt_from_subnode+0x3e>
2fff7ddc:	2fffc1a3 	.word	0x2fffc1a3
2fff7de0:	2ffcc000 	.word	0x2ffcc000
2fff7de4:	2fffc1b4 	.word	0x2fffc1b4
2fff7de8:	2fffc1bb 	.word	0x2fffc1bb

2fff7dec <dt_open_and_check>:
2fff7dec:	b508      	push	{r3, lr}
2fff7dee:	4804      	ldr	r0, [pc, #16]	; (2fff7e00 <dt_open_and_check+0x14>)
2fff7df0:	f001 f95a 	bl	2fff90a8 <fdt_check_header>
2fff7df4:	b910      	cbnz	r0, 2fff7dfc <dt_open_and_check+0x10>
2fff7df6:	4b03      	ldr	r3, [pc, #12]	; (2fff7e04 <dt_open_and_check+0x18>)
2fff7df8:	2201      	movs	r2, #1
2fff7dfa:	601a      	str	r2, [r3, #0]
2fff7dfc:	bd08      	pop	{r3, pc}
2fff7dfe:	bf00      	nop
2fff7e00:	2ffcc000 	.word	0x2ffcc000
2fff7e04:	2fffec90 	.word	0x2fffec90

2fff7e08 <fdt_get_address>:
2fff7e08:	4a03      	ldr	r2, [pc, #12]	; (2fff7e18 <fdt_get_address+0x10>)
2fff7e0a:	4603      	mov	r3, r0
2fff7e0c:	6810      	ldr	r0, [r2, #0]
2fff7e0e:	2801      	cmp	r0, #1
2fff7e10:	bf04      	itt	eq
2fff7e12:	4a02      	ldreq	r2, [pc, #8]	; (2fff7e1c <fdt_get_address+0x14>)
2fff7e14:	601a      	streq	r2, [r3, #0]
2fff7e16:	4770      	bx	lr
2fff7e18:	2fffec90 	.word	0x2fffec90
2fff7e1c:	2ffcc000 	.word	0x2ffcc000

2fff7e20 <fdt_get_status>:
2fff7e20:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff7e22:	4605      	mov	r5, r0
2fff7e24:	4a13      	ldr	r2, [pc, #76]	; (2fff7e74 <fdt_get_status+0x54>)
2fff7e26:	4601      	mov	r1, r0
2fff7e28:	4813      	ldr	r0, [pc, #76]	; (2fff7e78 <fdt_get_status+0x58>)
2fff7e2a:	ab01      	add	r3, sp, #4
2fff7e2c:	f001 fbc0 	bl	2fff95b0 <fdt_getprop>
2fff7e30:	b198      	cbz	r0, 2fff7e5a <fdt_get_status+0x3a>
2fff7e32:	9a01      	ldr	r2, [sp, #4]
2fff7e34:	4911      	ldr	r1, [pc, #68]	; (2fff7e7c <fdt_get_status+0x5c>)
2fff7e36:	f001 ff08 	bl	2fff9c4a <strncmp>
2fff7e3a:	fab0 f480 	clz	r4, r0
2fff7e3e:	0964      	lsrs	r4, r4, #5
2fff7e40:	4a0f      	ldr	r2, [pc, #60]	; (2fff7e80 <fdt_get_status+0x60>)
2fff7e42:	ab01      	add	r3, sp, #4
2fff7e44:	480c      	ldr	r0, [pc, #48]	; (2fff7e78 <fdt_get_status+0x58>)
2fff7e46:	4629      	mov	r1, r5
2fff7e48:	f001 fbb2 	bl	2fff95b0 <fdt_getprop>
2fff7e4c:	b938      	cbnz	r0, 2fff7e5e <fdt_get_status+0x3e>
2fff7e4e:	2c01      	cmp	r4, #1
2fff7e50:	bf08      	it	eq
2fff7e52:	2403      	moveq	r4, #3
2fff7e54:	4620      	mov	r0, r4
2fff7e56:	b003      	add	sp, #12
2fff7e58:	bd30      	pop	{r4, r5, pc}
2fff7e5a:	2401      	movs	r4, #1
2fff7e5c:	e7f0      	b.n	2fff7e40 <fdt_get_status+0x20>
2fff7e5e:	9a01      	ldr	r2, [sp, #4]
2fff7e60:	4906      	ldr	r1, [pc, #24]	; (2fff7e7c <fdt_get_status+0x5c>)
2fff7e62:	f001 fef2 	bl	2fff9c4a <strncmp>
2fff7e66:	2800      	cmp	r0, #0
2fff7e68:	d1f4      	bne.n	2fff7e54 <fdt_get_status+0x34>
2fff7e6a:	f044 0402 	orr.w	r4, r4, #2
2fff7e6e:	b2e4      	uxtb	r4, r4
2fff7e70:	e7f0      	b.n	2fff7e54 <fdt_get_status+0x34>
2fff7e72:	bf00      	nop
2fff7e74:	2fffc1d5 	.word	0x2fffc1d5
2fff7e78:	2ffcc000 	.word	0x2ffcc000
2fff7e7c:	2fffc1c9 	.word	0x2fffc1c9
2fff7e80:	2fffc1ce 	.word	0x2fffc1ce

2fff7e84 <fdt_get_interrupt>:
2fff7e84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff7e86:	461f      	mov	r7, r3
2fff7e88:	4616      	mov	r6, r2
2fff7e8a:	4605      	mov	r5, r0
2fff7e8c:	460c      	mov	r4, r1
2fff7e8e:	f7ff ffc7 	bl	2fff7e20 <fdt_get_status>
2fff7e92:	2802      	cmp	r0, #2
2fff7e94:	f04f 0300 	mov.w	r3, #0
2fff7e98:	703b      	strb	r3, [r7, #0]
2fff7e9a:	4633      	mov	r3, r6
2fff7e9c:	d116      	bne.n	2fff7ecc <fdt_get_interrupt+0x48>
2fff7e9e:	4a0c      	ldr	r2, [pc, #48]	; (2fff7ed0 <fdt_get_interrupt+0x4c>)
2fff7ea0:	4629      	mov	r1, r5
2fff7ea2:	480c      	ldr	r0, [pc, #48]	; (2fff7ed4 <fdt_get_interrupt+0x50>)
2fff7ea4:	f001 fb84 	bl	2fff95b0 <fdt_getprop>
2fff7ea8:	6020      	str	r0, [r4, #0]
2fff7eaa:	b938      	cbnz	r0, 2fff7ebc <fdt_get_interrupt+0x38>
2fff7eac:	4a0a      	ldr	r2, [pc, #40]	; (2fff7ed8 <fdt_get_interrupt+0x54>)
2fff7eae:	4633      	mov	r3, r6
2fff7eb0:	4808      	ldr	r0, [pc, #32]	; (2fff7ed4 <fdt_get_interrupt+0x50>)
2fff7eb2:	4629      	mov	r1, r5
2fff7eb4:	f001 fb7c 	bl	2fff95b0 <fdt_getprop>
2fff7eb8:	6020      	str	r0, [r4, #0]
2fff7eba:	e001      	b.n	2fff7ec0 <fdt_get_interrupt+0x3c>
2fff7ebc:	2301      	movs	r3, #1
2fff7ebe:	703b      	strb	r3, [r7, #0]
2fff7ec0:	6820      	ldr	r0, [r4, #0]
2fff7ec2:	fab0 f080 	clz	r0, r0
2fff7ec6:	0940      	lsrs	r0, r0, #5
2fff7ec8:	4240      	negs	r0, r0
2fff7eca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff7ecc:	4a03      	ldr	r2, [pc, #12]	; (2fff7edc <fdt_get_interrupt+0x58>)
2fff7ece:	e7ef      	b.n	2fff7eb0 <fdt_get_interrupt+0x2c>
2fff7ed0:	2fffc1dc 	.word	0x2fffc1dc
2fff7ed4:	2ffcc000 	.word	0x2ffcc000
2fff7ed8:	2fffc1f7 	.word	0x2fffc1f7
2fff7edc:	2fffc1f0 	.word	0x2fffc1f0

2fff7ee0 <fdt_read_uint32_default>:
2fff7ee0:	b513      	push	{r0, r1, r4, lr}
2fff7ee2:	4614      	mov	r4, r2
2fff7ee4:	ab01      	add	r3, sp, #4
2fff7ee6:	460a      	mov	r2, r1
2fff7ee8:	4601      	mov	r1, r0
2fff7eea:	4806      	ldr	r0, [pc, #24]	; (2fff7f04 <fdt_read_uint32_default+0x24>)
2fff7eec:	f001 fb60 	bl	2fff95b0 <fdt_getprop>
2fff7ef0:	b128      	cbz	r0, 2fff7efe <fdt_read_uint32_default+0x1e>
2fff7ef2:	6800      	ldr	r0, [r0, #0]
2fff7ef4:	b002      	add	sp, #8
2fff7ef6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff7efa:	f7ff bec3 	b.w	2fff7c84 <fdt32_to_cpu>
2fff7efe:	4620      	mov	r0, r4
2fff7f00:	b002      	add	sp, #8
2fff7f02:	bd10      	pop	{r4, pc}
2fff7f04:	2ffcc000 	.word	0x2ffcc000

2fff7f08 <fdt_read_uint32_array>:
2fff7f08:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff7f0a:	4614      	mov	r4, r2
2fff7f0c:	461d      	mov	r5, r3
2fff7f0e:	460a      	mov	r2, r1
2fff7f10:	ab01      	add	r3, sp, #4
2fff7f12:	4601      	mov	r1, r0
2fff7f14:	480e      	ldr	r0, [pc, #56]	; (2fff7f50 <fdt_read_uint32_array+0x48>)
2fff7f16:	f001 fb4b 	bl	2fff95b0 <fdt_getprop>
2fff7f1a:	b190      	cbz	r0, 2fff7f42 <fdt_read_uint32_array+0x3a>
2fff7f1c:	9b01      	ldr	r3, [sp, #4]
2fff7f1e:	00aa      	lsls	r2, r5, #2
2fff7f20:	ebb3 0f85 	cmp.w	r3, r5, lsl #2
2fff7f24:	d110      	bne.n	2fff7f48 <fdt_read_uint32_array+0x40>
2fff7f26:	4422      	add	r2, r4
2fff7f28:	1f03      	subs	r3, r0, #4
2fff7f2a:	4294      	cmp	r4, r2
2fff7f2c:	d102      	bne.n	2fff7f34 <fdt_read_uint32_array+0x2c>
2fff7f2e:	2000      	movs	r0, #0
2fff7f30:	b003      	add	sp, #12
2fff7f32:	bd30      	pop	{r4, r5, pc}
2fff7f34:	f853 0f04 	ldr.w	r0, [r3, #4]!
2fff7f38:	f7ff fea4 	bl	2fff7c84 <fdt32_to_cpu>
2fff7f3c:	f844 0b04 	str.w	r0, [r4], #4
2fff7f40:	e7f3      	b.n	2fff7f2a <fdt_read_uint32_array+0x22>
2fff7f42:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7f46:	e7f3      	b.n	2fff7f30 <fdt_read_uint32_array+0x28>
2fff7f48:	f06f 000b 	mvn.w	r0, #11
2fff7f4c:	e7f0      	b.n	2fff7f30 <fdt_read_uint32_array+0x28>
2fff7f4e:	bf00      	nop
2fff7f50:	2ffcc000 	.word	0x2ffcc000

2fff7f54 <dt_fill_device_info>:
2fff7f54:	b538      	push	{r3, r4, r5, lr}
2fff7f56:	4605      	mov	r5, r0
2fff7f58:	4608      	mov	r0, r1
2fff7f5a:	460c      	mov	r4, r1
2fff7f5c:	f7ff fe94 	bl	2fff7c88 <fdt_get_node_parent_address_cells>
2fff7f60:	2801      	cmp	r0, #1
2fff7f62:	d004      	beq.n	2fff7f6e <dt_fill_device_info+0x1a>
2fff7f64:	4818      	ldr	r0, [pc, #96]	; (2fff7fc8 <dt_fill_device_info+0x74>)
2fff7f66:	f240 1149 	movw	r1, #329	; 0x149
2fff7f6a:	f001 fcbf 	bl	2fff98ec <__assert>
2fff7f6e:	4a17      	ldr	r2, [pc, #92]	; (2fff7fcc <dt_fill_device_info+0x78>)
2fff7f70:	2300      	movs	r3, #0
2fff7f72:	4817      	ldr	r0, [pc, #92]	; (2fff7fd0 <dt_fill_device_info+0x7c>)
2fff7f74:	4621      	mov	r1, r4
2fff7f76:	f001 fb1b 	bl	2fff95b0 <fdt_getprop>
2fff7f7a:	b110      	cbz	r0, 2fff7f82 <dt_fill_device_info+0x2e>
2fff7f7c:	6800      	ldr	r0, [r0, #0]
2fff7f7e:	f7ff fe81 	bl	2fff7c84 <fdt32_to_cpu>
2fff7f82:	6028      	str	r0, [r5, #0]
2fff7f84:	2300      	movs	r3, #0
2fff7f86:	4a13      	ldr	r2, [pc, #76]	; (2fff7fd4 <dt_fill_device_info+0x80>)
2fff7f88:	4621      	mov	r1, r4
2fff7f8a:	4811      	ldr	r0, [pc, #68]	; (2fff7fd0 <dt_fill_device_info+0x7c>)
2fff7f8c:	f001 fb10 	bl	2fff95b0 <fdt_getprop>
2fff7f90:	b198      	cbz	r0, 2fff7fba <dt_fill_device_info+0x66>
2fff7f92:	6840      	ldr	r0, [r0, #4]
2fff7f94:	f7ff fe76 	bl	2fff7c84 <fdt32_to_cpu>
2fff7f98:	6068      	str	r0, [r5, #4]
2fff7f9a:	2300      	movs	r3, #0
2fff7f9c:	4a0e      	ldr	r2, [pc, #56]	; (2fff7fd8 <dt_fill_device_info+0x84>)
2fff7f9e:	4621      	mov	r1, r4
2fff7fa0:	480b      	ldr	r0, [pc, #44]	; (2fff7fd0 <dt_fill_device_info+0x7c>)
2fff7fa2:	f001 fb05 	bl	2fff95b0 <fdt_getprop>
2fff7fa6:	b158      	cbz	r0, 2fff7fc0 <dt_fill_device_info+0x6c>
2fff7fa8:	6840      	ldr	r0, [r0, #4]
2fff7faa:	f7ff fe6b 	bl	2fff7c84 <fdt32_to_cpu>
2fff7fae:	60a8      	str	r0, [r5, #8]
2fff7fb0:	4620      	mov	r0, r4
2fff7fb2:	f7ff ff35 	bl	2fff7e20 <fdt_get_status>
2fff7fb6:	60e8      	str	r0, [r5, #12]
2fff7fb8:	bd38      	pop	{r3, r4, r5, pc}
2fff7fba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7fbe:	e7eb      	b.n	2fff7f98 <dt_fill_device_info+0x44>
2fff7fc0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7fc4:	e7f3      	b.n	2fff7fae <dt_fill_device_info+0x5a>
2fff7fc6:	bf00      	nop
2fff7fc8:	2fffc202 	.word	0x2fffc202
2fff7fcc:	2fffa630 	.word	0x2fffa630
2fff7fd0:	2ffcc000 	.word	0x2ffcc000
2fff7fd4:	2fffb331 	.word	0x2fffb331
2fff7fd8:	2fffc228 	.word	0x2fffc228

2fff7fdc <dt_get_node>:
2fff7fdc:	b538      	push	{r3, r4, r5, lr}
2fff7fde:	4605      	mov	r5, r0
2fff7fe0:	4806      	ldr	r0, [pc, #24]	; (2fff7ffc <dt_get_node+0x20>)
2fff7fe2:	f001 fc63 	bl	2fff98ac <fdt_node_offset_by_compatible>
2fff7fe6:	1e04      	subs	r4, r0, #0
2fff7fe8:	db05      	blt.n	2fff7ff6 <dt_get_node+0x1a>
2fff7fea:	4621      	mov	r1, r4
2fff7fec:	4628      	mov	r0, r5
2fff7fee:	f7ff ffb1 	bl	2fff7f54 <dt_fill_device_info>
2fff7ff2:	4620      	mov	r0, r4
2fff7ff4:	bd38      	pop	{r3, r4, r5, pc}
2fff7ff6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff7ffa:	e7fa      	b.n	2fff7ff2 <dt_get_node+0x16>
2fff7ffc:	2ffcc000 	.word	0x2ffcc000

2fff8000 <dt_get_stdout_uart_info>:
2fff8000:	b538      	push	{r3, r4, r5, lr}
2fff8002:	4605      	mov	r5, r0
2fff8004:	f7ff fe52 	bl	2fff7cac <dt_get_stdout_node_offset>
2fff8008:	1e04      	subs	r4, r0, #0
2fff800a:	db05      	blt.n	2fff8018 <dt_get_stdout_uart_info+0x18>
2fff800c:	4621      	mov	r1, r4
2fff800e:	4628      	mov	r0, r5
2fff8010:	f7ff ffa0 	bl	2fff7f54 <dt_fill_device_info>
2fff8014:	4620      	mov	r0, r4
2fff8016:	bd38      	pop	{r3, r4, r5, pc}
2fff8018:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff801c:	e7fa      	b.n	2fff8014 <dt_get_stdout_uart_info+0x14>
	...

2fff8020 <dt_get_node_by_compatible>:
2fff8020:	b538      	push	{r3, r4, r5, lr}
2fff8022:	4602      	mov	r2, r0
2fff8024:	4605      	mov	r5, r0
2fff8026:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff802a:	4805      	ldr	r0, [pc, #20]	; (2fff8040 <dt_get_node_by_compatible+0x20>)
2fff802c:	f001 fc3e 	bl	2fff98ac <fdt_node_offset_by_compatible>
2fff8030:	1e04      	subs	r4, r0, #0
2fff8032:	da03      	bge.n	2fff803c <dt_get_node_by_compatible+0x1c>
2fff8034:	4803      	ldr	r0, [pc, #12]	; (2fff8044 <dt_get_node_by_compatible+0x24>)
2fff8036:	4629      	mov	r1, r5
2fff8038:	f7fa fc14 	bl	2fff2864 <tf_log>
2fff803c:	4620      	mov	r0, r4
2fff803e:	bd38      	pop	{r3, r4, r5, pc}
2fff8040:	2ffcc000 	.word	0x2ffcc000
2fff8044:	2fffc22f 	.word	0x2fffc22f

2fff8048 <dt_get_ddr_size>:
2fff8048:	4806      	ldr	r0, [pc, #24]	; (2fff8064 <dt_get_ddr_size+0x1c>)
2fff804a:	b508      	push	{r3, lr}
2fff804c:	f7ff ffe8 	bl	2fff8020 <dt_get_node_by_compatible>
2fff8050:	2800      	cmp	r0, #0
2fff8052:	db05      	blt.n	2fff8060 <dt_get_ddr_size+0x18>
2fff8054:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8058:	4903      	ldr	r1, [pc, #12]	; (2fff8068 <dt_get_ddr_size+0x20>)
2fff805a:	2200      	movs	r2, #0
2fff805c:	f7ff bf40 	b.w	2fff7ee0 <fdt_read_uint32_default>
2fff8060:	2000      	movs	r0, #0
2fff8062:	bd08      	pop	{r3, pc}
2fff8064:	2fffc24b 	.word	0x2fffc24b
2fff8068:	2fffc25b 	.word	0x2fffc25b

2fff806c <dt_get_all_opp_freqvolt>:
2fff806c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff8070:	460f      	mov	r7, r1
2fff8072:	4690      	mov	r8, r2
2fff8074:	4606      	mov	r6, r0
2fff8076:	b920      	cbnz	r0, 2fff8082 <dt_get_all_opp_freqvolt+0x16>
2fff8078:	f240 2149 	movw	r1, #585	; 0x249
2fff807c:	481d      	ldr	r0, [pc, #116]	; (2fff80f4 <dt_get_all_opp_freqvolt+0x88>)
2fff807e:	f001 fc35 	bl	2fff98ec <__assert>
2fff8082:	b911      	cbnz	r1, 2fff808a <dt_get_all_opp_freqvolt+0x1e>
2fff8084:	f240 214a 	movw	r1, #586	; 0x24a
2fff8088:	e7f8      	b.n	2fff807c <dt_get_all_opp_freqvolt+0x10>
2fff808a:	b912      	cbnz	r2, 2fff8092 <dt_get_all_opp_freqvolt+0x26>
2fff808c:	f240 214b 	movw	r1, #587	; 0x24b
2fff8090:	e7f4      	b.n	2fff807c <dt_get_all_opp_freqvolt+0x10>
2fff8092:	4819      	ldr	r0, [pc, #100]	; (2fff80f8 <dt_get_all_opp_freqvolt+0x8c>)
2fff8094:	f7ff ffc4 	bl	2fff8020 <dt_get_node_by_compatible>
2fff8098:	2800      	cmp	r0, #0
2fff809a:	db18      	blt.n	2fff80ce <dt_get_all_opp_freqvolt+0x62>
2fff809c:	f8df 905c 	ldr.w	r9, [pc, #92]	; 2fff80fc <dt_get_all_opp_freqvolt+0x90>
2fff80a0:	4601      	mov	r1, r0
2fff80a2:	4816      	ldr	r0, [pc, #88]	; (2fff80fc <dt_get_all_opp_freqvolt+0x90>)
2fff80a4:	2500      	movs	r5, #0
2fff80a6:	f001 f908 	bl	2fff92ba <fdt_first_subnode>
2fff80aa:	4604      	mov	r4, r0
2fff80ac:	2c00      	cmp	r4, #0
2fff80ae:	da03      	bge.n	2fff80b8 <dt_get_all_opp_freqvolt+0x4c>
2fff80b0:	b1ed      	cbz	r5, 2fff80ee <dt_get_all_opp_freqvolt+0x82>
2fff80b2:	6035      	str	r5, [r6, #0]
2fff80b4:	2000      	movs	r0, #0
2fff80b6:	e00a      	b.n	2fff80ce <dt_get_all_opp_freqvolt+0x62>
2fff80b8:	aa01      	add	r2, sp, #4
2fff80ba:	4669      	mov	r1, sp
2fff80bc:	4620      	mov	r0, r4
2fff80be:	f7ff fe33 	bl	2fff7d28 <dt_get_opp_freqvolt_from_subnode>
2fff80c2:	b970      	cbnz	r0, 2fff80e2 <dt_get_all_opp_freqvolt+0x76>
2fff80c4:	6833      	ldr	r3, [r6, #0]
2fff80c6:	42ab      	cmp	r3, r5
2fff80c8:	d804      	bhi.n	2fff80d4 <dt_get_all_opp_freqvolt+0x68>
2fff80ca:	f06f 0002 	mvn.w	r0, #2
2fff80ce:	b003      	add	sp, #12
2fff80d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff80d4:	9b00      	ldr	r3, [sp, #0]
2fff80d6:	f847 3025 	str.w	r3, [r7, r5, lsl #2]
2fff80da:	9b01      	ldr	r3, [sp, #4]
2fff80dc:	f848 3025 	str.w	r3, [r8, r5, lsl #2]
2fff80e0:	3501      	adds	r5, #1
2fff80e2:	4621      	mov	r1, r4
2fff80e4:	4648      	mov	r0, r9
2fff80e6:	f001 f8fb 	bl	2fff92e0 <fdt_next_subnode>
2fff80ea:	4604      	mov	r4, r0
2fff80ec:	e7de      	b.n	2fff80ac <dt_get_all_opp_freqvolt+0x40>
2fff80ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff80f2:	e7ec      	b.n	2fff80ce <dt_get_all_opp_freqvolt+0x62>
2fff80f4:	2fffc202 	.word	0x2fffc202
2fff80f8:	2fffc267 	.word	0x2fffc267
2fff80fc:	2ffcc000 	.word	0x2ffcc000

2fff8100 <dt_get_cpu_regulator_name>:
2fff8100:	490f      	ldr	r1, [pc, #60]	; (2fff8140 <dt_get_cpu_regulator_name+0x40>)
2fff8102:	4810      	ldr	r0, [pc, #64]	; (2fff8144 <dt_get_cpu_regulator_name+0x44>)
2fff8104:	b510      	push	{r4, lr}
2fff8106:	f001 fae5 	bl	2fff96d4 <fdt_path_offset>
2fff810a:	1e01      	subs	r1, r0, #0
2fff810c:	db15      	blt.n	2fff813a <dt_get_cpu_regulator_name+0x3a>
2fff810e:	4a0e      	ldr	r2, [pc, #56]	; (2fff8148 <dt_get_cpu_regulator_name+0x48>)
2fff8110:	2300      	movs	r3, #0
2fff8112:	480c      	ldr	r0, [pc, #48]	; (2fff8144 <dt_get_cpu_regulator_name+0x44>)
2fff8114:	f001 fa4c 	bl	2fff95b0 <fdt_getprop>
2fff8118:	b178      	cbz	r0, 2fff813a <dt_get_cpu_regulator_name+0x3a>
2fff811a:	6800      	ldr	r0, [r0, #0]
2fff811c:	f7ff fdb2 	bl	2fff7c84 <fdt32_to_cpu>
2fff8120:	4601      	mov	r1, r0
2fff8122:	4808      	ldr	r0, [pc, #32]	; (2fff8144 <dt_get_cpu_regulator_name+0x44>)
2fff8124:	f001 fb36 	bl	2fff9794 <fdt_node_offset_by_phandle>
2fff8128:	1e01      	subs	r1, r0, #0
2fff812a:	db06      	blt.n	2fff813a <dt_get_cpu_regulator_name+0x3a>
2fff812c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff8130:	4a06      	ldr	r2, [pc, #24]	; (2fff814c <dt_get_cpu_regulator_name+0x4c>)
2fff8132:	2300      	movs	r3, #0
2fff8134:	4803      	ldr	r0, [pc, #12]	; (2fff8144 <dt_get_cpu_regulator_name+0x44>)
2fff8136:	f001 ba3b 	b.w	2fff95b0 <fdt_getprop>
2fff813a:	2000      	movs	r0, #0
2fff813c:	bd10      	pop	{r4, pc}
2fff813e:	bf00      	nop
2fff8140:	2fffc27b 	.word	0x2fffc27b
2fff8144:	2ffcc000 	.word	0x2ffcc000
2fff8148:	2fffc287 	.word	0x2fffc287
2fff814c:	2fffbd09 	.word	0x2fffbd09

2fff8150 <fdt_get_gpio_bank_pinctrl_node>:
2fff8150:	280a      	cmp	r0, #10
2fff8152:	b508      	push	{r3, lr}
2fff8154:	d905      	bls.n	2fff8162 <fdt_get_gpio_bank_pinctrl_node+0x12>
2fff8156:	2819      	cmp	r0, #25
2fff8158:	d009      	beq.n	2fff816e <fdt_get_gpio_bank_pinctrl_node+0x1e>
2fff815a:	f7fa fc27 	bl	2fff29ac <console_flush>
2fff815e:	f000 eb8c 	blx	2fff8878 <do_panic>
2fff8162:	4904      	ldr	r1, [pc, #16]	; (2fff8174 <fdt_get_gpio_bank_pinctrl_node+0x24>)
2fff8164:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8168:	4803      	ldr	r0, [pc, #12]	; (2fff8178 <fdt_get_gpio_bank_pinctrl_node+0x28>)
2fff816a:	f001 bab3 	b.w	2fff96d4 <fdt_path_offset>
2fff816e:	4903      	ldr	r1, [pc, #12]	; (2fff817c <fdt_get_gpio_bank_pinctrl_node+0x2c>)
2fff8170:	e7f8      	b.n	2fff8164 <fdt_get_gpio_bank_pinctrl_node+0x14>
2fff8172:	bf00      	nop
2fff8174:	2fffc292 	.word	0x2fffc292
2fff8178:	2ffcc000 	.word	0x2ffcc000
2fff817c:	2fffc2a6 	.word	0x2fffc2a6

2fff8180 <fdt_get_gpioz_nbpins_from_dt>:
2fff8180:	2019      	movs	r0, #25
2fff8182:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff8186:	f7ff ffe3 	bl	2fff8150 <fdt_get_gpio_bank_pinctrl_node>
2fff818a:	1e01      	subs	r1, r0, #0
2fff818c:	da03      	bge.n	2fff8196 <fdt_get_gpioz_nbpins_from_dt+0x16>
2fff818e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff8192:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff8196:	481d      	ldr	r0, [pc, #116]	; (2fff820c <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff8198:	4f1d      	ldr	r7, [pc, #116]	; (2fff8210 <fdt_get_gpioz_nbpins_from_dt+0x90>)
2fff819a:	f001 f88e 	bl	2fff92ba <fdt_first_subnode>
2fff819e:	4e1b      	ldr	r6, [pc, #108]	; (2fff820c <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff81a0:	4604      	mov	r4, r0
2fff81a2:	f8df 8070 	ldr.w	r8, [pc, #112]	; 2fff8214 <fdt_get_gpioz_nbpins_from_dt+0x94>
2fff81a6:	2c00      	cmp	r4, #0
2fff81a8:	db1b      	blt.n	2fff81e2 <fdt_get_gpioz_nbpins_from_dt+0x62>
2fff81aa:	2300      	movs	r3, #0
2fff81ac:	463a      	mov	r2, r7
2fff81ae:	4621      	mov	r1, r4
2fff81b0:	4630      	mov	r0, r6
2fff81b2:	f001 f9fd 	bl	2fff95b0 <fdt_getprop>
2fff81b6:	b318      	cbz	r0, 2fff8200 <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff81b8:	2300      	movs	r3, #0
2fff81ba:	4642      	mov	r2, r8
2fff81bc:	4621      	mov	r1, r4
2fff81be:	4630      	mov	r0, r6
2fff81c0:	f001 f9f6 	bl	2fff95b0 <fdt_getprop>
2fff81c4:	4605      	mov	r5, r0
2fff81c6:	b1d8      	cbz	r0, 2fff8200 <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff81c8:	2019      	movs	r0, #25
2fff81ca:	f7fa fd39 	bl	2fff2c40 <stm32_get_gpio_bank_offset>
2fff81ce:	4603      	mov	r3, r0
2fff81d0:	6828      	ldr	r0, [r5, #0]
2fff81d2:	f7ff fd57 	bl	2fff7c84 <fdt32_to_cpu>
2fff81d6:	4298      	cmp	r0, r3
2fff81d8:	d112      	bne.n	2fff8200 <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff81da:	4620      	mov	r0, r4
2fff81dc:	f7ff fe20 	bl	2fff7e20 <fdt_get_status>
2fff81e0:	b908      	cbnz	r0, 2fff81e6 <fdt_get_gpioz_nbpins_from_dt+0x66>
2fff81e2:	2000      	movs	r0, #0
2fff81e4:	e7d5      	b.n	2fff8192 <fdt_get_gpioz_nbpins_from_dt+0x12>
2fff81e6:	4a0c      	ldr	r2, [pc, #48]	; (2fff8218 <fdt_get_gpioz_nbpins_from_dt+0x98>)
2fff81e8:	2300      	movs	r3, #0
2fff81ea:	4808      	ldr	r0, [pc, #32]	; (2fff820c <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff81ec:	4621      	mov	r1, r4
2fff81ee:	f001 f9df 	bl	2fff95b0 <fdt_getprop>
2fff81f2:	2800      	cmp	r0, #0
2fff81f4:	d0cb      	beq.n	2fff818e <fdt_get_gpioz_nbpins_from_dt+0xe>
2fff81f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2fff81fa:	6800      	ldr	r0, [r0, #0]
2fff81fc:	f7ff bd42 	b.w	2fff7c84 <fdt32_to_cpu>
2fff8200:	4621      	mov	r1, r4
2fff8202:	4630      	mov	r0, r6
2fff8204:	f001 f86c 	bl	2fff92e0 <fdt_next_subnode>
2fff8208:	4604      	mov	r4, r0
2fff820a:	e7cc      	b.n	2fff81a6 <fdt_get_gpioz_nbpins_from_dt+0x26>
2fff820c:	2ffcc000 	.word	0x2ffcc000
2fff8210:	2fffb93e 	.word	0x2fffb93e
2fff8214:	2fffa630 	.word	0x2fffa630
2fff8218:	2fffc2bc 	.word	0x2fffc2bc

2fff821c <stm32mp_lock_shregs>:
2fff821c:	b508      	push	{r3, lr}
2fff821e:	f7fa fcda 	bl	2fff2bd6 <stm32mp_lock_available>
2fff8222:	b120      	cbz	r0, 2fff822e <stm32mp_lock_shregs+0x12>
2fff8224:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8228:	4801      	ldr	r0, [pc, #4]	; (2fff8230 <stm32mp_lock_shregs+0x14>)
2fff822a:	f004 b9b9 	b.w	2fffc5a0 <__spin_lock_from_thumb>
2fff822e:	bd08      	pop	{r3, pc}
2fff8230:	2fffec94 	.word	0x2fffec94

2fff8234 <stm32mp_unlock_shregs>:
2fff8234:	b508      	push	{r3, lr}
2fff8236:	f7fa fcce 	bl	2fff2bd6 <stm32mp_lock_available>
2fff823a:	b120      	cbz	r0, 2fff8246 <stm32mp_unlock_shregs+0x12>
2fff823c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8240:	4801      	ldr	r0, [pc, #4]	; (2fff8248 <stm32mp_unlock_shregs+0x14>)
2fff8242:	f004 b9b9 	b.w	2fffc5b8 <__spin_unlock_from_thumb>
2fff8246:	bd08      	pop	{r3, pc}
2fff8248:	2fffec94 	.word	0x2fffec94

2fff824c <stm32mp_mmio_clrsetbits_32_shregs>:
2fff824c:	b570      	push	{r4, r5, r6, lr}
2fff824e:	4604      	mov	r4, r0
2fff8250:	460e      	mov	r6, r1
2fff8252:	4615      	mov	r5, r2
2fff8254:	f7ff ffe2 	bl	2fff821c <stm32mp_lock_shregs>
2fff8258:	6821      	ldr	r1, [r4, #0]
2fff825a:	ea21 0106 	bic.w	r1, r1, r6
2fff825e:	4329      	orrs	r1, r5
2fff8260:	6021      	str	r1, [r4, #0]
2fff8262:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff8266:	f7ff bfe5 	b.w	2fff8234 <stm32mp_unlock_shregs>

2fff826a <stm32mp_mmio_clrbits_32_shregs>:
2fff826a:	b538      	push	{r3, r4, r5, lr}
2fff826c:	4604      	mov	r4, r0
2fff826e:	460d      	mov	r5, r1
2fff8270:	f7ff ffd4 	bl	2fff821c <stm32mp_lock_shregs>
2fff8274:	6823      	ldr	r3, [r4, #0]
2fff8276:	ea23 0305 	bic.w	r3, r3, r5
2fff827a:	6023      	str	r3, [r4, #0]
2fff827c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff8280:	f7ff bfd8 	b.w	2fff8234 <stm32mp_unlock_shregs>

2fff8284 <stm32mp_mmio_setbits_32_shregs>:
2fff8284:	b538      	push	{r3, r4, r5, lr}
2fff8286:	4605      	mov	r5, r0
2fff8288:	460c      	mov	r4, r1
2fff828a:	f7ff ffc7 	bl	2fff821c <stm32mp_lock_shregs>
2fff828e:	6829      	ldr	r1, [r5, #0]
2fff8290:	430c      	orrs	r4, r1
2fff8292:	602c      	str	r4, [r5, #0]
2fff8294:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff8298:	f7ff bfcc 	b.w	2fff8234 <stm32mp_unlock_shregs>

2fff829c <stm32_clean_context>:
2fff829c:	b508      	push	{r3, lr}
2fff829e:	2063      	movs	r0, #99	; 0x63
2fff82a0:	f7fc ff48 	bl	2fff5134 <stm32mp_clk_enable>
2fff82a4:	f04f 40a8 	mov.w	r0, #1409286144	; 0x54000000
2fff82a8:	f44f 618d 	mov.w	r1, #1128	; 0x468
2fff82ac:	f000 ec3a 	blx	2fff8b24 <zero_normalmem>
2fff82b0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff82b4:	2063      	movs	r0, #99	; 0x63
2fff82b6:	f7fc bf40 	b.w	2fff513a <stm32mp_clk_disable>

2fff82ba <stm32mp1_pm_save_clock_cfg>:
2fff82ba:	1883      	adds	r3, r0, r2
2fff82bc:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
2fff82c0:	b570      	push	{r4, r5, r6, lr}
2fff82c2:	4604      	mov	r4, r0
2fff82c4:	460e      	mov	r6, r1
2fff82c6:	4615      	mov	r5, r2
2fff82c8:	d903      	bls.n	2fff82d2 <stm32mp1_pm_save_clock_cfg+0x18>
2fff82ca:	f7fa fb6f 	bl	2fff29ac <console_flush>
2fff82ce:	f000 ead4 	blx	2fff8878 <do_panic>
2fff82d2:	2063      	movs	r0, #99	; 0x63
2fff82d4:	f7fc ff2e 	bl	2fff5134 <stm32mp_clk_enable>
2fff82d8:	f104 40a8 	add.w	r0, r4, #1409286144	; 0x54000000
2fff82dc:	462a      	mov	r2, r5
2fff82de:	4631      	mov	r1, r6
2fff82e0:	f500 7002 	add.w	r0, r0, #520	; 0x208
2fff82e4:	f001 fb2a 	bl	2fff993c <memcpy>
2fff82e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff82ec:	2063      	movs	r0, #99	; 0x63
2fff82ee:	f7fc bf24 	b.w	2fff513a <stm32mp_clk_disable>

2fff82f2 <stm32mp1_pm_restore_clock_cfg>:
2fff82f2:	1883      	adds	r3, r0, r2
2fff82f4:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
2fff82f8:	b570      	push	{r4, r5, r6, lr}
2fff82fa:	4604      	mov	r4, r0
2fff82fc:	460e      	mov	r6, r1
2fff82fe:	4615      	mov	r5, r2
2fff8300:	d903      	bls.n	2fff830a <stm32mp1_pm_restore_clock_cfg+0x18>
2fff8302:	f7fa fb53 	bl	2fff29ac <console_flush>
2fff8306:	f000 eab8 	blx	2fff8878 <do_panic>
2fff830a:	2063      	movs	r0, #99	; 0x63
2fff830c:	f7fc ff12 	bl	2fff5134 <stm32mp_clk_enable>
2fff8310:	f104 41a8 	add.w	r1, r4, #1409286144	; 0x54000000
2fff8314:	462a      	mov	r2, r5
2fff8316:	4630      	mov	r0, r6
2fff8318:	f501 7102 	add.w	r1, r1, #520	; 0x208
2fff831c:	f001 fb0e 	bl	2fff993c <memcpy>
2fff8320:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff8324:	2063      	movs	r0, #99	; 0x63
2fff8326:	f7fc bf08 	b.w	2fff513a <stm32mp_clk_disable>
	...

2fff832c <stm32_save_context>:
2fff832c:	b570      	push	{r4, r5, r6, lr}
2fff832e:	4604      	mov	r4, r0
2fff8330:	f7fd fa78 	bl	2fff5824 <stm32mp1_clock_suspend>
2fff8334:	2063      	movs	r0, #99	; 0x63
2fff8336:	f7fc fefd 	bl	2fff5134 <stm32mp_clk_enable>
2fff833a:	2001      	movs	r0, #1
2fff833c:	f7f5 f882 	bl	2ffed444 <smc_get_ctx>
2fff8340:	4606      	mov	r6, r0
2fff8342:	2001      	movs	r0, #1
2fff8344:	f7f5 f89a 	bl	2ffed47c <cm_get_context>
2fff8348:	4605      	mov	r5, r0
2fff834a:	4631      	mov	r1, r6
2fff834c:	f44f 7290 	mov.w	r2, #288	; 0x120
2fff8350:	f04f 40a8 	mov.w	r0, #1409286144	; 0x54000000
2fff8354:	f001 faf2 	bl	2fff993c <memcpy>
2fff8358:	480f      	ldr	r0, [pc, #60]	; (2fff8398 <stm32_save_context+0x6c>)
2fff835a:	4629      	mov	r1, r5
2fff835c:	f04f 45a8 	mov.w	r5, #1409286144	; 0x54000000
2fff8360:	2240      	movs	r2, #64	; 0x40
2fff8362:	f001 faeb 	bl	2fff993c <memcpy>
2fff8366:	480d      	ldr	r0, [pc, #52]	; (2fff839c <stm32_save_context+0x70>)
2fff8368:	f8c5 4160 	str.w	r4, [r5, #352]	; 0x160
2fff836c:	f7f7 f8fc 	bl	2ffef568 <stm32_rtc_get_calendar>
2fff8370:	f7fc fa3a 	bl	2fff47e8 <stm32mp_stgen_get_counter>
2fff8374:	e9c5 0180 	strd	r0, r1, [r5, #512]	; 0x200
2fff8378:	4809      	ldr	r0, [pc, #36]	; (2fff83a0 <stm32_save_context+0x74>)
2fff837a:	214c      	movs	r1, #76	; 0x4c
2fff837c:	f7fd f942 	bl	2fff5604 <stm32mp1_clk_lp_save_opp_pll1_settings>
2fff8380:	4808      	ldr	r0, [pc, #32]	; (2fff83a4 <stm32_save_context+0x78>)
2fff8382:	2104      	movs	r1, #4
2fff8384:	f7fa f9f6 	bl	2fff2774 <stm32mp1_pm_save_scmi_state>
2fff8388:	f7fd f9fc 	bl	2fff5784 <save_clock_pm_context>
2fff838c:	2063      	movs	r0, #99	; 0x63
2fff838e:	f7fc fed4 	bl	2fff513a <stm32mp_clk_disable>
2fff8392:	2000      	movs	r0, #0
2fff8394:	bd70      	pop	{r4, r5, r6, pc}
2fff8396:	bf00      	nop
2fff8398:	54000120 	.word	0x54000120
2fff839c:	54000164 	.word	0x54000164
2fff83a0:	540001b0 	.word	0x540001b0
2fff83a4:	54000460 	.word	0x54000460

2fff83a8 <stm32_restore_context>:
2fff83a8:	b530      	push	{r4, r5, lr}
2fff83aa:	2001      	movs	r0, #1
2fff83ac:	b085      	sub	sp, #20
2fff83ae:	f7f5 f849 	bl	2ffed444 <smc_get_ctx>
2fff83b2:	4605      	mov	r5, r0
2fff83b4:	2001      	movs	r0, #1
2fff83b6:	f7f5 f861 	bl	2ffed47c <cm_get_context>
2fff83ba:	4604      	mov	r4, r0
2fff83bc:	2063      	movs	r0, #99	; 0x63
2fff83be:	f7fc feb9 	bl	2fff5134 <stm32mp_clk_enable>
2fff83c2:	f7fd fa07 	bl	2fff57d4 <restore_clock_pm_context>
2fff83c6:	4815      	ldr	r0, [pc, #84]	; (2fff841c <stm32_restore_context+0x74>)
2fff83c8:	2104      	movs	r1, #4
2fff83ca:	f7fa fa0f 	bl	2fff27ec <stm32mp1_pm_restore_scmi_state>
2fff83ce:	f44f 7290 	mov.w	r2, #288	; 0x120
2fff83d2:	f04f 41a8 	mov.w	r1, #1409286144	; 0x54000000
2fff83d6:	4628      	mov	r0, r5
2fff83d8:	f001 fab0 	bl	2fff993c <memcpy>
2fff83dc:	4910      	ldr	r1, [pc, #64]	; (2fff8420 <stm32_restore_context+0x78>)
2fff83de:	2240      	movs	r2, #64	; 0x40
2fff83e0:	4620      	mov	r0, r4
2fff83e2:	f001 faab 	bl	2fff993c <memcpy>
2fff83e6:	a801      	add	r0, sp, #4
2fff83e8:	f7f7 f8be 	bl	2ffef568 <stm32_rtc_get_calendar>
2fff83ec:	490d      	ldr	r1, [pc, #52]	; (2fff8424 <stm32_restore_context+0x7c>)
2fff83ee:	a801      	add	r0, sp, #4
2fff83f0:	f7f7 f8da 	bl	2ffef5a8 <stm32_rtc_diff_calendar>
2fff83f4:	460b      	mov	r3, r1
2fff83f6:	f04f 41a8 	mov.w	r1, #1409286144	; 0x54000000
2fff83fa:	4602      	mov	r2, r0
2fff83fc:	e9d1 0180 	ldrd	r0, r1, [r1, #512]	; 0x200
2fff8400:	f7fc f9f8 	bl	2fff47f4 <stm32mp_stgen_restore_counter>
2fff8404:	4808      	ldr	r0, [pc, #32]	; (2fff8428 <stm32_restore_context+0x80>)
2fff8406:	214c      	movs	r1, #76	; 0x4c
2fff8408:	f7fd f912 	bl	2fff5630 <stm32mp1_clk_lp_load_opp_pll1_settings>
2fff840c:	2063      	movs	r0, #99	; 0x63
2fff840e:	f7fc fe94 	bl	2fff513a <stm32mp_clk_disable>
2fff8412:	f7fd fa53 	bl	2fff58bc <stm32mp1_clock_resume>
2fff8416:	2000      	movs	r0, #0
2fff8418:	b005      	add	sp, #20
2fff841a:	bd30      	pop	{r4, r5, pc}
2fff841c:	54000460 	.word	0x54000460
2fff8420:	54000120 	.word	0x54000120
2fff8424:	54000164 	.word	0x54000164
2fff8428:	540001b0 	.word	0x540001b0

2fff842c <stm32_get_stgen_from_context>:
2fff842c:	b538      	push	{r3, r4, r5, lr}
2fff842e:	2063      	movs	r0, #99	; 0x63
2fff8430:	f7fc fe80 	bl	2fff5134 <stm32mp_clk_enable>
2fff8434:	f04f 43a8 	mov.w	r3, #1409286144	; 0x54000000
2fff8438:	2063      	movs	r0, #99	; 0x63
2fff843a:	e9d3 4580 	ldrd	r4, r5, [r3, #512]	; 0x200
2fff843e:	f7fc fe7c 	bl	2fff513a <stm32mp_clk_disable>
2fff8442:	4620      	mov	r0, r4
2fff8444:	4629      	mov	r1, r5
2fff8446:	bd38      	pop	{r3, r4, r5, pc}

2fff8448 <stm32_are_pll1_settings_valid_in_context>:
2fff8448:	b510      	push	{r4, lr}
2fff844a:	2063      	movs	r0, #99	; 0x63
2fff844c:	f7fc fe72 	bl	2fff5134 <stm32mp_clk_enable>
2fff8450:	f04f 43a8 	mov.w	r3, #1409286144	; 0x54000000
2fff8454:	2063      	movs	r0, #99	; 0x63
2fff8456:	f8d3 41b0 	ldr.w	r4, [r3, #432]	; 0x1b0
2fff845a:	f1a3 736c 	sub.w	r3, r3, #61865984	; 0x3b00000
2fff845e:	f5a3 336c 	sub.w	r3, r3, #241664	; 0x3b000
2fff8462:	f2a3 33cf 	subw	r3, r3, #975	; 0x3cf
2fff8466:	1ae3      	subs	r3, r4, r3
2fff8468:	425c      	negs	r4, r3
2fff846a:	415c      	adcs	r4, r3
2fff846c:	f7fc fe65 	bl	2fff513a <stm32mp_clk_disable>
2fff8470:	4620      	mov	r0, r4
2fff8472:	bd10      	pop	{r4, pc}

2fff8474 <stm32_save_ddr_training_area>:
2fff8474:	b507      	push	{r0, r1, r2, lr}
2fff8476:	2063      	movs	r0, #99	; 0x63
2fff8478:	f7fc fe5c 	bl	2fff5134 <stm32mp_clk_enable>
2fff847c:	231a      	movs	r3, #26
2fff847e:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2fff8482:	9300      	str	r3, [sp, #0]
2fff8484:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2fff8488:	f44f 5380 	mov.w	r3, #4096	; 0x1000
2fff848c:	2100      	movs	r1, #0
2fff848e:	f7fa fe8b 	bl	2fff31a8 <mmap_add_dynamic_region>
2fff8492:	b120      	cbz	r0, 2fff849e <stm32_save_ddr_training_area+0x2a>
2fff8494:	f44f 71c6 	mov.w	r1, #396	; 0x18c
2fff8498:	480d      	ldr	r0, [pc, #52]	; (2fff84d0 <stm32_save_ddr_training_area+0x5c>)
2fff849a:	f001 fa27 	bl	2fff98ec <__assert>
2fff849e:	480d      	ldr	r0, [pc, #52]	; (2fff84d4 <stm32_save_ddr_training_area+0x60>)
2fff84a0:	2240      	movs	r2, #64	; 0x40
2fff84a2:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
2fff84a6:	f001 fa49 	bl	2fff993c <memcpy>
2fff84aa:	f3bf 8f4f 	dsb	sy
2fff84ae:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff84b2:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2fff84b6:	f7fa fe8b 	bl	2fff31d0 <mmap_remove_dynamic_region>
2fff84ba:	b110      	cbz	r0, 2fff84c2 <stm32_save_ddr_training_area+0x4e>
2fff84bc:	f44f 71ca 	mov.w	r1, #404	; 0x194
2fff84c0:	e7ea      	b.n	2fff8498 <stm32_save_ddr_training_area+0x24>
2fff84c2:	2063      	movs	r0, #99	; 0x63
2fff84c4:	b003      	add	sp, #12
2fff84c6:	f85d eb04 	ldr.w	lr, [sp], #4
2fff84ca:	f7fc be36 	b.w	2fff513a <stm32mp_clk_disable>
2fff84ce:	bf00      	nop
2fff84d0:	2fffc2c3 	.word	0x2fffc2c3
2fff84d4:	54000170 	.word	0x54000170

2fff84d8 <stm32mp1_dbgmcu_init>:
2fff84d8:	b508      	push	{r3, lr}
2fff84da:	f7fb fe33 	bl	2fff4144 <bsec_read_debug_conf>
2fff84de:	0543      	lsls	r3, r0, #21
2fff84e0:	d405      	bmi.n	2fff84ee <stm32mp1_dbgmcu_init+0x16>
2fff84e2:	4808      	ldr	r0, [pc, #32]	; (2fff8504 <stm32mp1_dbgmcu_init+0x2c>)
2fff84e4:	f7fa f9be 	bl	2fff2864 <tf_log>
2fff84e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff84ec:	bd08      	pop	{r3, pc}
2fff84ee:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
2fff84f2:	2000      	movs	r0, #0
2fff84f4:	f8d2 380c 	ldr.w	r3, [r2, #2060]	; 0x80c
2fff84f8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff84fc:	f8c2 380c 	str.w	r3, [r2, #2060]	; 0x80c
2fff8500:	e7f4      	b.n	2fff84ec <stm32mp1_dbgmcu_init+0x14>
2fff8502:	bf00      	nop
2fff8504:	2fffc2e7 	.word	0x2fffc2e7

2fff8508 <stm32mp1_dbgmcu_get_chip_dev_id>:
2fff8508:	b510      	push	{r4, lr}
2fff850a:	4604      	mov	r4, r0
2fff850c:	b918      	cbnz	r0, 2fff8516 <stm32mp1_dbgmcu_get_chip_dev_id+0xe>
2fff850e:	4808      	ldr	r0, [pc, #32]	; (2fff8530 <stm32mp1_dbgmcu_get_chip_dev_id+0x28>)
2fff8510:	214c      	movs	r1, #76	; 0x4c
2fff8512:	f001 f9eb 	bl	2fff98ec <__assert>
2fff8516:	f7ff ffdf 	bl	2fff84d8 <stm32mp1_dbgmcu_init>
2fff851a:	b928      	cbnz	r0, 2fff8528 <stm32mp1_dbgmcu_get_chip_dev_id+0x20>
2fff851c:	4b05      	ldr	r3, [pc, #20]	; (2fff8534 <stm32mp1_dbgmcu_get_chip_dev_id+0x2c>)
2fff851e:	681b      	ldr	r3, [r3, #0]
2fff8520:	f3c3 030b 	ubfx	r3, r3, #0, #12
2fff8524:	6023      	str	r3, [r4, #0]
2fff8526:	bd10      	pop	{r4, pc}
2fff8528:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff852c:	e7fb      	b.n	2fff8526 <stm32mp1_dbgmcu_get_chip_dev_id+0x1e>
2fff852e:	bf00      	nop
2fff8530:	2fffc31d 	.word	0x2fffc31d
2fff8534:	50081000 	.word	0x50081000

2fff8538 <stm32mp1_security_setup>:
2fff8538:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff853a:	f7ff fd85 	bl	2fff8048 <dt_get_ddr_size>
2fff853e:	4604      	mov	r4, r0
2fff8540:	480f      	ldr	r0, [pc, #60]	; (2fff8580 <stm32mp1_security_setup+0x48>)
2fff8542:	f7fb fb71 	bl	2fff3c28 <tzc400_init>
2fff8546:	f7fb fc29 	bl	2fff3d9c <tzc400_disable_filters>
2fff854a:	4b0e      	ldr	r3, [pc, #56]	; (2fff8584 <stm32mp1_security_setup+0x4c>)
2fff854c:	f06f 4080 	mvn.w	r0, #1073741824	; 0x40000000
2fff8550:	1824      	adds	r4, r4, r0
2fff8552:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2fff8556:	9303      	str	r3, [sp, #12]
2fff8558:	f04f 0300 	mov.w	r3, #0
2fff855c:	9302      	str	r3, [sp, #8]
2fff855e:	f04f 0101 	mov.w	r1, #1
2fff8562:	415b      	adcs	r3, r3
2fff8564:	2003      	movs	r0, #3
2fff8566:	e9cd 4300 	strd	r4, r3, [sp]
2fff856a:	2300      	movs	r3, #0
2fff856c:	f7fb fb8a 	bl	2fff3c84 <tzc400_configure_region>
2fff8570:	2002      	movs	r0, #2
2fff8572:	f7fb fb47 	bl	2fff3c04 <tzc400_set_action>
2fff8576:	b004      	add	sp, #16
2fff8578:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff857c:	f7fb bbda 	b.w	2fff3d34 <tzc400_enable_filters>
2fff8580:	5c006000 	.word	0x5c006000
2fff8584:	87fb87fb 	.word	0x87fb87fb

2fff8588 <stm32mp1_syscfg_enable_io_compensation>:
2fff8588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff858a:	2033      	movs	r0, #51	; 0x33
2fff858c:	4c13      	ldr	r4, [pc, #76]	; (2fff85dc <stm32mp1_syscfg_enable_io_compensation+0x54>)
2fff858e:	f7fc fdd7 	bl	2fff5140 <stm32mp1_clk_force_enable>
2fff8592:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff8594:	f043 0301 	orr.w	r3, r3, #1
2fff8598:	6263      	str	r3, [r4, #36]	; 0x24
2fff859a:	ee1e 1f10 	mrc	15, 0, r1, cr14, cr0, {0}
2fff859e:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff85a2:	4a0f      	ldr	r2, [pc, #60]	; (2fff85e0 <stm32mp1_syscfg_enable_io_compensation+0x58>)
2fff85a4:	f242 7010 	movw	r0, #10000	; 0x2710
2fff85a8:	2300      	movs	r3, #0
2fff85aa:	fba1 0100 	umull	r0, r1, r1, r0
2fff85ae:	f000 eb02 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff85b2:	1980      	adds	r0, r0, r6
2fff85b4:	eb41 0107 	adc.w	r1, r1, r7
2fff85b8:	6a23      	ldr	r3, [r4, #32]
2fff85ba:	05db      	lsls	r3, r3, #23
2fff85bc:	d408      	bmi.n	2fff85d0 <stm32mp1_syscfg_enable_io_compensation+0x48>
2fff85be:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff85c2:	4290      	cmp	r0, r2
2fff85c4:	eb71 0303 	sbcs.w	r3, r1, r3
2fff85c8:	d2f6      	bcs.n	2fff85b8 <stm32mp1_syscfg_enable_io_compensation+0x30>
2fff85ca:	4806      	ldr	r0, [pc, #24]	; (2fff85e4 <stm32mp1_syscfg_enable_io_compensation+0x5c>)
2fff85cc:	f7fa f94a 	bl	2fff2864 <tf_log>
2fff85d0:	6a23      	ldr	r3, [r4, #32]
2fff85d2:	f023 0302 	bic.w	r3, r3, #2
2fff85d6:	6223      	str	r3, [r4, #32]
2fff85d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff85da:	bf00      	nop
2fff85dc:	50020000 	.word	0x50020000
2fff85e0:	000f4240 	.word	0x000f4240
2fff85e4:	2fffc340 	.word	0x2fffc340

2fff85e8 <stm32mp1_syscfg_disable_io_compensation>:
2fff85e8:	4b09      	ldr	r3, [pc, #36]	; (2fff8610 <stm32mp1_syscfg_disable_io_compensation+0x28>)
2fff85ea:	2033      	movs	r0, #51	; 0x33
2fff85ec:	6a19      	ldr	r1, [r3, #32]
2fff85ee:	6a1a      	ldr	r2, [r3, #32]
2fff85f0:	0e09      	lsrs	r1, r1, #24
2fff85f2:	f422 027f 	bic.w	r2, r2, #16711680	; 0xff0000
2fff85f6:	621a      	str	r2, [r3, #32]
2fff85f8:	6a1a      	ldr	r2, [r3, #32]
2fff85fa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
2fff85fe:	f042 0202 	orr.w	r2, r2, #2
2fff8602:	621a      	str	r2, [r3, #32]
2fff8604:	6a5a      	ldr	r2, [r3, #36]	; 0x24
2fff8606:	f022 0201 	bic.w	r2, r2, #1
2fff860a:	625a      	str	r2, [r3, #36]	; 0x24
2fff860c:	f7fc bd9b 	b.w	2fff5146 <stm32mp1_clk_force_disable>
2fff8610:	50020000 	.word	0x50020000

2fff8614 <_cpu_data>:
2fff8614:	e92d5000 	push	{ip, lr}
2fff8618:	eb000258 	bl	2fff8f80 <plat_my_core_pos>
2fff861c:	e8bd5000 	pop	{ip, lr}
2fff8620:	eaffffff 	b	2fff8624 <_cpu_data_by_index>

2fff8624 <_cpu_data_by_index>:
2fff8624:	e3a01040 	mov	r1, #64	; 0x40
2fff8628:	e0000190 	mul	r0, r0, r1
2fff862c:	e59f1004 	ldr	r1, [pc, #4]	; 2fff8638 <_cpu_data_by_index+0x14>
2fff8630:	e0800001 	add	r0, r0, r1
2fff8634:	e12fff1e 	bx	lr
2fff8638:	2fffe300 	.word	0x2fffe300

2fff863c <reset_handler>:
2fff863c:	e1a0800e 	mov	r8, lr
2fff8640:	eb000249 	bl	2fff8f6c <plat_reset_handler>
2fff8644:	eb00002a 	bl	2fff86f4 <get_cpu_ops_ptr>
2fff8648:	e3500000 	cmp	r0, #0
2fff864c:	1a000002 	bne	2fff865c <reset_handler+0x20>
2fff8650:	e59f0018 	ldr	r0, [pc, #24]	; 2fff8670 <reset_handler+0x34>
2fff8654:	e3a01023 	mov	r1, #35	; 0x23
2fff8658:	ea0000a1 	b	2fff88e4 <asm_assert>
2fff865c:	e5901004 	ldr	r1, [r0, #4]
2fff8660:	e3510000 	cmp	r1, #0
2fff8664:	e1a0e008 	mov	lr, r8
2fff8668:	112fff11 	bxne	r1
2fff866c:	e12fff1e 	bx	lr
2fff8670:	2fffc38a 	.word	0x2fffc38a

2fff8674 <prepare_cpu_pwr_dwn>:
2fff8674:	e3a02001 	mov	r2, #1
2fff8678:	e1500002 	cmp	r0, r2
2fff867c:	81a00002 	movhi	r0, r2
2fff8680:	e92d4001 	push	{r0, lr}
2fff8684:	ebffffe2 	bl	2fff8614 <_cpu_data>
2fff8688:	e8bd4004 	pop	{r2, lr}
2fff868c:	e5900000 	ldr	r0, [r0]
2fff8690:	e3500000 	cmp	r0, #0
2fff8694:	1a000002 	bne	2fff86a4 <prepare_cpu_pwr_dwn+0x30>
2fff8698:	e59f0014 	ldr	r0, [pc, #20]	; 2fff86b4 <prepare_cpu_pwr_dwn+0x40>
2fff869c:	e3a0104a 	mov	r1, #74	; 0x4a
2fff86a0:	ea00008f 	b	2fff88e4 <asm_assert>
2fff86a4:	e3a01008 	mov	r1, #8
2fff86a8:	e0811102 	add	r1, r1, r2, lsl #2
2fff86ac:	e7901001 	ldr	r1, [r0, r1]
2fff86b0:	e12fff11 	bx	r1
2fff86b4:	2fffc38a 	.word	0x2fffc38a

2fff86b8 <init_cpu_ops>:
2fff86b8:	e92d4070 	push	{r4, r5, r6, lr}
2fff86bc:	ebffffd4 	bl	2fff8614 <_cpu_data>
2fff86c0:	e1a06000 	mov	r6, r0
2fff86c4:	e5901000 	ldr	r1, [r0]
2fff86c8:	e3510000 	cmp	r1, #0
2fff86cc:	1a000006 	bne	2fff86ec <init_cpu_ops+0x34>
2fff86d0:	eb000007 	bl	2fff86f4 <get_cpu_ops_ptr>
2fff86d4:	e3500000 	cmp	r0, #0
2fff86d8:	1a000002 	bne	2fff86e8 <init_cpu_ops+0x30>
2fff86dc:	e59f000c 	ldr	r0, [pc, #12]	; 2fff86f0 <init_cpu_ops+0x38>
2fff86e0:	e3a01064 	mov	r1, #100	; 0x64
2fff86e4:	ea00007e 	b	2fff88e4 <asm_assert>
2fff86e8:	e5a60000 	str	r0, [r6, #0]!
2fff86ec:	e8bd8070 	pop	{r4, r5, r6, pc}
2fff86f0:	2fffc38a 	.word	0x2fffc38a

2fff86f4 <get_cpu_ops_ptr>:
2fff86f4:	e59f4030 	ldr	r4, [pc, #48]	; 2fff872c <error_exit+0x4>
2fff86f8:	e59f5030 	ldr	r5, [pc, #48]	; 2fff8730 <error_exit+0x8>
2fff86fc:	e3a00000 	mov	r0, #0
2fff8700:	ee102f10 	mrc	15, 0, r2, cr0, cr0, {0}
2fff8704:	e59f3028 	ldr	r3, [pc, #40]	; 2fff8734 <error_exit+0xc>
2fff8708:	e0022003 	and	r2, r2, r3
2fff870c:	e1540005 	cmp	r4, r5
2fff8710:	2a000004 	bcs	2fff8728 <error_exit>
2fff8714:	e494101c 	ldr	r1, [r4], #28
2fff8718:	e0011003 	and	r1, r1, r3
2fff871c:	e1510002 	cmp	r1, r2
2fff8720:	1afffff9 	bne	2fff870c <get_cpu_ops_ptr+0x18>
2fff8724:	e244001c 	sub	r0, r4, #28

2fff8728 <error_exit>:
2fff8728:	e12fff1e 	bx	lr
2fff872c:	2fffc554 	.word	0x2fffc554
2fff8730:	2fffc570 	.word	0x2fffc570
2fff8734:	ff00fff0 	.word	0xff00fff0

2fff8738 <print_errata_status>:
2fff8738:	e92d5030 	push	{r4, r5, ip, lr}
2fff873c:	ebffffb4 	bl	2fff8614 <_cpu_data>
2fff8740:	e5901000 	ldr	r1, [r0]
2fff8744:	e5910010 	ldr	r0, [r1, #16]
2fff8748:	e3500000 	cmp	r0, #0
2fff874c:	0a000005 	beq	2fff8768 <print_errata_status+0x30>
2fff8750:	e1a04000 	mov	r4, r0
2fff8754:	e5910014 	ldr	r0, [r1, #20]
2fff8758:	e5911018 	ldr	r1, [r1, #24]
2fff875c:	faffd48d 	blx	2ffed998 <errata_needs_reporting>
2fff8760:	e3500000 	cmp	r0, #0
2fff8764:	112fff34 	blxne	r4
2fff8768:	e8bd9030 	pop	{r4, r5, ip, pc}

2fff876c <spin_lock>:
2fff876c:	e3a02001 	mov	r2, #1
2fff8770:	e1901f9f 	ldrex	r1, [r0]
2fff8774:	e3510000 	cmp	r1, #0
2fff8778:	1320f002 	wfene
2fff877c:	01801f92 	strexeq	r1, r2, [r0]
2fff8780:	03510000 	cmpeq	r1, #0
2fff8784:	1afffff9 	bne	2fff8770 <spin_lock+0x4>
2fff8788:	f57ff05f 	dmb	sy
2fff878c:	e12fff1e 	bx	lr

2fff8790 <spin_unlock>:
2fff8790:	e3a01000 	mov	r1, #0
2fff8794:	f57ff05f 	dmb	sy
2fff8798:	e5801000 	str	r1, [r0]
2fff879c:	f57ff04f 	dsb	sy
2fff87a0:	e320f004 	sev
2fff87a4:	e12fff1e 	bx	lr

2fff87a8 <psci_do_pwrdown_cache_maintenance>:
2fff87a8:	e92d4010 	push	{r4, lr}
2fff87ac:	e1a04000 	mov	r4, r0
2fff87b0:	eb00000e 	bl	2fff87f0 <do_stack_maintenance>
2fff87b4:	e1a00004 	mov	r0, r4
2fff87b8:	e8bd4010 	pop	{r4, lr}
2fff87bc:	eaffffac 	b	2fff8674 <prepare_cpu_pwr_dwn>

2fff87c0 <psci_do_pwrup_cache_maintenance>:
2fff87c0:	e92d5000 	push	{ip, lr}
2fff87c4:	f57ff05e 	dmb	st
2fff87c8:	eb00001b 	bl	2fff883c <plat_get_my_stack>
2fff87cc:	e1a0100d 	mov	r1, sp
2fff87d0:	e0401001 	sub	r1, r0, r1
2fff87d4:	e1a0000d 	mov	r0, sp
2fff87d8:	eb000092 	bl	2fff8a28 <inv_dcache_range>
2fff87dc:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff87e0:	e3800004 	orr	r0, r0, #4
2fff87e4:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2fff87e8:	f57ff06f 	isb	sy
2fff87ec:	e8bd9000 	pop	{ip, pc}

2fff87f0 <do_stack_maintenance>:
2fff87f0:	e92d4010 	push	{r4, lr}
2fff87f4:	eb000010 	bl	2fff883c <plat_get_my_stack>
2fff87f8:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff87fc:	e3c11004 	bic	r1, r1, #4
2fff8800:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2fff8804:	f57ff06f 	isb	sy
2fff8808:	e1a04000 	mov	r4, r0
2fff880c:	e1a0100d 	mov	r1, sp
2fff8810:	e0401001 	sub	r1, r0, r1
2fff8814:	e1a0000d 	mov	r0, sp
2fff8818:	eb000064 	bl	2fff89b0 <flush_dcache_range>
2fff881c:	e2440c06 	sub	r0, r4, #1536	; 0x600
2fff8820:	e04d1000 	sub	r1, sp, r0
2fff8824:	eb00007f 	bl	2fff8a28 <inv_dcache_range>
2fff8828:	e8bd8010 	pop	{r4, pc}

2fff882c <psci_power_down_wfi>:
2fff882c:	f57ff04f 	dsb	sy
2fff8830:	e320f003 	wfi
2fff8834:	eb000204 	bl	2fff904c <plat_panic_handler>
2fff8838:	e320f000 	nop	{0}

2fff883c <plat_get_my_stack>:
2fff883c:	e92d4010 	push	{r4, lr}
2fff8840:	eb0001ce 	bl	2fff8f80 <plat_my_core_pos>
2fff8844:	e59f2008 	ldr	r2, [pc, #8]	; 2fff8854 <plat_get_my_stack+0x18>
2fff8848:	e3a01c06 	mov	r1, #1536	; 0x600
2fff884c:	e0202190 	mla	r0, r0, r1, r2
2fff8850:	e8bd8010 	pop	{r4, pc}
2fff8854:	2fffdb40 	.word	0x2fffdb40

2fff8858 <plat_set_my_stack>:
2fff8858:	e1a0400e 	mov	r4, lr
2fff885c:	eb0001c7 	bl	2fff8f80 <plat_my_core_pos>
2fff8860:	e59f200c 	ldr	r2, [pc, #12]	; 2fff8874 <plat_set_my_stack+0x1c>
2fff8864:	e3a01c06 	mov	r1, #1536	; 0x600
2fff8868:	e0202190 	mla	r0, r0, r1, r2
2fff886c:	e1a0d000 	mov	sp, r0
2fff8870:	e12fff14 	bx	r4
2fff8874:	2fffdb40 	.word	0x2fffdb40

2fff8878 <do_panic>:
2fff8878:	e24e6004 	sub	r6, lr, #4
2fff887c:	eb0001c1 	bl	2fff8f88 <plat_crash_console_init>
2fff8880:	e3500000 	cmp	r0, #0
2fff8884:	0a000006 	beq	2fff88a4 <do_panic+0x2c>
2fff8888:	e59f401c 	ldr	r4, [pc, #28]	; 2fff88ac <do_panic+0x34>
2fff888c:	eb000033 	bl	2fff8960 <asm_print_str>
2fff8890:	e1a04006 	mov	r4, r6
2fff8894:	eb000038 	bl	2fff897c <asm_print_hex>
2fff8898:	e59f4010 	ldr	r4, [pc, #16]	; 2fff88b0 <do_panic+0x38>
2fff889c:	eb00002f 	bl	2fff8960 <asm_print_str>
2fff88a0:	eb0001e3 	bl	2fff9034 <plat_crash_console_flush>
2fff88a4:	e1a0e006 	mov	lr, r6
2fff88a8:	ea0001e7 	b	2fff904c <plat_panic_handler>
2fff88ac:	2fffc3a9 	.word	0x2fffc3a9
2fff88b0:	2fffc3ba 	.word	0x2fffc3ba

2fff88b4 <report_undef_inst>:
2fff88b4:	e1060300 	mrs	r0, LR_und
2fff88b8:	eb000173 	bl	2fff8e8c <plat_report_undef_inst>
2fff88bc:	eb0001e2 	bl	2fff904c <plat_panic_handler>
2fff88c0:	e320f000 	nop	{0}

2fff88c4 <report_prefetch_abort>:
2fff88c4:	e1040300 	mrs	r0, LR_abt
2fff88c8:	eb00017b 	bl	2fff8ebc <plat_report_prefetch_abort>
2fff88cc:	eb0001de 	bl	2fff904c <plat_panic_handler>
2fff88d0:	e320f000 	nop	{0}

2fff88d4 <report_data_abort>:
2fff88d4:	e1040300 	mrs	r0, LR_abt
2fff88d8:	eb00018d 	bl	2fff8f14 <plat_report_data_abort>
2fff88dc:	eb0001da 	bl	2fff904c <plat_panic_handler>
2fff88e0:	e320f000 	nop	{0}

2fff88e4 <asm_assert>:
2fff88e4:	e1a05000 	mov	r5, r0
2fff88e8:	e1a06001 	mov	r6, r1
2fff88ec:	eb0001a5 	bl	2fff8f88 <plat_crash_console_init>
2fff88f0:	e3500000 	cmp	r0, #0
2fff88f4:	0a000013 	beq	2fff8948 <dec_print_loop+0x20>
2fff88f8:	e59f4050 	ldr	r4, [pc, #80]	; 2fff8950 <dec_print_loop+0x28>
2fff88fc:	eb000017 	bl	2fff8960 <asm_print_str>
2fff8900:	e1a04005 	mov	r4, r5
2fff8904:	eb000015 	bl	2fff8960 <asm_print_str>
2fff8908:	e59f4044 	ldr	r4, [pc, #68]	; 2fff8954 <dec_print_loop+0x2c>
2fff890c:	eb000013 	bl	2fff8960 <asm_print_str>
2fff8910:	e59f4040 	ldr	r4, [pc, #64]	; 2fff8958 <dec_print_loop+0x30>
2fff8914:	e1160004 	tst	r6, r4
2fff8918:	1a00000a 	bne	2fff8948 <dec_print_loop+0x20>
2fff891c:	e1a04006 	mov	r4, r6
2fff8920:	e3a0600a 	mov	r6, #10
2fff8924:	e59f5030 	ldr	r5, [pc, #48]	; 2fff895c <dec_print_loop+0x34>

2fff8928 <dec_print_loop>:
2fff8928:	e730f514 	udiv	r0, r4, r5
2fff892c:	e0644590 	mls	r4, r0, r5, r4
2fff8930:	e2800030 	add	r0, r0, #48	; 0x30
2fff8934:	eb0001c1 	bl	2fff9040 <plat_crash_console_putc>
2fff8938:	e735f615 	udiv	r5, r5, r6
2fff893c:	e3550000 	cmp	r5, #0
2fff8940:	1afffff8 	bne	2fff8928 <dec_print_loop>
2fff8944:	eb0001ba 	bl	2fff9034 <plat_crash_console_flush>
2fff8948:	eb0001bf 	bl	2fff904c <plat_panic_handler>
2fff894c:	e320f000 	nop	{0}
2fff8950:	2fffc3bd 	.word	0x2fffc3bd
2fff8954:	2fffc3cb 	.word	0x2fffc3cb
2fff8958:	ffff0000 	.word	0xffff0000
2fff895c:	00002710 	.word	0x00002710

2fff8960 <asm_print_str>:
2fff8960:	e1a0700e 	mov	r7, lr
2fff8964:	e4d40001 	ldrb	r0, [r4], #1
2fff8968:	e3500000 	cmp	r0, #0
2fff896c:	0a000001 	beq	2fff8978 <asm_print_str+0x18>
2fff8970:	eb0001b2 	bl	2fff9040 <plat_crash_console_putc>
2fff8974:	eafffffa 	b	2fff8964 <asm_print_str+0x4>
2fff8978:	e12fff17 	bx	r7

2fff897c <asm_print_hex>:
2fff897c:	e1a0700e 	mov	r7, lr
2fff8980:	e3a05020 	mov	r5, #32
2fff8984:	e2455004 	sub	r5, r5, #4
2fff8988:	e1a00534 	lsr	r0, r4, r5
2fff898c:	e200000f 	and	r0, r0, #15
2fff8990:	e350000a 	cmp	r0, #10
2fff8994:	3a000000 	bcc	2fff899c <asm_print_hex+0x20>
2fff8998:	e2800027 	add	r0, r0, #39	; 0x27
2fff899c:	e2800030 	add	r0, r0, #48	; 0x30
2fff89a0:	eb0001a6 	bl	2fff9040 <plat_crash_console_putc>
2fff89a4:	e3550000 	cmp	r5, #0
2fff89a8:	1afffff5 	bne	2fff8984 <asm_print_hex+0x8>
2fff89ac:	e12fff17 	bx	r7

2fff89b0 <flush_dcache_range>:
2fff89b0:	e3510000 	cmp	r1, #0
2fff89b4:	0a00000b 	beq	2fff89e8 <exit_loop_cimvac>
2fff89b8:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff89bc:	e7e33853 	ubfx	r3, r3, #16, #4
2fff89c0:	e3a02004 	mov	r2, #4
2fff89c4:	e1a02312 	lsl	r2, r2, r3
2fff89c8:	e0801001 	add	r1, r0, r1
2fff89cc:	e2423001 	sub	r3, r2, #1
2fff89d0:	e1c00003 	bic	r0, r0, r3

2fff89d4 <loop_cimvac>:
2fff89d4:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
2fff89d8:	e0800002 	add	r0, r0, r2
2fff89dc:	e1500001 	cmp	r0, r1
2fff89e0:	3afffffb 	bcc	2fff89d4 <loop_cimvac>
2fff89e4:	f57ff04f 	dsb	sy

2fff89e8 <exit_loop_cimvac>:
2fff89e8:	e12fff1e 	bx	lr

2fff89ec <clean_dcache_range>:
2fff89ec:	e3510000 	cmp	r1, #0
2fff89f0:	0a00000b 	beq	2fff8a24 <exit_loop_cmvac>
2fff89f4:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff89f8:	e7e33853 	ubfx	r3, r3, #16, #4
2fff89fc:	e3a02004 	mov	r2, #4
2fff8a00:	e1a02312 	lsl	r2, r2, r3
2fff8a04:	e0801001 	add	r1, r0, r1
2fff8a08:	e2423001 	sub	r3, r2, #1
2fff8a0c:	e1c00003 	bic	r0, r0, r3

2fff8a10 <loop_cmvac>:
2fff8a10:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
2fff8a14:	e0800002 	add	r0, r0, r2
2fff8a18:	e1500001 	cmp	r0, r1
2fff8a1c:	3afffffb 	bcc	2fff8a10 <loop_cmvac>
2fff8a20:	f57ff04f 	dsb	sy

2fff8a24 <exit_loop_cmvac>:
2fff8a24:	e12fff1e 	bx	lr

2fff8a28 <inv_dcache_range>:
2fff8a28:	e3510000 	cmp	r1, #0
2fff8a2c:	0a00000b 	beq	2fff8a60 <exit_loop_imvac>
2fff8a30:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff8a34:	e7e33853 	ubfx	r3, r3, #16, #4
2fff8a38:	e3a02004 	mov	r2, #4
2fff8a3c:	e1a02312 	lsl	r2, r2, r3
2fff8a40:	e0801001 	add	r1, r0, r1
2fff8a44:	e2423001 	sub	r3, r2, #1
2fff8a48:	e1c00003 	bic	r0, r0, r3

2fff8a4c <loop_imvac>:
2fff8a4c:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
2fff8a50:	e0800002 	add	r0, r0, r2
2fff8a54:	e1500001 	cmp	r0, r1
2fff8a58:	3afffffb 	bcc	2fff8a4c <loop_imvac>
2fff8a5c:	f57ff04f 	dsb	sy

2fff8a60 <exit_loop_imvac>:
2fff8a60:	e12fff1e 	bx	lr

2fff8a64 <do_dcsw_op>:
2fff8a64:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
2fff8a68:	e28fb078 	add	fp, pc, #120	; 0x78
2fff8a6c:	e08b6180 	add	r6, fp, r0, lsl #3

2fff8a70 <loop1>:
2fff8a70:	e081a0a1 	add	sl, r1, r1, lsr #1
2fff8a74:	e1a0ca32 	lsr	ip, r2, sl
2fff8a78:	e20cc007 	and	ip, ip, #7
2fff8a7c:	e35c0002 	cmp	ip, #2
2fff8a80:	3a00000f 	bcc	2fff8ac4 <level_done>
2fff8a84:	ee401f10 	mcr	15, 2, r1, cr0, cr0, {0}
2fff8a88:	f57ff06f 	isb	sy
2fff8a8c:	ee30cf10 	mrc	15, 1, ip, cr0, cr0, {0}
2fff8a90:	e20ca007 	and	sl, ip, #7
2fff8a94:	e28aa004 	add	sl, sl, #4
2fff8a98:	e7e941dc 	ubfx	r4, ip, #3, #10
2fff8a9c:	e16f5f14 	clz	r5, r4
2fff8aa0:	e1a09004 	mov	r9, r4

2fff8aa4 <loop2>:
2fff8aa4:	e7ee76dc 	ubfx	r7, ip, #13, #15

2fff8aa8 <loop3>:
2fff8aa8:	e1810519 	orr	r0, r1, r9, lsl r5
2fff8aac:	e1800a17 	orr	r0, r0, r7, lsl sl
2fff8ab0:	e12fff36 	blx	r6
2fff8ab4:	e2577001 	subs	r7, r7, #1
2fff8ab8:	2afffffa 	bcs	2fff8aa8 <loop3>
2fff8abc:	e2599001 	subs	r9, r9, #1
2fff8ac0:	2afffff7 	bcs	2fff8aa4 <loop2>

2fff8ac4 <level_done>:
2fff8ac4:	e2811002 	add	r1, r1, #2
2fff8ac8:	e1530001 	cmp	r3, r1
2fff8acc:	f57ff04f 	dsb	sy
2fff8ad0:	8affffe6 	bhi	2fff8a70 <loop1>
2fff8ad4:	e3a06000 	mov	r6, #0
2fff8ad8:	ee406f10 	mcr	15, 2, r6, cr0, cr0, {0}
2fff8adc:	f57ff04f 	dsb	sy
2fff8ae0:	f57ff06f 	isb	sy
2fff8ae4:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

2fff8ae8 <dcsw_loop_table>:
2fff8ae8:	ee070f56 	mcr	15, 0, r0, cr7, cr6, {2}
2fff8aec:	e12fff1e 	bx	lr
2fff8af0:	ee070f5e 	mcr	15, 0, r0, cr7, cr14, {2}
2fff8af4:	e12fff1e 	bx	lr
2fff8af8:	ee070f5a 	mcr	15, 0, r0, cr7, cr10, {2}
2fff8afc:	e12fff1e 	bx	lr

2fff8b00 <dcsw_op_all>:
2fff8b00:	ee302f30 	mrc	15, 1, r2, cr0, cr0, {1}
2fff8b04:	e7e23c52 	ubfx	r3, r2, #24, #3
2fff8b08:	e1a03083 	lsl	r3, r3, #1
2fff8b0c:	e3a01000 	mov	r1, #0
2fff8b10:	eaffffd3 	b	2fff8a64 <do_dcsw_op>

2fff8b14 <dcsw_op_level1>:
2fff8b14:	ee302f30 	mrc	15, 1, r2, cr0, cr0, {1}
2fff8b18:	e3a03002 	mov	r3, #2
2fff8b1c:	e2431002 	sub	r1, r3, #2
2fff8b20:	eaffffcf 	b	2fff8a64 <do_dcsw_op>

2fff8b24 <zero_normalmem>:
2fff8b24:	e3a02000 	mov	r2, #0
2fff8b28:	e0801001 	add	r1, r0, r1
2fff8b2c:	e3100007 	tst	r0, #7
2fff8b30:	0a000007 	beq	2fff8b54 <zero_normalmem+0x30>
2fff8b34:	e380c007 	orr	ip, r0, #7
2fff8b38:	e29cc001 	adds	ip, ip, #1
2fff8b3c:	0a00000b 	beq	2fff8b70 <zero_normalmem+0x4c>
2fff8b40:	e15c0001 	cmp	ip, r1
2fff8b44:	2a000009 	bcs	2fff8b70 <zero_normalmem+0x4c>
2fff8b48:	e4c02001 	strb	r2, [r0], #1
2fff8b4c:	e150000c 	cmp	r0, ip
2fff8b50:	1afffffc 	bne	2fff8b48 <zero_normalmem+0x24>
2fff8b54:	e3c1c007 	bic	ip, r1, #7
2fff8b58:	e150000c 	cmp	r0, ip
2fff8b5c:	2a000003 	bcs	2fff8b70 <zero_normalmem+0x4c>
2fff8b60:	e3a03000 	mov	r3, #0
2fff8b64:	e8a0000c 	stmia	r0!, {r2, r3}
2fff8b68:	e150000c 	cmp	r0, ip
2fff8b6c:	3afffffc 	bcc	2fff8b64 <zero_normalmem+0x40>
2fff8b70:	e1500001 	cmp	r0, r1
2fff8b74:	0a000002 	beq	2fff8b84 <zero_normalmem+0x60>
2fff8b78:	e4c02001 	strb	r2, [r0], #1
2fff8b7c:	e1500001 	cmp	r0, r1
2fff8b80:	1afffffc 	bne	2fff8b78 <zero_normalmem+0x54>
2fff8b84:	e12fff1e 	bx	lr

2fff8b88 <disable_mmu_secure>:
2fff8b88:	e3a01005 	mov	r1, #5

2fff8b8c <do_disable_mmu>:
2fff8b8c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff8b90:	e1c00001 	bic	r0, r0, r1
2fff8b94:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2fff8b98:	f57ff06f 	isb	sy
2fff8b9c:	f57ff04f 	dsb	sy
2fff8ba0:	e12fff1e 	bx	lr

2fff8ba4 <disable_mmu_icache_secure>:
2fff8ba4:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff8bac <disable_mmu_icache_secure+0x8>
2fff8ba8:	eafffff7 	b	2fff8b8c <do_disable_mmu>
2fff8bac:	00001005 	.word	0x00001005

2fff8bb0 <plat_disable_acp>:
2fff8bb0:	e12fff1e 	bx	lr

2fff8bb4 <__aeabi_uldivmod>:
2fff8bb4:	e92d4040 	push	{r6, lr}
2fff8bb8:	e24dd010 	sub	sp, sp, #16
2fff8bbc:	e28d6008 	add	r6, sp, #8
2fff8bc0:	e58d6000 	str	r6, [sp]
2fff8bc4:	faffe79a 	blx	2fff2a34 <__udivmoddi4>
2fff8bc8:	e59d2008 	ldr	r2, [sp, #8]
2fff8bcc:	e59d300c 	ldr	r3, [sp, #12]
2fff8bd0:	e28dd010 	add	sp, sp, #16
2fff8bd4:	e8bd8040 	pop	{r6, pc}

2fff8bd8 <console_stm32_core_init>:
2fff8bd8:	e3500000 	cmp	r0, #0
2fff8bdc:	0a000001 	beq	2fff8be8 <core_init_fail>
2fff8be0:	e3a00001 	mov	r0, #1
2fff8be4:	e12fff1e 	bx	lr

2fff8be8 <core_init_fail>:
2fff8be8:	e3a00000 	mov	r0, #0
2fff8bec:	e12fff1e 	bx	lr

2fff8bf0 <console_stm32_register>:
2fff8bf0:	e92d4010 	push	{r4, lr}
2fff8bf4:	e1a04003 	mov	r4, r3
2fff8bf8:	e3540000 	cmp	r4, #0
2fff8bfc:	0a00000e 	beq	2fff8c3c <register_fail>
2fff8c00:	e5840014 	str	r0, [r4, #20]
2fff8c04:	ebfffff3 	bl	2fff8bd8 <console_stm32_core_init>
2fff8c08:	e3500000 	cmp	r0, #0
2fff8c0c:	0a00000a 	beq	2fff8c3c <register_fail>
2fff8c10:	e1a00004 	mov	r0, r4
2fff8c14:	e8bd4010 	pop	{r4, lr}
2fff8c18:	e59f1020 	ldr	r1, [pc, #32]	; 2fff8c40 <register_fail+0x4>
2fff8c1c:	e5801008 	str	r1, [r0, #8]
2fff8c20:	e3a01000 	mov	r1, #0
2fff8c24:	e580100c 	str	r1, [r0, #12]
2fff8c28:	e59f1014 	ldr	r1, [pc, #20]	; 2fff8c44 <register_fail+0x8>
2fff8c2c:	e5801010 	str	r1, [r0, #16]
2fff8c30:	e3a01005 	mov	r1, #5
2fff8c34:	e5801004 	str	r1, [r0, #4]
2fff8c38:	ea000e66 	b	2fffc5d8 <__console_register_from_arm>

2fff8c3c <register_fail>:
2fff8c3c:	e8bd8010 	pop	{r4, pc}
2fff8c40:	2fff8c90 	.word	0x2fff8c90
2fff8c44:	2fff8ce0 	.word	0x2fff8ce0

2fff8c48 <console_stm32_core_putc>:
2fff8c48:	e3510000 	cmp	r1, #0
2fff8c4c:	0a00000d 	beq	2fff8c88 <putc_error>
2fff8c50:	e3a03a01 	mov	r3, #4096	; 0x1000

2fff8c54 <txe_loop>:
2fff8c54:	e2533001 	subs	r3, r3, #1
2fff8c58:	0a00000a 	beq	2fff8c88 <putc_error>
2fff8c5c:	e591201c 	ldr	r2, [r1, #28]
2fff8c60:	e3120080 	tst	r2, #128	; 0x80
2fff8c64:	0afffffa 	beq	2fff8c54 <txe_loop>
2fff8c68:	e5810028 	str	r0, [r1, #40]	; 0x28
2fff8c6c:	e3a03a01 	mov	r3, #4096	; 0x1000

2fff8c70 <tc_loop>:
2fff8c70:	e2533001 	subs	r3, r3, #1
2fff8c74:	0a000003 	beq	2fff8c88 <putc_error>
2fff8c78:	e591201c 	ldr	r2, [r1, #28]
2fff8c7c:	e3120040 	tst	r2, #64	; 0x40
2fff8c80:	0afffffa 	beq	2fff8c70 <tc_loop>
2fff8c84:	e12fff1e 	bx	lr

2fff8c88 <putc_error>:
2fff8c88:	e3e00000 	mvn	r0, #0
2fff8c8c:	e12fff1e 	bx	lr

2fff8c90 <console_stm32_putc>:
2fff8c90:	e3510000 	cmp	r1, #0
2fff8c94:	1a000002 	bne	2fff8ca4 <console_stm32_putc+0x14>
2fff8c98:	e59f000c 	ldr	r0, [pc, #12]	; 2fff8cac <console_stm32_putc+0x1c>
2fff8c9c:	e3a010b0 	mov	r1, #176	; 0xb0
2fff8ca0:	eaffff0f 	b	2fff88e4 <asm_assert>
2fff8ca4:	e5911014 	ldr	r1, [r1, #20]
2fff8ca8:	eaffffe6 	b	2fff8c48 <console_stm32_core_putc>
2fff8cac:	2fffc3d2 	.word	0x2fffc3d2

2fff8cb0 <console_stm32_core_flush>:
2fff8cb0:	e3500000 	cmp	r0, #0
2fff8cb4:	0a000007 	beq	2fff8cd8 <flush_error>
2fff8cb8:	e3a02a01 	mov	r2, #4096	; 0x1000

2fff8cbc <txe_loop_3>:
2fff8cbc:	e2522001 	subs	r2, r2, #1
2fff8cc0:	0a000004 	beq	2fff8cd8 <flush_error>
2fff8cc4:	e590101c 	ldr	r1, [r0, #28]
2fff8cc8:	e3110080 	tst	r1, #128	; 0x80
2fff8ccc:	0afffffa 	beq	2fff8cbc <txe_loop_3>
2fff8cd0:	e3a00000 	mov	r0, #0
2fff8cd4:	e12fff1e 	bx	lr

2fff8cd8 <flush_error>:
2fff8cd8:	e3e00000 	mvn	r0, #0
2fff8cdc:	e12fff1e 	bx	lr

2fff8ce0 <console_stm32_flush>:
2fff8ce0:	e3500000 	cmp	r0, #0
2fff8ce4:	1a000002 	bne	2fff8cf4 <console_stm32_flush+0x14>
2fff8ce8:	e59f000c 	ldr	r0, [pc, #12]	; 2fff8cfc <console_stm32_flush+0x1c>
2fff8cec:	e3a010f0 	mov	r1, #240	; 0xf0
2fff8cf0:	eafffefb 	b	2fff88e4 <asm_assert>
2fff8cf4:	e5900014 	ldr	r0, [r0, #20]
2fff8cf8:	eaffffec 	b	2fff8cb0 <console_stm32_core_flush>
2fff8cfc:	2fffc3d2 	.word	0x2fffc3d2

2fff8d00 <enable_mmu_direct_svc_mon>:
2fff8d00:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff8d04:	e3110001 	tst	r1, #1
2fff8d08:	0a000002 	beq	2fff8d18 <enable_mmu_direct_svc_mon+0x18>
2fff8d0c:	e59f0060 	ldr	r0, [pc, #96]	; 2fff8d74 <enable_mmu_direct_svc_mon+0x74>
2fff8d10:	e3a01014 	mov	r1, #20
2fff8d14:	eafffef2 	b	2fff88e4 <asm_assert>
2fff8d18:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
2fff8d1c:	e1a03000 	mov	r3, r0
2fff8d20:	e59f0050 	ldr	r0, [pc, #80]	; 2fff8d78 <enable_mmu_direct_svc_mon+0x78>
2fff8d24:	e5901000 	ldr	r1, [r0]
2fff8d28:	ee0a1f12 	mcr	15, 0, r1, cr10, cr2, {0}
2fff8d2c:	e5902008 	ldr	r2, [r0, #8]
2fff8d30:	ee022f50 	mcr	15, 0, r2, cr2, cr0, {2}
2fff8d34:	e5901010 	ldr	r1, [r0, #16]
2fff8d38:	e5902014 	ldr	r2, [r0, #20]
2fff8d3c:	ec421f02 	mcrr	15, 0, r1, r2, cr2
2fff8d40:	e3a01000 	mov	r1, #0
2fff8d44:	e3a02000 	mov	r2, #0
2fff8d48:	ec421f12 	mcrr	15, 1, r1, r2, cr2
2fff8d4c:	f57ff04b 	dsb	ish
2fff8d50:	f57ff06f 	isb	sy
2fff8d54:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff8d58:	e59f201c 	ldr	r2, [pc, #28]	; 2fff8d7c <enable_mmu_direct_svc_mon+0x7c>
2fff8d5c:	e1811002 	orr	r1, r1, r2
2fff8d60:	e3130001 	tst	r3, #1
2fff8d64:	13c11004 	bicne	r1, r1, #4
2fff8d68:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2fff8d6c:	f57ff06f 	isb	sy
2fff8d70:	e12fff1e 	bx	lr
2fff8d74:	2fffc3fa 	.word	0x2fffc3fa
2fff8d78:	2fffe9d8 	.word	0x2fffe9d8
2fff8d7c:	00080005 	.word	0x00080005

2fff8d80 <cortex_a7_disable_smp>:
2fff8d80:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2fff8d84:	e3c00040 	bic	r0, r0, #64	; 0x40
2fff8d88:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2fff8d8c:	f57ff06f 	isb	sy
2fff8d90:	f57ff04f 	dsb	sy
2fff8d94:	e12fff1e 	bx	lr

2fff8d98 <cortex_a7_enable_smp>:
2fff8d98:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2fff8d9c:	e3800040 	orr	r0, r0, #64	; 0x40
2fff8da0:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2fff8da4:	f57ff06f 	isb	sy
2fff8da8:	e12fff1e 	bx	lr

2fff8dac <cortex_a7_reset_func>:
2fff8dac:	eafffff9 	b	2fff8d98 <cortex_a7_enable_smp>

2fff8db0 <cortex_a7_core_pwr_dwn>:
2fff8db0:	e92d5000 	push	{ip, lr}
2fff8db4:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff8db8:	e3100004 	tst	r0, #4
2fff8dbc:	0a000002 	beq	2fff8dcc <cortex_a7_core_pwr_dwn+0x1c>
2fff8dc0:	e59f0014 	ldr	r0, [pc, #20]	; 2fff8ddc <cortex_a7_core_pwr_dwn+0x2c>
2fff8dc4:	e3a01011 	mov	r1, #17
2fff8dc8:	eafffec5 	b	2fff88e4 <asm_assert>
2fff8dcc:	e3a00001 	mov	r0, #1
2fff8dd0:	ebffff4f 	bl	2fff8b14 <dcsw_op_level1>
2fff8dd4:	e8bd5000 	pop	{ip, lr}
2fff8dd8:	eaffffe8 	b	2fff8d80 <cortex_a7_disable_smp>
2fff8ddc:	2fffc422 	.word	0x2fffc422

2fff8de0 <cortex_a7_cluster_pwr_dwn>:
2fff8de0:	e92d5000 	push	{ip, lr}
2fff8de4:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff8de8:	e3100004 	tst	r0, #4
2fff8dec:	0a000002 	beq	2fff8dfc <cortex_a7_cluster_pwr_dwn+0x1c>
2fff8df0:	e59f0018 	ldr	r0, [pc, #24]	; 2fff8e10 <cortex_a7_cluster_pwr_dwn+0x30>
2fff8df4:	e3a01011 	mov	r1, #17
2fff8df8:	eafffeb9 	b	2fff88e4 <asm_assert>
2fff8dfc:	e3a00001 	mov	r0, #1
2fff8e00:	ebffff43 	bl	2fff8b14 <dcsw_op_level1>
2fff8e04:	ebffff69 	bl	2fff8bb0 <plat_disable_acp>
2fff8e08:	e8bd5000 	pop	{ip, lr}
2fff8e0c:	eaffffdb 	b	2fff8d80 <cortex_a7_disable_smp>
2fff8e10:	2fffc422 	.word	0x2fffc422

2fff8e14 <cortex_a7_errata_report>:
2fff8e14:	e12fff1e 	bx	lr

2fff8e18 <plat_report_exception>:
2fff8e18:	e1a0800e 	mov	r8, lr
2fff8e1c:	e3500017 	cmp	r0, #23
2fff8e20:	1a000002 	bne	2fff8e30 <undef_inst_lbl>
2fff8e24:	e59f404c 	ldr	r4, [pc, #76]	; 2fff8e78 <print_excpetion_info+0x18>
2fff8e28:	ebfffecc 	bl	2fff8960 <asm_print_str>
2fff8e2c:	ea00000b 	b	2fff8e60 <print_excpetion_info>

2fff8e30 <undef_inst_lbl>:
2fff8e30:	e350001b 	cmp	r0, #27
2fff8e34:	1a000002 	bne	2fff8e44 <other_excpetion_lbl>
2fff8e38:	e59f403c 	ldr	r4, [pc, #60]	; 2fff8e7c <print_excpetion_info+0x1c>
2fff8e3c:	ebfffec7 	bl	2fff8960 <asm_print_str>
2fff8e40:	ea000006 	b	2fff8e60 <print_excpetion_info>

2fff8e44 <other_excpetion_lbl>:
2fff8e44:	e1a09000 	mov	r9, r0
2fff8e48:	e59f4030 	ldr	r4, [pc, #48]	; 2fff8e80 <print_excpetion_info+0x20>
2fff8e4c:	ebfffec3 	bl	2fff8960 <asm_print_str>
2fff8e50:	e1a04009 	mov	r4, r9
2fff8e54:	ebfffec8 	bl	2fff897c <asm_print_hex>
2fff8e58:	e59f4024 	ldr	r4, [pc, #36]	; 2fff8e84 <print_excpetion_info+0x24>
2fff8e5c:	ebfffebf 	bl	2fff8960 <asm_print_str>

2fff8e60 <print_excpetion_info>:
2fff8e60:	e1024300 	mrs	r4, LR_svc
2fff8e64:	e2444004 	sub	r4, r4, #4
2fff8e68:	ebfffec3 	bl	2fff897c <asm_print_hex>
2fff8e6c:	e59f4014 	ldr	r4, [pc, #20]	; 2fff8e88 <print_excpetion_info+0x28>
2fff8e70:	ebfffeba 	bl	2fff8960 <asm_print_str>
2fff8e74:	e12fff18 	bx	r8
2fff8e78:	2fffc43f 	.word	0x2fffc43f
2fff8e7c:	2fffc477 	.word	0x2fffc477
2fff8e80:	2fffc495 	.word	0x2fffc495
2fff8e84:	2fffc4a8 	.word	0x2fffc4a8
2fff8e88:	2fffc4dc 	.word	0x2fffc4dc

2fff8e8c <plat_report_undef_inst>:
2fff8e8c:	e1a0800e 	mov	r8, lr
2fff8e90:	e1a09000 	mov	r9, r0
2fff8e94:	e59f4018 	ldr	r4, [pc, #24]	; 2fff8eb4 <plat_report_undef_inst+0x28>
2fff8e98:	ebfffeb0 	bl	2fff8960 <asm_print_str>
2fff8e9c:	e1a04009 	mov	r4, r9
2fff8ea0:	e2444004 	sub	r4, r4, #4
2fff8ea4:	ebfffeb4 	bl	2fff897c <asm_print_hex>
2fff8ea8:	e59f4008 	ldr	r4, [pc, #8]	; 2fff8eb8 <plat_report_undef_inst+0x2c>
2fff8eac:	ebfffeab 	bl	2fff8960 <asm_print_str>
2fff8eb0:	e12fff18 	bx	r8
2fff8eb4:	2fffc477 	.word	0x2fffc477
2fff8eb8:	2fffc4dc 	.word	0x2fffc4dc

2fff8ebc <plat_report_prefetch_abort>:
2fff8ebc:	e1a0800e 	mov	r8, lr
2fff8ec0:	e1a09000 	mov	r9, r0
2fff8ec4:	e59f4038 	ldr	r4, [pc, #56]	; 2fff8f04 <plat_report_prefetch_abort+0x48>
2fff8ec8:	ebfffea4 	bl	2fff8960 <asm_print_str>
2fff8ecc:	e1a04009 	mov	r4, r9
2fff8ed0:	e2444004 	sub	r4, r4, #4
2fff8ed4:	ebfffea8 	bl	2fff897c <asm_print_hex>
2fff8ed8:	e59f4028 	ldr	r4, [pc, #40]	; 2fff8f08 <plat_report_prefetch_abort+0x4c>
2fff8edc:	ebfffe9f 	bl	2fff8960 <asm_print_str>
2fff8ee0:	ee154f30 	mrc	15, 0, r4, cr5, cr0, {1}
2fff8ee4:	ebfffea4 	bl	2fff897c <asm_print_hex>
2fff8ee8:	e59f401c 	ldr	r4, [pc, #28]	; 2fff8f0c <plat_report_prefetch_abort+0x50>
2fff8eec:	ebfffe9b 	bl	2fff8960 <asm_print_str>
2fff8ef0:	ee164f50 	mrc	15, 0, r4, cr6, cr0, {2}
2fff8ef4:	ebfffea0 	bl	2fff897c <asm_print_hex>
2fff8ef8:	e59f4010 	ldr	r4, [pc, #16]	; 2fff8f10 <plat_report_prefetch_abort+0x54>
2fff8efc:	ebfffe97 	bl	2fff8960 <asm_print_str>
2fff8f00:	e12fff18 	bx	r8
2fff8f04:	2fffc44d 	.word	0x2fffc44d
2fff8f08:	2fffc4c6 	.word	0x2fffc4c6
2fff8f0c:	2fffc4d1 	.word	0x2fffc4d1
2fff8f10:	2fffc4dc 	.word	0x2fffc4dc

2fff8f14 <plat_report_data_abort>:
2fff8f14:	e1a0800e 	mov	r8, lr
2fff8f18:	e1a09000 	mov	r9, r0
2fff8f1c:	e59f4038 	ldr	r4, [pc, #56]	; 2fff8f5c <plat_report_data_abort+0x48>
2fff8f20:	ebfffe8e 	bl	2fff8960 <asm_print_str>
2fff8f24:	e1a04009 	mov	r4, r9
2fff8f28:	e2444008 	sub	r4, r4, #8
2fff8f2c:	ebfffe92 	bl	2fff897c <asm_print_hex>
2fff8f30:	e59f4028 	ldr	r4, [pc, #40]	; 2fff8f60 <plat_report_data_abort+0x4c>
2fff8f34:	ebfffe89 	bl	2fff8960 <asm_print_str>
2fff8f38:	ee154f10 	mrc	15, 0, r4, cr5, cr0, {0}
2fff8f3c:	ebfffe8e 	bl	2fff897c <asm_print_hex>
2fff8f40:	e59f401c 	ldr	r4, [pc, #28]	; 2fff8f64 <plat_report_data_abort+0x50>
2fff8f44:	ebfffe85 	bl	2fff8960 <asm_print_str>
2fff8f48:	ee164f10 	mrc	15, 0, r4, cr6, cr0, {0}
2fff8f4c:	ebfffe8a 	bl	2fff897c <asm_print_hex>
2fff8f50:	e59f4010 	ldr	r4, [pc, #16]	; 2fff8f68 <plat_report_data_abort+0x54>
2fff8f54:	ebfffe81 	bl	2fff8960 <asm_print_str>
2fff8f58:	e12fff18 	bx	r8
2fff8f5c:	2fffc464 	.word	0x2fffc464
2fff8f60:	2fffc4b0 	.word	0x2fffc4b0
2fff8f64:	2fffc4bb 	.word	0x2fffc4bb
2fff8f68:	2fffc4dc 	.word	0x2fffc4dc

2fff8f6c <plat_reset_handler>:
2fff8f6c:	e12fff1e 	bx	lr

2fff8f70 <plat_stm32mp1_get_core_pos>:
2fff8f70:	e20010ff 	and	r1, r0, #255	; 0xff
2fff8f74:	e2000cff 	and	r0, r0, #65280	; 0xff00
2fff8f78:	e0810320 	add	r0, r1, r0, lsr #6
2fff8f7c:	e12fff1e 	bx	lr

2fff8f80 <plat_my_core_pos>:
2fff8f80:	ee100fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2fff8f84:	eafffff9 	b	2fff8f70 <plat_stm32mp1_get_core_pos>

2fff8f88 <plat_crash_console_init>:
2fff8f88:	e59f1088 	ldr	r1, [pc, #136]	; 2fff9018 <plat_crash_console_init+0x90>
2fff8f8c:	e5912000 	ldr	r2, [r1]
2fff8f90:	e3822040 	orr	r2, r2, #64	; 0x40
2fff8f94:	e5812000 	str	r2, [r1]
2fff8f98:	e59f107c 	ldr	r1, [pc, #124]	; 2fff901c <plat_crash_console_init+0x94>
2fff8f9c:	e5912000 	ldr	r2, [r1]
2fff8fa0:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff8fa4:	e3822502 	orr	r2, r2, #8388608	; 0x800000
2fff8fa8:	e5812000 	str	r2, [r1]
2fff8fac:	e5912008 	ldr	r2, [r1, #8]
2fff8fb0:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff8fb4:	e5812008 	str	r2, [r1, #8]
2fff8fb8:	e591200c 	ldr	r2, [r1, #12]
2fff8fbc:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff8fc0:	e581200c 	str	r2, [r1, #12]
2fff8fc4:	e3a0200b 	mov	r2, #11
2fff8fc8:	e3520008 	cmp	r2, #8
2fff8fcc:	a5912024 	ldrge	r2, [r1, #36]	; 0x24
2fff8fd0:	a3c22a0f 	bicge	r2, r2, #61440	; 0xf000
2fff8fd4:	a3822a06 	orrge	r2, r2, #24576	; 0x6000
2fff8fd8:	a5812024 	strge	r2, [r1, #36]	; 0x24
2fff8fdc:	b5912020 	ldrlt	r2, [r1, #32]
2fff8fe0:	b3c22000 	biclt	r2, r2, #0
2fff8fe4:	b3822000 	orrlt	r2, r2, #0
2fff8fe8:	b5812020 	strlt	r2, [r1, #32]
2fff8fec:	e59f102c 	ldr	r1, [pc, #44]	; 2fff9020 <plat_crash_console_init+0x98>
2fff8ff0:	e3a02002 	mov	r2, #2
2fff8ff4:	e5812000 	str	r2, [r1]
2fff8ff8:	e59f1024 	ldr	r1, [pc, #36]	; 2fff9024 <plat_crash_console_init+0x9c>
2fff8ffc:	e5912000 	ldr	r2, [r1]
2fff9000:	e3822801 	orr	r2, r2, #65536	; 0x10000
2fff9004:	e5812000 	str	r2, [r1]
2fff9008:	e59f0018 	ldr	r0, [pc, #24]	; 2fff9028 <plat_crash_console_init+0xa0>
2fff900c:	e59f1018 	ldr	r1, [pc, #24]	; 2fff902c <plat_crash_console_init+0xa4>
2fff9010:	e59f2018 	ldr	r2, [pc, #24]	; 2fff9030 <plat_crash_console_init+0xa8>
2fff9014:	eafffeef 	b	2fff8bd8 <console_stm32_core_init>
2fff9018:	50000a28 	.word	0x50000a28
2fff901c:	50008000 	.word	0x50008000
2fff9020:	500008e8 	.word	0x500008e8
2fff9024:	50000a00 	.word	0x50000a00
2fff9028:	40010000 	.word	0x40010000
2fff902c:	03d09000 	.word	0x03d09000
2fff9030:	0001c200 	.word	0x0001c200

2fff9034 <plat_crash_console_flush>:
2fff9034:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff903c <plat_crash_console_flush+0x8>
2fff9038:	eaffff1c 	b	2fff8cb0 <console_stm32_core_flush>
2fff903c:	40010000 	.word	0x40010000

2fff9040 <plat_crash_console_putc>:
2fff9040:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff9048 <plat_crash_console_putc+0x8>
2fff9044:	eafffeff 	b	2fff8c48 <console_stm32_core_putc>
2fff9048:	40010000 	.word	0x40010000

2fff904c <plat_panic_handler>:
2fff904c:	e10f0000 	mrs	r0, CPSR
2fff9050:	e200001f 	and	r0, r0, #31
2fff9054:	ebffff6f 	bl	2fff8e18 <plat_report_exception>
2fff9058:	e1a0e006 	mov	lr, r6
2fff905c:	eafffffe 	b	2fff905c <plat_panic_handler+0x10>

2fff9060 <wfi_svc_int_enable>:
2fff9060:	e92d4110 	push	{r4, r8, lr}
2fff9064:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2fff9068:	e1a0800d 	mov	r8, sp
2fff906c:	e1a0d000 	mov	sp, r0
2fff9070:	e2800c01 	add	r0, r0, #256	; 0x100
2fff9074:	e58d007c 	str	r0, [sp, #124]	; 0x7c
2fff9078:	e58d4084 	str	r4, [sp, #132]	; 0x84
2fff907c:	f1020013 	cps	#19
2fff9080:	f1080140 	cpsie	af
2fff9084:	f57ff04f 	dsb	sy
2fff9088:	f57ff06f 	isb	sy
2fff908c:	e320f003 	wfi
2fff9090:	f10c0140 	cpsid	af
2fff9094:	f1020016 	cps	#22
2fff9098:	e1a0d008 	mov	sp, r8
2fff909c:	e8bd4110 	pop	{r4, r8, lr}
2fff90a0:	e12fff1e 	bx	lr

2fff90a4 <fdt32_to_cpu>:
2fff90a4:	ba00      	rev	r0, r0
2fff90a6:	4770      	bx	lr

2fff90a8 <fdt_check_header>:
2fff90a8:	b508      	push	{r3, lr}
2fff90aa:	4603      	mov	r3, r0
2fff90ac:	4a12      	ldr	r2, [pc, #72]	; (2fff90f8 <fdt_check_header+0x50>)
2fff90ae:	6800      	ldr	r0, [r0, #0]
2fff90b0:	f7ff fff8 	bl	2fff90a4 <fdt32_to_cpu>
2fff90b4:	4290      	cmp	r0, r2
2fff90b6:	d10d      	bne.n	2fff90d4 <fdt_check_header+0x2c>
2fff90b8:	6958      	ldr	r0, [r3, #20]
2fff90ba:	f7ff fff3 	bl	2fff90a4 <fdt32_to_cpu>
2fff90be:	2801      	cmp	r0, #1
2fff90c0:	d914      	bls.n	2fff90ec <fdt_check_header+0x44>
2fff90c2:	6998      	ldr	r0, [r3, #24]
2fff90c4:	f7ff ffee 	bl	2fff90a4 <fdt32_to_cpu>
2fff90c8:	2811      	cmp	r0, #17
2fff90ca:	bf94      	ite	ls
2fff90cc:	2000      	movls	r0, #0
2fff90ce:	f06f 0009 	mvnhi.w	r0, #9
2fff90d2:	bd08      	pop	{r3, pc}
2fff90d4:	4a09      	ldr	r2, [pc, #36]	; (2fff90fc <fdt_check_header+0x54>)
2fff90d6:	4290      	cmp	r0, r2
2fff90d8:	d10b      	bne.n	2fff90f2 <fdt_check_header+0x4a>
2fff90da:	6a58      	ldr	r0, [r3, #36]	; 0x24
2fff90dc:	f7ff ffe2 	bl	2fff90a4 <fdt32_to_cpu>
2fff90e0:	2800      	cmp	r0, #0
2fff90e2:	bf14      	ite	ne
2fff90e4:	2000      	movne	r0, #0
2fff90e6:	f06f 0006 	mvneq.w	r0, #6
2fff90ea:	e7f2      	b.n	2fff90d2 <fdt_check_header+0x2a>
2fff90ec:	f06f 0009 	mvn.w	r0, #9
2fff90f0:	e7ef      	b.n	2fff90d2 <fdt_check_header+0x2a>
2fff90f2:	f06f 0008 	mvn.w	r0, #8
2fff90f6:	e7ec      	b.n	2fff90d2 <fdt_check_header+0x2a>
2fff90f8:	d00dfeed 	.word	0xd00dfeed
2fff90fc:	2ff20112 	.word	0x2ff20112

2fff9100 <fdt_offset_ptr>:
2fff9100:	b538      	push	{r3, r4, r5, lr}
2fff9102:	4603      	mov	r3, r0
2fff9104:	6880      	ldr	r0, [r0, #8]
2fff9106:	f7ff ffcd 	bl	2fff90a4 <fdt32_to_cpu>
2fff910a:	1844      	adds	r4, r0, r1
2fff910c:	d201      	bcs.n	2fff9112 <fdt_offset_ptr+0x12>
2fff910e:	18a5      	adds	r5, r4, r2
2fff9110:	d301      	bcc.n	2fff9116 <fdt_offset_ptr+0x16>
2fff9112:	2000      	movs	r0, #0
2fff9114:	e011      	b.n	2fff913a <fdt_offset_ptr+0x3a>
2fff9116:	6858      	ldr	r0, [r3, #4]
2fff9118:	f7ff ffc4 	bl	2fff90a4 <fdt32_to_cpu>
2fff911c:	4285      	cmp	r5, r0
2fff911e:	d8f8      	bhi.n	2fff9112 <fdt_offset_ptr+0x12>
2fff9120:	6958      	ldr	r0, [r3, #20]
2fff9122:	f7ff ffbf 	bl	2fff90a4 <fdt32_to_cpu>
2fff9126:	2810      	cmp	r0, #16
2fff9128:	d906      	bls.n	2fff9138 <fdt_offset_ptr+0x38>
2fff912a:	1889      	adds	r1, r1, r2
2fff912c:	d2f1      	bcs.n	2fff9112 <fdt_offset_ptr+0x12>
2fff912e:	6a58      	ldr	r0, [r3, #36]	; 0x24
2fff9130:	f7ff ffb8 	bl	2fff90a4 <fdt32_to_cpu>
2fff9134:	4281      	cmp	r1, r0
2fff9136:	d8ec      	bhi.n	2fff9112 <fdt_offset_ptr+0x12>
2fff9138:	1918      	adds	r0, r3, r4
2fff913a:	bd38      	pop	{r3, r4, r5, pc}

2fff913c <fdt_next_tag>:
2fff913c:	f06f 0307 	mvn.w	r3, #7
2fff9140:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff9144:	4690      	mov	r8, r2
2fff9146:	6013      	str	r3, [r2, #0]
2fff9148:	2204      	movs	r2, #4
2fff914a:	4606      	mov	r6, r0
2fff914c:	460f      	mov	r7, r1
2fff914e:	f7ff ffd7 	bl	2fff9100 <fdt_offset_ptr>
2fff9152:	b908      	cbnz	r0, 2fff9158 <fdt_next_tag+0x1c>
2fff9154:	2509      	movs	r5, #9
2fff9156:	e038      	b.n	2fff91ca <fdt_next_tag+0x8e>
2fff9158:	6800      	ldr	r0, [r0, #0]
2fff915a:	f06f 030a 	mvn.w	r3, #10
2fff915e:	1d3c      	adds	r4, r7, #4
2fff9160:	f7ff ffa0 	bl	2fff90a4 <fdt32_to_cpu>
2fff9164:	f8c8 3000 	str.w	r3, [r8]
2fff9168:	1e43      	subs	r3, r0, #1
2fff916a:	4605      	mov	r5, r0
2fff916c:	2b08      	cmp	r3, #8
2fff916e:	d8f1      	bhi.n	2fff9154 <fdt_next_tag+0x18>
2fff9170:	a201      	add	r2, pc, #4	; (adr r2, 2fff9178 <fdt_next_tag+0x3c>)
2fff9172:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
2fff9176:	bf00      	nop
2fff9178:	2fff919d 	.word	0x2fff919d
2fff917c:	2fff91b3 	.word	0x2fff91b3
2fff9180:	2fff91d1 	.word	0x2fff91d1
2fff9184:	2fff91b3 	.word	0x2fff91b3
2fff9188:	2fff9155 	.word	0x2fff9155
2fff918c:	2fff9155 	.word	0x2fff9155
2fff9190:	2fff9155 	.word	0x2fff9155
2fff9194:	2fff9155 	.word	0x2fff9155
2fff9198:	2fff91b3 	.word	0x2fff91b3
2fff919c:	4621      	mov	r1, r4
2fff919e:	2201      	movs	r2, #1
2fff91a0:	4414      	add	r4, r2
2fff91a2:	4630      	mov	r0, r6
2fff91a4:	f7ff ffac 	bl	2fff9100 <fdt_offset_ptr>
2fff91a8:	2800      	cmp	r0, #0
2fff91aa:	d0d3      	beq.n	2fff9154 <fdt_next_tag+0x18>
2fff91ac:	7803      	ldrb	r3, [r0, #0]
2fff91ae:	2b00      	cmp	r3, #0
2fff91b0:	d1f4      	bne.n	2fff919c <fdt_next_tag+0x60>
2fff91b2:	1be2      	subs	r2, r4, r7
2fff91b4:	4639      	mov	r1, r7
2fff91b6:	4630      	mov	r0, r6
2fff91b8:	f7ff ffa2 	bl	2fff9100 <fdt_offset_ptr>
2fff91bc:	2800      	cmp	r0, #0
2fff91be:	d0c9      	beq.n	2fff9154 <fdt_next_tag+0x18>
2fff91c0:	3403      	adds	r4, #3
2fff91c2:	f024 0403 	bic.w	r4, r4, #3
2fff91c6:	f8c8 4000 	str.w	r4, [r8]
2fff91ca:	4628      	mov	r0, r5
2fff91cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff91d0:	2204      	movs	r2, #4
2fff91d2:	4621      	mov	r1, r4
2fff91d4:	4630      	mov	r0, r6
2fff91d6:	f7ff ff93 	bl	2fff9100 <fdt_offset_ptr>
2fff91da:	2800      	cmp	r0, #0
2fff91dc:	d0ba      	beq.n	2fff9154 <fdt_next_tag+0x18>
2fff91de:	6800      	ldr	r0, [r0, #0]
2fff91e0:	f107 020c 	add.w	r2, r7, #12
2fff91e4:	f7ff ff5e 	bl	2fff90a4 <fdt32_to_cpu>
2fff91e8:	1884      	adds	r4, r0, r2
2fff91ea:	4603      	mov	r3, r0
2fff91ec:	6970      	ldr	r0, [r6, #20]
2fff91ee:	f7ff ff59 	bl	2fff90a4 <fdt32_to_cpu>
2fff91f2:	280f      	cmp	r0, #15
2fff91f4:	d8dd      	bhi.n	2fff91b2 <fdt_next_tag+0x76>
2fff91f6:	2b07      	cmp	r3, #7
2fff91f8:	d9db      	bls.n	2fff91b2 <fdt_next_tag+0x76>
2fff91fa:	0753      	lsls	r3, r2, #29
2fff91fc:	bf18      	it	ne
2fff91fe:	3404      	addne	r4, #4
2fff9200:	e7d7      	b.n	2fff91b2 <fdt_next_tag+0x76>
2fff9202:	bf00      	nop

2fff9204 <fdt_check_node_offset_>:
2fff9204:	1e0b      	subs	r3, r1, #0
2fff9206:	b507      	push	{r0, r1, r2, lr}
2fff9208:	9101      	str	r1, [sp, #4]
2fff920a:	da04      	bge.n	2fff9216 <fdt_check_node_offset_+0x12>
2fff920c:	f06f 0003 	mvn.w	r0, #3
2fff9210:	b003      	add	sp, #12
2fff9212:	f85d fb04 	ldr.w	pc, [sp], #4
2fff9216:	079b      	lsls	r3, r3, #30
2fff9218:	d1f8      	bne.n	2fff920c <fdt_check_node_offset_+0x8>
2fff921a:	aa01      	add	r2, sp, #4
2fff921c:	f7ff ff8e 	bl	2fff913c <fdt_next_tag>
2fff9220:	2801      	cmp	r0, #1
2fff9222:	d1f3      	bne.n	2fff920c <fdt_check_node_offset_+0x8>
2fff9224:	9801      	ldr	r0, [sp, #4]
2fff9226:	e7f3      	b.n	2fff9210 <fdt_check_node_offset_+0xc>

2fff9228 <fdt_check_prop_offset_>:
2fff9228:	1e0b      	subs	r3, r1, #0
2fff922a:	b507      	push	{r0, r1, r2, lr}
2fff922c:	9101      	str	r1, [sp, #4]
2fff922e:	da04      	bge.n	2fff923a <fdt_check_prop_offset_+0x12>
2fff9230:	f06f 0003 	mvn.w	r0, #3
2fff9234:	b003      	add	sp, #12
2fff9236:	f85d fb04 	ldr.w	pc, [sp], #4
2fff923a:	079b      	lsls	r3, r3, #30
2fff923c:	d1f8      	bne.n	2fff9230 <fdt_check_prop_offset_+0x8>
2fff923e:	aa01      	add	r2, sp, #4
2fff9240:	f7ff ff7c 	bl	2fff913c <fdt_next_tag>
2fff9244:	2803      	cmp	r0, #3
2fff9246:	d1f3      	bne.n	2fff9230 <fdt_check_prop_offset_+0x8>
2fff9248:	9801      	ldr	r0, [sp, #4]
2fff924a:	e7f3      	b.n	2fff9234 <fdt_check_prop_offset_+0xc>

2fff924c <fdt_next_node>:
2fff924c:	2300      	movs	r3, #0
2fff924e:	4299      	cmp	r1, r3
2fff9250:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff9252:	4606      	mov	r6, r0
2fff9254:	9301      	str	r3, [sp, #4]
2fff9256:	4615      	mov	r5, r2
2fff9258:	db05      	blt.n	2fff9266 <fdt_next_node+0x1a>
2fff925a:	f7ff ffd3 	bl	2fff9204 <fdt_check_node_offset_>
2fff925e:	9001      	str	r0, [sp, #4]
2fff9260:	2800      	cmp	r0, #0
2fff9262:	4604      	mov	r4, r0
2fff9264:	db0f      	blt.n	2fff9286 <fdt_next_node+0x3a>
2fff9266:	9c01      	ldr	r4, [sp, #4]
2fff9268:	aa01      	add	r2, sp, #4
2fff926a:	4630      	mov	r0, r6
2fff926c:	4621      	mov	r1, r4
2fff926e:	f7ff ff65 	bl	2fff913c <fdt_next_tag>
2fff9272:	2802      	cmp	r0, #2
2fff9274:	d00a      	beq.n	2fff928c <fdt_next_node+0x40>
2fff9276:	2809      	cmp	r0, #9
2fff9278:	d011      	beq.n	2fff929e <fdt_next_node+0x52>
2fff927a:	2801      	cmp	r0, #1
2fff927c:	d1f3      	bne.n	2fff9266 <fdt_next_node+0x1a>
2fff927e:	b115      	cbz	r5, 2fff9286 <fdt_next_node+0x3a>
2fff9280:	682b      	ldr	r3, [r5, #0]
2fff9282:	3301      	adds	r3, #1
2fff9284:	602b      	str	r3, [r5, #0]
2fff9286:	4620      	mov	r0, r4
2fff9288:	b002      	add	sp, #8
2fff928a:	bd70      	pop	{r4, r5, r6, pc}
2fff928c:	2d00      	cmp	r5, #0
2fff928e:	d0ea      	beq.n	2fff9266 <fdt_next_node+0x1a>
2fff9290:	682b      	ldr	r3, [r5, #0]
2fff9292:	3b01      	subs	r3, #1
2fff9294:	602b      	str	r3, [r5, #0]
2fff9296:	2b00      	cmp	r3, #0
2fff9298:	dae5      	bge.n	2fff9266 <fdt_next_node+0x1a>
2fff929a:	9c01      	ldr	r4, [sp, #4]
2fff929c:	e7f3      	b.n	2fff9286 <fdt_next_node+0x3a>
2fff929e:	9c01      	ldr	r4, [sp, #4]
2fff92a0:	2c00      	cmp	r4, #0
2fff92a2:	da07      	bge.n	2fff92b4 <fdt_next_node+0x68>
2fff92a4:	f114 0f08 	cmn.w	r4, #8
2fff92a8:	d1ed      	bne.n	2fff9286 <fdt_next_node+0x3a>
2fff92aa:	2d00      	cmp	r5, #0
2fff92ac:	bf08      	it	eq
2fff92ae:	f04f 34ff 	moveq.w	r4, #4294967295	; 0xffffffff
2fff92b2:	e7e8      	b.n	2fff9286 <fdt_next_node+0x3a>
2fff92b4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff92b8:	e7e5      	b.n	2fff9286 <fdt_next_node+0x3a>

2fff92ba <fdt_first_subnode>:
2fff92ba:	b507      	push	{r0, r1, r2, lr}
2fff92bc:	2300      	movs	r3, #0
2fff92be:	9301      	str	r3, [sp, #4]
2fff92c0:	aa01      	add	r2, sp, #4
2fff92c2:	f7ff ffc3 	bl	2fff924c <fdt_next_node>
2fff92c6:	2800      	cmp	r0, #0
2fff92c8:	db07      	blt.n	2fff92da <fdt_first_subnode+0x20>
2fff92ca:	9b01      	ldr	r3, [sp, #4]
2fff92cc:	2b01      	cmp	r3, #1
2fff92ce:	bf18      	it	ne
2fff92d0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2fff92d4:	b003      	add	sp, #12
2fff92d6:	f85d fb04 	ldr.w	pc, [sp], #4
2fff92da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff92de:	e7f9      	b.n	2fff92d4 <fdt_first_subnode+0x1a>

2fff92e0 <fdt_next_subnode>:
2fff92e0:	b513      	push	{r0, r1, r4, lr}
2fff92e2:	4604      	mov	r4, r0
2fff92e4:	2301      	movs	r3, #1
2fff92e6:	9301      	str	r3, [sp, #4]
2fff92e8:	aa01      	add	r2, sp, #4
2fff92ea:	4620      	mov	r0, r4
2fff92ec:	f7ff ffae 	bl	2fff924c <fdt_next_node>
2fff92f0:	1e01      	subs	r1, r0, #0
2fff92f2:	db07      	blt.n	2fff9304 <fdt_next_subnode+0x24>
2fff92f4:	9b01      	ldr	r3, [sp, #4]
2fff92f6:	2b00      	cmp	r3, #0
2fff92f8:	dd04      	ble.n	2fff9304 <fdt_next_subnode+0x24>
2fff92fa:	2b01      	cmp	r3, #1
2fff92fc:	d1f4      	bne.n	2fff92e8 <fdt_next_subnode+0x8>
2fff92fe:	4608      	mov	r0, r1
2fff9300:	b002      	add	sp, #8
2fff9302:	bd10      	pop	{r4, pc}
2fff9304:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff9308:	e7f9      	b.n	2fff92fe <fdt_next_subnode+0x1e>
	...

2fff930c <fdt_address_cells>:
2fff930c:	b507      	push	{r0, r1, r2, lr}
2fff930e:	ab01      	add	r3, sp, #4
2fff9310:	4a0f      	ldr	r2, [pc, #60]	; (2fff9350 <fdt_address_cells+0x44>)
2fff9312:	f000 f94d 	bl	2fff95b0 <fdt_getprop>
2fff9316:	b1b0      	cbz	r0, 2fff9346 <fdt_address_cells+0x3a>
2fff9318:	9b01      	ldr	r3, [sp, #4]
2fff931a:	2b04      	cmp	r3, #4
2fff931c:	d115      	bne.n	2fff934a <fdt_address_cells+0x3e>
2fff931e:	6803      	ldr	r3, [r0, #0]
2fff9320:	0e18      	lsrs	r0, r3, #24
2fff9322:	f3c3 2207 	ubfx	r2, r3, #8, #8
2fff9326:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2fff932a:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff932e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
2fff9332:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2fff9336:	1e43      	subs	r3, r0, #1
2fff9338:	2b04      	cmp	r3, #4
2fff933a:	bf28      	it	cs
2fff933c:	f06f 000d 	mvncs.w	r0, #13
2fff9340:	b003      	add	sp, #12
2fff9342:	f85d fb04 	ldr.w	pc, [sp], #4
2fff9346:	2002      	movs	r0, #2
2fff9348:	e7fa      	b.n	2fff9340 <fdt_address_cells+0x34>
2fff934a:	f06f 000d 	mvn.w	r0, #13
2fff934e:	e7f7      	b.n	2fff9340 <fdt_address_cells+0x34>
2fff9350:	2fffc4df 	.word	0x2fffc4df

2fff9354 <fdt32_to_cpu>:
2fff9354:	ba00      	rev	r0, r0
2fff9356:	4770      	bx	lr

2fff9358 <nextprop_>:
2fff9358:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff935a:	4605      	mov	r5, r0
2fff935c:	460c      	mov	r4, r1
2fff935e:	aa01      	add	r2, sp, #4
2fff9360:	4621      	mov	r1, r4
2fff9362:	4628      	mov	r0, r5
2fff9364:	f7ff feea 	bl	2fff913c <fdt_next_tag>
2fff9368:	2803      	cmp	r0, #3
2fff936a:	d006      	beq.n	2fff937a <nextprop_+0x22>
2fff936c:	9c01      	ldr	r4, [sp, #4]
2fff936e:	2809      	cmp	r0, #9
2fff9370:	d106      	bne.n	2fff9380 <nextprop_+0x28>
2fff9372:	2c00      	cmp	r4, #0
2fff9374:	bfa8      	it	ge
2fff9376:	f06f 040a 	mvnge.w	r4, #10
2fff937a:	4620      	mov	r0, r4
2fff937c:	b003      	add	sp, #12
2fff937e:	bd30      	pop	{r4, r5, pc}
2fff9380:	2804      	cmp	r0, #4
2fff9382:	d0ec      	beq.n	2fff935e <nextprop_+0x6>
2fff9384:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff9388:	e7f7      	b.n	2fff937a <nextprop_+0x22>

2fff938a <fdt_get_property_by_offset_>:
2fff938a:	b570      	push	{r4, r5, r6, lr}
2fff938c:	4604      	mov	r4, r0
2fff938e:	460e      	mov	r6, r1
2fff9390:	4615      	mov	r5, r2
2fff9392:	f7ff ff49 	bl	2fff9228 <fdt_check_prop_offset_>
2fff9396:	2800      	cmp	r0, #0
2fff9398:	da04      	bge.n	2fff93a4 <fdt_get_property_by_offset_+0x1a>
2fff939a:	b17d      	cbz	r5, 2fff93bc <fdt_get_property_by_offset_+0x32>
2fff939c:	6028      	str	r0, [r5, #0]
2fff939e:	2100      	movs	r1, #0
2fff93a0:	4608      	mov	r0, r1
2fff93a2:	bd70      	pop	{r4, r5, r6, pc}
2fff93a4:	68a0      	ldr	r0, [r4, #8]
2fff93a6:	f7ff ffd5 	bl	2fff9354 <fdt32_to_cpu>
2fff93aa:	1831      	adds	r1, r6, r0
2fff93ac:	4421      	add	r1, r4
2fff93ae:	2d00      	cmp	r5, #0
2fff93b0:	d0f6      	beq.n	2fff93a0 <fdt_get_property_by_offset_+0x16>
2fff93b2:	6848      	ldr	r0, [r1, #4]
2fff93b4:	f7ff ffce 	bl	2fff9354 <fdt32_to_cpu>
2fff93b8:	6028      	str	r0, [r5, #0]
2fff93ba:	e7f1      	b.n	2fff93a0 <fdt_get_property_by_offset_+0x16>
2fff93bc:	4629      	mov	r1, r5
2fff93be:	e7ef      	b.n	2fff93a0 <fdt_get_property_by_offset_+0x16>

2fff93c0 <fdt_string>:
2fff93c0:	b508      	push	{r3, lr}
2fff93c2:	4603      	mov	r3, r0
2fff93c4:	68c0      	ldr	r0, [r0, #12]
2fff93c6:	f7ff ffc5 	bl	2fff9354 <fdt32_to_cpu>
2fff93ca:	4408      	add	r0, r1
2fff93cc:	4418      	add	r0, r3
2fff93ce:	bd08      	pop	{r3, pc}

2fff93d0 <fdt_get_name>:
2fff93d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff93d2:	4606      	mov	r6, r0
2fff93d4:	6887      	ldr	r7, [r0, #8]
2fff93d6:	460c      	mov	r4, r1
2fff93d8:	4615      	mov	r5, r2
2fff93da:	f7ff fe65 	bl	2fff90a8 <fdt_check_header>
2fff93de:	bb00      	cbnz	r0, 2fff9422 <fdt_get_name+0x52>
2fff93e0:	4621      	mov	r1, r4
2fff93e2:	4630      	mov	r0, r6
2fff93e4:	f7ff ff0e 	bl	2fff9204 <fdt_check_node_offset_>
2fff93e8:	2800      	cmp	r0, #0
2fff93ea:	db1a      	blt.n	2fff9422 <fdt_get_name+0x52>
2fff93ec:	4638      	mov	r0, r7
2fff93ee:	f7ff ffb1 	bl	2fff9354 <fdt32_to_cpu>
2fff93f2:	4404      	add	r4, r0
2fff93f4:	6970      	ldr	r0, [r6, #20]
2fff93f6:	4434      	add	r4, r6
2fff93f8:	f7ff ffac 	bl	2fff9354 <fdt32_to_cpu>
2fff93fc:	280f      	cmp	r0, #15
2fff93fe:	f104 0404 	add.w	r4, r4, #4
2fff9402:	d805      	bhi.n	2fff9410 <fdt_get_name+0x40>
2fff9404:	212f      	movs	r1, #47	; 0x2f
2fff9406:	4620      	mov	r0, r4
2fff9408:	f000 fc3d 	bl	2fff9c86 <strrchr>
2fff940c:	b138      	cbz	r0, 2fff941e <fdt_get_name+0x4e>
2fff940e:	1c44      	adds	r4, r0, #1
2fff9410:	b11d      	cbz	r5, 2fff941a <fdt_get_name+0x4a>
2fff9412:	4620      	mov	r0, r4
2fff9414:	f000 fc11 	bl	2fff9c3a <strlen>
2fff9418:	6028      	str	r0, [r5, #0]
2fff941a:	4620      	mov	r0, r4
2fff941c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff941e:	f06f 000a 	mvn.w	r0, #10
2fff9422:	b115      	cbz	r5, 2fff942a <fdt_get_name+0x5a>
2fff9424:	6028      	str	r0, [r5, #0]
2fff9426:	2400      	movs	r4, #0
2fff9428:	e7f7      	b.n	2fff941a <fdt_get_name+0x4a>
2fff942a:	462c      	mov	r4, r5
2fff942c:	e7f5      	b.n	2fff941a <fdt_get_name+0x4a>

2fff942e <fdt_subnode_offset_namelen>:
2fff942e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff9432:	4607      	mov	r7, r0
2fff9434:	460e      	mov	r6, r1
2fff9436:	4690      	mov	r8, r2
2fff9438:	461d      	mov	r5, r3
2fff943a:	f7ff fe35 	bl	2fff90a8 <fdt_check_header>
2fff943e:	4604      	mov	r4, r0
2fff9440:	b940      	cbnz	r0, 2fff9454 <fdt_subnode_offset_namelen+0x26>
2fff9442:	9000      	str	r0, [sp, #0]
2fff9444:	4634      	mov	r4, r6
2fff9446:	9b00      	ldr	r3, [sp, #0]
2fff9448:	2c00      	cmp	r4, #0
2fff944a:	db2b      	blt.n	2fff94a4 <fdt_subnode_offset_namelen+0x76>
2fff944c:	2b00      	cmp	r3, #0
2fff944e:	da05      	bge.n	2fff945c <fdt_subnode_offset_namelen+0x2e>
2fff9450:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff9454:	4620      	mov	r0, r4
2fff9456:	b002      	add	sp, #8
2fff9458:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff945c:	2b01      	cmp	r3, #1
2fff945e:	d11a      	bne.n	2fff9496 <fdt_subnode_offset_namelen+0x68>
2fff9460:	aa01      	add	r2, sp, #4
2fff9462:	4621      	mov	r1, r4
2fff9464:	4638      	mov	r0, r7
2fff9466:	f7ff ffb3 	bl	2fff93d0 <fdt_get_name>
2fff946a:	4606      	mov	r6, r0
2fff946c:	b198      	cbz	r0, 2fff9496 <fdt_subnode_offset_namelen+0x68>
2fff946e:	9b01      	ldr	r3, [sp, #4]
2fff9470:	429d      	cmp	r5, r3
2fff9472:	dc10      	bgt.n	2fff9496 <fdt_subnode_offset_namelen+0x68>
2fff9474:	462a      	mov	r2, r5
2fff9476:	4641      	mov	r1, r8
2fff9478:	f000 fa52 	bl	2fff9920 <memcmp>
2fff947c:	b958      	cbnz	r0, 2fff9496 <fdt_subnode_offset_namelen+0x68>
2fff947e:	5d73      	ldrb	r3, [r6, r5]
2fff9480:	2b00      	cmp	r3, #0
2fff9482:	d0e7      	beq.n	2fff9454 <fdt_subnode_offset_namelen+0x26>
2fff9484:	462a      	mov	r2, r5
2fff9486:	2140      	movs	r1, #64	; 0x40
2fff9488:	4640      	mov	r0, r8
2fff948a:	f000 fa3b 	bl	2fff9904 <memchr>
2fff948e:	b910      	cbnz	r0, 2fff9496 <fdt_subnode_offset_namelen+0x68>
2fff9490:	5d73      	ldrb	r3, [r6, r5]
2fff9492:	2b40      	cmp	r3, #64	; 0x40
2fff9494:	d0de      	beq.n	2fff9454 <fdt_subnode_offset_namelen+0x26>
2fff9496:	4621      	mov	r1, r4
2fff9498:	466a      	mov	r2, sp
2fff949a:	4638      	mov	r0, r7
2fff949c:	f7ff fed6 	bl	2fff924c <fdt_next_node>
2fff94a0:	4604      	mov	r4, r0
2fff94a2:	e7d0      	b.n	2fff9446 <fdt_subnode_offset_namelen+0x18>
2fff94a4:	2b00      	cmp	r3, #0
2fff94a6:	bfb8      	it	lt
2fff94a8:	f04f 34ff 	movlt.w	r4, #4294967295	; 0xffffffff
2fff94ac:	e7d2      	b.n	2fff9454 <fdt_subnode_offset_namelen+0x26>

2fff94ae <fdt_subnode_offset>:
2fff94ae:	b570      	push	{r4, r5, r6, lr}
2fff94b0:	4605      	mov	r5, r0
2fff94b2:	4610      	mov	r0, r2
2fff94b4:	460e      	mov	r6, r1
2fff94b6:	4614      	mov	r4, r2
2fff94b8:	f000 fbbf 	bl	2fff9c3a <strlen>
2fff94bc:	4603      	mov	r3, r0
2fff94be:	4622      	mov	r2, r4
2fff94c0:	4631      	mov	r1, r6
2fff94c2:	4628      	mov	r0, r5
2fff94c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff94c8:	f7ff bfb1 	b.w	2fff942e <fdt_subnode_offset_namelen>

2fff94cc <fdt_first_property_offset>:
2fff94cc:	b510      	push	{r4, lr}
2fff94ce:	4604      	mov	r4, r0
2fff94d0:	f7ff fe98 	bl	2fff9204 <fdt_check_node_offset_>
2fff94d4:	1e01      	subs	r1, r0, #0
2fff94d6:	db04      	blt.n	2fff94e2 <fdt_first_property_offset+0x16>
2fff94d8:	4620      	mov	r0, r4
2fff94da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff94de:	f7ff bf3b 	b.w	2fff9358 <nextprop_>
2fff94e2:	bd10      	pop	{r4, pc}

2fff94e4 <fdt_next_property_offset>:
2fff94e4:	b510      	push	{r4, lr}
2fff94e6:	4604      	mov	r4, r0
2fff94e8:	f7ff fe9e 	bl	2fff9228 <fdt_check_prop_offset_>
2fff94ec:	1e01      	subs	r1, r0, #0
2fff94ee:	db04      	blt.n	2fff94fa <fdt_next_property_offset+0x16>
2fff94f0:	4620      	mov	r0, r4
2fff94f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff94f6:	f7ff bf2f 	b.w	2fff9358 <nextprop_>
2fff94fa:	bd10      	pop	{r4, pc}

2fff94fc <fdt_get_property_namelen_>:
2fff94fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff9500:	4606      	mov	r6, r0
2fff9502:	4691      	mov	r9, r2
2fff9504:	4698      	mov	r8, r3
2fff9506:	e9dd 7b0a 	ldrd	r7, fp, [sp, #40]	; 0x28
2fff950a:	f7ff ffdf 	bl	2fff94cc <fdt_first_property_offset>
2fff950e:	2800      	cmp	r0, #0
2fff9510:	4604      	mov	r4, r0
2fff9512:	da03      	bge.n	2fff951c <fdt_get_property_namelen_+0x20>
2fff9514:	b35f      	cbz	r7, 2fff956e <fdt_get_property_namelen_+0x72>
2fff9516:	603c      	str	r4, [r7, #0]
2fff9518:	2500      	movs	r5, #0
2fff951a:	e01d      	b.n	2fff9558 <fdt_get_property_namelen_+0x5c>
2fff951c:	463a      	mov	r2, r7
2fff951e:	4621      	mov	r1, r4
2fff9520:	4630      	mov	r0, r6
2fff9522:	f7ff ff32 	bl	2fff938a <fdt_get_property_by_offset_>
2fff9526:	4605      	mov	r5, r0
2fff9528:	b1f0      	cbz	r0, 2fff9568 <fdt_get_property_namelen_+0x6c>
2fff952a:	6880      	ldr	r0, [r0, #8]
2fff952c:	f7ff ff12 	bl	2fff9354 <fdt32_to_cpu>
2fff9530:	4601      	mov	r1, r0
2fff9532:	4630      	mov	r0, r6
2fff9534:	f7ff ff44 	bl	2fff93c0 <fdt_string>
2fff9538:	4682      	mov	sl, r0
2fff953a:	f000 fb7e 	bl	2fff9c3a <strlen>
2fff953e:	4540      	cmp	r0, r8
2fff9540:	d10d      	bne.n	2fff955e <fdt_get_property_namelen_+0x62>
2fff9542:	4642      	mov	r2, r8
2fff9544:	4649      	mov	r1, r9
2fff9546:	4650      	mov	r0, sl
2fff9548:	f000 f9ea 	bl	2fff9920 <memcmp>
2fff954c:	b938      	cbnz	r0, 2fff955e <fdt_get_property_namelen_+0x62>
2fff954e:	f1bb 0f00 	cmp.w	fp, #0
2fff9552:	d001      	beq.n	2fff9558 <fdt_get_property_namelen_+0x5c>
2fff9554:	f8cb 4000 	str.w	r4, [fp]
2fff9558:	4628      	mov	r0, r5
2fff955a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff955e:	4621      	mov	r1, r4
2fff9560:	4630      	mov	r0, r6
2fff9562:	f7ff ffbf 	bl	2fff94e4 <fdt_next_property_offset>
2fff9566:	e7d2      	b.n	2fff950e <fdt_get_property_namelen_+0x12>
2fff9568:	f06f 040c 	mvn.w	r4, #12
2fff956c:	e7d2      	b.n	2fff9514 <fdt_get_property_namelen_+0x18>
2fff956e:	463d      	mov	r5, r7
2fff9570:	e7f2      	b.n	2fff9558 <fdt_get_property_namelen_+0x5c>

2fff9572 <fdt_getprop_namelen>:
2fff9572:	b530      	push	{r4, r5, lr}
2fff9574:	b085      	sub	sp, #20
2fff9576:	ad03      	add	r5, sp, #12
2fff9578:	4604      	mov	r4, r0
2fff957a:	9501      	str	r5, [sp, #4]
2fff957c:	9d08      	ldr	r5, [sp, #32]
2fff957e:	9500      	str	r5, [sp, #0]
2fff9580:	f7ff ffbc 	bl	2fff94fc <fdt_get_property_namelen_>
2fff9584:	4603      	mov	r3, r0
2fff9586:	b170      	cbz	r0, 2fff95a6 <fdt_getprop_namelen+0x34>
2fff9588:	6960      	ldr	r0, [r4, #20]
2fff958a:	f7ff fee3 	bl	2fff9354 <fdt32_to_cpu>
2fff958e:	280f      	cmp	r0, #15
2fff9590:	d80c      	bhi.n	2fff95ac <fdt_getprop_namelen+0x3a>
2fff9592:	9a03      	ldr	r2, [sp, #12]
2fff9594:	320c      	adds	r2, #12
2fff9596:	0752      	lsls	r2, r2, #29
2fff9598:	d008      	beq.n	2fff95ac <fdt_getprop_namelen+0x3a>
2fff959a:	6858      	ldr	r0, [r3, #4]
2fff959c:	f7ff feda 	bl	2fff9354 <fdt32_to_cpu>
2fff95a0:	2807      	cmp	r0, #7
2fff95a2:	d903      	bls.n	2fff95ac <fdt_getprop_namelen+0x3a>
2fff95a4:	3310      	adds	r3, #16
2fff95a6:	4618      	mov	r0, r3
2fff95a8:	b005      	add	sp, #20
2fff95aa:	bd30      	pop	{r4, r5, pc}
2fff95ac:	330c      	adds	r3, #12
2fff95ae:	e7fa      	b.n	2fff95a6 <fdt_getprop_namelen+0x34>

2fff95b0 <fdt_getprop>:
2fff95b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff95b2:	4605      	mov	r5, r0
2fff95b4:	4610      	mov	r0, r2
2fff95b6:	461f      	mov	r7, r3
2fff95b8:	460e      	mov	r6, r1
2fff95ba:	4614      	mov	r4, r2
2fff95bc:	f000 fb3d 	bl	2fff9c3a <strlen>
2fff95c0:	9700      	str	r7, [sp, #0]
2fff95c2:	4603      	mov	r3, r0
2fff95c4:	4622      	mov	r2, r4
2fff95c6:	4631      	mov	r1, r6
2fff95c8:	4628      	mov	r0, r5
2fff95ca:	f7ff ffd2 	bl	2fff9572 <fdt_getprop_namelen>
2fff95ce:	b003      	add	sp, #12
2fff95d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

2fff95d4 <fdt_get_phandle>:
2fff95d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff95d6:	ab01      	add	r3, sp, #4
2fff95d8:	4a0d      	ldr	r2, [pc, #52]	; (2fff9610 <fdt_get_phandle+0x3c>)
2fff95da:	4604      	mov	r4, r0
2fff95dc:	460d      	mov	r5, r1
2fff95de:	f7ff ffe7 	bl	2fff95b0 <fdt_getprop>
2fff95e2:	b110      	cbz	r0, 2fff95ea <fdt_get_phandle+0x16>
2fff95e4:	9b01      	ldr	r3, [sp, #4]
2fff95e6:	2b04      	cmp	r3, #4
2fff95e8:	d009      	beq.n	2fff95fe <fdt_get_phandle+0x2a>
2fff95ea:	4a0a      	ldr	r2, [pc, #40]	; (2fff9614 <fdt_get_phandle+0x40>)
2fff95ec:	ab01      	add	r3, sp, #4
2fff95ee:	4629      	mov	r1, r5
2fff95f0:	4620      	mov	r0, r4
2fff95f2:	f7ff ffdd 	bl	2fff95b0 <fdt_getprop>
2fff95f6:	b140      	cbz	r0, 2fff960a <fdt_get_phandle+0x36>
2fff95f8:	9b01      	ldr	r3, [sp, #4]
2fff95fa:	2b04      	cmp	r3, #4
2fff95fc:	d105      	bne.n	2fff960a <fdt_get_phandle+0x36>
2fff95fe:	6800      	ldr	r0, [r0, #0]
2fff9600:	b003      	add	sp, #12
2fff9602:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff9606:	f7ff bea5 	b.w	2fff9354 <fdt32_to_cpu>
2fff960a:	2000      	movs	r0, #0
2fff960c:	b003      	add	sp, #12
2fff960e:	bd30      	pop	{r4, r5, pc}
2fff9610:	2fffc4f4 	.word	0x2fffc4f4
2fff9614:	2fffc4ee 	.word	0x2fffc4ee

2fff9618 <fdt_get_alias_namelen>:
2fff9618:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff961a:	460d      	mov	r5, r1
2fff961c:	4908      	ldr	r1, [pc, #32]	; (2fff9640 <fdt_get_alias_namelen+0x28>)
2fff961e:	4604      	mov	r4, r0
2fff9620:	4616      	mov	r6, r2
2fff9622:	f000 f857 	bl	2fff96d4 <fdt_path_offset>
2fff9626:	1e01      	subs	r1, r0, #0
2fff9628:	f04f 0000 	mov.w	r0, #0
2fff962c:	db05      	blt.n	2fff963a <fdt_get_alias_namelen+0x22>
2fff962e:	9000      	str	r0, [sp, #0]
2fff9630:	4633      	mov	r3, r6
2fff9632:	462a      	mov	r2, r5
2fff9634:	4620      	mov	r0, r4
2fff9636:	f7ff ff9c 	bl	2fff9572 <fdt_getprop_namelen>
2fff963a:	b002      	add	sp, #8
2fff963c:	bd70      	pop	{r4, r5, r6, pc}
2fff963e:	bf00      	nop
2fff9640:	2fffc4fc 	.word	0x2fffc4fc

2fff9644 <fdt_path_offset_namelen>:
2fff9644:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff9648:	4607      	mov	r7, r0
2fff964a:	460c      	mov	r4, r1
2fff964c:	4690      	mov	r8, r2
2fff964e:	f7ff fd2b 	bl	2fff90a8 <fdt_check_header>
2fff9652:	4605      	mov	r5, r0
2fff9654:	bbc0      	cbnz	r0, 2fff96c8 <fdt_path_offset_namelen+0x84>
2fff9656:	7823      	ldrb	r3, [r4, #0]
2fff9658:	eb04 0608 	add.w	r6, r4, r8
2fff965c:	2b2f      	cmp	r3, #47	; 0x2f
2fff965e:	d015      	beq.n	2fff968c <fdt_path_offset_namelen+0x48>
2fff9660:	4642      	mov	r2, r8
2fff9662:	212f      	movs	r1, #47	; 0x2f
2fff9664:	4620      	mov	r0, r4
2fff9666:	f000 f94d 	bl	2fff9904 <memchr>
2fff966a:	2800      	cmp	r0, #0
2fff966c:	bf14      	ite	ne
2fff966e:	4680      	movne	r8, r0
2fff9670:	46b0      	moveq	r8, r6
2fff9672:	4621      	mov	r1, r4
2fff9674:	eba8 0204 	sub.w	r2, r8, r4
2fff9678:	4638      	mov	r0, r7
2fff967a:	f7ff ffcd 	bl	2fff9618 <fdt_get_alias_namelen>
2fff967e:	4601      	mov	r1, r0
2fff9680:	b328      	cbz	r0, 2fff96ce <fdt_path_offset_namelen+0x8a>
2fff9682:	4638      	mov	r0, r7
2fff9684:	4644      	mov	r4, r8
2fff9686:	f000 f825 	bl	2fff96d4 <fdt_path_offset>
2fff968a:	4605      	mov	r5, r0
2fff968c:	42b4      	cmp	r4, r6
2fff968e:	d302      	bcc.n	2fff9696 <fdt_path_offset_namelen+0x52>
2fff9690:	e01a      	b.n	2fff96c8 <fdt_path_offset_namelen+0x84>
2fff9692:	42a6      	cmp	r6, r4
2fff9694:	d018      	beq.n	2fff96c8 <fdt_path_offset_namelen+0x84>
2fff9696:	46a0      	mov	r8, r4
2fff9698:	3401      	adds	r4, #1
2fff969a:	f898 3000 	ldrb.w	r3, [r8]
2fff969e:	2b2f      	cmp	r3, #47	; 0x2f
2fff96a0:	d0f7      	beq.n	2fff9692 <fdt_path_offset_namelen+0x4e>
2fff96a2:	eba6 0208 	sub.w	r2, r6, r8
2fff96a6:	212f      	movs	r1, #47	; 0x2f
2fff96a8:	4640      	mov	r0, r8
2fff96aa:	f000 f92b 	bl	2fff9904 <memchr>
2fff96ae:	2800      	cmp	r0, #0
2fff96b0:	bf14      	ite	ne
2fff96b2:	4604      	movne	r4, r0
2fff96b4:	4634      	moveq	r4, r6
2fff96b6:	4629      	mov	r1, r5
2fff96b8:	eba4 0308 	sub.w	r3, r4, r8
2fff96bc:	4642      	mov	r2, r8
2fff96be:	4638      	mov	r0, r7
2fff96c0:	f7ff feb5 	bl	2fff942e <fdt_subnode_offset_namelen>
2fff96c4:	1e05      	subs	r5, r0, #0
2fff96c6:	dae1      	bge.n	2fff968c <fdt_path_offset_namelen+0x48>
2fff96c8:	4628      	mov	r0, r5
2fff96ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff96ce:	f06f 0504 	mvn.w	r5, #4
2fff96d2:	e7f9      	b.n	2fff96c8 <fdt_path_offset_namelen+0x84>

2fff96d4 <fdt_path_offset>:
2fff96d4:	b538      	push	{r3, r4, r5, lr}
2fff96d6:	4605      	mov	r5, r0
2fff96d8:	4608      	mov	r0, r1
2fff96da:	460c      	mov	r4, r1
2fff96dc:	f000 faad 	bl	2fff9c3a <strlen>
2fff96e0:	4602      	mov	r2, r0
2fff96e2:	4621      	mov	r1, r4
2fff96e4:	4628      	mov	r0, r5
2fff96e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff96ea:	f7ff bfab 	b.w	2fff9644 <fdt_path_offset_namelen>

2fff96ee <fdt_supernode_atdepth_offset>:
2fff96ee:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff96f2:	4680      	mov	r8, r0
2fff96f4:	460d      	mov	r5, r1
2fff96f6:	4614      	mov	r4, r2
2fff96f8:	461e      	mov	r6, r3
2fff96fa:	f7ff fcd5 	bl	2fff90a8 <fdt_check_header>
2fff96fe:	b9b0      	cbnz	r0, 2fff972e <fdt_supernode_atdepth_offset+0x40>
2fff9700:	2c00      	cmp	r4, #0
2fff9702:	db25      	blt.n	2fff9750 <fdt_supernode_atdepth_offset+0x62>
2fff9704:	9001      	str	r0, [sp, #4]
2fff9706:	f06f 070c 	mvn.w	r7, #12
2fff970a:	4285      	cmp	r5, r0
2fff970c:	da02      	bge.n	2fff9714 <fdt_supernode_atdepth_offset+0x26>
2fff970e:	f06f 0003 	mvn.w	r0, #3
2fff9712:	e00c      	b.n	2fff972e <fdt_supernode_atdepth_offset+0x40>
2fff9714:	9b01      	ldr	r3, [sp, #4]
2fff9716:	429c      	cmp	r4, r3
2fff9718:	bf08      	it	eq
2fff971a:	4607      	moveq	r7, r0
2fff971c:	4285      	cmp	r5, r0
2fff971e:	d109      	bne.n	2fff9734 <fdt_supernode_atdepth_offset+0x46>
2fff9720:	b106      	cbz	r6, 2fff9724 <fdt_supernode_atdepth_offset+0x36>
2fff9722:	6033      	str	r3, [r6, #0]
2fff9724:	429c      	cmp	r4, r3
2fff9726:	bfd4      	ite	le
2fff9728:	4638      	movle	r0, r7
2fff972a:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
2fff972e:	b002      	add	sp, #8
2fff9730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff9734:	4601      	mov	r1, r0
2fff9736:	aa01      	add	r2, sp, #4
2fff9738:	4640      	mov	r0, r8
2fff973a:	f7ff fd87 	bl	2fff924c <fdt_next_node>
2fff973e:	2800      	cmp	r0, #0
2fff9740:	dae3      	bge.n	2fff970a <fdt_supernode_atdepth_offset+0x1c>
2fff9742:	1c42      	adds	r2, r0, #1
2fff9744:	d0e3      	beq.n	2fff970e <fdt_supernode_atdepth_offset+0x20>
2fff9746:	1d03      	adds	r3, r0, #4
2fff9748:	bf08      	it	eq
2fff974a:	f06f 000a 	mvneq.w	r0, #10
2fff974e:	e7ee      	b.n	2fff972e <fdt_supernode_atdepth_offset+0x40>
2fff9750:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff9754:	e7eb      	b.n	2fff972e <fdt_supernode_atdepth_offset+0x40>

2fff9756 <fdt_node_depth>:
2fff9756:	b507      	push	{r0, r1, r2, lr}
2fff9758:	2200      	movs	r2, #0
2fff975a:	ab01      	add	r3, sp, #4
2fff975c:	f7ff ffc7 	bl	2fff96ee <fdt_supernode_atdepth_offset>
2fff9760:	2800      	cmp	r0, #0
2fff9762:	d005      	beq.n	2fff9770 <fdt_node_depth+0x1a>
2fff9764:	db01      	blt.n	2fff976a <fdt_node_depth+0x14>
2fff9766:	f06f 000c 	mvn.w	r0, #12
2fff976a:	b003      	add	sp, #12
2fff976c:	f85d fb04 	ldr.w	pc, [sp], #4
2fff9770:	9801      	ldr	r0, [sp, #4]
2fff9772:	e7fa      	b.n	2fff976a <fdt_node_depth+0x14>

2fff9774 <fdt_parent_offset>:
2fff9774:	b570      	push	{r4, r5, r6, lr}
2fff9776:	4604      	mov	r4, r0
2fff9778:	460d      	mov	r5, r1
2fff977a:	f7ff ffec 	bl	2fff9756 <fdt_node_depth>
2fff977e:	1e02      	subs	r2, r0, #0
2fff9780:	db07      	blt.n	2fff9792 <fdt_parent_offset+0x1e>
2fff9782:	4629      	mov	r1, r5
2fff9784:	4620      	mov	r0, r4
2fff9786:	2300      	movs	r3, #0
2fff9788:	3a01      	subs	r2, #1
2fff978a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff978e:	f7ff bfae 	b.w	2fff96ee <fdt_supernode_atdepth_offset>
2fff9792:	bd70      	pop	{r4, r5, r6, pc}

2fff9794 <fdt_node_offset_by_phandle>:
2fff9794:	1e4b      	subs	r3, r1, #1
2fff9796:	3303      	adds	r3, #3
2fff9798:	b570      	push	{r4, r5, r6, lr}
2fff979a:	4605      	mov	r5, r0
2fff979c:	460e      	mov	r6, r1
2fff979e:	d817      	bhi.n	2fff97d0 <fdt_node_offset_by_phandle+0x3c>
2fff97a0:	f7ff fc82 	bl	2fff90a8 <fdt_check_header>
2fff97a4:	4604      	mov	r4, r0
2fff97a6:	b940      	cbnz	r0, 2fff97ba <fdt_node_offset_by_phandle+0x26>
2fff97a8:	4602      	mov	r2, r0
2fff97aa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff97ae:	4628      	mov	r0, r5
2fff97b0:	f7ff fd4c 	bl	2fff924c <fdt_next_node>
2fff97b4:	2800      	cmp	r0, #0
2fff97b6:	4604      	mov	r4, r0
2fff97b8:	da01      	bge.n	2fff97be <fdt_node_offset_by_phandle+0x2a>
2fff97ba:	4620      	mov	r0, r4
2fff97bc:	bd70      	pop	{r4, r5, r6, pc}
2fff97be:	4621      	mov	r1, r4
2fff97c0:	4628      	mov	r0, r5
2fff97c2:	f7ff ff07 	bl	2fff95d4 <fdt_get_phandle>
2fff97c6:	42b0      	cmp	r0, r6
2fff97c8:	d0f7      	beq.n	2fff97ba <fdt_node_offset_by_phandle+0x26>
2fff97ca:	2200      	movs	r2, #0
2fff97cc:	4621      	mov	r1, r4
2fff97ce:	e7ee      	b.n	2fff97ae <fdt_node_offset_by_phandle+0x1a>
2fff97d0:	f06f 0405 	mvn.w	r4, #5
2fff97d4:	e7f1      	b.n	2fff97ba <fdt_node_offset_by_phandle+0x26>

2fff97d6 <fdt_stringlist_contains>:
2fff97d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff97da:	4604      	mov	r4, r0
2fff97dc:	4610      	mov	r0, r2
2fff97de:	460d      	mov	r5, r1
2fff97e0:	4617      	mov	r7, r2
2fff97e2:	f000 fa2a 	bl	2fff9c3a <strlen>
2fff97e6:	4606      	mov	r6, r0
2fff97e8:	f100 0801 	add.w	r8, r0, #1
2fff97ec:	42b5      	cmp	r5, r6
2fff97ee:	db0b      	blt.n	2fff9808 <fdt_stringlist_contains+0x32>
2fff97f0:	4642      	mov	r2, r8
2fff97f2:	4621      	mov	r1, r4
2fff97f4:	4638      	mov	r0, r7
2fff97f6:	f000 f893 	bl	2fff9920 <memcmp>
2fff97fa:	b168      	cbz	r0, 2fff9818 <fdt_stringlist_contains+0x42>
2fff97fc:	462a      	mov	r2, r5
2fff97fe:	2100      	movs	r1, #0
2fff9800:	4620      	mov	r0, r4
2fff9802:	f000 f87f 	bl	2fff9904 <memchr>
2fff9806:	b910      	cbnz	r0, 2fff980e <fdt_stringlist_contains+0x38>
2fff9808:	2000      	movs	r0, #0
2fff980a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff980e:	1b04      	subs	r4, r0, r4
2fff9810:	3401      	adds	r4, #1
2fff9812:	1b2d      	subs	r5, r5, r4
2fff9814:	1c44      	adds	r4, r0, #1
2fff9816:	e7e9      	b.n	2fff97ec <fdt_stringlist_contains+0x16>
2fff9818:	2001      	movs	r0, #1
2fff981a:	e7f6      	b.n	2fff980a <fdt_stringlist_contains+0x34>

2fff981c <fdt_stringlist_search>:
2fff981c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff9820:	4698      	mov	r8, r3
2fff9822:	ab01      	add	r3, sp, #4
2fff9824:	f7ff fec4 	bl	2fff95b0 <fdt_getprop>
2fff9828:	4604      	mov	r4, r0
2fff982a:	b920      	cbnz	r0, 2fff9836 <fdt_stringlist_search+0x1a>
2fff982c:	9d01      	ldr	r5, [sp, #4]
2fff982e:	4628      	mov	r0, r5
2fff9830:	b002      	add	sp, #8
2fff9832:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff9836:	4640      	mov	r0, r8
2fff9838:	2500      	movs	r5, #0
2fff983a:	f000 f9fe 	bl	2fff9c3a <strlen>
2fff983e:	9e01      	ldr	r6, [sp, #4]
2fff9840:	1c47      	adds	r7, r0, #1
2fff9842:	4426      	add	r6, r4
2fff9844:	42b4      	cmp	r4, r6
2fff9846:	d302      	bcc.n	2fff984e <fdt_stringlist_search+0x32>
2fff9848:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff984c:	e7ef      	b.n	2fff982e <fdt_stringlist_search+0x12>
2fff984e:	1b31      	subs	r1, r6, r4
2fff9850:	4620      	mov	r0, r4
2fff9852:	f000 fa0e 	bl	2fff9c72 <strnlen>
2fff9856:	3001      	adds	r0, #1
2fff9858:	1823      	adds	r3, r4, r0
2fff985a:	429e      	cmp	r6, r3
2fff985c:	9001      	str	r0, [sp, #4]
2fff985e:	d30d      	bcc.n	2fff987c <fdt_stringlist_search+0x60>
2fff9860:	42b8      	cmp	r0, r7
2fff9862:	d003      	beq.n	2fff986c <fdt_stringlist_search+0x50>
2fff9864:	9b01      	ldr	r3, [sp, #4]
2fff9866:	3501      	adds	r5, #1
2fff9868:	441c      	add	r4, r3
2fff986a:	e7eb      	b.n	2fff9844 <fdt_stringlist_search+0x28>
2fff986c:	463a      	mov	r2, r7
2fff986e:	4641      	mov	r1, r8
2fff9870:	4620      	mov	r0, r4
2fff9872:	f000 f855 	bl	2fff9920 <memcmp>
2fff9876:	2800      	cmp	r0, #0
2fff9878:	d1f4      	bne.n	2fff9864 <fdt_stringlist_search+0x48>
2fff987a:	e7d8      	b.n	2fff982e <fdt_stringlist_search+0x12>
2fff987c:	f06f 050e 	mvn.w	r5, #14
2fff9880:	e7d5      	b.n	2fff982e <fdt_stringlist_search+0x12>
	...

2fff9884 <fdt_node_check_compatible>:
2fff9884:	b513      	push	{r0, r1, r4, lr}
2fff9886:	4614      	mov	r4, r2
2fff9888:	4a07      	ldr	r2, [pc, #28]	; (2fff98a8 <fdt_node_check_compatible+0x24>)
2fff988a:	ab01      	add	r3, sp, #4
2fff988c:	f7ff fe90 	bl	2fff95b0 <fdt_getprop>
2fff9890:	b910      	cbnz	r0, 2fff9898 <fdt_node_check_compatible+0x14>
2fff9892:	9801      	ldr	r0, [sp, #4]
2fff9894:	b002      	add	sp, #8
2fff9896:	bd10      	pop	{r4, pc}
2fff9898:	9901      	ldr	r1, [sp, #4]
2fff989a:	4622      	mov	r2, r4
2fff989c:	f7ff ff9b 	bl	2fff97d6 <fdt_stringlist_contains>
2fff98a0:	fab0 f080 	clz	r0, r0
2fff98a4:	0940      	lsrs	r0, r0, #5
2fff98a6:	e7f5      	b.n	2fff9894 <fdt_node_check_compatible+0x10>
2fff98a8:	2fffc505 	.word	0x2fffc505

2fff98ac <fdt_node_offset_by_compatible>:
2fff98ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff98ae:	4605      	mov	r5, r0
2fff98b0:	460f      	mov	r7, r1
2fff98b2:	4616      	mov	r6, r2
2fff98b4:	f7ff fbf8 	bl	2fff90a8 <fdt_check_header>
2fff98b8:	4604      	mov	r4, r0
2fff98ba:	b938      	cbnz	r0, 2fff98cc <fdt_node_offset_by_compatible+0x20>
2fff98bc:	4602      	mov	r2, r0
2fff98be:	4639      	mov	r1, r7
2fff98c0:	4628      	mov	r0, r5
2fff98c2:	f7ff fcc3 	bl	2fff924c <fdt_next_node>
2fff98c6:	2800      	cmp	r0, #0
2fff98c8:	4604      	mov	r4, r0
2fff98ca:	da01      	bge.n	2fff98d0 <fdt_node_offset_by_compatible+0x24>
2fff98cc:	4620      	mov	r0, r4
2fff98ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff98d0:	4632      	mov	r2, r6
2fff98d2:	4621      	mov	r1, r4
2fff98d4:	4628      	mov	r0, r5
2fff98d6:	f7ff ffd5 	bl	2fff9884 <fdt_node_check_compatible>
2fff98da:	1c43      	adds	r3, r0, #1
2fff98dc:	db04      	blt.n	2fff98e8 <fdt_node_offset_by_compatible+0x3c>
2fff98de:	2800      	cmp	r0, #0
2fff98e0:	d0f4      	beq.n	2fff98cc <fdt_node_offset_by_compatible+0x20>
2fff98e2:	2200      	movs	r2, #0
2fff98e4:	4621      	mov	r1, r4
2fff98e6:	e7eb      	b.n	2fff98c0 <fdt_node_offset_by_compatible+0x14>
2fff98e8:	4604      	mov	r4, r0
2fff98ea:	e7ef      	b.n	2fff98cc <fdt_node_offset_by_compatible+0x20>

2fff98ec <__assert>:
2fff98ec:	460a      	mov	r2, r1
2fff98ee:	4601      	mov	r1, r0
2fff98f0:	b508      	push	{r3, lr}
2fff98f2:	4803      	ldr	r0, [pc, #12]	; (2fff9900 <__assert+0x14>)
2fff98f4:	f000 f956 	bl	2fff9ba4 <printf>
2fff98f8:	f7f9 f858 	bl	2fff29ac <console_flush>
2fff98fc:	f7ff eba6 	blx	2fff904c <plat_panic_handler>
2fff9900:	2fffc510 	.word	0x2fffc510

2fff9904 <memchr>:
2fff9904:	4402      	add	r2, r0
2fff9906:	4603      	mov	r3, r0
2fff9908:	b2c9      	uxtb	r1, r1
2fff990a:	b510      	push	{r4, lr}
2fff990c:	4618      	mov	r0, r3
2fff990e:	4293      	cmp	r3, r2
2fff9910:	d101      	bne.n	2fff9916 <memchr+0x12>
2fff9912:	2000      	movs	r0, #0
2fff9914:	e003      	b.n	2fff991e <memchr+0x1a>
2fff9916:	7804      	ldrb	r4, [r0, #0]
2fff9918:	3301      	adds	r3, #1
2fff991a:	428c      	cmp	r4, r1
2fff991c:	d1f6      	bne.n	2fff990c <memchr+0x8>
2fff991e:	bd10      	pop	{r4, pc}

2fff9920 <memcmp>:
2fff9920:	4402      	add	r2, r0
2fff9922:	b510      	push	{r4, lr}
2fff9924:	4290      	cmp	r0, r2
2fff9926:	d101      	bne.n	2fff992c <memcmp+0xc>
2fff9928:	2000      	movs	r0, #0
2fff992a:	e006      	b.n	2fff993a <memcmp+0x1a>
2fff992c:	f810 3b01 	ldrb.w	r3, [r0], #1
2fff9930:	f811 4b01 	ldrb.w	r4, [r1], #1
2fff9934:	42a3      	cmp	r3, r4
2fff9936:	d0f5      	beq.n	2fff9924 <memcmp+0x4>
2fff9938:	1b18      	subs	r0, r3, r4
2fff993a:	bd10      	pop	{r4, pc}

2fff993c <memcpy>:
2fff993c:	440a      	add	r2, r1
2fff993e:	1e43      	subs	r3, r0, #1
2fff9940:	b510      	push	{r4, lr}
2fff9942:	4291      	cmp	r1, r2
2fff9944:	d100      	bne.n	2fff9948 <memcpy+0xc>
2fff9946:	bd10      	pop	{r4, pc}
2fff9948:	f811 4b01 	ldrb.w	r4, [r1], #1
2fff994c:	f803 4f01 	strb.w	r4, [r3, #1]!
2fff9950:	e7f7      	b.n	2fff9942 <memcpy+0x6>

2fff9952 <memmove>:
2fff9952:	b470      	push	{r4, r5, r6}
2fff9954:	4613      	mov	r3, r2
2fff9956:	1a46      	subs	r6, r0, r1
2fff9958:	4605      	mov	r5, r0
2fff995a:	4296      	cmp	r6, r2
2fff995c:	460c      	mov	r4, r1
2fff995e:	d302      	bcc.n	2fff9966 <memmove+0x14>
2fff9960:	bc70      	pop	{r4, r5, r6}
2fff9962:	f7ff bfeb 	b.w	2fff993c <memcpy>
2fff9966:	4414      	add	r4, r2
2fff9968:	4403      	add	r3, r0
2fff996a:	429d      	cmp	r5, r3
2fff996c:	d102      	bne.n	2fff9974 <memmove+0x22>
2fff996e:	4628      	mov	r0, r5
2fff9970:	bc70      	pop	{r4, r5, r6}
2fff9972:	4770      	bx	lr
2fff9974:	f814 2d01 	ldrb.w	r2, [r4, #-1]!
2fff9978:	f803 2d01 	strb.w	r2, [r3, #-1]!
2fff997c:	e7f5      	b.n	2fff996a <memmove+0x18>

2fff997e <memset>:
2fff997e:	4402      	add	r2, r0
2fff9980:	4603      	mov	r3, r0
2fff9982:	4293      	cmp	r3, r2
2fff9984:	d100      	bne.n	2fff9988 <memset+0xa>
2fff9986:	4770      	bx	lr
2fff9988:	f803 1b01 	strb.w	r1, [r3], #1
2fff998c:	e7f9      	b.n	2fff9982 <memset+0x4>

2fff998e <unsigned_num_print>:
2fff998e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff9992:	b087      	sub	sp, #28
2fff9994:	f10d 0a04 	add.w	sl, sp, #4
2fff9998:	4606      	mov	r6, r0
2fff999a:	9f10      	ldr	r7, [sp, #64]	; 0x40
2fff999c:	460d      	mov	r5, r1
2fff999e:	4690      	mov	r8, r2
2fff99a0:	4699      	mov	r9, r3
2fff99a2:	2400      	movs	r4, #0
2fff99a4:	46d3      	mov	fp, sl
2fff99a6:	4642      	mov	r2, r8
2fff99a8:	2300      	movs	r3, #0
2fff99aa:	4630      	mov	r0, r6
2fff99ac:	4629      	mov	r1, r5
2fff99ae:	3401      	adds	r4, #1
2fff99b0:	f7ff e900 	blx	2fff8bb4 <__aeabi_uldivmod>
2fff99b4:	b2d3      	uxtb	r3, r2
2fff99b6:	2a09      	cmp	r2, #9
2fff99b8:	bf94      	ite	ls
2fff99ba:	3330      	addls	r3, #48	; 0x30
2fff99bc:	3357      	addhi	r3, #87	; 0x57
2fff99be:	4546      	cmp	r6, r8
2fff99c0:	b2db      	uxtb	r3, r3
2fff99c2:	f80a 3b01 	strb.w	r3, [sl], #1
2fff99c6:	f175 0300 	sbcs.w	r3, r5, #0
2fff99ca:	d209      	bcs.n	2fff99e0 <unsigned_num_print+0x52>
2fff99cc:	2f00      	cmp	r7, #0
2fff99ce:	dc15      	bgt.n	2fff99fc <unsigned_num_print+0x6e>
2fff99d0:	2500      	movs	r5, #0
2fff99d2:	4626      	mov	r6, r4
2fff99d4:	3e01      	subs	r6, #1
2fff99d6:	d213      	bcs.n	2fff9a00 <unsigned_num_print+0x72>
2fff99d8:	1960      	adds	r0, r4, r5
2fff99da:	b007      	add	sp, #28
2fff99dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff99e0:	4606      	mov	r6, r0
2fff99e2:	460d      	mov	r5, r1
2fff99e4:	e7df      	b.n	2fff99a6 <unsigned_num_print+0x18>
2fff99e6:	4648      	mov	r0, r9
2fff99e8:	3d01      	subs	r5, #1
2fff99ea:	f000 f8e8 	bl	2fff9bbe <putchar>
2fff99ee:	42a5      	cmp	r5, r4
2fff99f0:	dcf9      	bgt.n	2fff99e6 <unsigned_num_print+0x58>
2fff99f2:	1b3d      	subs	r5, r7, r4
2fff99f4:	42bc      	cmp	r4, r7
2fff99f6:	bfc8      	it	gt
2fff99f8:	2500      	movgt	r5, #0
2fff99fa:	e7ea      	b.n	2fff99d2 <unsigned_num_print+0x44>
2fff99fc:	463d      	mov	r5, r7
2fff99fe:	e7f6      	b.n	2fff99ee <unsigned_num_print+0x60>
2fff9a00:	f81b 0006 	ldrb.w	r0, [fp, r6]
2fff9a04:	f000 f8db 	bl	2fff9bbe <putchar>
2fff9a08:	e7e4      	b.n	2fff99d4 <unsigned_num_print+0x46>
	...

2fff9a0c <vprintf>:
2fff9a0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff9a10:	2500      	movs	r5, #0
2fff9a12:	b085      	sub	sp, #20
2fff9a14:	4606      	mov	r6, r0
2fff9a16:	460c      	mov	r4, r1
2fff9a18:	46a8      	mov	r8, r5
2fff9a1a:	f04f 0a0a 	mov.w	sl, #10
2fff9a1e:	7830      	ldrb	r0, [r6, #0]
2fff9a20:	b918      	cbnz	r0, 2fff9a2a <vprintf+0x1e>
2fff9a22:	4628      	mov	r0, r5
2fff9a24:	b005      	add	sp, #20
2fff9a26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff9a2a:	2825      	cmp	r0, #37	; 0x25
2fff9a2c:	f106 0601 	add.w	r6, r6, #1
2fff9a30:	f040 80ad 	bne.w	2fff9b8e <vprintf+0x182>
2fff9a34:	f04f 0b00 	mov.w	fp, #0
2fff9a38:	465a      	mov	r2, fp
2fff9a3a:	e001      	b.n	2fff9a40 <vprintf+0x34>
2fff9a3c:	f04f 0830 	mov.w	r8, #48	; 0x30
2fff9a40:	7833      	ldrb	r3, [r6, #0]
2fff9a42:	2b30      	cmp	r3, #48	; 0x30
2fff9a44:	f000 8095 	beq.w	2fff9b72 <vprintf+0x166>
2fff9a48:	3b64      	subs	r3, #100	; 0x64
2fff9a4a:	b2d9      	uxtb	r1, r3
2fff9a4c:	2916      	cmp	r1, #22
2fff9a4e:	f200 80a2 	bhi.w	2fff9b96 <vprintf+0x18a>
2fff9a52:	2b16      	cmp	r3, #22
2fff9a54:	f200 809f 	bhi.w	2fff9b96 <vprintf+0x18a>
2fff9a58:	e8df f003 	tbb	[pc, r3]
2fff9a5c:	9d9d9d0c 	.word	0x9d9d9d0c
2fff9a60:	9d9d0c9d 	.word	0x9d9d0c9d
2fff9a64:	9d9d9d75 	.word	0x9d9d9d75
2fff9a68:	319d9d45 	.word	0x319d9d45
2fff9a6c:	9d9d789d 	.word	0x9d9d789d
2fff9a70:	9d62      	.short	0x9d62
2fff9a72:	76          	.byte	0x76
2fff9a73:	00          	.byte	0x00
2fff9a74:	2a01      	cmp	r2, #1
2fff9a76:	bfcb      	itete	gt
2fff9a78:	3407      	addgt	r4, #7
2fff9a7a:	f104 0904 	addle.w	r9, r4, #4
2fff9a7e:	f024 0407 	bicgt.w	r4, r4, #7
2fff9a82:	6827      	ldrle	r7, [r4, #0]
2fff9a84:	bfc5      	ittet	gt
2fff9a86:	46a1      	movgt	r9, r4
2fff9a88:	6864      	ldrgt	r4, [r4, #4]
2fff9a8a:	17fc      	asrle	r4, r7, #31
2fff9a8c:	f859 7b08 	ldrgt.w	r7, [r9], #8
2fff9a90:	2c00      	cmp	r4, #0
2fff9a92:	da11      	bge.n	2fff9ab8 <vprintf+0xac>
2fff9a94:	202d      	movs	r0, #45	; 0x2d
2fff9a96:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
2fff9a9a:	f000 f890 	bl	2fff9bbe <putchar>
2fff9a9e:	4278      	negs	r0, r7
2fff9aa0:	eb64 0144 	sbc.w	r1, r4, r4, lsl #1
2fff9aa4:	f8cd b000 	str.w	fp, [sp]
2fff9aa8:	4643      	mov	r3, r8
2fff9aaa:	220a      	movs	r2, #10
2fff9aac:	464c      	mov	r4, r9
2fff9aae:	f7ff ff6e 	bl	2fff998e <unsigned_num_print>
2fff9ab2:	4405      	add	r5, r0
2fff9ab4:	3601      	adds	r6, #1
2fff9ab6:	e7b2      	b.n	2fff9a1e <vprintf+0x12>
2fff9ab8:	4638      	mov	r0, r7
2fff9aba:	4621      	mov	r1, r4
2fff9abc:	e7f2      	b.n	2fff9aa4 <vprintf+0x98>
2fff9abe:	f854 9b04 	ldr.w	r9, [r4], #4
2fff9ac2:	f1b9 0f00 	cmp.w	r9, #0
2fff9ac6:	d10c      	bne.n	2fff9ae2 <vprintf+0xd6>
2fff9ac8:	4834      	ldr	r0, [pc, #208]	; (2fff9b9c <vprintf+0x190>)
2fff9aca:	211c      	movs	r1, #28
2fff9acc:	f7ff ff0e 	bl	2fff98ec <__assert>
2fff9ad0:	3701      	adds	r7, #1
2fff9ad2:	f000 f874 	bl	2fff9bbe <putchar>
2fff9ad6:	f819 0007 	ldrb.w	r0, [r9, r7]
2fff9ada:	2800      	cmp	r0, #0
2fff9adc:	d1f8      	bne.n	2fff9ad0 <vprintf+0xc4>
2fff9ade:	443d      	add	r5, r7
2fff9ae0:	e7e8      	b.n	2fff9ab4 <vprintf+0xa8>
2fff9ae2:	2700      	movs	r7, #0
2fff9ae4:	e7f7      	b.n	2fff9ad6 <vprintf+0xca>
2fff9ae6:	f854 9b04 	ldr.w	r9, [r4], #4
2fff9aea:	f1b9 0f00 	cmp.w	r9, #0
2fff9aee:	d007      	beq.n	2fff9b00 <vprintf+0xf4>
2fff9af0:	4b2b      	ldr	r3, [pc, #172]	; (2fff9ba0 <vprintf+0x194>)
2fff9af2:	2700      	movs	r7, #0
2fff9af4:	f813 0b01 	ldrb.w	r0, [r3], #1
2fff9af8:	b960      	cbnz	r0, 2fff9b14 <vprintf+0x108>
2fff9afa:	443d      	add	r5, r7
2fff9afc:	f1ab 0b02 	sub.w	fp, fp, #2
2fff9b00:	f8cd b000 	str.w	fp, [sp]
2fff9b04:	4643      	mov	r3, r8
2fff9b06:	2210      	movs	r2, #16
2fff9b08:	4648      	mov	r0, r9
2fff9b0a:	2100      	movs	r1, #0
2fff9b0c:	f7ff ff3f 	bl	2fff998e <unsigned_num_print>
2fff9b10:	4405      	add	r5, r0
2fff9b12:	e7cf      	b.n	2fff9ab4 <vprintf+0xa8>
2fff9b14:	9303      	str	r3, [sp, #12]
2fff9b16:	3701      	adds	r7, #1
2fff9b18:	f000 f851 	bl	2fff9bbe <putchar>
2fff9b1c:	9b03      	ldr	r3, [sp, #12]
2fff9b1e:	e7e9      	b.n	2fff9af4 <vprintf+0xe8>
2fff9b20:	2a01      	cmp	r2, #1
2fff9b22:	4643      	mov	r3, r8
2fff9b24:	bfca      	itet	gt
2fff9b26:	1de1      	addgt	r1, r4, #7
2fff9b28:	2100      	movle	r1, #0
2fff9b2a:	f021 0107 	bicgt.w	r1, r1, #7
2fff9b2e:	f04f 0210 	mov.w	r2, #16
2fff9b32:	bfd1      	iteee	le
2fff9b34:	f854 0b04 	ldrle.w	r0, [r4], #4
2fff9b38:	460c      	movgt	r4, r1
2fff9b3a:	6849      	ldrgt	r1, [r1, #4]
2fff9b3c:	f854 0b08 	ldrgt.w	r0, [r4], #8
2fff9b40:	f8cd b000 	str.w	fp, [sp]
2fff9b44:	e7e2      	b.n	2fff9b0c <vprintf+0x100>
2fff9b46:	3201      	adds	r2, #1
2fff9b48:	3601      	adds	r6, #1
2fff9b4a:	e779      	b.n	2fff9a40 <vprintf+0x34>
2fff9b4c:	2a01      	cmp	r2, #1
2fff9b4e:	4643      	mov	r3, r8
2fff9b50:	bfca      	itet	gt
2fff9b52:	1de1      	addgt	r1, r4, #7
2fff9b54:	2100      	movle	r1, #0
2fff9b56:	f021 0107 	bicgt.w	r1, r1, #7
2fff9b5a:	f04f 020a 	mov.w	r2, #10
2fff9b5e:	bfd1      	iteee	le
2fff9b60:	f854 0b04 	ldrle.w	r0, [r4], #4
2fff9b64:	460c      	movgt	r4, r1
2fff9b66:	6849      	ldrgt	r1, [r1, #4]
2fff9b68:	f854 0b08 	ldrgt.w	r0, [r4], #8
2fff9b6c:	f8cd b000 	str.w	fp, [sp]
2fff9b70:	e7cc      	b.n	2fff9b0c <vprintf+0x100>
2fff9b72:	1c71      	adds	r1, r6, #1
2fff9b74:	f04f 0b00 	mov.w	fp, #0
2fff9b78:	460e      	mov	r6, r1
2fff9b7a:	f811 3b01 	ldrb.w	r3, [r1], #1
2fff9b7e:	3b30      	subs	r3, #48	; 0x30
2fff9b80:	b2d8      	uxtb	r0, r3
2fff9b82:	2809      	cmp	r0, #9
2fff9b84:	f63f af5a 	bhi.w	2fff9a3c <vprintf+0x30>
2fff9b88:	fb0a 3b0b 	mla	fp, sl, fp, r3
2fff9b8c:	e7f4      	b.n	2fff9b78 <vprintf+0x16c>
2fff9b8e:	3501      	adds	r5, #1
2fff9b90:	f000 f815 	bl	2fff9bbe <putchar>
2fff9b94:	e743      	b.n	2fff9a1e <vprintf+0x12>
2fff9b96:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff9b9a:	e742      	b.n	2fff9a22 <vprintf+0x16>
2fff9b9c:	2fffc51f 	.word	0x2fffc51f
2fff9ba0:	2fffc531 	.word	0x2fffc531

2fff9ba4 <printf>:
2fff9ba4:	b40f      	push	{r0, r1, r2, r3}
2fff9ba6:	b507      	push	{r0, r1, r2, lr}
2fff9ba8:	a904      	add	r1, sp, #16
2fff9baa:	f851 0b04 	ldr.w	r0, [r1], #4
2fff9bae:	9101      	str	r1, [sp, #4]
2fff9bb0:	f7ff ff2c 	bl	2fff9a0c <vprintf>
2fff9bb4:	b003      	add	sp, #12
2fff9bb6:	f85d eb04 	ldr.w	lr, [sp], #4
2fff9bba:	b004      	add	sp, #16
2fff9bbc:	4770      	bx	lr

2fff9bbe <putchar>:
2fff9bbe:	b510      	push	{r4, lr}
2fff9bc0:	4604      	mov	r4, r0
2fff9bc2:	b2c0      	uxtb	r0, r0
2fff9bc4:	f7f8 fec6 	bl	2fff2954 <console_putc>
2fff9bc8:	2800      	cmp	r0, #0
2fff9bca:	bfac      	ite	ge
2fff9bcc:	4620      	movge	r0, r4
2fff9bce:	f04f 30ff 	movlt.w	r0, #4294967295	; 0xffffffff
2fff9bd2:	bd10      	pop	{r4, pc}

2fff9bd4 <strchr>:
2fff9bd4:	b2c9      	uxtb	r1, r1
2fff9bd6:	4603      	mov	r3, r0
2fff9bd8:	781a      	ldrb	r2, [r3, #0]
2fff9bda:	4618      	mov	r0, r3
2fff9bdc:	3301      	adds	r3, #1
2fff9bde:	428a      	cmp	r2, r1
2fff9be0:	d002      	beq.n	2fff9be8 <strchr+0x14>
2fff9be2:	2a00      	cmp	r2, #0
2fff9be4:	d1f8      	bne.n	2fff9bd8 <strchr+0x4>
2fff9be6:	4610      	mov	r0, r2
2fff9be8:	4770      	bx	lr

2fff9bea <strcmp>:
2fff9bea:	1e43      	subs	r3, r0, #1
2fff9bec:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2fff9bf0:	f811 2b01 	ldrb.w	r2, [r1], #1
2fff9bf4:	4290      	cmp	r0, r2
2fff9bf6:	d001      	beq.n	2fff9bfc <strcmp+0x12>
2fff9bf8:	1a80      	subs	r0, r0, r2
2fff9bfa:	e001      	b.n	2fff9c00 <strcmp+0x16>
2fff9bfc:	2800      	cmp	r0, #0
2fff9bfe:	d1f5      	bne.n	2fff9bec <strcmp+0x2>
2fff9c00:	4770      	bx	lr

2fff9c02 <strlcpy>:
2fff9c02:	4603      	mov	r3, r0
2fff9c04:	b510      	push	{r4, lr}
2fff9c06:	b192      	cbz	r2, 2fff9c2e <strlcpy+0x2c>
2fff9c08:	440a      	add	r2, r1
2fff9c0a:	4608      	mov	r0, r1
2fff9c0c:	4604      	mov	r4, r0
2fff9c0e:	3001      	adds	r0, #1
2fff9c10:	4290      	cmp	r0, r2
2fff9c12:	d103      	bne.n	2fff9c1c <strlcpy+0x1a>
2fff9c14:	2200      	movs	r2, #0
2fff9c16:	4620      	mov	r0, r4
2fff9c18:	701a      	strb	r2, [r3, #0]
2fff9c1a:	e009      	b.n	2fff9c30 <strlcpy+0x2e>
2fff9c1c:	f810 4c01 	ldrb.w	r4, [r0, #-1]
2fff9c20:	f803 4b01 	strb.w	r4, [r3], #1
2fff9c24:	2c00      	cmp	r4, #0
2fff9c26:	d1f1      	bne.n	2fff9c0c <strlcpy+0xa>
2fff9c28:	1a40      	subs	r0, r0, r1
2fff9c2a:	3801      	subs	r0, #1
2fff9c2c:	bd10      	pop	{r4, pc}
2fff9c2e:	4608      	mov	r0, r1
2fff9c30:	f810 3b01 	ldrb.w	r3, [r0], #1
2fff9c34:	2b00      	cmp	r3, #0
2fff9c36:	d1fb      	bne.n	2fff9c30 <strlcpy+0x2e>
2fff9c38:	e7f6      	b.n	2fff9c28 <strlcpy+0x26>

2fff9c3a <strlen>:
2fff9c3a:	4603      	mov	r3, r0
2fff9c3c:	461a      	mov	r2, r3
2fff9c3e:	3301      	adds	r3, #1
2fff9c40:	7811      	ldrb	r1, [r2, #0]
2fff9c42:	2900      	cmp	r1, #0
2fff9c44:	d1fa      	bne.n	2fff9c3c <strlen+0x2>
2fff9c46:	1a10      	subs	r0, r2, r0
2fff9c48:	4770      	bx	lr

2fff9c4a <strncmp>:
2fff9c4a:	4603      	mov	r3, r0
2fff9c4c:	4610      	mov	r0, r2
2fff9c4e:	b510      	push	{r4, lr}
2fff9c50:	b142      	cbz	r2, 2fff9c64 <strncmp+0x1a>
2fff9c52:	188c      	adds	r4, r1, r2
2fff9c54:	3b01      	subs	r3, #1
2fff9c56:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2fff9c5a:	f811 2b01 	ldrb.w	r2, [r1], #1
2fff9c5e:	4290      	cmp	r0, r2
2fff9c60:	d001      	beq.n	2fff9c66 <strncmp+0x1c>
2fff9c62:	1a80      	subs	r0, r0, r2
2fff9c64:	bd10      	pop	{r4, pc}
2fff9c66:	2800      	cmp	r0, #0
2fff9c68:	d0fc      	beq.n	2fff9c64 <strncmp+0x1a>
2fff9c6a:	428c      	cmp	r4, r1
2fff9c6c:	d1f3      	bne.n	2fff9c56 <strncmp+0xc>
2fff9c6e:	2000      	movs	r0, #0
2fff9c70:	e7f8      	b.n	2fff9c64 <strncmp+0x1a>

2fff9c72 <strnlen>:
2fff9c72:	4603      	mov	r3, r0
2fff9c74:	2000      	movs	r0, #0
2fff9c76:	4288      	cmp	r0, r1
2fff9c78:	d100      	bne.n	2fff9c7c <strnlen+0xa>
2fff9c7a:	4770      	bx	lr
2fff9c7c:	5c1a      	ldrb	r2, [r3, r0]
2fff9c7e:	2a00      	cmp	r2, #0
2fff9c80:	d0fb      	beq.n	2fff9c7a <strnlen+0x8>
2fff9c82:	3001      	adds	r0, #1
2fff9c84:	e7f7      	b.n	2fff9c76 <strnlen+0x4>

2fff9c86 <strrchr>:
2fff9c86:	4603      	mov	r3, r0
2fff9c88:	b2c9      	uxtb	r1, r1
2fff9c8a:	2000      	movs	r0, #0
2fff9c8c:	b510      	push	{r4, lr}
2fff9c8e:	461c      	mov	r4, r3
2fff9c90:	f813 2b01 	ldrb.w	r2, [r3], #1
2fff9c94:	428a      	cmp	r2, r1
2fff9c96:	bf08      	it	eq
2fff9c98:	4620      	moveq	r0, r4
2fff9c9a:	2a00      	cmp	r2, #0
2fff9c9c:	d1f7      	bne.n	2fff9c8e <strrchr+0x8>
2fff9c9e:	bd10      	pop	{r4, pc}

2fff9ca0 <build_message>:
2fff9ca0:	7542 6c69 2074 203a 3831 303a 3a33 3332     Built : 18:03:23
2fff9cb0:	202c 754a 206e 3732 3220 3230 0032          , Jun 27 2022.

2fff9cbe <version_string>:
2fff9cbe:	3276 322e 722d 2e31 2830 6564 7562 2967     v2.2-r1.0(debug)
2fff9cce:	663a 3737 6665 3130 642d 7269 7974 6200     :f77ef01-dirty.b
2fff9cde:	336c 2f32 7073 6d5f 6e69 732f 5f70 696d     l32/sp_min/sp_mi
2fff9cee:	5f6e 616d 6e69 632e 1400 5053 4d5f 4e49     n_main.c..SP_MIN
2fff9cfe:	203a 7325 000a 5328 5f50 494d 3a4e 4920     : %s..(SP_MIN: I
2fff9d0e:	696e 6974 6c61 7a69 6e69 2067 7572 746e     nitializing runt
2fff9d1e:	6d69 2065 6573 7672 6369 7365 000a 5328     ime services..(S
2fff9d2e:	5f50 494d 3a4e 5020 6572 6170 6972 676e     P_MIN: Preparing
2fff9d3e:	6520 6978 2074 6f74 6e20 726f 616d 206c      exit to normal 
2fff9d4e:	6f77 6c72 0a64 0000 0000                    world.....

2fff9d58 <psci_args.0>:
2fff9d58:	0106 000c 0000 0000 d2e0 2ffe 6f63 6d6d     .........../comm
2fff9d68:	6e6f 722f 6e75 6974 656d 735f 6376 632e     on/runtime_svc.c
2fff9d78:	0a00 6e49 6176 696c 2064 7572 746e 6d69     ..Invalid runtim
2fff9d88:	2065 6573 7672 6369 2065 6564 6373 6972     e service descri
2fff9d98:	7470 726f 2520 0a70 0a00 7245 6f72 2072     ptor %p...Error 
2fff9da8:	6e69 7469 6169 696c 697a 676e 7220 6e75     initializing run
2fff9db8:	6974 656d 7320 7265 6976 6563 2520 0a73     time service %s.
2fff9dc8:	1e00 6e55 6d69 6c70 6d65 6e65 6574 2064     ..Unimplemented 
2fff9dd8:	7453 6e61 6164 6472 5320 7265 6976 6563     Standard Service
2fff9de8:	4320 6c61 3a6c 3020 2578 2078 000a 6573      Call: 0x%x ..se
2fff9df8:	7672 6369 7365 732f 6474 735f 6376 732f     rvices/std_svc/s
2fff9e08:	6474 735f 6376 735f 7465 7075 632e 7300     td_svc_setup.c.s
2fff9e18:	6474 735f 6376 6c00 6269 652f 336c 725f     td_svc.lib/el3_r
2fff9e28:	6e75 6974 656d 612f 7261 6863 3233 632f     untime/aarch32/c
2fff9e38:	6e6f 6574 7478 6d5f 6d67 2e74 0063 696c     ontext_mgmt.c.li
2fff9e48:	2f62 7370 6963 702f 6373 5f69 666f 2e66     b/psci/psci_off.
2fff9e58:	0063 696c 2f62 7370 6963 702f 6373 5f69     c.lib/psci/psci_
2fff9e68:	6e6f 632e 6c00 6269 702f 6373 2f69 7370     on.c.lib/psci/ps
2fff9e78:	6963 735f 7375 6570 646e 632e 6c00 6269     ci_suspend.c.lib
2fff9e88:	702f 6373 2f69 7370 6963 635f 6d6f 6f6d     /psci/psci_commo
2fff9e98:	2e6e 0063 550a 656e 7078 6365 6574 2064     n.c..Unexpected 
2fff9ea8:	6661 6966 696e 7974 6920 666e 206f 7473     affinity info st
2fff9eb8:	7461 0065 5028 4353 2049 6f50 6577 2072     ate.(PSCI Power 
2fff9ec8:	6f44 616d 6e69 4d20 7061 0a3a 2800 2020     Domain Map:..(  
2fff9ed8:	6f44 616d 6e69 4e20 646f 2065 203a 654c     Domain Node : Le
2fff9ee8:	6576 206c 7525 202c 6170 6572 746e 6e5f     vel %u, parent_n
2fff9ef8:	646f 2065 6425 202c 7453 7461 2065 7325     ode %d, State %s
2fff9f08:	2820 7830 7825 0a29 2800 2020 5043 2055      (0x%x)..(  CPU 
2fff9f18:	6f4e 6564 3a20 4d20 4950 2044 7830 6c25     Node : MPID 0x%l
2fff9f28:	786c 202c 6170 6572 746e 6e5f 646f 2065     lx, parent_node 
2fff9f38:	6425 202c 7453 7461 2065 7325 2820 7830     %d, State %s (0x
2fff9f48:	7825 0a29 5200 5445 4e45 4954 4e4f 4f00     %x)..RETENTION.O
2fff9f58:	4646 0000 0000 0000                         FF......

2fff9f60 <psci_state_type_str.0>:
2fff9f60:	9f54 2fff 9f4d 2fff 9f57 2fff 696c 2f62     T../M../W../lib/
2fff9f70:	7370 6963 702f 6373 5f69 616d 6e69 632e     psci/psci_main.c
2fff9f80:	0a00 6e49 6176 696c 2064 6174 6772 7465     ..Invalid target
2fff9f90:	7020 776f 7265 6c20 7665 6c65 6620 726f      power level for
2fff9fa0:	7320 7375 6570 646e 6f20 6570 6172 6974      suspend operati
2fff9fb0:	6e6f 000a 551e 696e 706d 656c 656d 746e     on...Unimplement
2fff9fc0:	6465 5020 4353 2049 6143 6c6c 203a 7830     ed PSCI Call: 0x
2fff9fd0:	7825 000a 0000 696c 2f62 7370 6963 702f     %x....lib/psci/p
2fff9fe0:	6373 5f69 6573 7574 2e70 0063 696c 2f62     sci_setup.c.lib/
2fff9ff0:	7370 6963 702f 6373 5f69 7973 7473 6d65     psci/psci_system
2fffa000:	6f5f 6666 632e 6c00 6269 702f 6373 2f69     _off.c.lib/psci/
2fffa010:	7370 6963 6d5f 6d65 705f 6f72 6574 7463     psci_mem_protect
2fffa020:	632e 6c00 6269 6c2f 636f 736b 622f 6b61     .c.lib/locks/bak
2fffa030:	7265 2f79 6162 656b 7972 6c5f 636f 5f6b     ery/bakery_lock_
2fffa040:	6f6e 6d72 6c61 632e 4800 4953 4300 4953     normal.c.HSI.CSI
2fffa050:	0a00 7325 4320 6c61 6269 6172 6974 6e6f     ..%s Calibration
2fffa060:	3a20 4620 6572 2071 6c25 2c75 7420 6972      : Freq %lu, tri
2fffa070:	206d 6925 000a 7473 682c 6973 632d 6c61     m %i..st,hsi-cal
2fffa080:	7300 2c74 7363 2d69 6163 006c 7473 632c     .st,csi-cal.st,c
2fffa090:	6c61 732d 6365 6d00 7563 735f 7665 6400     al-sec.mcu_sev.d
2fffa0a0:	6972 6576 7372 732f 2f74 7465 707a 2f63     rivers/st/etzpc/
2fffa0b0:	7465 707a 2e63 0063 7473 732c 6d74 3233     etzpc.c.st,stm32
2fffa0c0:	652d 7a74 6370 7300 2c74 6564 7063 6f72     -etzpc.st,decpro
2fffa0d0:	0074 4e28 206f 5445 505a 2043 6f63 666e     t.(No ETZPC conf
2fffa0e0:	6769 7275 7461 6f69 206e 6e69 4420 2c54     iguration in DT,
2fffa0f0:	7520 6573 6420 6665 7561 746c 000a 490a      use default...I
2fffa100:	766e 6c61 6469 4420 4345 5250 544f 2520     nvalid DECPROT %
2fffa110:	0064 520a 474e 6e20 696f 6573 000a 7473     d..RNG noise..st
2fffa120:	732c 6d74 3233 722d 676e 6400 6972 6576     ,stm32-rng.drive
2fffa130:	7372 732f 2f74 6e72 2f67 7473 336d 5f32     rs/st/rng/stm32_
2fffa140:	6e72 2e67 0063 7264 7669 7265 2f73 7473     rng.c.drivers/st
2fffa150:	722f 6374 732f 6d74 3233 725f 6374 632e     /rtc/stm32_rtc.c
2fffa160:	7300 2c74 7473 336d 6d32 3170 722d 6374     .st,stm32mp1-rtc
	...

2fffa171 <month_len.0>:
2fffa171:	1c1f 1e1f 1e1f 1f1f 1f1e 1f1e 7264 7669     ............driv
2fffa181:	7265 2f73 7473 742f 6d61 6570 2f72 7473     ers/st/tamper/st
2fffa191:	336d 5f32 6174 706d 632e 0a00 6341 6974     m32_tamp.c..Acti
2fffa1a1:	6576 7420 6d61 6570 3a72 5320 4545 2044     ve tamper: SEED 
2fffa1b1:	6f6e 2074 6e69 7469 6169 696c 657a 0a64     not initialized.
2fffa1c1:	2800 6154 706d 7265 4520 6576 746e 4f20     .(Tamper Event O
2fffa1d1:	6363 7275 6572 0a64 2800 6144 6574 3a20     ccurred..(Date :
2fffa1e1:	2520 2f75 7525 200a 2009 6954 656d 3a20      %u/%u. . Time :
2fffa1f1:	2520 3a75 7525 253a 0a75 7300 2c74 7473      %u:%u:%u..st,st
2fffa201:	336d 2d32 6174 706d 0a00 6154 706d 7265     m32-tamp..Tamper
2fffa211:	4920 2050 6f64 7365 276e 2074 7573 7070      IP doesn't supp
2fffa221:	726f 2074 7274 7375 7a74 6e6f 0065 7473     ort trustzone.st
2fffa231:	6f2c 7475 2d33 6370 3331 7700 6b61 7565     ,out3-pc13.wakeu
2fffa241:	2d70 6f73 7275 6563 1e00 6954 656d 2072     p-source..Timer 
2fffa251:	7369 6e20 746f 6120 6363 7275 7461 2065     is not accurate 
2fffa261:	6e65 756f 6867 6620 726f 6320 6c61 6269     enough for calib
2fffa271:	6172 6974 6e6f 000a 7473 732c 6d74 3233     ration..st,stm32
2fffa281:	742d 6d69 7265 0073 251e 3a73 4e20 206f     -timers..%s: No 
2fffa291:	4954 454d 2052 6f66 6e75 0a64 7300 2c74     TIMER found..st,
2fffa2a1:	7368 2d69 6163 2d6c 6e69 7570 0074 7473     hsi-cal-input.st
2fffa2b1:	632c 6973 632d 6c61 692d 706e 7475           ,csi-cal-input.

2fffa2c0 <__func__.0>:
2fffa2c0:	7473 336d 5f32 6974 656d 5f72 6567 5f74     stm32_timer_get_
2fffa2d0:	7464 6e5f 646f 0065 540a 6d61 6570 2072     dt_node..Tamper 
2fffa2e0:	7325 6f20 6363 7275 0a73 0a00 5453 334d     %s occurs...STM3
2fffa2f0:	4d32 3150 495f 5152 415f 4958 5245 4952     2MP1_IRQ_AXIERRI
2fffa300:	5152 6720 6e65 7265 7461 6465 000a 490a     RQ generated...I
2fffa310:	5152 415f 4958 5245 4952 5152 6820 6e61     RQ_AXIERRIRQ han
2fffa320:	6c64 2065 6163 6c6c 7720 6f2f 6120 796e     dle call w/o any
2fffa330:	6620 616c 2067 6573 2174 0a21 0a00 6f4e      flag set!!...No
2fffa340:	4920 2054 6168 646e 656c 2072 6e69 4120      IT handler in A
2fffa350:	4d52 7420 637a 3034 2030 7264 7669 7265     RM tzc400 driver
2fffa360:	000a 490a 5152 415f 4958 5245 4952 5152     ...IRQ_AXIERRIRQ
2fffa370:	6320 7561 6573 6320 6e61 7427 6220 2065      cause can't be 
2fffa380:	6564 6574 7463 6465 0a00 4553 5543 4552     detected..SECURE
2fffa390:	4920 2054 6168 646e 656c 2072 6f6e 2074      IT handler not 
2fffa3a0:	6564 6966 656e 6620 726f 6920 2074 203a     define for it : 
2fffa3b0:	7525 000a 6c70 7461 732f 2f74 7473 336d     %u..plat/st/stm3
2fffa3c0:	6d32 3170 732f 5f70 696d 2f6e 7073 6d5f     2mp1/sp_min/sp_m
2fffa3d0:	6e69 735f 7465 7075 632e 1e00 5452 2043     in_setup.c..RTC 
2fffa3e0:	7264 7669 7265 6920 696e 2074 7265 6f72     driver init erro
2fffa3f0:	2072 6925 000a 521e 474e 6420 6972 6576     r %i...RNG drive
2fffa400:	2072 6e69 7469 6520 7272 726f 2520 0a69     r init error %i.
2fffa410:	7700 6b61 7565 0070 690a 7172 6e5f 6d75     .wakeup..irq_num
2fffa420:	3d20 2520 0a64 5200 4354 7020 776f 7265      = %d..RTC power
2fffa430:	6420 6d6f 6961 006e 6554 706d 7265 7461      domain.Temperat
2fffa440:	7275 2065 6f6d 696e 6f74 6972 676e 4c00     ure monitoring.L
2fffa450:	4553 6d20 6e6f 7469 726f 6e69 0067 5348     SE monitoring.HS
2fffa460:	2045 6f6d 696e 6f74 6972 676e 5200 4354     E monitoring.RTC
2fffa470:	6320 6c61 6e65 6164 2072 766f 7265 6c66      calendar overfl
2fffa480:	776f 4d00 6e6f 746f 6e6f 6369 6320 756f     ow.Monotonic cou
2fffa490:	746e 7265 0000 0000                         nter....

2fffa498 <tamper_name>:
2fffa498:	a427 2fff a438 2fff a44f 2fff a45e 2fff     '../8../O../^../
2fffa4a8:	a46d 2fff a483 2fff 6c70 7461 732f 2f74     m../.../plat/st/
2fffa4b8:	7473 336d 6d32 3170 732f 6d74 3233 706d     stm32mp1/stm32mp
2fffa4c8:	5f31 6f6c 5f77 6f70 6577 2e72 0063 441e     1_low_power.c..D
2fffa4d8:	5244 6320 6e61 7427 6220 2065 6573 2074     DR can't be set 
2fffa4e8:	6e69 5320 6c65 2d66 6572 7266 7365 2068     in Self-refresh 
2fffa4f8:	6f6d 6564 000a 706c 732d 6f74 0070 706c     mode..lp-stop.lp
2fffa508:	766c 732d 6f74 0070 7473 6e61 6264 2d79     lv-stop.standby-
2fffa518:	6464 2d72 7273 7300 6174 646e 7962 642d     ddr-sr.standby-d
2fffa528:	7264 6f2d 6666 0000                         dr-off..

2fffa530 <config_pwr>:
2fffa530:	0000 0000 0200 0000 0000 0000 0000 0000     ................
2fffa540:	0208 0000 0000 0000 0001 0000 0208 0000     ................
2fffa550:	a4fe 2fff 0007 0000 0208 0000 a506 2fff     .../.........../
2fffa560:	0000 0000 0209 0000 a510 2fff 0000 0000     .........../....
2fffa570:	0209 0000 a51f 2fff 0000 0000 0000 0000     ......./........
2fffa580:	a51f 2fff 6c70 7461 732f 2f74 7473 336d     .../plat/st/stm3
2fffa590:	6d32 3170 732f 6d74 3233 706d 5f31 6d70     2mp1/stm32mp1_pm
2fffa5a0:	632e 0000                                   .c..

2fffa5a4 <stm32_psci_ops>:
2fffa5a4:	054d 2fff 04c9 2fff 03c5 2fff 0000 0000     M../.../.../....
2fffa5b4:	0425 2fff 04b5 2fff 0000 0000 0589 2fff     %../.../......./
2fffa5c4:	0479 2fff 043d 2fff 0411 2fff 03c7 2fff     y../=../.../.../
2fffa5d4:	03e5 2fff 0409 2fff 0000 0000 0000 0000     .../.../........
2fffa5e4:	03fd 2fff 0000 0000 0000 0000 0000 0000     .../............
2fffa5f4:	0000 0000 7973 7473 6d65 6f5f 6666 735f     ....system_off_s
2fffa604:	636f 6d5f 646f 0065 4e0a 646f 2065 7325     oc_mode..Node %s
2fffa614:	6e20 746f 6620 756f 646e 000a 7473 732c      not found..st,s
2fffa624:	6d74 3233 706d 2c31 7770 2d72 6572 0067     tm32mp1,pwr-reg.
2fffa634:	7973 7473 6d65 735f 7375 6570 646e 735f     system_suspend_s
2fffa644:	7075 6f70 7472 6465 735f 636f 6d5f 646f     upported_soc_mod
2fffa654:	7365 0a00 5750 2052 5444 000a 490a 766e     es..PWR DT...Inv
2fffa664:	6c61 6469 6d20 646f 0a65 7000 616c 2f74     alid mode..plat/
2fffa674:	7473 732f 6d74 3233 706d 2f31 7473 336d     st/stm32mp1/stm3
2fffa684:	6d32 3170 705f 776f 7265 635f 6e6f 6966     2mp1_power_confi
2fffa694:	2e67 0063 490a 766e 6c61 6469 4920 2044     g.c..Invalid ID 
2fffa6a4:	7525 2800 5445 505a 3a43 2520 2073 2528     %u.(ETZPC: %s (%
2fffa6b4:	2964 6320 756f 646c 6220 2065 6f6e 206e     d) could be non 
2fffa6c4:	6573 7563 6572 000a 450a 5a54 4350 203a     secure...ETZPC: 
2fffa6d4:	7325 2820 6425 2029 7865 6570 7463 6465     %s (%d) expected
2fffa6e4:	7320 6365 7275 2065 7562 2074 4544 5043      secure but DECP
2fffa6f4:	4f52 2054 203d 6425 000a 6c70 7461 732f     ROT = %d..plat/s
2fffa704:	2f74 7473 336d 6d32 3170 732f 6d74 3233     t/stm32mp1/stm32
2fffa714:	706d 5f31 6873 7261 6465 725f 7365 756f     mp1_shared_resou
2fffa724:	6372 7365 632e 0a00 6e49 6176 696c 2064     rces.c..Invalid 
2fffa734:	5047 4f49 7020 6e69 2520 2c75 2520 2075     GPIO pin %u, %u 
2fffa744:	6970 286e 2973 6120 6176 6c69 6261 656c     pin(s) available
2fffa754:	000a 470a 4950 204f 6162 6b6e 2520 2075     ...GPIO bank %u 
2fffa764:	6163 6e6e 746f 6220 2065 6573 7563 6572     cannot be secure
2fffa774:	0a64 6e00 6e6f 7320 6365 7275 0065 6f6e     d..non secure.no
2fffa784:	2074 6573 0074 6553 7563 6572 2800 7473     t set.Secure.(st
2fffa794:	336d 6d32 2070 7325 2820 7525 3a29 2520     m32mp %s (%u): %
2fffa7a4:	0a73 0a00 4352 2043 7325 4d20 4b43 5250     s...RCC %s MCKPR
2fffa7b4:	544f 2520 2073 6e61 2064 7325 2820 7525     OT %s and %s (%u
2fffa7c4:	2029 6573 7563 6572 000a 5749 4744 0031     ) secure..IWDG1.
2fffa7d4:	4155 5452 0031 5053 3649 4900 4332 0034     UART1.SPI6.I2C4.
2fffa7e4:	4e52 3147 4800 5341 3148 4300 5952 3150     RNG1.HASH1.CRYP1
2fffa7f4:	4900 4332 0036 5453 4547 004e 4b42 5350     .I2C6.STGEN.BKPS
2fffa804:	4152 004d 4444 4352 5254 004c 4444 5052     RAM.DDRCTRL.DDRP
2fffa814:	5948 4700 4950 5a4f 0030 5047 4f49 315a     HY.GPIOZ0.GPIOZ1
2fffa824:	4700 4950 5a4f 0032 5047 4f49 335a 4700     .GPIOZ2.GPIOZ3.G
2fffa834:	4950 5a4f 0034 5047 4f49 355a 4700 4950     PIOZ4.GPIOZ5.GPI
2fffa844:	5a4f 0036 5047 4f49 375a 4d00 5543 4d00     OZ6.GPIOZ7.MCU.M
2fffa854:	4d44 0041 5452 0043 5355 5241 3154 5000     DMA.RTC.USART1.P
2fffa864:	4c4c 0033                                   LL3.

2fffa868 <shres2decprot_tbl>:
2fffa868:	000c 0000 0002 0000 a7ce 2fff 0012 0000     .........../....
2fffa878:	0003 0000 a7d4 2fff 0011 0000 0004 0000     ......./........
2fffa888:	a7da 2fff 000a 0000 0005 0000 a7df 2fff     .../.........../
2fffa898:	000f 0000 0007 0000 a7e4 2fff 0009 0000     .........../....
2fffa8a8:	0008 0000 a7e9 2fff 0000 0000 0009 0000     ......./........
2fffa8b8:	a7ef 2fff 000b 0000 000c 0000 a7f5 2fff     .../.........../
2fffa8c8:	ffff ffff 0000 0000 a7fa 2fff ffff ffff     .........../....
2fffa8d8:	0001 0000 a800 2fff ffff ffff 000a 0000     ......./........
2fffa8e8:	a808 2fff ffff ffff 000b 0000 a810 2fff     .../.........../

2fffa8f8 <shres2str_id_tbl>:
2fffa8f8:	a7ef 2fff a817 2fff a81e 2fff a825 2fff     .../.../.../%../
2fffa908:	a82c 2fff a833 2fff a83a 2fff a841 2fff     ,../3../:../A../
2fffa918:	a848 2fff a7e9 2fff a7df 2fff a7f5 2fff     H../.../.../.../
2fffa928:	a7ce 2fff a84f 2fff a853 2fff a7e4 2fff     .../O../S../.../
2fffa938:	a858 2fff a7da 2fff a85c 2fff a863 2fff     X../.../\../c../

2fffa948 <stm32mp1_power_domain_tree_desc>:
2fffa948:	0201 7264 7669 7265 2f73 7261 2f6d 6967     ..drivers/arm/gi
2fffa958:	2f63 3276 672f 6369 3276 685f 6c65 6570     c/v2/gicv2_helpe
2fffa968:	7372 632e 6400 6972 6576 7372 612f 6d72     rs.c.drivers/arm
2fffa978:	672f 6369 762f 2f32 6967 7663 5f32 616d     /gic/v2/gicv2_ma
2fffa988:	6e69 632e 2800 5241 204d 4947 7643 2032     in.c.(ARM GICv2 
2fffa998:	7264 7669 7265 6920 696e 6974 6c61 7a69     driver initializ
2fffa9a8:	6465 000a 7261 2c6d 6f63 7472 7865 612d     ed..arm,cortex-a
2fffa9b8:	2d37 6967 0063 6923 746e 7265 7572 7470     7-gic.#interrupt
2fffa9c8:	632d 6c65 736c 6900 746e 7265 7572 7470     -cells.interrupt
2fffa9d8:	702d 7261 6e65 0074 6573 7563 6572 692d     -parent.secure-i
2fffa9e8:	746e 7265 7572 7470 6e2d 6d61 7365 0000     nterrupt-names..

2fffa9f8 <stm32_interrupt_props>:
2fffa9f8:	001d 0000 00f4 0000 0024 0000 0009 0020     ........$..... .
2fffaa08:	000a 0020 000b 0020 000c 0020 000d 0020     .. ... ... ... .
2fffaa18:	000f 0020 0008 0020 000e 0020 6c70 7461     .. ... ... .plat
2fffaa28:	632f 6d6f 6f6d 2f6e 6c70 7461 705f 6373     /common/plat_psc
2fffaa38:	5f69 6f63 6d6d 6e6f 632e 1e00 6e55 6d69     i_common.c..Unim
2fffaa48:	6c70 6d65 6e65 6574 2064 5453 334d 4d32     plemented STM32M
2fffaa58:	3150 5320 7265 6976 6563 4320 6c61 3a6c     P1 Service Call:
2fffaa68:	3020 2578 0a78 7300 6d74 3233 706d 5f31      0x%x..stm32mp1_
2fffaa78:	6973 5f70 7673 0063 7264 7669 7265 2f73     sip_svc.drivers/
2fffaa88:	7473 732f 6d63 2d69 736d 2f67 6162 6573     st/scmi-msg/base
2fffaa98:	632e 0000                                   .c..

2fffaa9c <scmi_base_handler_table>:
2fffaa9c:	1c21 2fff 1cf1 2fff 1bdd 2fff 1c9d 2fff     !../.../.../.../
2fffaaac:	1c49 2fff 1bb9 2fff 1b2d 2fff 7264 7669     I../.../-../driv
2fffaabc:	7265 2f73 7473 732f 6d63 2d69 736d 2f67     ers/st/scmi-msg/
2fffaacc:	6c63 636f 2e6b 0063                         clock.c.

2fffaad4 <scmi_clock_handler_table>:
2fffaad4:	1d95 2fff 1ded 2fff 1d51 2fff 1fc9 2fff     .../.../Q../.../
2fffaae4:	1e21 2fff 1f7d 2fff 1f1d 2fff 2059 2fff     !../}../.../Y ./
2fffaaf4:	7264 7669 7265 2f73 7473 732f 6d63 2d69     drivers/st/scmi-
2fffab04:	736d 2f67 6e65 7274 2e79 0063 410a 6567     msg/entry.c..Age
2fffab14:	746e 2520 2075 7250 746f 636f 6c6f 3020     nt %u Protocol 0
2fffab24:	2578 2078 654d 7373 6761 2065 7830 7825     x%x Message 0x%x
2fffab34:	203a 6f6e 2074 7573 7070 726f 6574 0064     : not supported.
2fffab44:	7264 7669 7265 2f73 7473 732f 6d63 2d69     drivers/st/scmi-
2fffab54:	736d 2f67 6572 6573 5f74 6f64 616d 6e69     msg/reset_domain
2fffab64:	632e 0000                                   .c..

2fffab68 <scmi_rd_handler_table>:
2fffab68:	21b5 2fff 21dd 2fff 2171 2fff 220d 2fff     .!./.!./q!./."./
2fffab78:	22a5 2fff 7264 7669 7265 2f73 7473 732f     ."./drivers/st/s
2fffab88:	6d63 2d69 736d 2f67 6d73 2e74 0063 6c70     cmi-msg/smt.c.pl
2fffab98:	7461 732f 2f74 7473 336d 6d32 3170 732f     at/st/stm32mp1/s
2fffaba8:	6d74 3233 706d 5f31 6373 696d 632e 0a00     tm32mp1_scmi.c..
2fffabb8:	6e49 6176 696c 2064 4353 494d 6320 6f6c     Invalid SCMI clo
2fffabc8:	6b63 6e20 6d61 0a65 0a00 6e49 6176 696c     ck name...Invali
2fffabd8:	2064 4353 494d 7220 7365 7465 6420 6d6f     d SCMI reset dom
2fffabe8:	6961 206e 616e 656d 000a 7073 3669 6900     ain name..spi6.i
2fffabf8:	6332 0034 3269 3663 7500 6173 7472 0031     2c4.i2c6.usart1.
2fffac08:	7473 6567 006e 7067 6f69 007a 7263 7079     stgen.gpioz.cryp
2fffac18:	0031 6168 6873 0031 6e72 3167 6d00 6d64     1.hash1.rng1.mdm
2fffac28:	0061 6c70 336c 715f 7000 6c6c 5f33 0072     a.pll3_q.pll3_r.
2fffac38:	6b63 6d5f 7563 6300 5f6b 7368 0065 6b63     ck_mcu.ck_hse.ck
2fffac48:	685f 6973 6300 5f6b 7363 0069 6b63 6c5f     _hsi.ck_csi.ck_l
2fffac58:	6573 6300 5f6b 736c 0069 6c70 326c 715f     se.ck_lsi.pll2_q
2fffac68:	7000 6c6c 5f32 0072 6b63 6d5f 7570 6300     .pll2_r.ck_mpu.c
2fffac78:	5f6b 7861 0069 3269 3463 6b5f 6900 6332     k_axi.i2c4_k.i2c
2fffac88:	5f36 006b 7769 6764 0031 6e72 3167 6b5f     6_k.iwdg1.rng1_k
2fffac98:	6300 5f6b 7472 0063 7472 6163 6270 7300     .ck_rtc.rtcapb.s
2fffaca8:	6970 5f36 006b 7375 7261 3174 6b5f 0000     pi6_k.usart1_k..

2fffacb8 <agent_resources>:
2fffacb8:	d22c 2fff 0015 0000 d328 2fff 000b 0000     ,../....(../....
2fffacc8:	d380 2fff 0003 0000 0000 0000 0000 0000     .../............

2fffacd8 <plat_protocol_list>:
2fffacd8:	1614                                         ...

2fffacdb <sub_vendor>:
	...

2fffacdc <vendor>:
2fffacdc:	5453 6300 6d6f 6f6d 2f6e 6674 6c5f 676f     ST.common/tf_log
2fffacec:	632e 6400 6972 6576 7372 632f 6e6f 6f73     .c.drivers/conso
2fffacfc:	656c 6d2f 6c75 6974 635f 6e6f 6f73 656c     le/multi_console
2fffad0c:	632e 4500 5252 524f 203a 2020 4e00 544f     .c.ERROR:   .NOT
2fffad1c:	4349 3a45 2020 5700 5241 494e 474e 203a     ICE:  .WARNING: 
2fffad2c:	4900 464e 3a4f 2020 2020 5600 5245 4f42     .INFO:    .VERBO
2fffad3c:	4553 203a 0000 0000                         SE: ....

2fffad44 <plat_prefix_str>:
2fffad44:	ad0f 2fff ad19 2fff ad23 2fff ad2d 2fff     .../.../#../-../
2fffad54:	ad37 2fff 6c70 7461 732f 2f74 6f63 6d6d     7../plat/st/comm
2fffad64:	6e6f 732f 6d74 3233 706d 635f 6d6f 6f6d     on/stm32mp_commo
2fffad74:	2e6e 0063 6c70 7461 732f 2f74 7473 336d     n.c.plat/st/stm3
2fffad84:	6d32 3170 732f 6d74 3233 706d 5f31 7270     2mp1/stm32mp1_pr
2fffad94:	7669 7461 2e65 0063 420a 4553 3a43 6920     ivate.c..BSEC: i
2fffada4:	7864 253d 2064 6552 6461 4520 7272 726f     dx=%d Read Error
2fffadb4:	000a 420a 4553 3a43 2520 2073 6552 6461     ...BSEC: %s Read
2fffadc4:	4520 7272 726f 000a 5528 6573 6420 6665      Error..(Use def
2fffadd4:	7561 746c 6320 6968 2070 4449 202c 6564     ault chip ID, de
2fffade4:	7562 2067 6964 6173 6c62 6465 000a 6170     bug disabled..pa
2fffadf4:	7472 6e5f 6d75 6562 5f72 746f 0070 7768     rt_number_otp.hw
2fffae04:	5f32 746f 0070 0000 0000 0000               2_otp.......

2fffae10 <stm32mp1_mmap>:
2fffae10:	0000 2ffc 0000 0000 0000 2ffc f000 0003     .../......./....
2fffae20:	002a 0000 0000 4000 f000 2fff 0000 0000     *......@.../....
2fffae30:	f000 2fff 1000 0000 0038 0000 0000 4000     .../....8......@
2fffae40:	0000 4000 0000 0000 0000 4000 0000 4000     ...@.......@...@
2fffae50:	0028 0000 0000 4000 0000 8000 0000 0000     (......@........
2fffae60:	0000 8000 0000 4000 0028 0000 0000 4000     .......@(......@
	...

2fffae88 <tzc_source_ip>:
2fffae88:	0c00 0000 00a7 0000 0060 0000 0cc5 0000     ........`.......
2fffae98:	0065 0000 0060 0000 0cd8 0000 006f 0000     e...`.......o...
2fffaea8:	0060 0000 0cd0 0000 0076 0000 0060 0000     `.......v...`...
2fffaeb8:	0cd1 0000 0077 0000 0060 0000 0d00 0000     ....w...`.......
2fffaec8:	0064 0000 0060 0000 4cc8 0000 00a6 0000     d...`....L......
2fffaed8:	0055 0000 4cd0 0000 0078 0000 0056 0000     U....L..x...V...
2fffaee8:	0cca 0000 0069 0000 005e 0000 4cc0 0000     ....i...^....L..
2fffaef8:	0047 0000 0058 0000 4cc1 0000 0048 0000     G...X....L..H...
2fffaf08:	0059 0000 696c 2f62 6c78 7461 745f 6261     Y...lib/xlat_tab
2fffaf18:	656c 5f73 3276 612f 7261 6863 3233 782f     les_v2/aarch32/x
2fffaf28:	616c 5f74 6174 6c62 7365 615f 6372 2e68     lat_tables_arch.
2fffaf38:	0063 696c 2f62 6c78 7461 745f 6261 656c     c.lib/xlat_table
2fffaf48:	5f73 3276 782f 616c 5f74 6174 6c62 7365     s_v2/xlat_tables
2fffaf58:	635f 6e6f 6574 7478 632e 6c00 6269 782f     _context.c.lib/x
2fffaf68:	616c 5f74 6174 6c62 7365 765f 2f32 6c78     lat_tables_v2/xl
2fffaf78:	7461 745f 6261 656c 5f73 6f63 6572 632e     at_tables_core.c
2fffaf88:	0a00 6d6d 7061 615f 6464 725f 6765 6f69     ..mmap_add_regio
2fffaf98:	5f6e 6863 6365 286b 2029 6166 6c69 6465     n_check() failed
2fffafa8:	202e 7265 6f72 2072 6425 000a 4e0a 746f     . error %d...Not
2fffafb8:	6520 6f6e 6775 2068 656d 6f6d 7972 7420      enough memory t
2fffafc8:	206f 616d 2070 6572 6967 6e6f 0a3a 5620     o map region:. V
2fffafd8:	3a41 7830 6c25 2078 5020 3a41 7830 6c25     A:0x%lx  PA:0x%l
2fffafe8:	786c 2020 6973 657a 303a 2578 787a 2020     lx  size:0x%zx  
2fffaff8:	7461 7274 303a 2578 0a78 6400 6972 6576     attr:0x%x..drive
2fffb008:	7372 612f 6d72 742f 637a 742f 637a 3034     rs/arm/tzc/tzc40
2fffb018:	2e30 0063 540a 435a 342d 3030 3a20 5720     0.c..TZC-400 : W
2fffb028:	6f72 676e 6420 7665 6369 2065 4449 2820     rong device ID (
2fffb038:	7830 7825 2e29 000a 540a 435a 342d 3030     0x%x)....TZC-400
2fffb048:	203a 6946 746c 7265 2520 2064 6147 6574     : Filter %d Gate
2fffb058:	656b 7065 7265 6120 726c 6165 7964 6520     keeper already e
2fffb068:	616e 6c62 6465 000a 450a 7272 726f 6e20     nabled...Error n
2fffb078:	206f 5449 7020 6e65 6964 676e 0021 490a     o IT pending!..I
2fffb088:	6c6c 6765 6c61 6120 6363 7365 2073 6f74     llegal access to
2fffb098:	3020 2578 786c 6920 206e 0a3a 0a00 4e09      0x%lx in :....N
2fffb0a8:	6e6f 532d 6365 7275 0a65 0a00 5309 6365     on-Secure....Sec
2fffb0b8:	7275 0a65 0a00 5009 6972 6976 656c 6567     ure....Privilege
2fffb0c8:	000a 090a 6e55 7270 7669 6c69 6765 0a65     ....Unprivilege.
2fffb0d8:	0a00 5209 6165 0a64 0a00 5709 6972 6574     ...Read....Write
2fffb0e8:	000a 7264 7669 7265 2f73 6564 616c 5f79     ..drivers/delay_
2fffb0f8:	6974 656d 2f72 6564 616c 5f79 6974 656d     timer/delay_time
2fffb108:	2e72 0063 7264 7669 7265 2f73 6564 616c     r.c.drivers/dela
2fffb118:	5f79 6974 656d 2f72 6567 656e 6972 5f63     y_timer/generic_
2fffb128:	6564 616c 5f79 6974 656d 2e72 0063 7264     delay_timer.c.dr
2fffb138:	7669 7265 2f73 7473 622f 6573 2f63 7362     ivers/st/bsec/bs
2fffb148:	6365 2e32 0063 7473 732c 6d74 3233 6e2d     ec2.c.st,stm32-n
2fffb158:	6d76 6d65 6c2d 7961 756f 0074 766e 656d     vmem-layout.nvme
2fffb168:	2d6d 6563 6c6c 6e2d 6d61 7365 6e00 6d76     m-cell-names.nvm
2fffb178:	6d65 632d 6c65 736c 0a00 614d 666c 726f     em-cells..Malfor
2fffb188:	656d 2064 766e 656d 5f6d 616c 6f79 7475     med nvmem_layout
2fffb198:	6e20 646f 3a65 6920 6e67 726f 6465 000a      node: ignored..
2fffb1a8:	4d0a 7369 6c61 6769 656e 2064 766e 656d     .Misaligned nvme
2fffb1b8:	5f6d 616c 6f79 7475 6520 656c 656d 746e     m_layout element
2fffb1c8:	203a 6769 6f6e 6572 0a64 0a00 5342 4345     : ignored...BSEC
2fffb1d8:	203a 7525 5320 6974 6b63 2d79 6572 6461     : %u Sticky-read
2fffb1e8:	6220 7469 7220 6165 2064 7245 6f72 2072      bit read Error 
2fffb1f8:	6925 000a 7473 732c 6d74 3233 706d 3531     %i..st,stm32mp15
2fffb208:	622d 6573 0063 4f1e 5054 6320 6f72 7373     -bsec..OTP cross
2fffb218:	7365 4c20 776f 7265 552f 7070 7265 6220     es Lower/Upper b
2fffb228:	756f 646e 7261 0a79 7300 2c74 6f6e 2d6e     oundary..st,non-
2fffb238:	6573 7563 6572 6f2d 7074 0a00 6e55 6c61     secure-otp..Unal
2fffb248:	6769 656e 2064 6f6e 2d6e 6573 7563 6572     igned non-secure
2fffb258:	4f20 5054 000a 420a 4553 3a43 2520 2075      OTP...BSEC: %u 
2fffb268:	7453 6369 796b 772d 6972 6574 6220 7469     Sticky-write bit
2fffb278:	7220 6165 2064 7245 6f72 2072 6925 000a      read Error %i..
2fffb288:	420a 4553 3a43 2520 2075 7453 6369 796b     .BSEC: %u Sticky
2fffb298:	702d 6f72 2067 6962 2074 6572 6461 4520     -prog bit read E
2fffb2a8:	7272 726f 2520 0a69 0a00 5342 4345 203a     rror %i...BSEC: 
2fffb2b8:	7525 7020 7265 616d 656e 746e 6220 7469     %u permanent bit
2fffb2c8:	7220 6165 2064 7245 6f72 2072 6925 000a      read Error %i..
2fffb2d8:	421e 4553 3a43 4f20 5054 6c20 636f 656b     .BSEC: OTP locke
2fffb2e8:	2c64 7020 6f72 2067 6977 6c6c 6220 2065     d, prog will be 
2fffb2f8:	6769 6f6e 6572 0a64 1e00 5342 4345 203a     ignored...BSEC: 
2fffb308:	5047 4f4c 4b43 6120 7463 7669 7461 6465     GPLOCK activated
2fffb318:	202c 7270 676f 7720 6c69 206c 6562 6920     , prog will be i
2fffb328:	6e67 726f 6465 000a 632f 6f6c 6b63 0073     gnored../clocks.
2fffb338:	6c63 636f 2d6b 7266 7165 6575 636e 0079     clock-frequency.
2fffb348:	7473 732c 6d74 3233 706d 2d31 6372 0063     st,stm32mp1-rcc.
2fffb358:	6c63 636f 2d6b 616e 656d 0073 430a 4b4c     clock-names..CLK
2fffb368:	4944 2056 7825 7320 6174 7472 6620 6961     DIV %x start fai
2fffb378:	656c 2064 2040 7830 6c25 3a78 3020 2578     led @ 0x%lx: 0x%
2fffb388:	0a78 0a00 7325 203a 6c63 206b 6469 2520     x...%s: clk id %
2fffb398:	2064 6f6e 2074 6f66 6e75 0a64 0a00 6c43     d not found...Cl
2fffb3a8:	636f 206b 6425 6320 6e61 7427 6220 2065     ock %d can't be 
2fffb3b8:	6e65 6261 656c 0a64 0a00 6c43 636f 206b     enabled...Clock 
2fffb3c8:	6425 6320 6e61 7427 6220 2065 6964 6173     %d can't be disa
2fffb3d8:	6c62 6465 000a 430a 4b4c 5253 2043 7825     bled...CLKSRC %x
2fffb3e8:	7320 6174 7472 6620 6961 656c 2064 2040      start failed @ 
2fffb3f8:	7830 6c25 3a78 3020 2578 0a78 0a00 4c50     0x%lx: 0x%x...PL
2fffb408:	254c 2064 7473 7261 2074 6166 6c69 6465     L%d start failed
2fffb418:	4020 3020 2578 786c 203a 7830 7825 000a      @ 0x%lx: 0x%x..
2fffb428:	500a 4c4c 6425 7320 6f74 2070 6166 6c69     .PLL%d stop fail
2fffb438:	6465 4020 3020 2578 786c 203a 7830 7825     ed @ 0x%lx: 0x%x
2fffb448:	000a 4e0a 206f 5043 2055 706f 7265 7461     ...No CPU operat
2fffb458:	6e69 2067 6f70 6e69 2074 6163 206e 6562     ing point can be
2fffb468:	7320 7465 000a 490a 636e 6e6f 6973 7473      set...Inconsist
2fffb478:	6e65 2074 504f 2050 6573 7474 6e69 7367     ent OPP settings
2fffb488:	6620 756f 646e 6920 206e 5444 202c 6769      found in DT, ig
2fffb498:	6f6e 6572 2e64 000a 500a 4c4c 2034 6163     nored....PLL4 ca
2fffb4a8:	6e6e 746f 6220 2065 6573 7563 6572 0a64     nnot be secured.
2fffb4b8:	2800 6f4e 7020 7261 6e65 2074 6f66 2072     .(No parent for 
2fffb4c8:	6c63 636f 206b 6c25 0a75 6300 6b6c 682d     clock %lu..clk-h
2fffb4d8:	6973 6300 6b6c 682d 6573 6300 6b6c 632d     si.clk-hse.clk-c
2fffb4e8:	6973 6300 6b6c 6c2d 6973 6300 6b6c 6c2d     si.clk-lsi.clk-l
2fffb4f8:	6573 6900 7332 635f 696b 006e               se.i2s_ckin.

2fffb504 <__func__.0>:
2fffb504:	7473 336d 6d32 3170 635f 6b6c 675f 7465     stm32mp1_clk_get
2fffb514:	675f 7461 6465 695f 0064                    _gated_id.

2fffb51e <axiss_parents>:
2fffb51e:	0100                                         ...

2fffb521 <fmc_parents>:
2fffb521:	1216 1e13                                   ....

2fffb525 <i2c12_parents>:
2fffb525:	1517 0906                                   ....

2fffb529 <i2c35_parents>:
2fffb529:	1517 0906                                   ....

2fffb52d <i2c46_parents>:
2fffb52d:	111b 0906                                   ....

2fffb531 <mcuss_parents>:
2fffb531:	0100 1002                                   ....

2fffb535 <mpu_parents>:
2fffb535:	0100 0a0a                                   ....

2fffb539 <parent_id_clock_id>:
2fffb539:	0004 0201 ff03 0004 0105 b5b4 b7b6 b9b8     ................
2fffb549:	bbba bdbc bfbe c3c3 c3c3 c3c3 0000 c2c1     ................
2fffb559:	ffc4                                        ..

2fffb55b <per_parents>:
2fffb55b:	0100                                         ...

2fffb55e <pllncfgr2>:
2fffb55e:	0800                                         ...

2fffb561 <qspi_parents>:
2fffb561:	1216 1e13                                   ....

2fffb565 <rng1_parents>:
2fffb565:	1502 0304                                   ....

2fffb569 <rtc_parents>:
2fffb569:	04ff 0103                                   ....

2fffb56d <sdmmc12_parents>:
2fffb56d:	121c 0613                                   ....

2fffb571 <sdmmc3_parents>:
2fffb571:	121d 0613                                   ....

2fffb575 <spi6_parents>:
2fffb575:	141b 0906 1107                              ......

2fffb57b <stgen_parents>:
2fffb57b:	0706                                        ..

2fffb57d <stm32mp1_axi_div>:
2fffb57d:	0201 0403 0404 0404                          .........

2fffb586 <stm32mp1_clk_gate>:
2fffb586:	00d8 dc00 0100 16ff 00d8 dd01 0100 16ff     ................
2fffb596:	00d8 de02 0100 16ff 00d8 df03 0100 16ff     ................
2fffb5a6:	00d8 e004 0100 0fff 00d8 e105 0100 0fff     ................
2fffb5b6:	00d8 e206 0100 1aff 00d8 e307 0100 1aff     ................
2fffb5c6:	00d8 e408 0100 16ff 00d8 e509 0100 1aff     ................
2fffb5d6:	00d8 e60a 0100 1aff 0a00 cb06 0001 17ff     ................
2fffb5e6:	0a08 d002 0001 18ff 0a10 330b 0001 ffff     ...........3....
2fffb5f6:	0200 a700 0001 ffff 0200 e708 0001 ffff     ................
2fffb606:	0200 3a0f 0001 ffff 0200 7f10 0001 ff11     ...:............
2fffb616:	0208 8700 0101 ff04 0208 8c02 0101 ff03     ................
2fffb626:	0208 8e03 0101 ff03 0208 9404 0101 ff05     ................
2fffb636:	0208 4108 0101 1bff 0208 420b 0101 1bff     ...A.......B....
2fffb646:	0208 710c 0101 1bff 0208 430d 0101 1bff     ...q.......C....
2fffb656:	0208 440f 0101 1bff 0208 4510 0101 1bff     ...D.......E....
2fffb666:	0208 8014 0101 ff02 0140 c014 0100 ff13     ........@.......
2fffb676:	0a18 4700 0001 ffff 0a18 4801 0001 ffff     ...G.......H....
2fffb686:	0a18 a608 0001 ff12 0a18 7810 0001 ff0c     ...........x....
2fffb696:	0210 5f00 0101 1bff 0210 6004 0101 1bff     ..._.......`....
2fffb6a6:	0210 6105 0101 1bff 0210 7c06 0101 ff06     ...a.......|....
2fffb6b6:	0210 6308 0101 1bff 0220 6400 0101 16ff     ...c.... ..d....
2fffb6c6:	0218 6505 0001 ffff 0218 690a 0001 16ff     ...e.......i....
2fffb6d6:	0218 7610 0001 ff0b 0218 7711 0001 ff0b     ...v.......w....
2fffb6e6:	0218 6f18 0001 ffff 080c d608 0000 ffff     ...o............
	...

2fffb6f8 <stm32mp1_clk_pll>:
2fffb6f8:	0001 0000 0028 0084 0088 008c 0080 0090     ....(...........
2fffb708:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2fffb718:	0001 0000 0028 0098 009c 00a0 0094 00a4     ....(...........
2fffb728:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2fffb738:	0000 0000 0820 0884 0888 088c 0880 0890     .... ...........
2fffb748:	0000 0000 0001 0000 0002 0000 00ff 0000     ................
2fffb758:	0000 0000 0824 0898 089c 08a0 0894 08a4     ....$...........
2fffb768:	0000 0000 0001 0000 0002 0000 0005 0000     ................

2fffb778 <stm32mp1_clk_sel>:
2fffb778:	08c0 0700 0004 0000 b525 2fff 08c4 0700     ........%../....
2fffb788:	0004 0000 b529 2fff 00d4 0300 0002 0000     ....)../........
2fffb798:	b57b 2fff 00c0 0700 0004 0000 b52d 2fff     {../........-../
2fffb7a8:	00c4 0700 0006 0000 b575 2fff 00c8 0700     ........u../....
2fffb7b8:	0006 0000 b8a8 2fff 00cc 0300 0004 0000     ......./........
2fffb7c8:	b565 2fff 08e4 0700 0005 0000 b8a3 2fff     e../.........../
2fffb7d8:	08e8 0700 0005 0000 b89e 2fff 08ec 0700     .........../....
2fffb7e8:	0005 0000 b89e 2fff 08f0 0700 0005 0000     ......./........
2fffb7f8:	b89e 2fff 08f4 0700 0004 0000 b56d 2fff     .../........m../
2fffb808:	08f8 0700 0004 0000 b571 2fff 0900 0300     ........q../....
2fffb818:	0004 0000 b561 2fff 0904 0300 0004 0000     ....a../........
2fffb828:	b521 2fff 0024 0700 0003 0000 b51e 2fff     !../$........../
2fffb838:	0048 0300 0004 0000 b531 2fff 091c 0300     H.......1../....
2fffb848:	0003 0000 b8b0 2fff 091c 0104 0002 0000     ......./........
2fffb858:	b8ae 2fff 0140 0310 0004 0000 b569 2fff     .../@.......i../
2fffb868:	0020 0300 0004 0000 b535 2fff 00d0 0300      .......5../....
2fffb878:	0003 0000 b55b 2fff                         ....[../

2fffb880 <stm32mp1_mcu_div>:
2fffb880:	0100 0302 0604 0807 0909 0909 0909 0909     ................

2fffb890 <stm32mp1_mpu_apbx_div>:
2fffb890:	0100 0302 0404 0404                         ........

2fffb898 <stm32mp1_pll>:
2fffb898:	1004 0863 c710                              ..c...

2fffb89e <uart234578_parents>:
2fffb89e:	1417 0906                                    .....

2fffb8a3 <uart6_parents>:
2fffb8a3:	1418 0906                                    .....

2fffb8a8 <usart1_parents>:
2fffb8a8:	111b 0906 0714                              ......

2fffb8ae <usbo_parents>:
2fffb8ae:	2115                                        .!

2fffb8b0 <usbphy_parents>:
2fffb8b0:	1507 0a08 6e55 6e6b 776f 206e 6553 666c     ....Unknown Self
2fffb8c0:	5220 6665 6572 6873 6d20 646f 0a65            Refresh mode..

2fffb8cf <CSWTCH.26>:
2fffb8cf:	0001 0000 0000 0000 0302 7264 7669 7265     ..........driver
2fffb8df:	2f73 7473 672f 6970 2f6f 7473 336d 5f32     s/st/gpio/stm32_
2fffb8ef:	7067 6f69 632e 7000 6e69 7463 6c72 302d     gpio.c.pinctrl-0
2fffb8ff:	7000 6e69 756d 0078 6c73 7765 722d 7461     .pinmux.slew-rat
2fffb90f:	0065 6962 7361 702d 6c75 2d6c 7075 6200     e.bias-pull-up.b
2fffb91f:	6169 2d73 7570 6c6c 642d 776f 006e 7264     ias-pull-down.dr
2fffb92f:	7669 2d65 706f 6e65 642d 6172 6e69 6700     ive-open-drain.g
2fffb93f:	6970 2d6f 6f63 746e 6f72 6c6c 7265 0a00     pio-controller..
2fffb94f:	4950 434e 5254 204c 6e69 6f63 736e 7369     PINCTRL inconsis
2fffb95f:	6574 746e 6920 206e 5444 000a 3269 2d63     tent in DT..i2c-
2fffb96f:	6373 2d6c 6972 6973 676e 742d 6d69 2d65     scl-rising-time-
2fffb97f:	736e 6900 6332 732d 6c63 662d 6c61 696c     ns.i2c-scl-falli
2fffb98f:	676e 742d 6d69 2d65 736e 0a00 6e49 6176     ng-time-ns..Inva
2fffb99f:	696c 2064 7562 2073 7073 6565 2064 2528     lid bus speed (%
2fffb9af:	2069 203e 6925 0a29 0a00 3249 2043 6c63     i > %i)...I2C cl
2fffb9bf:	636f 206b 6172 6574 6920 2073 0a30 0a00     ock rate is 0...
2fffb9cf:	3249 2043 7073 6565 2064 756f 2074 666f     I2C speed out of
2fffb9df:	6220 756f 646e 7b20 6425 0a7d 0a00 4920      bound {%d}... I
2fffb9ef:	4332 7420 6d69 6e69 7367 6f20 7475 6f20     2C timings out o
2fffb9ff:	2066 6f62 6e75 2064 6952 6573 257b 3e64     f bound Rise{%d>
2fffba0f:	6425 2f7d 6146 6c6c 257b 3e64 6425 0a7d     %d}/Fall{%d>%d}.
2fffba1f:	0a00 4e44 2046 756f 2074 666f 6220 756f     ..DNF out of bou
2fffba2f:	646e 2520 2f64 6425 000a 200a 3249 2043     nd %d/%d... I2C 
2fffba3f:	6f6e 5020 6572 6373 6c61 7265 7320 6c6f     no Prescaler sol
2fffba4f:	7475 6f69 0a6e 0a00 4920 4332 6e20 206f     ution... I2C no 
2fffba5f:	6f73 756c 6974 6e6f 6120 2074 6c61 0a6c     solution at all.
2fffba6f:	0a00 6146 6c69 6465 7420 206f 6f63 706d     ..Failed to comp
2fffba7f:	7475 2065 3249 2043 6974 696d 676e 0a73     ute I2C timings.
2fffba8f:	1e00 6f44 6e77 7267 6461 2065 3249 2043     ..Downgrade I2C 
2fffba9f:	7073 6565 2064 6f74 2520 4875 297a 000a     speed to %uHz)..
2fffbaaf:	430a 6e61 6f6e 2074 6e69 7469 6169 696c     .Cannot initiali
2fffbabf:	657a 4920 4332 6120 616e 6f6c 2067 6966     ze I2C analog fi
2fffbacf:	746c 7265 2820 6425 0a29 0a00 6d49 6f70     lter (%d)...Impo
2fffbadf:	7373 6269 656c 7420 206f 6f63 706d 7475     ssible to comput
2fffbaef:	2065 3249 2043 6974 696d 676e 0a73 0000     e I2C timings...
	...

2fffbb00 <i2c_specs>:
2fffbb00:	86a0 0001 012c 0000 03e8 0000 0000 0000     ....,...........
2fffbb10:	0d7a 0000 00fa 0000 125c 0000 0fa0 0000     z.......\.......
2fffbb20:	1a80 0006 012c 0000 012c 0000 0000 0000     ....,...,.......
2fffbb30:	0384 0000 0064 0000 0514 0000 0258 0000     ....d.......X...
2fffbb40:	4240 000f 0064 0000 0078 0000 0000 0000     @B..d...x.......
2fffbb50:	01c2 0000 0032 0000 01f4 0000 0104 0000     ....2...........
2fffbb60:	7473 732c 6d74 3233 706d 2d31 7769 6764     st,stm32mp1-iwdg
2fffbb70:	7300 6d74 3233 652c 616e 6c62 2d65 6e6f     .stm32,enable-on
2fffbb80:	732d 6f74 0070 7473 336d 2c32 6e65 6261     -stop.stm32,enab
2fffbb90:	656c 6f2d 2d6e 7473 6e61 6264 0079 4f0a     le-on-standby..O
2fffbba0:	5054 6520 616e 6c62 6465 6220 7475 6920     TP enabled but i
2fffbbb0:	6477 2567 2075 5444 642d 7369 6261 656c     wdg%u DT-disable
2fffbbc0:	0a64 7300 6365 7275 2d65 6974 656d 756f     d..secure-timeou
2fffbbd0:	2d74 6573 0063 490a 4457 2547 2078 6165     t-sec..IWDG%x ea
2fffbbe0:	6c72 2079 6974 656d 756f 2074 6f63 666e     rly timeout conf
2fffbbf0:	6769 6620 6961 656c 2064 2528 2964 000a     ig failed (%d)..
2fffbc00:	7473 732c 7074 696d 3163 7200 6765 6c75     st,stpmic1.regul
2fffbc10:	7461 726f 6d2d 6e69 6d2d 6369 6f72 6f76     ator-min-microvo
2fffbc20:	746c 7200 6765 6c75 7461 726f 6d2d 7861     lt.regulator-max
2fffbc30:	6d2d 6369 6f72 6f76 746c 7200 6765 6c75     -microvolt.regul
2fffbc40:	7461 726f 0073 7264 7669 7265 2f73 7473     ators.drivers/st
2fffbc50:	702f 696d 2f63 7473 336d 6d32 5f70 6d70     /pmic/stm32mp_pm
2fffbc60:	6369 632e 7200 6765 6c75 7461 726f 622d     ic.c.regulator-b
2fffbc70:	6f6f 2d74 6e6f 7200 6765 6c75 7461 726f     oot-on.regulator
2fffbc80:	612d 776c 7961 2d73 6e6f 7200 6765 6c75     -always-on.regul
2fffbc90:	7461 726f 702d 6c75 2d6c 6f64 6e77 7300     ator-pull-down.s
2fffbca0:	2c74 616d 6b73 722d 7365 7465 7200 6765     t,mask-reset.reg
2fffbcb0:	6c75 7461 726f 6f2d 2d6e 6e69 732d 7375     ulator-on-in-sus
2fffbcc0:	6570 646e 7200 6765 6c75 7461 726f 6f2d     pend.regulator-o
2fffbcd0:	6666 692d 2d6e 7573 7073 6e65 0064 6572     ff-in-suspend.re
2fffbce0:	7567 616c 6f74 2d72 7573 7073 6e65 2d64     gulator-suspend-
2fffbcf0:	696d 7263 766f 6c6f 0074 6572 7567 616c     microvolt.regula
2fffbd00:	6f74 2d72 6f6d 6564 7200 6765 6c75 7461     tor-mode.regulat
2fffbd10:	726f 6e2d 6d61 0065 490a 4332 6320 6e6f     or-name..I2C con
2fffbd20:	6966 7567 6172 6974 6e6f 6620 6961 656c     figuration faile
2fffbd30:	2064 6425 000a 430a 6e61 6f6e 2074 6e69     d %d...Cannot in
2fffbd40:	7469 6169 696c 657a 4920 4332 2520 2078     itialize I2C %x 
2fffbd50:	2528 2964 000a 490a 4332 6420 7665 6369     (%d)...I2C devic
2fffbd60:	2065 6f6e 2074 6572 6461 0a79 6200 6375     e not ready..buc
2fffbd70:	006b 646c 006f 646c 346f 6200 6375 316b     k.ldo.ldo4.buck1
2fffbd80:	6200 6375 326b 6200 6375 336b 6200 6375     .buck2.buck3.buc
2fffbd90:	346b 6c00 6f64 0031 646c 326f 6c00 6f64     k4.ldo1.ldo2.ldo
2fffbda0:	0033 646c 356f 6c00 6f64 0036 7276 6665     3.ldo5.ldo6.vref
2fffbdb0:	645f 7264 6200 6f6f 7473 7000 7277 735f     _ddr.boost.pwr_s
2fffbdc0:	3177 7000 7277 735f 3277 0000               w1.pwr_sw2..

2fffbdcc <buck1_voltage_table>:
2fffbdcc:	02d5 02d5 02d5 02d5 02d5 02d5 02ee 0307     ................
2fffbddc:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fffbdec:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fffbdfc:	04b0 04c9 04e2 04fb 0514 052d 0546 055f     ..........-.F._.
2fffbe0c:	0578 0591 05aa 05c3 05dc 05dc 05dc 05dc     x...............
2fffbe1c:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fffbe2c:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fffbe3c:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................

2fffbe4c <buck2_voltage_table>:
2fffbe4c:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffbe5c:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffbe6c:	03e8 03e8 041a 041a 044c 044c 047e 047e     ........L.L.~.~.
2fffbe7c:	04b0 04b0 04e2 04e2 0514 0514 0546 0546     ............F.F.
2fffbe8c:	0578 0578 05aa 05aa 05dc                    x.x.......

2fffbe96 <buck3_voltage_table>:
2fffbe96:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffbea6:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffbeb6:	03e8 03e8 03e8 03e8 044c 044c 044c 044c     ........L.L.L.L.
2fffbec6:	04b0 04b0 04b0 04b0 0514 0514 0514 0514     ................
2fffbed6:	0578 0578 0578 0578 05dc 0640 06a4 0708     x.x.x.x...@.....
2fffbee6:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fffbef6:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.

2fffbf06 <buck4_voltage_table>:
2fffbf06:	0258 0271 028a 02a3 02bc 02d5 02ee 0307     X.q.............
2fffbf16:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fffbf26:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fffbf36:	04b0 04c9 04e2 04fb 0514 0514 0546 0546     ............F.F.
2fffbf46:	0578 0578 05aa 05aa 05dc 0640 06a4 0708     x.x.......@.....
2fffbf56:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fffbf66:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.
2fffbf76:	0dac 0e10 0e74 0ed8 0f3c                    ....t...<.

2fffbf80 <fixed_5v_voltage_table>:
2fffbf80:	1388                                        ..

2fffbf82 <ldo1_voltage_table>:
2fffbf82:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffbf92:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffbfa2:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffbfb2:	0ce4                                        ..

2fffbfb4 <ldo2_voltage_table>:
2fffbfb4:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffbfc4:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffbfd4:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffbfe4:	0ce4                                        ..

2fffbfe6 <ldo3_voltage_table>:
2fffbfe6:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffbff6:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc006:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc016:	0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 01f4     ................
2fffc026:	ffff                                        ..

2fffc028 <ldo4_voltage_table>:
2fffc028:	0ce4                                        ..

2fffc02a <ldo5_voltage_table>:
2fffc02a:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffc03a:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc04a:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc05a:	0ce4 0d48 0dac 0e10 0e74 0ed8 0f3c          ..H.....t...<.

2fffc068 <ldo6_voltage_table>:
2fffc068:	0384 03e8 044c 04b0 0514 0578 05dc 0640     ....L.....x...@.
2fffc078:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc088:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc098:	0ce4 0000                                   ....

2fffc09c <regulators_table>:
2fffc09c:	bd7b 2fff bdcc 2fff 2040 1230 1800 0000     {../.../@ 0.....
2fffc0ac:	bd81 2fff be4c 2fff 2125 1231 1802 0001     .../L../%!1.....
2fffc0bc:	bd87 2fff be96 2fff 2238 1232 1804 0002     .../.../8"2.....
2fffc0cc:	bd8d 2fff bf06 2fff 233d 1233 1806 0003     .../.../=#3.....
2fffc0dc:	bd93 2fff bf82 2fff 2519 0035 1a00 0000     .../.../.%5.....
2fffc0ec:	bd98 2fff bfb4 2fff 2619 0036 1a00 0001     .../.../.&6.....
2fffc0fc:	bd9d 2fff bfe6 2fff 2721 0037 1a00 0002     .../.../!'7.....
2fffc10c:	bd76 2fff c028 2fff 2801 0038 1a00 0003     v../(../.(8.....
2fffc11c:	bda2 2fff c02a 2fff 291f 0039 1a00 0004     .../*../.)9.....
2fffc12c:	bda7 2fff c068 2fff 2a19 003a 1a00 0005     .../h../.*:.....
2fffc13c:	bdac 2fff c17c 2fff 2401 0034 1a00 0006     .../|../.$4.....
2fffc14c:	bdb5 2fff bf80 2fff 4001 0000 0000 0001     .../.../.@......
2fffc15c:	bdbb 2fff bf80 2fff 4001 0000 0000 0002     .../.../.@......
2fffc16c:	bdc3 2fff bf80 2fff 4001 0000 0000 0004     .../.../.@......

2fffc17c <vref_ddr_voltage_table>:
2fffc17c:	0ce4 732f 6365 7275 2d65 6863 736f 6e65     ../secure-chosen
2fffc18c:	2f00 6863 736f 6e65 7300 6474 756f 2d74     ./chosen.stdout-
2fffc19c:	6170 6874 3a00 6f00 7070 732d 7075 6f70     path.:.opp-suppo
2fffc1ac:	7472 6465 682d 0077 706f 2d70 7a68 6f00     rted-hw.opp-hz.o
2fffc1bc:	7070 6d2d 6369 6f72 6f76 746c 6f00 616b     pp-microvolt.oka
2fffc1cc:	0079 6573 7563 6572 732d 6174 7574 0073     y.secure-status.
2fffc1dc:	6e69 6574 7272 7075 7374 652d 7478 6e65     interrupts-exten
2fffc1ec:	6564 0064 6573 7563 6572 692d 746e 7265     ded.secure-inter
2fffc1fc:	7572 7470 0073 6c70 7461 732f 2f74 6f63     rupts.plat/st/co
2fffc20c:	6d6d 6e6f 732f 6d74 3233 706d 645f 2e74     mmon/stm32mp_dt.
2fffc21c:	0063 6572 2d67 616e 656d 0073 6572 6573     c.reg-names.rese
2fffc22c:	7374 2800 6143 6e6e 746f 6620 6e69 2064     ts.(Cannot find 
2fffc23c:	7325 6e20 646f 2065 6e69 4420 0a54 7300     %s node in DT..s
2fffc24c:	2c74 7473 336d 6d32 3170 642d 7264 7300     t,stm32mp1-ddr.s
2fffc25c:	2c74 656d 2d6d 6973 657a 6f00 6570 6172     t,mem-size.opera
2fffc26c:	6974 676e 702d 696f 746e 2d73 3276 2f00     ting-points-v2./
2fffc27c:	7063 7375 632f 7570 3040 6300 7570 732d     cpus/cpu@0.cpu-s
2fffc28c:	7075 6c70 0079 732f 636f 702f 6e69 632d     upply./soc/pin-c
2fffc29c:	6e6f 7274 6c6f 656c 0072 732f 636f 702f     ontroller./soc/p
2fffc2ac:	6e69 632d 6e6f 7274 6c6f 656c 2d72 007a     in-controller-z.
2fffc2bc:	676e 6970 736f 7000 616c 2f74 7473 732f     ngpios.plat/st/s
2fffc2cc:	6d74 3233 706d 2f31 7473 336d 6d32 3170     tm32mp1/stm32mp1
2fffc2dc:	635f 6e6f 6574 7478 632e 2800 6f53 7466     _context.c.(Soft
2fffc2ec:	6177 6572 6120 6363 7365 2073 6f74 6120     ware access to a
2fffc2fc:	6c6c 6420 6265 6775 6320 6d6f 6f70 656e     ll debug compone
2fffc30c:	746e 2073 7369 6420 7369 6261 656c 0a64     nts is disabled.
2fffc31c:	7000 616c 2f74 7473 732f 6d74 3233 706d     .plat/st/stm32mp
2fffc32c:	2f31 7473 336d 6d32 3170 645f 6762 636d     1/stm32mp1_dbgmc
2fffc33c:	2e75 0063 491e 204f 6f63 706d 6e65 6173     u.c..IO compensa
2fffc34c:	6974 6e6f 6320 6c65 206c 6f6e 2074 6572     tion cell not re
2fffc35c:	6461 0a79 6900 636e 756c 6564 612f 6372     ady..include/arc
2fffc36c:	2f68 6161 6372 3368 2f32 6c65 5f33 6f63     h/aarch32/el3_co
2fffc37c:	6d6d 6e6f 6d5f 6361 6f72 2e73 0053 696c     mmon_macros.S.li
2fffc38c:	2f62 7063 7375 612f 7261 6863 3233 632f     b/cpus/aarch32/c
2fffc39c:	7570 685f 6c65 6570 7372 532e                pu_helpers.S.

2fffc3a9 <panic_msg>:
2fffc3a9:	50          	.byte	0x50
2fffc3aa:	4e41      	.short	0x4e41
2fffc3ac:	61204349 	.word	0x61204349
2fffc3b0:	43502074 	.word	0x43502074
2fffc3b4:	30203a20 	.word	0x30203a20
2fffc3b8:	0078      	.short	0x0078

2fffc3ba <panic_end>:
2fffc3ba:	0a0d      	.short	0x0a0d
	...

2fffc3bd <assert_msg1>:
2fffc3bd:	41          	.byte	0x41
2fffc3be:	5353      	.short	0x5353
2fffc3c0:	3a545245 	.word	0x3a545245
2fffc3c4:	6c694620 	.word	0x6c694620
2fffc3c8:	2065      	.short	0x2065
	...

2fffc3cb <assert_msg2>:
2fffc3cb:	20          	.byte	0x20
2fffc3cc:	656e694c 	.word	0x656e694c
2fffc3d0:	0020      	.short	0x0020
2fffc3d2:	7264      	.short	0x7264
2fffc3d4:	72657669 	.word	0x72657669
2fffc3d8:	74732f73 	.word	0x74732f73
2fffc3dc:	7261752f 	.word	0x7261752f
2fffc3e0:	61612f74 	.word	0x61612f74
2fffc3e4:	33686372 	.word	0x33686372
2fffc3e8:	74732f32 	.word	0x74732f32
2fffc3ec:	5f32336d 	.word	0x5f32336d
2fffc3f0:	736e6f63 	.word	0x736e6f63
2fffc3f4:	2e656c6f 	.word	0x2e656c6f
2fffc3f8:	0053      	.short	0x0053
2fffc3fa:	696c      	.short	0x696c
2fffc3fc:	6c782f62 	.word	0x6c782f62
2fffc400:	745f7461 	.word	0x745f7461
2fffc404:	656c6261 	.word	0x656c6261
2fffc408:	32765f73 	.word	0x32765f73
2fffc40c:	7261612f 	.word	0x7261612f
2fffc410:	32336863 	.word	0x32336863
2fffc414:	616e652f 	.word	0x616e652f
2fffc418:	5f656c62 	.word	0x5f656c62
2fffc41c:	2e756d6d 	.word	0x2e756d6d
2fffc420:	0053      	.short	0x0053
2fffc422:	696c      	.short	0x696c
2fffc424:	70632f62 	.word	0x70632f62
2fffc428:	612f7375 	.word	0x612f7375
2fffc42c:	68637261 	.word	0x68637261
2fffc430:	632f3233 	.word	0x632f3233
2fffc434:	6574726f 	.word	0x6574726f
2fffc438:	37615f78 	.word	0x37615f78
2fffc43c:	532e      	.short	0x532e
	...

2fffc43f <abort_str>:
2fffc43f:	0a          	.byte	0x0a
2fffc440:	726f6241 	.word	0x726f6241
2fffc444:	74612074 	.word	0x74612074
2fffc448:	7830203a 	.word	0x7830203a
	...

2fffc44d <prefetch_abort_str>:
2fffc44d:	0a          	.byte	0x0a
2fffc44e:	7250      	.short	0x7250
2fffc450:	74656665 	.word	0x74656665
2fffc454:	41206863 	.word	0x41206863
2fffc458:	74726f62 	.word	0x74726f62
2fffc45c:	3a746120 	.word	0x3a746120
2fffc460:	00783020 	.word	0x00783020

2fffc464 <data_abort_str>:
2fffc464:	7461440a 	.word	0x7461440a
2fffc468:	62412061 	.word	0x62412061
2fffc46c:	2074726f 	.word	0x2074726f
2fffc470:	203a7461 	.word	0x203a7461
2fffc474:	7830      	.short	0x7830
	...

2fffc477 <undefined_str>:
2fffc477:	0a          	.byte	0x0a
2fffc478:	65646e55 	.word	0x65646e55
2fffc47c:	656e6966 	.word	0x656e6966
2fffc480:	6e692064 	.word	0x6e692064
2fffc484:	75727473 	.word	0x75727473
2fffc488:	6f697463 	.word	0x6f697463
2fffc48c:	7461206e 	.word	0x7461206e
2fffc490:	7830203a 	.word	0x7830203a
	...

2fffc495 <exception_start_str>:
2fffc495:	0a          	.byte	0x0a
2fffc496:	7845      	.short	0x7845
2fffc498:	74706563 	.word	0x74706563
2fffc49c:	206e6f69 	.word	0x206e6f69
2fffc4a0:	65646f6d 	.word	0x65646f6d
2fffc4a4:	0078303d 	.word	0x0078303d

2fffc4a8 <exception_end_str>:
2fffc4a8:	3a746120 	.word	0x3a746120
2fffc4ac:	00783020 	.word	0x00783020

2fffc4b0 <dfsr_str>:
2fffc4b0:	53464420 	.word	0x53464420
2fffc4b4:	203d2052 	.word	0x203d2052
2fffc4b8:	7830      	.short	0x7830
	...

2fffc4bb <dfar_str>:
2fffc4bb:	20          	.byte	0x20
2fffc4bc:	52414644 	.word	0x52414644
2fffc4c0:	30203d20 	.word	0x30203d20
2fffc4c4:	0078      	.short	0x0078

2fffc4c6 <ifsr_str>:
2fffc4c6:	4920      	.short	0x4920
2fffc4c8:	20525346 	.word	0x20525346
2fffc4cc:	7830203d 	.word	0x7830203d
	...

2fffc4d1 <ifar_str>:
2fffc4d1:	20          	.byte	0x20
2fffc4d2:	4649      	.short	0x4649
2fffc4d4:	3d205241 	.word	0x3d205241
2fffc4d8:	00783020 	.word	0x00783020

2fffc4dc <end_error_str>:
2fffc4dc:	0d0a      	.short	0x0d0a
2fffc4de:	00          	.byte	0x00
2fffc4df:	23          	.byte	0x23
2fffc4e0:	72646461 	.word	0x72646461
2fffc4e4:	2d737365 	.word	0x2d737365
2fffc4e8:	6c6c6563 	.word	0x6c6c6563
2fffc4ec:	0073      	.short	0x0073
2fffc4ee:	696c      	.short	0x696c
2fffc4f0:	2c78756e 	.word	0x2c78756e
2fffc4f4:	6e616870 	.word	0x6e616870
2fffc4f8:	00656c64 	.word	0x00656c64
2fffc4fc:	696c612f 	.word	0x696c612f
2fffc500:	73657361 	.word	0x73657361
2fffc504:	00          	.byte	0x00
2fffc505:	63          	.byte	0x63
2fffc506:	6d6f      	.short	0x6d6f
2fffc508:	69746170 	.word	0x69746170
2fffc50c:	00656c62 	.word	0x00656c62
2fffc510:	45535341 	.word	0x45535341
2fffc514:	203a5452 	.word	0x203a5452
2fffc518:	253a7325 	.word	0x253a7325
2fffc51c:	0a64      	.short	0x0a64
2fffc51e:	00          	.byte	0x00
2fffc51f:	6c          	.byte	0x6c
2fffc520:	6c2f6269 	.word	0x6c2f6269
2fffc524:	2f636269 	.word	0x2f636269
2fffc528:	6e697270 	.word	0x6e697270
2fffc52c:	632e6674 	.word	0x632e6674
2fffc530:	00783000 	.word	0x00783000

2fffc534 <__svc_desc_std_svc>:
2fffc534:	00010404 2fff9e17 2ffed819 2ffed79d     ......./.../.../

2fffc544 <__svc_desc_stm32mp1_sip_svc>:
2fffc544:	00010202 2fffaa6f 2fff1a39 2fff1a3d     ....o../9../=../

2fffc554 <__CPU_OPS_START__>:
2fffc554:	410fc070 	.word	0x410fc070
2fffc558:	2fff8dac 	.word	0x2fff8dac
2fffc55c:	2fff8db0 	.word	0x2fff8db0
2fffc560:	2fff8de0 	.word	0x2fff8de0
2fffc564:	2fff8e14 	.word	0x2fff8e14
2fffc568:	2fffd538 	.word	0x2fffd538
2fffc56c:	2fffd53c 	.word	0x2fffd53c

2fffc570 <__CPU_OPS_END__>:
	...

2fffc580 <sp_min_vector_table>:
2fffc580:	eaffc29e 	b	2ffed000 <sp_min_entrypoint>
2fffc584:	eafff0ca 	b	2fff88b4 <report_undef_inst>
2fffc588:	eaffc2f4 	b	2ffed160 <sp_min_handle_smc>
2fffc58c:	eafff0cc 	b	2fff88c4 <report_prefetch_abort>
2fffc590:	eafff0cf 	b	2fff88d4 <report_data_abort>
2fffc594:	eafff2ac 	b	2fff904c <plat_panic_handler>
2fffc598:	eafff2ab 	b	2fff904c <plat_panic_handler>
2fffc59c:	eaffc322 	b	2ffed22c <sp_min_handle_fiq>

2fffc5a0 <__spin_lock_from_thumb>:
2fffc5a0:	4778      	bx	pc
2fffc5a2:	e7fd      	b.n	2fffc5a0 <__spin_lock_from_thumb>
2fffc5a4:	eafff070 	b	2fff876c <spin_lock>

2fffc5a8 <__psci_do_pwrdown_cache_maintenance_from_thumb>:
2fffc5a8:	4778      	bx	pc
2fffc5aa:	e7fd      	b.n	2fffc5a8 <__psci_do_pwrdown_cache_maintenance_from_thumb>
2fffc5ac:	eafff07d 	b	2fff87a8 <psci_do_pwrdown_cache_maintenance>

2fffc5b0 <__print_errata_status_from_thumb>:
2fffc5b0:	4778      	bx	pc
2fffc5b2:	e7fd      	b.n	2fffc5b0 <__print_errata_status_from_thumb>
2fffc5b4:	eafff05f 	b	2fff8738 <print_errata_status>

2fffc5b8 <__spin_unlock_from_thumb>:
2fffc5b8:	4778      	bx	pc
2fffc5ba:	e7fd      	b.n	2fffc5b8 <__spin_unlock_from_thumb>
2fffc5bc:	eafff073 	b	2fff8790 <spin_unlock>

2fffc5c0 <__clean_dcache_range_from_thumb>:
2fffc5c0:	4778      	bx	pc
2fffc5c2:	e7fd      	b.n	2fffc5c0 <__clean_dcache_range_from_thumb>
2fffc5c4:	eafff108 	b	2fff89ec <clean_dcache_range>

2fffc5c8 <__flush_dcache_range_from_thumb>:
2fffc5c8:	4778      	bx	pc
2fffc5ca:	e7fd      	b.n	2fffc5c8 <__flush_dcache_range_from_thumb>
2fffc5cc:	eafff0f7 	b	2fff89b0 <flush_dcache_range>

2fffc5d0 <__enable_mmu_direct_svc_mon_from_thumb>:
2fffc5d0:	4778      	bx	pc
2fffc5d2:	e7fd      	b.n	2fffc5d0 <__enable_mmu_direct_svc_mon_from_thumb>
2fffc5d4:	eafff1c9 	b	2fff8d00 <enable_mmu_direct_svc_mon>

2fffc5d8 <__console_register_from_arm>:
2fffc5d8:	e51ff004 	ldr	pc, [pc, #-4]	; 2fffc5dc <__console_register_from_arm+0x4>
2fffc5dc:	2fff28ed 	.word	0x2fff28ed

2fffc5e0 <__RO_END_UNALIGNED__>:
	...
